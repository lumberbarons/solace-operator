openapi: 3.0.1
info:
  contact:
    email: support@solace.com
    name: Solace
    url: http://www.solace.com
  description: |+
    SEMP (starting in `v2`, see note 1) is a RESTful API for configuring, monitoring, and administering a Solace PubSub+ broker.

    SEMP uses URIs to address manageable **resources** of the Solace PubSub+ broker. Resources are individual **objects**, **collections** of objects, or (exclusively in the action API) **actions**. This document applies to the following API:


    API|Base Path|Purpose|Comments
    :---|:---|:---|:---
    Monitoring|/SEMP/v2/monitor|Querying operational parameters|See note 2



    The following APIs are also available:


    API|Base Path|Purpose|Comments
    :---|:---|:---|:---
    Action|/SEMP/v2/action|Performing actions|See note 2
    Configuration|/SEMP/v2/config|Reading and writing config state|See note 2



    Resources are always nouns, with individual objects being singular and collections being plural.

    Objects within a collection are identified by an `obj-id`, which follows the collection name with the form `collection-name/obj-id`.

    Actions within an object are identified by an `action-id`, which follows the object name with the form `obj-id/action-id`.

    Some examples:

    ```
    /SEMP/v2/config/msgVpns                        ; MsgVpn collection
    /SEMP/v2/config/msgVpns/a                      ; MsgVpn object named "a"
    /SEMP/v2/config/msgVpns/a/queues               ; Queue collection in MsgVpn "a"
    /SEMP/v2/config/msgVpns/a/queues/b             ; Queue object named "b" in MsgVpn "a"
    /SEMP/v2/action/msgVpns/a/queues/b/startReplay ; Action that starts a replay on Queue "b" in MsgVpn "a"
    /SEMP/v2/monitor/msgVpns/a/clients             ; Client collection in MsgVpn "a"
    /SEMP/v2/monitor/msgVpns/a/clients/c           ; Client object named "c" in MsgVpn "a"
    ```

    ## Collection Resources

    Collections are unordered lists of objects (unless described as otherwise), and are described by JSON arrays. Each item in the array represents an object in the same manner as the individual object would normally be represented. In the configuration API, the creation of a new object is done through its collection resource.

    ## Object and Action Resources

    Objects are composed of attributes, actions, collections, and other objects. They are described by JSON objects as name/value pairs. The collections and actions of an object are not contained directly in the object's JSON content; rather the content includes an attribute containing a URI which points to the collections and actions. These contained resources must be managed through this URI. At a minimum, every object has one or more identifying attributes, and its own `uri` attribute which contains the URI pointing to itself.

    Actions are also composed of attributes, and are described by JSON objects as name/value pairs. Unlike objects, however, they are not members of a collection and cannot be retrieved, only performed. Actions only exist in the action API.

    Attributes in an object or action may have any combination of the following properties:


    Property|Meaning|Comments
    :---|:---|:---
    Identifying|Attribute is involved in unique identification of the object, and appears in its URI|
    Required|Attribute must be provided in the request|
    Read-Only|Attribute can only be read, not written.|See note 3
    Write-Only|Attribute can only be written, not read, unless the attribute is also opaque|See the documentation for the opaque property
    Requires-Disable|Attribute can only be changed when object is disabled|
    Deprecated|Attribute is deprecated, and will disappear in the next SEMP version|
    Opaque|Attribute can be set or retrieved in opaque form when the `opaquePassword` query parameter is present|See the `opaquePassword` query parameter documentation



    In some requests, certain attributes may only be provided in certain combinations with other attributes:


    Relationship|Meaning
    :---|:---
    Requires|Attribute may only be changed by a request if a particular attribute or combination of attributes is also provided in the request
    Conflicts|Attribute may only be provided in a request if a particular attribute or combination of attributes is not also provided in the request



    In the monitoring API, any non-identifying attribute may not be returned in a GET.

    ## HTTP Methods

    The following HTTP methods manipulate resources in accordance with these general principles. Note that some methods are only used in certain APIs:


    Method|Resource|Meaning|Request Body|Response Body|Missing Request Attributes
    :---|:---|:---|:---|:---|:---
    POST|Collection|Create object|Initial attribute values|Object attributes and metadata|Set to default
    PUT|Object|Create or replace object (see note 5)|New attribute values|Object attributes and metadata|Set to default, with certain exceptions (see note 4)
    PUT|Action|Performs action|Action arguments|Action metadata|N/A
    PATCH|Object|Update object|New attribute values|Object attributes and metadata|unchanged
    DELETE|Object|Delete object|Empty|Object metadata|N/A
    GET|Object|Get object|Empty|Object attributes and metadata|N/A
    GET|Collection|Get collection|Empty|Object attributes and collection metadata|N/A



    ## Common Query Parameters

    The following are some common query parameters that are supported by many method/URI combinations. Individual URIs may document additional parameters. Note that multiple query parameters can be used together in a single URI, separated by the ampersand character. For example:

    ```
    ; Request for the MsgVpns collection using two hypothetical query parameters
    ; "q1" and "q2" with values "val1" and "val2" respectively
    /SEMP/v2/monitor/msgVpns?q1=val1&q2=val2
    ```

    ### select

    Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. Use this query parameter to limit the size of the returned data for each returned object, return only those fields that are desired, or exclude fields that are not desired.

    The value of `select` is a comma-separated list of attribute names. If the list contains attribute names that are not prefaced by `-`, only those attributes are included in the response. If the list contains attribute names that are prefaced by `-`, those attributes are excluded from the response. If the list contains both types, then the difference of the first set of attributes and the second set of attributes is returned. If the list is empty (i.e. `select=`), no attributes are returned.

    All attributes that are prefaced by `-` must follow all attributes that are not prefaced by `-`. In addition, each attribute name in the list must match at least one attribute in the object.

    Names may include the `*` wildcard (zero or more characters). Nested attribute names are supported using periods (e.g. `parentName.childName`).

    Some examples:

    ```
    ; List of all MsgVpn names
    /SEMP/v2/monitor/msgVpns?select=msgVpnName
    ; List of all MsgVpn and their attributes except for their names
    /SEMP/v2/monitor/msgVpns?select=-msgVpnName
    ; Authentication attributes of MsgVpn "finance"
    /SEMP/v2/monitor/msgVpns/finance?select=authentication*
    ; All attributes of MsgVpn "finance" except for authentication attributes
    /SEMP/v2/monitor/msgVpns/finance?select=-authentication*
    ; Access related attributes of Queue "orderQ" of MsgVpn "finance"
    /SEMP/v2/monitor/msgVpns/finance/queues/orderQ?select=owner,permission
    ```

    ### where

    Include in the response only objects where certain conditions are true. Use this query parameter to limit which objects are returned to those whose attribute values meet the given conditions.

    The value of `where` is a comma-separated list of expressions. All expressions must be true for the object to be included in the response. Each expression takes the form:

    ```
    expression  = attribute-name OP value
    OP          = '==' | '!=' | '&lt;' | '&gt;' | '&lt;=' | '&gt;='
    ```

    `value` may be a number, string, `true`, or `false`, as appropriate for the type of `attribute-name`. Greater-than and less-than comparisons only work for numbers. A `*` in a string `value` is interpreted as a wildcard (zero or more characters). Some examples:

    ```
    ; Only enabled MsgVpns
    /SEMP/v2/monitor/msgVpns?where=enabled==true
    ; Only MsgVpns using basic non-LDAP authentication
    /SEMP/v2/monitor/msgVpns?where=authenticationBasicEnabled==true,authenticationBasicType!=ldap
    ; Only MsgVpns that allow more than 100 client connections
    /SEMP/v2/monitor/msgVpns?where=maxConnectionCount>100
    ; Only MsgVpns with msgVpnName starting with "B":
    /SEMP/v2/monitor/msgVpns?where=msgVpnName==B*
    ```

    ### count

    Limit the count of objects in the response. This can be useful to limit the size of the response for large collections. The minimum value for `count` is `1` and the default is `10`. There is also a per-collection maximum value to limit request handling time. For example:

    ```
    ; Up to 25 MsgVpns
    /SEMP/v2/monitor/msgVpns?count=25
    ```

    ### cursor

    The cursor, or position, for the next page of objects. Cursors are opaque data that should not be created or interpreted by SEMP clients, and should only be used as described below.

    When a request is made for a collection and there may be additional objects available for retrieval that are not included in the initial response, the response will include a `cursorQuery` field containing a cursor. The value of this field can be specified in the `cursor` query parameter of a subsequent request to retrieve the next page of objects. For convenience, an appropriate URI is constructed automatically by the broker and included in the `nextPageUri` field of the response. This URI can be used directly to retrieve the next page of objects.

    ### opaquePassword

    Attributes with the opaque property are also write-only and so cannot normally be retrieved in a GET. However, when a password is provided in the `opaquePassword` query parameter, attributes with the opaque property are retrieved in a GET in opaque form, encrypted with this password. The query parameter can also be used on a POST, PATCH, or PUT to set opaque attributes using opaque attribute values retrieved in a GET, so long as:

    1. the same password that was used to retrieve the opaque attribute values is provided; and

    2. the broker to which the request is being sent has the same major and minor SEMP version as the broker that produced the opaque attribute values.

    The password provided in the query parameter must be a minimum of 8 characters and a maximum of 128 characters.

    The query parameter can only be used in the configuration API, and only over HTTPS.

    ## Authentication

    When a client makes its first SEMPv2 request, it must supply a username and password using HTTP Basic authentication.

    If authentication is successful, the broker returns a cookie containing a session key. The client can omit the username and password from subsequent requests, because the broker now uses the session cookie for authentication instead. When the session expires or is deleted, the client must provide the username and password again, and the broker creates a new session.

    There are a limited number of session slots available on the broker. The broker returns 529 No SEMP Session Available if it is not able to allocate a session. For this reason, all clients that use SEMPv2 should support cookies.

    If certain attributes—such as a user's password—are changed, the broker automatically deletes the affected sessions. These attributes are documented below. However, changes in external user configuration data stored on a RADIUS or LDAP server do not trigger the broker to delete the associated session(s), therefore you must do this manually, if required.

    A client can retrieve its current session information using the /about/user endpoint, delete its own session using the /about/user/logout endpoint, and manage all sessions using the /sessions endpoint.

    ## Help

    Visit [our website](https://solace.com) to learn more about Solace.

    You can also download the SEMP API specifications by clicking [here](https://solace.com/downloads/).

    If you need additional support, please contact us at [support@solace.com](mailto:support@solace.com).

    ## Notes

    Note|Description
    :---:|:---
    1|This specification defines SEMP starting in "v2", and not the original SEMP "v1" interface. Request and response formats between "v1" and "v2" are entirely incompatible, although both protocols share a common port configuration on the Solace PubSub+ broker. They are differentiated by the initial portion of the URI path, one of either "/SEMP/" or "/SEMP/v2/"
    2|This API is partially implemented. Only a subset of all objects are available.
    3|Read-only attributes may appear in POST and PUT/PATCH requests. However, if a read-only attribute is not marked as identifying, it will be ignored during a PUT/PATCH.
    4|On a PUT, if the SEMP user is not authorized to modify the attribute, its value is left unchanged rather than set to default. In addition, the values of write-only attributes are not set to their defaults on a PUT, except in the following two cases: there is a mutual requires relationship with another non-write-only attribute, both attributes are absent from the request, and the non-write-only attribute is not currently set to its default value; or the attribute is also opaque and the `opaquePassword` query parameter is provided in the request.
    5|On a PUT, if the object does not exist, it is created first.

  title: SEMP (Solace Element Management Protocol)
  version: "2.21"
servers:
- url: http://www.solace.com/SEMP/v2/monitor
- url: https://www.solace.com/SEMP/v2/monitor
tags: []
paths:
  /:
    get:
      description: |-
        Get a Broker object.

        This object contains global configuration for the message broker.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:


        Attribute|Access Scope/Level
        :---|:---:
        averageRxByteRate|global/read-only
        averageRxCompressedByteRate|global/read-only
        averageRxMsgRate|global/read-only
        averageRxUncompressedByteRate|global/read-only
        averageTxByteRate|global/read-only
        averageTxCompressedByteRate|global/read-only
        averageTxMsgRate|global/read-only
        averageTxUncompressedByteRate|global/read-only
        cspfVersion|global/read-only
        guaranteedMsgingDefragmentationEstimatedFragmentation|global/read-only
        guaranteedMsgingDefragmentationEstimatedRecoverableSpace|global/read-only
        guaranteedMsgingDefragmentationLastCompletedOn|global/read-only
        guaranteedMsgingDefragmentationLastCompletionPercentage|global/read-only
        guaranteedMsgingDefragmentationLastExitCondition|global/read-only
        guaranteedMsgingDefragmentationLastExitConditionInformation|global/read-only
        guaranteedMsgingDefragmentationStatus|global/read-only
        guaranteedMsgingDefragmentationStatusActiveCompletionPercentage|global/read-only
        guaranteedMsgingEnabled|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-only
        guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-only
        guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-only
        guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-only
        guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-only
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-only
        guaranteedMsgingMaxCacheUsage|global/read-only
        guaranteedMsgingMaxMsgSpoolUsage|global/read-only
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-only
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-only
        guaranteedMsgingOperationalStatus|global/read-only
        guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-only
        rxByteCount|global/read-only
        rxByteRate|global/read-only
        rxCompressedByteCount|global/read-only
        rxCompressedByteRate|global/read-only
        rxCompressionRatio|global/read-only
        rxMsgCount|global/read-only
        rxMsgRate|global/read-only
        rxUncompressedByteCount|global/read-only
        rxUncompressedByteRate|global/read-only
        serviceAmqpEnabled|global/read-only
        serviceAmqpTlsListenPort|global/read-only
        serviceEventConnectionCountThreshold.clearPercent|global/read-only
        serviceEventConnectionCountThreshold.clearValue|global/read-only
        serviceEventConnectionCountThreshold.setPercent|global/read-only
        serviceEventConnectionCountThreshold.setValue|global/read-only
        serviceHealthCheckEnabled|global/read-only
        serviceHealthCheckListenPort|global/read-only
        serviceMateLinkEnabled|global/read-only
        serviceMateLinkListenPort|global/read-only
        serviceMqttEnabled|global/read-only
        serviceMsgBackboneEnabled|global/read-only
        serviceRedundancyEnabled|global/read-only
        serviceRedundancyFirstListenPort|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-only
        serviceRestIncomingEnabled|global/read-only
        serviceRestOutgoingEnabled|global/read-only
        serviceSempLegacyTimeoutEnabled|global/read-only
        serviceSempPlainTextEnabled|global/read-only
        serviceSempPlainTextListenPort|global/read-only
        serviceSempSessionIdleTimeout|global/read-only
        serviceSempSessionMaxLifetime|global/read-only
        serviceSempTlsEnabled|global/read-only
        serviceSempTlsListenPort|global/read-only
        serviceSmfCompressionListenPort|global/read-only
        serviceSmfEnabled|global/read-only
        serviceSmfEventConnectionCountThreshold.clearPercent|global/read-only
        serviceSmfEventConnectionCountThreshold.clearValue|global/read-only
        serviceSmfEventConnectionCountThreshold.setPercent|global/read-only
        serviceSmfEventConnectionCountThreshold.setValue|global/read-only
        serviceSmfPlainTextListenPort|global/read-only
        serviceSmfRoutingControlListenPort|global/read-only
        serviceSmfTlsListenPort|global/read-only
        serviceTlsEventConnectionCountThreshold.clearPercent|global/read-only
        serviceTlsEventConnectionCountThreshold.clearValue|global/read-only
        serviceTlsEventConnectionCountThreshold.setPercent|global/read-only
        serviceTlsEventConnectionCountThreshold.setValue|global/read-only
        serviceWebTransportEnabled|global/read-only
        serviceWebTransportPlainTextListenPort|global/read-only
        serviceWebTransportTlsListenPort|global/read-only
        serviceWebTransportWebUrlSuffix|global/read-only
        tlsBlockVersion11Enabled|global/read-only
        tlsCipherSuiteManagementDefaultList|global/read-only
        tlsCipherSuiteManagementList|global/read-only
        tlsCipherSuiteManagementSupportedList|vpn/read-only
        tlsCipherSuiteMsgBackboneDefaultList|global/read-only
        tlsCipherSuiteMsgBackboneList|global/read-only
        tlsCipherSuiteMsgBackboneSupportedList|vpn/read-only
        tlsCipherSuiteSecureShellDefaultList|global/read-only
        tlsCipherSuiteSecureShellList|global/read-only
        tlsCipherSuiteSecureShellSupportedList|vpn/read-only
        tlsCrimeExploitProtectionEnabled|global/read-only
        tlsStandardDomainCertificateAuthoritiesEnabled|vpn/read-only
        tlsTicketLifetime|global/read-only
        tlsVersionSupportedList|vpn/read-only
        txByteCount|global/read-only
        txByteRate|global/read-only
        txCompressedByteCount|global/read-only
        txCompressedByteRate|global/read-only
        txCompressionRatio|global/read-only
        txMsgCount|global/read-only
        txMsgRate|global/read-only
        txUncompressedByteCount|global/read-only
        txUncompressedByteRate|global/read-only



        This has been available since 2.13.
      operationId: getBroker
      parameters:
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResponse'
          description: The Broker object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Broker object.
      tags:
      - all
  /about:
    get:
      description: |-
        Get an About object.

        This provides metadata about the SEMP API, such as the version of the API supported by the broker.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.13.
      operationId: getAbout
      parameters:
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutResponse'
          description: The About object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an About object.
      tags:
      - all
      - about
  /about/api:
    get:
      description: |-
        Get an API Description object.

        The API Description object provides metadata about the SEMP API.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.11.
      operationId: getAboutApi
      parameters:
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutApiResponse'
          description: The API Description object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an API Description object.
      tags:
      - all
      - about
  /about/user:
    get:
      description: |-
        Get a User object.

        Session and access level information about the user accessing the SEMP API.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.11.
      operationId: getAboutUser
      parameters:
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserResponse'
          description: The User object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a User object.
      tags:
      - all
      - about
  /about/user/msgVpns:
    get:
      description: |-
        Get a list of User Message VPN objects.

        This provides information about the Message VPN access level for the username used to access the SEMP API.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.11.
      operationId: getAboutUserMsgVpns
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserMsgVpnsResponse'
          description: The list of User Message VPN objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of User Message VPN objects.
      tags:
      - all
      - about
  /about/user/msgVpns/{msgVpnName}:
    get:
      description: |-
        Get a User Message VPN object.

        This provides information about the Message VPN access level for the username used to access the SEMP API.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.11.
      operationId: getAboutUserMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserMsgVpnResponse'
          description: The User Message VPN object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a User Message VPN object.
      tags:
      - all
      - about
  /certAuthorities:
    get:
      deprecated: true
      description: |-
        Get a list of Certificate Authority objects.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|x
        certContent||x
        crlDayList||x
        crlLastDownloadTime||x
        crlLastFailureReason||x
        crlLastFailureTime||x
        crlNextDownloadTime||x
        crlTimeList||x
        crlUp||x
        crlUrl||x
        ocspLastFailureReason||x
        ocspLastFailureTime||x
        ocspLastFailureUrl||x
        ocspNonResponderCertEnabled||x
        ocspOverrideUrl||x
        ocspTimeout||x
        revocationCheckEnabled||x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
      operationId: getCertAuthorities
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthoritiesResponse'
          description: The list of Certificate Authority objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Certificate Authority objects.
      tags:
      - all
      - certAuthority
  /certAuthorities/{certAuthorityName}:
    get:
      deprecated: true
      description: |-
        Get a Certificate Authority object.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|x
        certContent||x
        crlDayList||x
        crlLastDownloadTime||x
        crlLastFailureReason||x
        crlLastFailureTime||x
        crlNextDownloadTime||x
        crlTimeList||x
        crlUp||x
        crlUrl||x
        ocspLastFailureReason||x
        ocspLastFailureTime||x
        ocspLastFailureUrl||x
        ocspNonResponderCertEnabled||x
        ocspOverrideUrl||x
        ocspTimeout||x
        revocationCheckEnabled||x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
      operationId: getCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
          description: The Certificate Authority object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Certificate Authority object.
      tags:
      - all
      - certAuthority
  /certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames:
    get:
      deprecated: true
      description: |-
        Get a list of OCSP Responder Trusted Common Name objects.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|x
        ocspTlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities.
      operationId: getCertAuthorityOcspTlsTrustedCommonNames
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNamesResponse'
          description: The list of OCSP Responder Trusted Common Name objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of OCSP Responder Trusted Common Name objects.
      tags:
      - all
      - certAuthority
  /certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}:
    get:
      deprecated: true
      description: |-
        Get an OCSP Responder Trusted Common Name object.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|x
        ocspTlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities.
      operationId: getCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        in: path
        name: ocspTlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameResponse'
          description: The OCSP Responder Trusted Common Name object's attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an OCSP Responder Trusted Common Name object.
      tags:
      - all
      - certAuthority
  /clientCertAuthorities:
    get:
      description: |-
        Get a list of Client Certificate Authority objects.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getClientCertAuthorities
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthoritiesResponse'
          description: The list of Client Certificate Authority objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Certificate Authority objects.
      tags:
      - all
      - clientCertAuthority
  /clientCertAuthorities/{certAuthorityName}:
    get:
      description: |-
        Get a Client Certificate Authority object.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getClientCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
          description: The Client Certificate Authority object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Certificate Authority object.
      tags:
      - all
      - clientCertAuthority
  /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames:
    get:
      description: |-
        Get a list of OCSP Responder Trusted Common Name objects.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|
        ocspTlsTrustedCommonName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getClientCertAuthorityOcspTlsTrustedCommonNames
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNamesResponse'
          description: The list of OCSP Responder Trusted Common Name objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of OCSP Responder Trusted Common Name objects.
      tags:
      - all
      - clientCertAuthority
  /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}:
    get:
      description: |-
        Get an OCSP Responder Trusted Common Name object.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|
        ocspTlsTrustedCommonName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getClientCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        in: path
        name: ocspTlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameResponse'
          description: The OCSP Responder Trusted Common Name object's attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an OCSP Responder Trusted Common Name object.
      tags:
      - all
      - clientCertAuthority
  /dmrClusters:
    get:
      description: |-
        Get a list of Cluster objects.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        tlsServerCertEnforceTrustedCommonNameEnabled||x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusters
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClustersResponse'
          description: The list of Cluster objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Cluster objects.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}:
    get:
      description: |-
        Get a Cluster object.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        tlsServerCertEnforceTrustedCommonNameEnabled||x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrCluster
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
          description: The Cluster object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Cluster object.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links:
    get:
      description: |-
        Get a list of Link objects.

        A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinks
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinksResponse'
          description: The list of Link objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Link objects.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}:
    get:
      description: |-
        Get a Link object.

        A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLink
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
          description: The Link object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Link object.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/channels:
    get:
      description: |-
        Get a list of Cluster Link Channels objects.

        A Channel is a connection between this broker and a remote node in the Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        msgVpnName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinkChannels
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkChannelsResponse'
          description: The list of Cluster Link Channels objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Cluster Link Channels objects.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/channels/{msgVpnName}:
    get:
      description: |-
        Get a Cluster Link Channels object.

        A Channel is a connection between this broker and a remote node in the Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        msgVpnName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinkChannel
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkChannelResponse'
          description: The Cluster Link Channels object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Cluster Link Channels object.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses:
    get:
      description: |-
        Get a list of Remote Address objects.

        Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        remoteAddress|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinkRemoteAddresses
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressesResponse'
          description: The list of Remote Address objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Remote Address objects.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses/{remoteAddress}:
    get:
      description: |-
        Get a Remote Address object.

        Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        remoteAddress|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinkRemoteAddress
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: 'The FQDN or IP address (and optional port) of the remote node.
          If a port is not provided, it will vary based on the transport encoding:
          55555 (plain-text), 55443 (encrypted), or 55003 (compressed).'
        in: path
        name: remoteAddress
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressResponse'
          description: The Remote Address object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Remote Address object.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames:
    get:
      deprecated: true
      description: |-
        Get a list of Trusted Common Name objects.

        The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|x
        remoteNodeName|x|x
        tlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getDmrClusterLinkTlsTrustedCommonNames
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNamesResponse'
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    get:
      deprecated: true
      description: |-
        Get a Trusted Common Name object.

        The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|x
        remoteNodeName|x|x
        tlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getDmrClusterLinkTlsTrustedCommonName
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/topologyIssues:
    get:
      description: |-
        Get a list of Cluster Topology Issue objects.

        A Cluster Topology Issue indicates incorrect or inconsistent configuration within the DMR network. Such issues will cause messages to be misdelivered or lost.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        topologyIssue|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterTopologyIssues
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterTopologyIssuesResponse'
          description: The list of Cluster Topology Issue objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Cluster Topology Issue objects.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/topologyIssues/{topologyIssue}:
    get:
      description: |-
        Get a Cluster Topology Issue object.

        A Cluster Topology Issue indicates incorrect or inconsistent configuration within the DMR network. Such issues will cause messages to be misdelivered or lost.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        dmrClusterName|x|
        topologyIssue|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterTopologyIssue
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The topology issue discovered in the Cluster. A topology issue
          indicates incorrect or inconsistent configuration within the DMR network.
          Such issues will cause messages to be misdelivered or lost.
        in: path
        name: topologyIssue
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterTopologyIssueResponse'
          description: The Cluster Topology Issue object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Cluster Topology Issue object.
      tags:
      - all
      - dmrCluster
  /domainCertAuthorities:
    get:
      description: |-
        Get a list of Domain Certificate Authority objects.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getDomainCertAuthorities
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthoritiesResponse'
          description: The list of Domain Certificate Authority objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Domain Certificate Authority objects.
      tags:
      - all
      - domainCertAuthority
  /domainCertAuthorities/{certAuthorityName}:
    get:
      description: |-
        Get a Domain Certificate Authority object.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getDomainCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
          description: The Domain Certificate Authority object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Domain Certificate Authority object.
      tags:
      - all
      - domainCertAuthority
  /msgVpns:
    get:
      description: |-
        Get a list of Message VPN objects.

        Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled||x
        counter.controlRxByteCount||x
        counter.controlRxMsgCount||x
        counter.controlTxByteCount||x
        counter.controlTxMsgCount||x
        counter.dataRxByteCount||x
        counter.dataRxMsgCount||x
        counter.dataTxByteCount||x
        counter.dataTxMsgCount||x
        counter.discardedRxMsgCount||x
        counter.discardedTxMsgCount||x
        counter.loginRxMsgCount||x
        counter.loginTxMsgCount||x
        counter.msgSpoolRxMsgCount||x
        counter.msgSpoolTxMsgCount||x
        counter.tlsRxByteCount||x
        counter.tlsTxByteCount||x
        msgVpnName|x|
        rate.averageRxByteRate||x
        rate.averageRxMsgRate||x
        rate.averageTxByteRate||x
        rate.averageTxMsgRate||x
        rate.rxByteRate||x
        rate.rxMsgRate||x
        rate.tlsAverageRxByteRate||x
        rate.tlsAverageTxByteRate||x
        rate.tlsRxByteRate||x
        rate.tlsTxByteRate||x
        rate.txByteRate||x
        rate.txMsgRate||x
        restTlsServerCertEnforceTrustedCommonNameEnabled||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpns
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnsResponse'
          description: The list of Message VPN objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Message VPN objects.
      tags:
      - all
      - msgVpn
  /msgVpns/{msgVpnName}:
    get:
      description: |-
        Get a Message VPN object.

        Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled||x
        counter.controlRxByteCount||x
        counter.controlRxMsgCount||x
        counter.controlTxByteCount||x
        counter.controlTxMsgCount||x
        counter.dataRxByteCount||x
        counter.dataRxMsgCount||x
        counter.dataTxByteCount||x
        counter.dataTxMsgCount||x
        counter.discardedRxMsgCount||x
        counter.discardedTxMsgCount||x
        counter.loginRxMsgCount||x
        counter.loginTxMsgCount||x
        counter.msgSpoolRxMsgCount||x
        counter.msgSpoolTxMsgCount||x
        counter.tlsRxByteCount||x
        counter.tlsTxByteCount||x
        msgVpnName|x|
        rate.averageRxByteRate||x
        rate.averageRxMsgRate||x
        rate.averageTxByteRate||x
        rate.averageTxMsgRate||x
        rate.rxByteRate||x
        rate.rxMsgRate||x
        rate.tlsAverageRxByteRate||x
        rate.tlsAverageTxByteRate||x
        rate.tlsRxByteRate||x
        rate.tlsTxByteRate||x
        rate.txByteRate||x
        rate.txMsgRate||x
        restTlsServerCertEnforceTrustedCommonNameEnabled||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
          description: The Message VPN object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Message VPN object.
      tags:
      - all
      - msgVpn
  /msgVpns/{msgVpnName}/aclProfiles:
    get:
      description: |-
        Get a list of ACL Profile objects.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAclProfiles
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilesResponse'
          description: The list of ACL Profile objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of ACL Profile objects.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}:
    get:
      description: |-
        Get an ACL Profile object.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAclProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
          description: The ACL Profile object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an ACL Profile object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions:
    get:
      description: |-
        Get a list of Client Connect Exception objects.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        clientConnectExceptionAddress|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAclProfileClientConnectExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionsResponse'
          description: The list of Client Connect Exception objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Connect Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}:
    get:
      description: |-
        Get a Client Connect Exception object.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        clientConnectExceptionAddress|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAclProfileClientConnectException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The IP address/netmask of the client connect exception in CIDR
          form.
        in: path
        name: clientConnectExceptionAddress
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionResponse'
          description: The Client Connect Exception object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Connect Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions:
    get:
      deprecated: true
      description: |-
        Get a list of Publish Topic Exception objects.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|x
        msgVpnName|x|x
        publishExceptionTopic|x|x
        topicSyntax|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: getMsgVpnAclProfilePublishExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionsResponse'
          description: The list of Publish Topic Exception objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Publish Topic Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}:
    get:
      deprecated: true
      description: |-
        Get a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|x
        msgVpnName|x|x
        publishExceptionTopic|x|x
        topicSyntax|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: getMsgVpnAclProfilePublishException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: topicSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: publishExceptionTopic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionResponse'
          description: The Publish Topic Exception object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Publish Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions:
    get:
      description: |-
        Get a list of Publish Topic Exception objects.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        publishTopicException|x|
        publishTopicExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfilePublishTopicExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionsResponse'
          description: The list of Publish Topic Exception objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Publish Topic Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions/{publishTopicExceptionSyntax},{publishTopicException}:
    get:
      description: |-
        Get a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        publishTopicException|x|
        publishTopicExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfilePublishTopicException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: publishTopicExceptionSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: publishTopicException
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionResponse'
          description: The Publish Topic Exception object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Publish Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions:
    get:
      deprecated: true
      description: |-
        Get a list of Subscribe Topic Exception objects.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|x
        msgVpnName|x|x
        subscribeExceptionTopic|x|x
        topicSyntax|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: getMsgVpnAclProfileSubscribeExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionsResponse'
          description: The list of Subscribe Topic Exception objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Subscribe Topic Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}:
    get:
      deprecated: true
      description: |-
        Get a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|x
        msgVpnName|x|x
        subscribeExceptionTopic|x|x
        topicSyntax|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: getMsgVpnAclProfileSubscribeException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: topicSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: subscribeExceptionTopic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionResponse'
          description: The Subscribe Topic Exception object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Subscribe Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions:
    get:
      description: |-
        Get a list of Subscribe Share Name Exception objects.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        subscribeShareNameException|x|
        subscribeShareNameExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeShareNameExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionsResponse'
          description: The list of Subscribe Share Name Exception objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Subscribe Share Name Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
  ? /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions/{subscribeShareNameExceptionSyntax},{subscribeShareNameException}
  : get:
      description: |-
        Get a Subscribe Share Name Exception object.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        subscribeShareNameException|x|
        subscribeShareNameExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeShareNameException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the subscribe share name for the exception to the
          default action taken.
        in: path
        name: subscribeShareNameExceptionSyntax
        required: true
        schema:
          type: string
      - description: The subscribe share name exception to the default action taken.
          May include wildcard characters.
        in: path
        name: subscribeShareNameException
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionResponse'
          description: The Subscribe Share Name Exception object's attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Subscribe Share Name Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions:
    get:
      description: |-
        Get a list of Subscribe Topic Exception objects.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        subscribeTopicException|x|
        subscribeTopicExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeTopicExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionsResponse'
          description: The list of Subscribe Topic Exception objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Subscribe Topic Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
  ? /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions/{subscribeTopicExceptionSyntax},{subscribeTopicException}
  : get:
      description: |-
        Get a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        aclProfileName|x|
        msgVpnName|x|
        subscribeTopicException|x|
        subscribeTopicExceptionSyntax|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeTopicException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: subscribeTopicExceptionSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: subscribeTopicException
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionResponse'
          description: The Subscribe Topic Exception object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Subscribe Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/authenticationOauthProviders:
    get:
      description: |-
        Get a list of OAuth Provider objects.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthProviderName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.13.
      operationId: getMsgVpnAuthenticationOauthProviders
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvidersResponse'
          description: The list of OAuth Provider objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of OAuth Provider objects.
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
  /msgVpns/{msgVpnName}/authenticationOauthProviders/{oauthProviderName}:
    get:
      description: |-
        Get an OAuth Provider object.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthProviderName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.13.
      operationId: getMsgVpnAuthenticationOauthProvider
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the OAuth Provider.
        in: path
        name: oauthProviderName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
          description: The OAuth Provider object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an OAuth Provider object.
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
  /msgVpns/{msgVpnName}/authorizationGroups:
    get:
      description: |-
        Get a list of LDAP Authorization Group objects.

        To use client authorization groups configured on an external LDAP server to provide client authorizations, LDAP Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the LDAP server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        authorizationGroupName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAuthorizationGroups
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupsResponse'
          description: The list of LDAP Authorization Group objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of LDAP Authorization Group objects.
      tags:
      - all
      - msgVpn
      - authorizationGroup
  /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}:
    get:
      description: |-
        Get an LDAP Authorization Group object.

        To use client authorization groups configured on an external LDAP server to provide client authorizations, LDAP Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the LDAP server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        authorizationGroupName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnAuthorizationGroup
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the LDAP Authorization Group. Special care is needed
          if the group name contains special characters such as '#', '+', ';', '='
          as the value of the group name returned from the LDAP server might prepend
          those characters with '\'. For example a group name called 'test#,lab,com'
          will be returned from the LDAP server as 'test\#,lab,com'.
        in: path
        name: authorizationGroupName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
          description: The LDAP Authorization Group object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an LDAP Authorization Group object.
      tags:
      - all
      - msgVpn
      - authorizationGroup
  /msgVpns/{msgVpnName}/bridges:
    get:
      description: |-
        Get a list of Bridge objects.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        counter.controlRxByteCount||x
        counter.controlRxMsgCount||x
        counter.controlTxByteCount||x
        counter.controlTxMsgCount||x
        counter.dataRxByteCount||x
        counter.dataRxMsgCount||x
        counter.dataTxByteCount||x
        counter.dataTxMsgCount||x
        counter.discardedRxMsgCount||x
        counter.discardedTxMsgCount||x
        counter.loginRxMsgCount||x
        counter.loginTxMsgCount||x
        counter.msgSpoolRxMsgCount||x
        counter.rxByteCount||x
        counter.rxMsgCount||x
        counter.txByteCount||x
        counter.txMsgCount||x
        msgVpnName|x|
        rate.averageRxByteRate||x
        rate.averageRxMsgRate||x
        rate.averageTxByteRate||x
        rate.averageTxMsgRate||x
        rate.rxByteRate||x
        rate.rxMsgRate||x
        rate.txByteRate||x
        rate.txMsgRate||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridges
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgesResponse'
          description: The list of Bridge objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Bridge objects.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}:
    get:
      description: |-
        Get a Bridge object.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        counter.controlRxByteCount||x
        counter.controlRxMsgCount||x
        counter.controlTxByteCount||x
        counter.controlTxMsgCount||x
        counter.dataRxByteCount||x
        counter.dataRxMsgCount||x
        counter.dataTxByteCount||x
        counter.dataTxMsgCount||x
        counter.discardedRxMsgCount||x
        counter.discardedTxMsgCount||x
        counter.loginRxMsgCount||x
        counter.loginTxMsgCount||x
        counter.msgSpoolRxMsgCount||x
        counter.rxByteCount||x
        counter.rxMsgCount||x
        counter.txByteCount||x
        counter.txMsgCount||x
        msgVpnName|x|
        rate.averageRxByteRate||x
        rate.averageRxMsgRate||x
        rate.averageTxByteRate||x
        rate.averageTxMsgRate||x
        rate.rxByteRate||x
        rate.rxMsgRate||x
        rate.txByteRate||x
        rate.txMsgRate||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
          description: The Bridge object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Bridge object.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/localSubscriptions:
    get:
      description: |-
        Get a list of Bridge Local Subscriptions objects.

        A Local Subscription is a topic subscription used by a remote Message VPN Bridge to attract messages from this broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        localSubscriptionTopic|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeLocalSubscriptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionsResponse'
          description: The list of Bridge Local Subscriptions objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Bridge Local Subscriptions objects.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/localSubscriptions/{localSubscriptionTopic}:
    get:
      description: |-
        Get a Bridge Local Subscriptions object.

        A Local Subscription is a topic subscription used by a remote Message VPN Bridge to attract messages from this broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        localSubscriptionTopic|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeLocalSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The topic of the Bridge local subscription.
        in: path
        name: localSubscriptionTopic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionResponse'
          description: The Bridge Local Subscriptions object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Bridge Local Subscriptions object.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns:
    get:
      description: |-
        Get a list of Remote Message VPN objects.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        msgVpnName|x|
        remoteMsgVpnInterface|x|
        remoteMsgVpnLocation|x|
        remoteMsgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeRemoteMsgVpns
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnsResponse'
          description: The list of Remote Message VPN objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Remote Message VPN objects.
      tags:
      - all
      - msgVpn
      - bridge
  ? /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
  : get:
      description: |-
        Get a Remote Message VPN object.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        msgVpnName|x|
        remoteMsgVpnInterface|x|
        remoteMsgVpnLocation|x|
        remoteMsgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeRemoteMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The name of the remote Message VPN.
        in: path
        name: remoteMsgVpnName
        required: true
        schema:
          type: string
      - description: The location of the remote Message VPN as either an FQDN with
          port, IP address with port, or virtual router name (starting with "v:").
        in: path
        name: remoteMsgVpnLocation
        required: true
        schema:
          type: string
      - description: The physical interface on the local Message VPN host for connecting
          to the remote Message VPN. By default, an interface is chosen automatically
          (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual
          router name.
        in: path
        name: remoteMsgVpnInterface
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
          description: The Remote Message VPN object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Remote Message VPN object.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions:
    get:
      description: |-
        Get a list of Remote Subscription objects.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        msgVpnName|x|
        remoteSubscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeRemoteSubscriptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionsResponse'
          description: The list of Remote Subscription objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Remote Subscription objects.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}:
    get:
      description: |-
        Get a Remote Subscription object.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|
        bridgeVirtualRouter|x|
        msgVpnName|x|
        remoteSubscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnBridgeRemoteSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The topic of the Bridge remote subscription.
        in: path
        name: remoteSubscriptionTopic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionResponse'
          description: The Remote Subscription object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Remote Subscription object.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames:
    get:
      deprecated: true
      description: |-
        Get a list of Trusted Common Name objects.

        The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|x
        bridgeVirtualRouter|x|x
        msgVpnName|x|x
        tlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnBridgeTlsTrustedCommonNames
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNamesResponse'
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    get:
      deprecated: true
      description: |-
        Get a Trusted Common Name object.

        The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        bridgeName|x|x
        bridgeVirtualRouter|x|x
        msgVpnName|x|x
        tlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/clientProfiles:
    get:
      description: |-
        Get a list of Client Profile objects.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        apiQueueManagementCopyFromOnCreateName||x
        apiTopicEndpointManagementCopyFromOnCreateName||x
        clientProfileName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnClientProfiles
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfilesResponse'
          description: The list of Client Profile objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Profile objects.
      tags:
      - all
      - msgVpn
      - clientProfile
  /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}:
    get:
      description: |-
        Get a Client Profile object.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        apiQueueManagementCopyFromOnCreateName||x
        apiTopicEndpointManagementCopyFromOnCreateName||x
        clientProfileName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnClientProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Profile.
        in: path
        name: clientProfileName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
          description: The Client Profile object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Profile object.
      tags:
      - all
      - msgVpn
      - clientProfile
  /msgVpns/{msgVpnName}/clientUsernames:
    get:
      description: |-
        Get a list of Client Username objects.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientUsername|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnClientUsernames
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernamesResponse'
          description: The list of Client Username objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Username objects.
      tags:
      - all
      - msgVpn
      - clientUsername
  /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}:
    get:
      description: |-
        Get a Client Username object.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientUsername|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnClientUsername
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Username.
        in: path
        name: clientUsername
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
          description: The Client Username object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Username object.
      tags:
      - all
      - msgVpn
      - clientUsername
  /msgVpns/{msgVpnName}/clients:
    get:
      description: |-
        Get a list of Client objects.

        Applications or devices that connect to message brokers to send and/or receive messages are represented as Clients.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClients
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientsResponse'
          description: The list of Client objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client objects.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}:
    get:
      description: |-
        Get a Client object.

        Applications or devices that connect to message brokers to send and/or receive messages are represented as Clients.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClient
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientResponse'
          description: The Client object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client object.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/connections:
    get:
      description: |-
        Get a list of Client Connection objects.

        A Client Connection represents the Transmission Control Protocol (TCP) connection the Client uses to communicate with the message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientAddress|x|
        clientName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientConnections
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientConnectionsResponse'
          description: The list of Client Connection objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Connection objects.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/connections/{clientAddress}:
    get:
      description: |-
        Get a Client Connection object.

        A Client Connection represents the Transmission Control Protocol (TCP) connection the Client uses to communicate with the message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientAddress|x|
        clientName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientConnection
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: The IP address and TCP port on the Client side of the Client
          Connection.
        in: path
        name: clientAddress
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientConnectionResponse'
          description: The Client Connection object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Connection object.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/rxFlows:
    get:
      description: |-
        Get a list of Client Receive Flow objects.

        Client Receive Flows are used by clients to publish Guaranteed messages to a message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        flowId|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientRxFlows
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientRxFlowsResponse'
          description: The list of Client Receive Flow objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Receive Flow objects.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/rxFlows/{flowId}:
    get:
      description: |-
        Get a Client Receive Flow object.

        Client Receive Flows are used by clients to publish Guaranteed messages to a message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        flowId|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientRxFlow
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the flow.
        in: path
        name: flowId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientRxFlowResponse'
          description: The Client Receive Flow object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Receive Flow object.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/subscriptions:
    get:
      description: |-
        Get a list of Client Subscription objects.

        Once clients are authenticated on the message broker they can add and remove Client Subscriptions for Direct messages published to the Message VPN to which they have connected.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientSubscriptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientSubscriptionsResponse'
          description: The list of Client Subscription objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Subscription objects.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/subscriptions/{subscriptionTopic}:
    get:
      description: |-
        Get a Client Subscription object.

        Once clients are authenticated on the message broker they can add and remove Client Subscriptions for Direct messages published to the Message VPN to which they have connected.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: The topic of the Subscription.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientSubscriptionResponse'
          description: The Client Subscription object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Subscription object.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/transactedSessions:
    get:
      description: |-
        Get a list of Client Transacted Session objects.

        Transacted Sessions enable clients to group multiple message send and/or receive operations together in single, atomic units known as local transactions.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|
        sessionName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientTransactedSessions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientTransactedSessionsResponse'
          description: The list of Client Transacted Session objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Transacted Session objects.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/transactedSessions/{sessionName}:
    get:
      description: |-
        Get a Client Transacted Session object.

        Transacted Sessions enable clients to group multiple message send and/or receive operations together in single, atomic units known as local transactions.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        msgVpnName|x|
        sessionName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientTransactedSession
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: The name of the Transacted Session.
        in: path
        name: sessionName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientTransactedSessionResponse'
          description: The Client Transacted Session object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Transacted Session object.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/txFlows:
    get:
      description: |-
        Get a list of Client Transmit Flow objects.

        Client Transmit Flows are used by clients to consume Guaranteed messages from a message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        flowId|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientTxFlows
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientTxFlowsResponse'
          description: The list of Client Transmit Flow objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Transmit Flow objects.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/clients/{clientName}/txFlows/{flowId}:
    get:
      description: |-
        Get a Client Transmit Flow object.

        Client Transmit Flows are used by clients to consume Guaranteed messages from a message broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        clientName|x|
        flowId|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnClientTxFlow
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client.
        in: path
        name: clientName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the flow.
        in: path
        name: flowId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientTxFlowResponse'
          description: The Client Transmit Flow object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Transmit Flow object.
      tags:
      - all
      - msgVpn
      - client
  /msgVpns/{msgVpnName}/configSyncRemoteNodes:
    get:
      description: |-
        Get a list of Config Sync Remote Node objects.

        A Config Sync Remote Node object contains information about the status of the table for this Message VPN with respect to a remote node.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnConfigSyncRemoteNodes
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodesResponse'
          description: The list of Config Sync Remote Node objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Config Sync Remote Node objects.
      tags:
      - all
      - msgVpn
      - configSyncRemoteNode
  /msgVpns/{msgVpnName}/configSyncRemoteNodes/{remoteNodeName}:
    get:
      description: |-
        Get a Config Sync Remote Node object.

        A Config Sync Remote Node object contains information about the status of the table for this Message VPN with respect to a remote node.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnConfigSyncRemoteNode
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Config Sync Remote Node.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeResponse'
          description: The Config Sync Remote Node object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Config Sync Remote Node object.
      tags:
      - all
      - msgVpn
      - configSyncRemoteNode
  /msgVpns/{msgVpnName}/distributedCaches:
    get:
      description: |-
        Get a list of Distributed Cache objects.

        A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCaches
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCachesResponse'
          description: The list of Distributed Cache objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Distributed Cache objects.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}:
    get:
      description: |-
        Get a Distributed Cache object.

        A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
          description: The Distributed Cache object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Distributed Cache object.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters:
    get:
      description: |-
        Get a list of Cache Cluster objects.

        A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusters
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClustersResponse'
          description: The list of Cache Cluster objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Cache Cluster objects.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}:
    get:
      description: |-
        Get a Cache Cluster object.

        A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
          description: The Cache Cluster object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters:
    get:
      description: |-
        Get a list of Home Cache Cluster objects.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusters
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse'
          description: The list of Home Cache Cluster objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Home Cache Cluster objects.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}:
    get:
      description: |-
        Get a Home Cache Cluster object.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse'
          description: The Home Cache Cluster object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Home Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes
  : get:
      description: |-
        Get a list of Topic Prefix objects.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        msgVpnName|x|
        topicPrefix|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixes
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse'
          description: The list of Topic Prefix objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Prefix objects.
      tags:
      - all
      - msgVpn
      - distributedCache
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes/{topicPrefix}
  : get:
      description: |-
        Get a Topic Prefix object.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        msgVpnName|x|
        topicPrefix|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: A topic prefix for global topics available from the remote Home
          Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
        in: path
        name: topicPrefix
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse'
          description: The Topic Prefix object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Prefix object.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances:
    get:
      description: |-
        Get a list of Cache Instance objects.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        counter.msgCount||x
        counter.msgPeakCount||x
        counter.requestQueueDepthCount||x
        counter.requestQueueDepthPeakCount||x
        counter.topicCount||x
        counter.topicPeakCount||x
        instanceName|x|
        msgVpnName|x|
        rate.averageDataRxBytePeakRate||x
        rate.averageDataRxByteRate||x
        rate.averageDataRxMsgPeakRate||x
        rate.averageDataRxMsgRate||x
        rate.averageDataTxMsgPeakRate||x
        rate.averageDataTxMsgRate||x
        rate.averageRequestRxPeakRate||x
        rate.averageRequestRxRate||x
        rate.dataRxBytePeakRate||x
        rate.dataRxByteRate||x
        rate.dataRxMsgPeakRate||x
        rate.dataRxMsgRate||x
        rate.dataTxMsgPeakRate||x
        rate.dataTxMsgRate||x
        rate.requestRxPeakRate||x
        rate.requestRxRate||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstances
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstancesResponse'
          description: The list of Cache Instance objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Cache Instance objects.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}:
    get:
      description: |-
        Get a Cache Instance object.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        counter.msgCount||x
        counter.msgPeakCount||x
        counter.requestQueueDepthCount||x
        counter.requestQueueDepthPeakCount||x
        counter.topicCount||x
        counter.topicPeakCount||x
        instanceName|x|
        msgVpnName|x|
        rate.averageDataRxBytePeakRate||x
        rate.averageDataRxByteRate||x
        rate.averageDataRxMsgPeakRate||x
        rate.averageDataRxMsgRate||x
        rate.averageDataTxMsgPeakRate||x
        rate.averageDataTxMsgRate||x
        rate.averageRequestRxPeakRate||x
        rate.averageRequestRxRate||x
        rate.dataRxBytePeakRate||x
        rate.dataRxByteRate||x
        rate.dataRxMsgPeakRate||x
        rate.dataRxMsgRate||x
        rate.dataTxMsgPeakRate||x
        rate.dataTxMsgRate||x
        rate.requestRxPeakRate||x
        rate.requestRxRate||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstance
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
          description: The Cache Instance object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Cache Instance object.
      tags:
      - all
      - msgVpn
      - distributedCache
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteGlobalCachingHomeClusters
  : get:
      description: |-
        Get a list of Remote Home Cache Cluster objects.

        A Remote Home Cache Cluster is a Home Cache Cluster that the Cache Instance is communicating with in the context of the Global Caching feature.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        instanceName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusters
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClustersResponse'
          description: The list of Remote Home Cache Cluster objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Remote Home Cache Cluster objects.
      tags:
      - all
      - msgVpn
      - distributedCache
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteGlobalCachingHomeClusters/{homeClusterName}
  : get:
      description: |-
        Get a Remote Home Cache Cluster object.

        A Remote Home Cache Cluster is a Home Cache Cluster that the Cache Instance is communicating with in the context of the Global Caching feature.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        homeClusterName|x|
        instanceName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterResponse'
          description: The Remote Home Cache Cluster object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Remote Home Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteTopics:
    get:
      description: |-
        Get a list of Remote Topic objects.

        A Remote Topic is a topic for which the Cache Instance has cached messages.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        instanceName|x|
        msgVpnName|x|
        topic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteTopics
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicsResponse'
          description: The list of Remote Topic objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Remote Topic objects.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}/remoteTopics/{topic}:
    get:
      description: |-
        Get a Remote Topic object.

        A Remote Topic is a topic for which the Cache Instance has cached messages.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        instanceName|x|
        msgVpnName|x|
        topic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstanceRemoteTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      - description: The value of the remote Topic.
        in: path
        name: topic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicResponse'
          description: The Remote Topic object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Remote Topic object.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics:
    get:
      description: |-
        Get a list of Topic objects.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        msgVpnName|x|
        topic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterTopics
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicsResponse'
          description: The list of Topic objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic objects.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics/{topic}:
    get:
      description: |-
        Get a Topic object.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        clusterName|x|
        msgVpnName|x|
        topic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The value of the Topic in the form a/b/c.
        in: path
        name: topic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicResponse'
          description: The Topic object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic object.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/dmrBridges:
    get:
      description: |-
        Get a list of DMR Bridge objects.

        A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDmrBridges
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgesResponse'
          description: The list of DMR Bridge objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of DMR Bridge objects.
      tags:
      - all
      - msgVpn
      - dmrBridge
  /msgVpns/{msgVpnName}/dmrBridges/{remoteNodeName}:
    get:
      description: |-
        Get a DMR Bridge object.

        A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        remoteNodeName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDmrBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the DMR Bridge.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
          description: The DMR Bridge object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a DMR Bridge object.
      tags:
      - all
      - msgVpn
      - dmrBridge
  /msgVpns/{msgVpnName}/jndiConnectionFactories:
    get:
      description: |-
        Get a list of JNDI Connection Factory objects.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        connectionFactoryName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiConnectionFactories
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoriesResponse'
          description: The list of JNDI Connection Factory objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of JNDI Connection Factory objects.
      tags:
      - all
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}:
    get:
      description: |-
        Get a JNDI Connection Factory object.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        connectionFactoryName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiConnectionFactory
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the JMS Connection Factory.
        in: path
        name: connectionFactoryName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
          description: The JNDI Connection Factory object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a JNDI Connection Factory object.
      tags:
      - all
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/jndiQueues:
    get:
      description: |-
        Get a list of JNDI Queue objects.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiQueues
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueuesResponse'
          description: The list of JNDI Queue objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of JNDI Queue objects.
      tags:
      - all
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/jndiQueues/{queueName}:
    get:
      description: |-
        Get a JNDI Queue object.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
          description: The JNDI Queue object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a JNDI Queue object.
      tags:
      - all
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/jndiTopics:
    get:
      description: |-
        Get a list of JNDI Topic objects.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiTopics
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicsResponse'
          description: The list of JNDI Topic objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of JNDI Topic objects.
      tags:
      - all
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/jndiTopics/{topicName}:
    get:
      description: |-
        Get a JNDI Topic object.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnJndiTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Topic.
        in: path
        name: topicName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
          description: The JNDI Topic object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a JNDI Topic object.
      tags:
      - all
      - msgVpn
      - jndi
  /msgVpns/{msgVpnName}/mqttRetainCaches:
    get:
      description: |-
        Get a list of MQTT Retain Cache objects.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttRetainCaches
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCachesResponse'
          description: The list of MQTT Retain Cache objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of MQTT Retain Cache objects.
      tags:
      - all
      - msgVpn
      - mqttRetainCache
  /msgVpns/{msgVpnName}/mqttRetainCaches/{cacheName}:
    get:
      description: |-
        Get an MQTT Retain Cache object.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        cacheName|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttRetainCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the MQTT Retain Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
          description: The MQTT Retain Cache object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an MQTT Retain Cache object.
      tags:
      - all
      - msgVpn
      - mqttRetainCache
  /msgVpns/{msgVpnName}/mqttSessions:
    get:
      description: |-
        Get a list of MQTT Session objects.

        An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        counter.mqttConnackErrorTxCount||x
        counter.mqttConnackTxCount||x
        counter.mqttConnectRxCount||x
        counter.mqttDisconnectRxCount||x
        counter.mqttPubcompTxCount||x
        counter.mqttPublishQos0RxCount||x
        counter.mqttPublishQos0TxCount||x
        counter.mqttPublishQos1RxCount||x
        counter.mqttPublishQos1TxCount||x
        counter.mqttPublishQos2RxCount||x
        counter.mqttPubrecTxCount||x
        counter.mqttPubrelRxCount||x
        mqttSessionClientId|x|
        mqttSessionVirtualRouter|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttSessions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionsResponse'
          description: The list of MQTT Session objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of MQTT Session objects.
      tags:
      - all
      - msgVpn
      - mqttSession
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}:
    get:
      description: |-
        Get an MQTT Session object.

        An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        counter.mqttConnackErrorTxCount||x
        counter.mqttConnackTxCount||x
        counter.mqttConnectRxCount||x
        counter.mqttDisconnectRxCount||x
        counter.mqttPubcompTxCount||x
        counter.mqttPublishQos0RxCount||x
        counter.mqttPublishQos0TxCount||x
        counter.mqttPublishQos1RxCount||x
        counter.mqttPublishQos1TxCount||x
        counter.mqttPublishQos2RxCount||x
        counter.mqttPubrecTxCount||x
        counter.mqttPubrelRxCount||x
        mqttSessionClientId|x|
        mqttSessionVirtualRouter|x|
        msgVpnName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttSession
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
          description: The MQTT Session object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an MQTT Session object.
      tags:
      - all
      - msgVpn
      - mqttSession
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions:
    get:
      description: |-
        Get a list of Subscription objects.

        An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        mqttSessionClientId|x|
        mqttSessionVirtualRouter|x|
        msgVpnName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttSessionSubscriptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionsResponse'
          description: The list of Subscription objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Subscription objects.
      tags:
      - all
      - msgVpn
      - mqttSession
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}:
    get:
      description: |-
        Get a Subscription object.

        An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        mqttSessionClientId|x|
        mqttSessionVirtualRouter|x|
        msgVpnName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttSessionSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: The MQTT subscription topic.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
          description: The Subscription object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Subscription object.
      tags:
      - all
      - msgVpn
      - mqttSession
  /msgVpns/{msgVpnName}/queueTemplates:
    get:
      description: |-
        Get a list of Queue Template objects.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueTemplateName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnQueueTemplates
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplatesResponse'
          description: The list of Queue Template objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Template objects.
      tags:
      - all
      - msgVpn
      - queueTemplate
  /msgVpns/{msgVpnName}/queueTemplates/{queueTemplateName}:
    get:
      description: |-
        Get a Queue Template object.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueTemplateName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnQueueTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue Template.
        in: path
        name: queueTemplateName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
          description: The Queue Template object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Template object.
      tags:
      - all
      - msgVpn
      - queueTemplate
  /msgVpns/{msgVpnName}/queues:
    get:
      description: |-
        Get a list of Queue objects.

        A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueues
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueuesResponse'
          description: The list of Queue objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue objects.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}:
    get:
      description: |-
        Get a Queue object.

        A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
          description: The Queue object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue object.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}/msgs:
    get:
      description: |-
        Get a list of Queue Message objects.

        A Queue Message is a packet of information sent from producers to consumers using the Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueMsgs
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueMsgsResponse'
          description: The list of Queue Message objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Message objects.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}/msgs/{msgId}:
    get:
      description: |-
        Get a Queue Message object.

        A Queue Message is a packet of information sent from producers to consumers using the Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueMsg
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Message.
        in: path
        name: msgId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueMsgResponse'
          description: The Queue Message object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Message object.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}/priorities:
    get:
      description: |-
        Get a list of Queue Priority objects.

        Queues can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        priority|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueuePriorities
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueuePrioritiesResponse'
          description: The list of Queue Priority objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Priority objects.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}/priorities/{priority}:
    get:
      description: |-
        Get a Queue Priority object.

        Queues can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        priority|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueuePriority
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: The level of the Priority, from 9 (highest) to 0 (lowest).
        in: path
        name: priority
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueuePriorityResponse'
          description: The Queue Priority object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Priority object.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions:
    get:
      description: |-
        Get a list of Queue Subscription objects.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueSubscriptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionsResponse'
          description: The list of Queue Subscription objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Subscription objects.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}:
    get:
      description: |-
        Get a Queue Subscription object.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueName|x|
        subscriptionTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: The topic of the Subscription.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionResponse'
          description: The Queue Subscription object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Subscription object.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}/txFlows:
    get:
      description: |-
        Get a list of Queue Transmit Flow objects.

        Queue Transmit Flows are used by clients to consume Guaranteed messages from a Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        flowId|x|
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueTxFlows
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTxFlowsResponse'
          description: The list of Queue Transmit Flow objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Transmit Flow objects.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/queues/{queueName}/txFlows/{flowId}:
    get:
      description: |-
        Get a Queue Transmit Flow object.

        Queue Transmit Flows are used by clients to consume Guaranteed messages from a Queue.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        flowId|x|
        msgVpnName|x|
        queueName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnQueueTxFlow
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Flow.
        in: path
        name: flowId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTxFlowResponse'
          description: The Queue Transmit Flow object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Transmit Flow object.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/replayLogs:
    get:
      description: |-
        Get a list of Replay Log objects.

        When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        replayLogName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnReplayLogs
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogsResponse'
          description: The list of Replay Log objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Replay Log objects.
      tags:
      - all
      - msgVpn
      - replayLog
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}:
    get:
      description: |-
        Get a Replay Log object.

        When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        replayLogName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnReplayLog
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Replay Log.
        in: path
        name: replayLogName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
          description: The Replay Log object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Replay Log object.
      tags:
      - all
      - msgVpn
      - replayLog
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}/msgs:
    get:
      description: |-
        Get a list of Message objects.

        A Message is a packet of information sent from producers to consumers. Messages are the central units of information that clients exchange using the message broker and which are cached in the Replay Log.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        replayLogName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnReplayLogMsgs
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Replay Log.
        in: path
        name: replayLogName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogMsgsResponse'
          description: The list of Message objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Message objects.
      tags:
      - all
      - msgVpn
      - replayLog
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}/msgs/{msgId}:
    get:
      description: |-
        Get a Message object.

        A Message is a packet of information sent from producers to consumers. Messages are the central units of information that clients exchange using the message broker and which are cached in the Replay Log.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        replayLogName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnReplayLogMsg
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Replay Log.
        in: path
        name: replayLogName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the message.
        in: path
        name: msgId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogMsgResponse'
          description: The Message object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Message object.
      tags:
      - all
      - msgVpn
      - replayLog
  /msgVpns/{msgVpnName}/replicatedTopics:
    get:
      description: |-
        Get a list of Replicated Topic objects.

        To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        replicatedTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnReplicatedTopics
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicsResponse'
          description: The list of Replicated Topic objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Replicated Topic objects.
      tags:
      - all
      - msgVpn
      - replicatedTopic
  /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}:
    get:
      description: |-
        Get a Replicated Topic object.

        To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        replicatedTopic|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnReplicatedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        in: path
        name: replicatedTopic
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
          description: The Replicated Topic object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Replicated Topic object.
      tags:
      - all
      - msgVpn
      - replicatedTopic
  /msgVpns/{msgVpnName}/restDeliveryPoints:
    get:
      description: |-
        Get a list of REST Delivery Point objects.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPoints
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointsResponse'
          description: The list of REST Delivery Point objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of REST Delivery Point objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}:
    get:
      description: |-
        Get a REST Delivery Point object.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
          description: The REST Delivery Point object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a REST Delivery Point object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings:
    get:
      description: |-
        Get a list of Queue Binding objects.

        A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueBindingName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPointQueueBindings
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingsResponse'
          description: The list of Queue Binding objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Binding objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}:
    get:
      description: |-
        Get a Queue Binding object.

        A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        queueBindingName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of a queue in the Message VPN.
        in: path
        name: queueBindingName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
          description: The Queue Binding object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Binding object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers:
    get:
      description: |-
        Get a list of REST Consumer objects.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        counter.httpRequestConnectionCloseTxMsgCount||x
        counter.httpRequestOutstandingTxMsgCount||x
        counter.httpRequestTimedOutTxMsgCount||x
        counter.httpRequestTxByteCount||x
        counter.httpRequestTxMsgCount||x
        counter.httpResponseErrorRxMsgCount||x
        counter.httpResponseRxByteCount||x
        counter.httpResponseRxMsgCount||x
        counter.httpResponseSuccessRxMsgCount||x
        msgVpnName|x|
        restConsumerName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPointRestConsumers
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumersResponse'
          description: The list of REST Consumer objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of REST Consumer objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}:
    get:
      description: |-
        Get a REST Consumer object.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        counter.httpRequestConnectionCloseTxMsgCount||x
        counter.httpRequestOutstandingTxMsgCount||x
        counter.httpRequestTimedOutTxMsgCount||x
        counter.httpRequestTxByteCount||x
        counter.httpRequestTxMsgCount||x
        counter.httpResponseErrorRxMsgCount||x
        counter.httpResponseRxByteCount||x
        counter.httpResponseRxMsgCount||x
        counter.httpResponseSuccessRxMsgCount||x
        msgVpnName|x|
        restConsumerName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
          description: The REST Consumer object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a REST Consumer object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims:
    get:
      description: |-
        Get a list of Claim objects.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthJwtClaimName|x|
        restConsumerName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaims
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse'
          description: The list of Claim objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Claim objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims/{oauthJwtClaimName}
  : get:
      description: |-
        Get a Claim object.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        oauthJwtClaimName|x|
        restConsumerName|x|
        restDeliveryPointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: The name of the additional claim. Cannot be "exp", "iat", or
          "jti".
        in: path
        name: oauthJwtClaimName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse'
          description: The Claim object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Claim object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames:
    get:
      deprecated: true
      description: |-
        Get a list of Trusted Common Name objects.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|x
        restConsumerName|x|x
        restDeliveryPointName|x|x
        tlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse'
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}
  : get:
      deprecated: true
      description: |-
        Get a Trusted Common Name object.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|x
        restConsumerName|x|x
        restDeliveryPointName|x|x
        tlsTrustedCommonName|x|x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.17. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/topicEndpointTemplates:
    get:
      description: |-
        Get a list of Topic Endpoint Template objects.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicEndpointTemplateName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnTopicEndpointTemplates
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplatesResponse'
          description: The list of Topic Endpoint Template objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Endpoint Template objects.
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
  /msgVpns/{msgVpnName}/topicEndpointTemplates/{topicEndpointTemplateName}:
    get:
      description: |-
        Get a Topic Endpoint Template object.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicEndpointTemplateName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnTopicEndpointTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint Template.
        in: path
        name: topicEndpointTemplateName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
          description: The Topic Endpoint Template object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Endpoint Template object.
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
  /msgVpns/{msgVpnName}/topicEndpoints:
    get:
      description: |-
        Get a list of Topic Endpoint objects.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpoints
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointsResponse'
          description: The list of Topic Endpoint objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Endpoint objects.
      tags:
      - all
      - msgVpn
      - topicEndpoint
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}:
    get:
      description: |-
        Get a Topic Endpoint object.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
          description: The Topic Endpoint object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Endpoint object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/msgs:
    get:
      description: |-
        Get a list of Topic Endpoint Message objects.

        A Topic Endpoint Message is a packet of information sent from producers to consumers using the Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointMsgs
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointMsgsResponse'
          description: The list of Topic Endpoint Message objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Endpoint Message objects.
      tags:
      - all
      - msgVpn
      - topicEndpoint
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/msgs/{msgId}:
    get:
      description: |-
        Get a Topic Endpoint Message object.

        A Topic Endpoint Message is a packet of information sent from producers to consumers using the Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointMsg
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Message.
        in: path
        name: msgId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointMsgResponse'
          description: The Topic Endpoint Message object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Endpoint Message object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/priorities:
    get:
      description: |-
        Get a list of Topic Endpoint Priority objects.

        Topic Endpoints can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        priority|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointPriorities
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointPrioritiesResponse'
          description: The list of Topic Endpoint Priority objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Endpoint Priority objects.
      tags:
      - all
      - msgVpn
      - topicEndpoint
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/priorities/{priority}:
    get:
      description: |-
        Get a Topic Endpoint Priority object.

        Topic Endpoints can optionally support priority message delivery; all messages of a higher priority are delivered before any messages of a lower priority. A Priority object contains information about the number and size of the messages with a particular priority in the Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        priority|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointPriority
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: The level of the Priority, from 9 (highest) to 0 (lowest).
        in: path
        name: priority
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityResponse'
          description: The Topic Endpoint Priority object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Endpoint Priority object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/txFlows:
    get:
      description: |-
        Get a list of Topic Endpoint Transmit Flow objects.

        Topic Endpoint Transmit Flows are used by clients to consume Guaranteed messages from a Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        flowId|x|
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointTxFlows
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowsResponse'
          description: The list of Topic Endpoint Transmit Flow objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Endpoint Transmit Flow objects.
      tags:
      - all
      - msgVpn
      - topicEndpoint
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}/txFlows/{flowId}:
    get:
      description: |-
        Get a Topic Endpoint Transmit Flow object.

        Topic Endpoint Transmit Flows are used by clients to consume Guaranteed messages from a Topic Endpoint.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        flowId|x|
        msgVpnName|x|
        topicEndpointName|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTopicEndpointTxFlow
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Flow.
        in: path
        name: flowId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowResponse'
          description: The Topic Endpoint Transmit Flow object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Endpoint Transmit Flow object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
  /msgVpns/{msgVpnName}/transactions:
    get:
      description: |-
        Get a list of Replicated Local Transaction or XA Transaction objects.

        Transactions can be used to group a set of Guaranteed messages to be published or consumed or both as an atomic unit of work.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionsResponse'
          description: The list of Replicated Local Transaction or XA Transaction
            objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Replicated Local Transaction or XA Transaction objects.
      tags:
      - all
      - msgVpn
      - transaction
  /msgVpns/{msgVpnName}/transactions/{xid}:
    get:
      description: |-
        Get a Replicated Local Transaction or XA Transaction object.

        Transactions can be used to group a set of Guaranteed messages to be published or consumed or both as an atomic unit of work.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransaction
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Transaction.
        in: path
        name: xid
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionResponse'
          description: The Replicated Local Transaction or XA Transaction object's
            attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Replicated Local Transaction or XA Transaction object.
      tags:
      - all
      - msgVpn
      - transaction
  /msgVpns/{msgVpnName}/transactions/{xid}/consumerMsgs:
    get:
      description: |-
        Get a list of Transaction Consumer Message objects.

        A Transaction Consumer Message is a message that will be consumed as part of this Transaction once the Transaction is committed.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactionConsumerMsgs
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Transaction.
        in: path
        name: xid
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgsResponse'
          description: The list of Transaction Consumer Message objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Transaction Consumer Message objects.
      tags:
      - all
      - msgVpn
      - transaction
  /msgVpns/{msgVpnName}/transactions/{xid}/consumerMsgs/{msgId}:
    get:
      description: |-
        Get a Transaction Consumer Message object.

        A Transaction Consumer Message is a message that will be consumed as part of this Transaction once the Transaction is committed.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactionConsumerMsg
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Transaction.
        in: path
        name: xid
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Message.
        in: path
        name: msgId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgResponse'
          description: The Transaction Consumer Message object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Transaction Consumer Message object.
      tags:
      - all
      - msgVpn
      - transaction
  /msgVpns/{msgVpnName}/transactions/{xid}/publisherMsgs:
    get:
      description: |-
        Get a list of Transaction Publisher Message objects.

        A Transaction Publisher Message is a message that will be published as part of this Transaction once the Transaction is committed.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactionPublisherMsgs
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Transaction.
        in: path
        name: xid
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgsResponse'
          description: The list of Transaction Publisher Message objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Transaction Publisher Message objects.
      tags:
      - all
      - msgVpn
      - transaction
  /msgVpns/{msgVpnName}/transactions/{xid}/publisherMsgs/{msgId}:
    get:
      description: |-
        Get a Transaction Publisher Message object.

        A Transaction Publisher Message is a message that will be published as part of this Transaction once the Transaction is committed.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        msgId|x|
        msgVpnName|x|
        xid|x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.12.
      operationId: getMsgVpnTransactionPublisherMsg
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Transaction.
        in: path
        name: xid
        required: true
        schema:
          type: string
      - description: The identifier (ID) of the Message.
        in: path
        name: msgId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgResponse'
          description: The Transaction Publisher Message object's attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Transaction Publisher Message object.
      tags:
      - all
      - msgVpn
      - transaction
  /sessions:
    get:
      description: |-
        Get a list of Session objects.

        Administrative sessions for configuration and monitoring.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        sessionId|x|
        sessionUsername|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getSessions
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionsResponse'
          description: The list of Session objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Session objects.
      tags:
      - all
      - session
  /sessions/{sessionUsername},{sessionId}:
    get:
      description: |-
        Get a Session object.

        Administrative sessions for configuration and monitoring.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        sessionId|x|
        sessionUsername|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getSession
      parameters:
      - description: The username used for authorization.
        in: path
        name: sessionUsername
        required: true
        schema:
          type: string
      - description: The unique identifier for the session.
        in: path
        name: sessionId
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
          description: The Session object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Session object.
      tags:
      - all
      - session
  /standardDomainCertAuthorities:
    get:
      description: |-
        Get a list of Standard Domain Certificate Authority objects.

        Standard Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getStandardDomainCertAuthorities
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardDomainCertAuthoritiesResponse'
          description: The list of Standard Domain Certificate Authority objects'
            attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Standard Domain Certificate Authority objects.
      tags:
      - all
      - standardDomainCertAuthority
  /standardDomainCertAuthorities/{certAuthorityName}:
    get:
      description: |-
        Get a Standard Domain Certificate Authority object.

        Standard Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        certAuthorityName|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getStandardDomainCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardDomainCertAuthorityResponse'
          description: The Standard Domain Certificate Authority object's attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Standard Domain Certificate Authority object.
      tags:
      - all
      - standardDomainCertAuthority
  /virtualHostnames:
    get:
      description: |-
        Get a list of Virtual Hostname objects.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        virtualHostname|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.17.
      operationId: getVirtualHostnames
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnamesResponse'
          description: The list of Virtual Hostname objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Virtual Hostname objects.
      tags:
      - all
      - virtualHostname
  /virtualHostnames/{virtualHostname}:
    get:
      description: |-
        Get a Virtual Hostname object.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Deprecated
        :---|:---:|:---:
        virtualHostname|x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.17.
      operationId: getVirtualHostname
      parameters:
      - description: The virtual hostname.
        in: path
        name: virtualHostname
        required: true
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
          description: The Virtual Hostname object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Virtual Hostname object.
      tags:
      - all
      - virtualHostname
components:
  parameters:
    countQuery:
      description: Limit the count of objects in the response. See the documentation
        for the `count` parameter.
      in: query
      name: count
      schema:
        default: 10
        minimum: 1
        type: integer
    cursorQuery:
      description: The cursor, or position, for the next page of objects. See the
        documentation for the `cursor` parameter.
      in: query
      name: cursor
      schema:
        type: string
    selectQuery:
      description: Include in the response only selected attributes of the object,
        or exclude from the response selected attributes of the object. See the documentation
        for the `select` parameter.
      explode: false
      in: query
      name: select
      schema:
        items:
          type: string
        type: array
      style: form
    whereQuery:
      description: Include in the response only objects where certain conditions are
        true. See the the documentation for the `where` parameter.
      explode: false
      in: query
      name: where
      schema:
        items:
          type: string
        type: array
      style: form
  schemas:
    About:
      type: object
    AboutApi:
      example:
        sempVersion: sempVersion
        platform: platform
      properties:
        platform:
          description: The platform running the SEMP API.
          type: string
        sempVersion:
          description: The version of the SEMP API.
          type: string
      type: object
    AboutApiCollections:
      type: object
    AboutApiLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this API Description object.
          type: string
      type: object
    AboutApiResponse:
      example:
        data:
          sempVersion: sempVersion
          platform: platform
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/AboutApi'
        links:
          $ref: '#/components/schemas/AboutApiLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    AboutCollections:
      type: object
    AboutLinks:
      example:
        apiUri: apiUri
        userUri: userUri
        uri: uri
      properties:
        apiUri:
          description: The URI of this About's API Description object. Available since
            2.11.
          type: string
        uri:
          description: The URI of this About object.
          type: string
        userUri:
          description: The URI of this About's User object. Available since 2.11.
          type: string
      type: object
    AboutResponse:
      example:
        data: '{}'
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          apiUri: apiUri
          userUri: userUri
          uri: uri
      properties:
        collections:
          type: object
        data:
          type: object
        links:
          $ref: '#/components/schemas/AboutLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    AboutUser:
      example:
        sessionCurrentTime: 1
        sessionIdleExpiryTime: 5
        sessionHardExpiryTime: 5
        sessionCreateTime: 6
        sessionId: sessionId
        globalAccessLevel: admin
        username: username
      properties:
        globalAccessLevel:
          description: |
            The global access level of the User. The allowed values and their meaning are:

            <pre>
            "admin" - Full administrative access.
            "none" - No access.
            "read-only" - Read only access.
            "read-write" - Read and write access.
            </pre>
          enum:
          - admin
          - none
          - read-only
          - read-write
          type: string
        sessionCreateTime:
          description: The timestamp of when the session was created. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available
            since 2.21.
          format: int32
          type: integer
        sessionCurrentTime:
          description: The current server timestamp. This is provided as a reference
            point for the other timestamps provided. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
          type: integer
        sessionHardExpiryTime:
          description: The hard expiry time for the session. After this time the session
            will be invalid, regardless of activity. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
          type: integer
        sessionId:
          description: An identifier for the session to differentiate this session
            from other sessions for the same user. This value is not guaranteed to
            be unique between active sessions for different users. Available since
            2.21.
          type: string
        sessionIdleExpiryTime:
          description: The session idle expiry time. After this time the session will
            be invalid if there has been no activity. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
          type: integer
        username:
          description: The username of the User. Available since 2.17.
          type: string
      type: object
    AboutUserCollections:
      example:
        msgVpns:
          count: 0
      properties:
        msgVpns:
          $ref: '#/components/schemas/AboutUserCollectionsMsgvpns'
      type: object
    AboutUserCollectionsMsgvpns:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the msgVpns collection.
          format: int64
          type: integer
      type: object
    AboutUserLinks:
      example:
        msgVpnsUri: msgVpnsUri
        uri: uri
      properties:
        msgVpnsUri:
          description: The URI of this User's collection of User Message VPN objects.
          type: string
        uri:
          description: The URI of this User object.
          type: string
      type: object
    AboutUserMsgVpn:
      example:
        accessLevel: none
        msgVpnName: msgVpnName
      properties:
        accessLevel:
          description: |
            The Message VPN access level of the User. The allowed values and their meaning are:

            <pre>
            "none" - No access.
            "read-only" - Read only access.
            "read-write" - Read and write access.
            </pre>
          enum:
          - none
          - read-only
          - read-write
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    AboutUserMsgVpnCollections:
      type: object
    AboutUserMsgVpnLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this User Message VPN object.
          type: string
      type: object
    AboutUserMsgVpnResponse:
      example:
        data:
          accessLevel: none
          msgVpnName: msgVpnName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/AboutUserMsgVpn'
        links:
          $ref: '#/components/schemas/AboutUserMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    AboutUserMsgVpnsResponse:
      example:
        data:
        - accessLevel: none
          msgVpnName: msgVpnName
        - accessLevel: none
          msgVpnName: msgVpnName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/AboutUserMsgVpnCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/AboutUserMsgVpn'
          type: array
        links:
          items:
            $ref: '#/components/schemas/AboutUserMsgVpnLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    AboutUserResponse:
      example:
        data:
          sessionCurrentTime: 1
          sessionIdleExpiryTime: 5
          sessionHardExpiryTime: 5
          sessionCreateTime: 6
          sessionId: sessionId
          globalAccessLevel: admin
          username: username
        collections:
          msgVpns:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          msgVpnsUri: msgVpnsUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/AboutUserCollections'
        data:
          $ref: '#/components/schemas/AboutUser'
        links:
          $ref: '#/components/schemas/AboutUserLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    Broker:
      example:
        averageRxByteRate: 3
        txMsgRate: 7
        txUncompressedByteRate: 4
        guaranteedMsgingDefragmentationLastCompletedOn: 5
        guaranteedMsgingEventMsgSpoolFileCountThreshold:
          clearPercent: 3
          setPercent: 6
        serviceSmfCompressionListenPort: 3
        txCompressedByteRate: 9
        serviceWebTransportWebUrlSuffix: serviceWebTransportWebUrlSuffix
        guaranteedMsgingDefragmentationStatus: guaranteedMsgingDefragmentationStatus
        guaranteedMsgingDefragmentationStatusActiveCompletionPercentage: 9
        guaranteedMsgingDefragmentationLastExitCondition: guaranteedMsgingDefragmentationLastExitCondition
        rxCompressedByteCount: 3
        averageRxUncompressedByteRate: 7
        tlsTicketLifetime: 4
        serviceSmfRoutingControlListenPort: 0
        authClientCertRevocationCheckMode: none
        serviceRestIncomingEnabled: true
        serviceSempSessionIdleTimeout: 3
        tlsCipherSuiteSecureShellList: tlsCipherSuiteSecureShellList
        serviceAmqpEnabled: true
        guaranteedMsgingEventDiskUsageThreshold:
          clearPercent: 3
          setPercent: 6
        serviceSempTlsEnabled: true
        averageRxCompressedByteRate: 2
        txUncompressedByteCount: 5
        serviceEventConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        rxByteRate: 6
        guaranteedMsgingOperationalStatus: guaranteedMsgingOperationalStatus
        guaranteedMsgingEventMsgCountThreshold:
          clearPercent: 3
          setPercent: 6
        serviceHealthCheckListenPort: 4
        serviceRestEventOutgoingConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceHealthCheckEnabled: true
        serviceMateLinkEnabled: true
        txByteRate: 9
        guaranteedMsgingDefragmentationEstimatedFragmentation: 1
        guaranteedMsgingMaxCacheUsage: 1
        serviceAmqpTlsListenPort: 0
        averageTxByteRate: 1
        serviceSempTlsListenPort: 5
        rxUncompressedByteCount: 7
        serviceSempSessionMaxLifetime: 7
        tlsCipherSuiteMsgBackboneList: tlsCipherSuiteMsgBackboneList
        guaranteedMsgingTransactionReplicationCompatibilityMode: legacy
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout: 6
        averageRxMsgRate: 4
        serviceRedundancyEnabled: true
        serviceMqttEnabled: true
        tlsBlockVersion11Enabled: true
        tlsCrimeExploitProtectionEnabled: true
        serviceSempPlainTextListenPort: 3
        txByteCount: 7
        guaranteedMsgingEnabled: true
        guaranteedMsgingEventMsgSpoolUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        guaranteedMsgingEventCacheUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        tlsCipherSuiteMsgBackboneSupportedList: tlsCipherSuiteMsgBackboneSupportedList
        serviceSempPlainTextEnabled: true
        guaranteedMsgingEventDeliveredUnackedThreshold:
          clearPercent: 3
          setPercent: 6
        guaranteedMsgingEventTransactedSessionResourceCountThreshold:
          clearPercent: 3
          setPercent: 6
        guaranteedMsgingDefragmentationEstimatedRecoverableSpace: 4
        serviceSmfEnabled: true
        guaranteedMsgingDefragmentationLastCompletionPercentage: 9
        tlsCipherSuiteManagementList: tlsCipherSuiteManagementList
        serviceMsgBackboneEnabled: true
        rxMsgRate: 0
        guaranteedMsgingEventTransactionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        tlsCipherSuiteSecureShellDefaultList: tlsCipherSuiteSecureShellDefaultList
        serviceSmfPlainTextListenPort: 4
        rxCompressedByteRate: 3
        serviceSmfTlsListenPort: 6
        serviceMateLinkListenPort: 8
        serviceSempLegacyTimeoutEnabled: true
        txCompressionRatio: txCompressionRatio
        txMsgCount: 0
        averageTxMsgRate: 1
        serviceWebTransportPlainTextListenPort: 4
        serviceWebTransportTlsListenPort: 1
        rxByteCount: 5
        serviceWebTransportEnabled: true
        tlsCipherSuiteSecureShellSupportedList: tlsCipherSuiteSecureShellSupportedList
        averageTxCompressedByteRate: 1
        guaranteedMsgingDefragmentationLastExitConditionInformation: guaranteedMsgingDefragmentationLastExitConditionInformation
        serviceRedundancyFirstListenPort: 7
        guaranteedMsgingEventEgressFlowCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        guaranteedMsgingEventEndpointCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceSmfEventConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        tlsCipherSuiteManagementDefaultList: tlsCipherSuiteManagementDefaultList
        serviceRestOutgoingEnabled: true
        tlsCipherSuiteMsgBackboneDefaultList: tlsCipherSuiteMsgBackboneDefaultList
        txCompressedByteCount: 0
        tlsVersionSupportedList: tlsVersionSupportedList
        cspfVersion: 7
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout: 6
        guaranteedMsgingEventIngressFlowCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        rxMsgCount: 7
        rxCompressionRatio: rxCompressionRatio
        guaranteedMsgingMaxMsgSpoolUsage: 2
        tlsCipherSuiteManagementSupportedList: tlsCipherSuiteManagementSupportedList
        averageTxUncompressedByteRate: 6
        serviceTlsEventConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        rxUncompressedByteRate: 6
        guaranteedMsgingEventTransactedSessionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        tlsStandardDomainCertificateAuthoritiesEnabled: true
      properties:
        authClientCertRevocationCheckMode:
          description: |
            The client certificate revocation checking mode used when a client authenticates with a client certificate. The allowed values and their meaning are:

            <pre>
            "none" - Do not perform any certificate revocation checking.
            "ocsp" - Use the Open Certificate Status Protcol (OCSP) for certificate revocation checking.
            "crl" - Use Certificate Revocation Lists (CRL) for certificate revocation checking.
            "ocsp-crl" - Use OCSP first, but if OCSP fails to return an unambiguous result, then check via CRL.
            </pre>
          enum:
          - none
          - ocsp
          - crl
          - ocsp-crl
          type: string
        averageRxByteRate:
          description: The one minute average of the message rate received by the
            Broker, in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        averageRxCompressedByteRate:
          description: The one minute average of the compressed message rate received
            by the Broker, in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        averageRxMsgRate:
          description: The one minute average of the message rate received by the
            Broker, in messages per second (msg/sec). Available since 2.14.
          format: int64
          type: integer
        averageRxUncompressedByteRate:
          description: The one minute average of the uncompressed message rate received
            by the Broker, in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        averageTxByteRate:
          description: The one minute average of the message rate transmitted by the
            Broker, in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        averageTxCompressedByteRate:
          description: The one minute average of the compressed message rate transmitted
            by the Broker, in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        averageTxMsgRate:
          description: The one minute average of the message rate transmitted by the
            Broker, in messages per second (msg/sec). Available since 2.14.
          format: int64
          type: integer
        averageTxUncompressedByteRate:
          description: The one minute average of the uncompressed message rate transmitted
            by the Broker, in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        cspfVersion:
          description: The current CSPF version. Available since 2.17.
          format: int32
          type: integer
        guaranteedMsgingDefragmentationEstimatedFragmentation:
          description: An approximation of the amount of disk space consumed, but
            not used, by the persisted data. Calculated as a percentage of total space.
            Available since 2.18.
          format: int64
          type: integer
        guaranteedMsgingDefragmentationEstimatedRecoverableSpace:
          description: An approximation of the amount of disk space recovered upon
            a successfully completed execution of a defragmentation operation. Expressed
            in MB. Available since 2.18.
          format: int32
          type: integer
        guaranteedMsgingDefragmentationLastCompletedOn:
          description: A timestamp reflecting when the last defragmentation completed.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.18.
          format: int32
          type: integer
        guaranteedMsgingDefragmentationLastCompletionPercentage:
          description: How much of the message spool was visited during the last defragmentation
            operation. This number reflects the percentage of the message spool visited
            in terms of disk space (as opposed to, for example, spool files). Available
            since 2.18.
          format: int64
          type: integer
        guaranteedMsgingDefragmentationLastExitCondition:
          description: |-
            Reflects how the last defragmentation operation completed. The allowed values and their meaning are:

            <pre>
            "success" - Defragmentation completed successfully.
            "unmovable-local-transaction" - Defragmentation stopped after encountering an unmovable local transaction.
            "unmovable-xa-transaction" - Defragmentation stopped after encountering an unmovable XA transaction.
            "incomplete" - Defragmentation stopped prematurely.
            "stopped-by-administrator" - Defragmentation stopped by administrator.
            </pre>
             Available since 2.18.
          type: string
        guaranteedMsgingDefragmentationLastExitConditionInformation:
          description: Optional additional information regarding the exit condition
            of the last defragmentation operation. Available since 2.18.
          type: string
        guaranteedMsgingDefragmentationStatus:
          description: |-
            Defragmentation status of guaranteed messaging. The allowed values and their meaning are:

            <pre>
            "idle" - Defragmentation is not currently running.
            "pending" - Degfragmentation is preparing to run.
            "active" - Defragmentation is in progress.
            </pre>
             Available since 2.18.
          type: string
        guaranteedMsgingDefragmentationStatusActiveCompletionPercentage:
          description: The estimated completion percentage of a defragmentation operation
            currently in progress. Only valid if the defragmentation status is "Active".
            Available since 2.18.
          format: int64
          type: integer
        guaranteedMsgingEnabled:
          description: Enable or disable Guaranteed Messaging. Available since 2.18.
          type: boolean
        guaranteedMsgingEventCacheUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventDeliveredUnackedThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventDiskUsageThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventEndpointCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventMsgCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventMsgSpoolFileCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventTransactedSessionResourceCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingMaxCacheUsage:
          description: Guaranteed messaging cache usage limit. Expressed as a maximum
            percentage of the NAB's egress queueing. resources that the guaranteed
            message cache is allowed to use. Available since 2.18.
          format: int32
          type: integer
        guaranteedMsgingMaxMsgSpoolUsage:
          description: 'The maximum total message spool usage allowed across all VPNs
            on this broker, in megabytes. Recommendation: the maximum value should
            be less than 90% of the disk space allocated for the guaranteed message
            spool. Available since 2.18.'
          format: int64
          type: integer
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout:
          description: The maximum time, in milliseconds, that can be tolerated for
            remote acknowledgement of synchronization messages before which the remote
            system will be considered out of sync. Available since 2.18.
          format: int64
          type: integer
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout:
          description: The maximum time, in milliseconds, that can be tolerated for
            remote disk writes before which the remote system will be considered out
            of sync. Available since 2.18.
          format: int64
          type: integer
        guaranteedMsgingOperationalStatus:
          description: |-
            Operational status of guaranteed messaging. The allowed values and their meaning are:

            <pre>
            "disabled" - The operational status of guaranteed messaging is Disabled.
            "not-ready" - The operational status of guaranteed messaging is NotReady.
            "standby" - The operational status of guaranteed messaging is Standby.
            "activating" - The operational status of guaranteed messaging is Activating.
            "active" - The operational status of guaranteed messaging is Active.
            </pre>
             Available since 2.18.
          type: string
        guaranteedMsgingTransactionReplicationCompatibilityMode:
          description: |-
            The replication compatibility mode for the router. The default value is `"legacy"`. The allowed values and their meaning are:"legacy" - All transactions originated by clients are replicated to the standby site without using transactions."transacted" - All transactions originated by clients are replicated to the standby site using transactions. The allowed values and their meaning are:

            <pre>
            "legacy" - All transactions originated by clients are replicated to the standby site without using transactions.
            "transacted" - All transactions originated by clients are replicated to the standby site using transactions.
            </pre>
             Available since 2.18.
          enum:
          - legacy
          - transacted
          type: string
        rxByteCount:
          description: The amount of messages received from clients by the Broker,
            in bytes (B). Available since 2.14.
          format: int64
          type: integer
        rxByteRate:
          description: The current message rate received by the Broker, in bytes per
            second (B/sec). Available since 2.14.
          format: int64
          type: integer
        rxCompressedByteCount:
          description: The amount of compressed messages received by the Broker, in
            bytes (B). Available since 2.14.
          format: int64
          type: integer
        rxCompressedByteRate:
          description: The current compressed message rate received by the Broker,
            in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        rxCompressionRatio:
          description: The compression ratio for messages received by the Broker.
            Available since 2.14.
          type: string
        rxMsgCount:
          description: The number of messages received from clients by the Broker.
            Available since 2.14.
          format: int64
          type: integer
        rxMsgRate:
          description: The current message rate received by the Broker, in messages
            per second (msg/sec). Available since 2.14.
          format: int64
          type: integer
        rxUncompressedByteCount:
          description: The amount of uncompressed messages received by the Broker,
            in bytes (B). Available since 2.14.
          format: int64
          type: integer
        rxUncompressedByteRate:
          description: The current uncompressed message rate received by the Broker,
            in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        serviceAmqpEnabled:
          description: Enable or disable the AMQP service. When disabled new AMQP
            Clients may not connect through the global or per-VPN AMQP listen-ports,
            and all currently connected AMQP Clients are immediately disconnected.
            Available since 2.17.
          type: boolean
        serviceAmqpTlsListenPort:
          description: TCP port number that AMQP clients can use to connect to the
            broker using raw TCP over TLS. Available since 2.17.
          format: int64
          type: integer
        serviceEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceHealthCheckEnabled:
          description: Enable or disable the health-check service. Available since
            2.17.
          type: boolean
        serviceHealthCheckListenPort:
          description: The port number for the health-check service. The port must
            be unique across the message backbone. The health-check service must be
            disabled to change the port. Available since 2.17.
          format: int64
          type: integer
        serviceMateLinkEnabled:
          description: Enable or disable the mate-link service. Available since 2.17.
          type: boolean
        serviceMateLinkListenPort:
          description: The port number for the mate-link service. The port must be
            unique across the message backbone. The mate-link service must be disabled
            to change the port. Available since 2.17.
          format: int64
          type: integer
        serviceMqttEnabled:
          description: Enable or disable the MQTT service. When disabled new MQTT
            Clients may not connect through the per-VPN MQTT listen-ports, and all
            currently connected MQTT Clients are immediately disconnected. Available
            since 2.17.
          type: boolean
        serviceMsgBackboneEnabled:
          description: Enable or disable the msg-backbone service. When disabled new
            Clients may not connect through global or per-VPN listen-ports, and all
            currently connected Clients are immediately disconnected. Available since
            2.17.
          type: boolean
        serviceRedundancyEnabled:
          description: Enable or disable the redundancy service. Available since 2.17.
          type: boolean
        serviceRedundancyFirstListenPort:
          description: The first listen-port used for the redundancy service. Redundancy
            uses this port and the subsequent 2 ports. These port must be unique across
            the message backbone. The redundancy service must be disabled to change
            this port. Available since 2.17.
          format: int64
          type: integer
        serviceRestEventOutgoingConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceRestIncomingEnabled:
          description: Enable or disable the REST service incoming connections on
            the router. Available since 2.17.
          type: boolean
        serviceRestOutgoingEnabled:
          description: Enable or disable the REST service outgoing connections on
            the router. Available since 2.17.
          type: boolean
        serviceSempLegacyTimeoutEnabled:
          description: Enable or disable extended SEMP timeouts for paged GETs. When
            a request times out, it returns the current page of content, even if the
            page is not full.  When enabled, the timeout is 60 seconds. When disabled,
            the timeout is 5 seconds.  The recommended setting is disabled (no legacy-timeout).  This
            parameter is intended as a temporary workaround to be used until SEMP
            clients can handle short pages.  This setting will be removed in a future
            release. Available since 2.18.
          type: boolean
        serviceSempPlainTextEnabled:
          description: Enable or disable plain-text SEMP service. Available since
            2.17.
          type: boolean
        serviceSempPlainTextListenPort:
          description: The TCP port for plain-text SEMP client connections. Available
            since 2.17.
          format: int64
          type: integer
        serviceSempSessionIdleTimeout:
          description: The session idle timeout, in minutes. Sessions will be invalidated
            if there is no activity in this period of time. Available since 2.21.
          format: int32
          type: integer
        serviceSempSessionMaxLifetime:
          description: The maximum lifetime of a session, in minutes. Sessions will
            be invalidated after this period of time, regardless of activity. Available
            since 2.21.
          format: int32
          type: integer
        serviceSempTlsEnabled:
          description: Enable or disable TLS SEMP service. Available since 2.17.
          type: boolean
        serviceSempTlsListenPort:
          description: The TCP port for TLS SEMP client connections. Available since
            2.17.
          format: int64
          type: integer
        serviceSmfCompressionListenPort:
          description: TCP port number that SMF clients can use to connect to the
            broker using raw compression TCP. Available since 2.17.
          format: int64
          type: integer
        serviceSmfEnabled:
          description: Enable or disable the SMF service. When disabled new SMF Clients
            may not connect through the global listen-ports, and all currently connected
            SMF Clients are immediately disconnected. Available since 2.17.
          type: boolean
        serviceSmfEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceSmfPlainTextListenPort:
          description: TCP port number that SMF clients can use to connect to the
            broker using raw TCP. Available since 2.17.
          format: int64
          type: integer
        serviceSmfRoutingControlListenPort:
          description: TCP port number that SMF clients can use to connect to the
            broker using raw routing control TCP. Available since 2.17.
          format: int64
          type: integer
        serviceSmfTlsListenPort:
          description: TCP port number that SMF clients can use to connect to the
            broker using raw TCP over TLS. Available since 2.17.
          format: int64
          type: integer
        serviceTlsEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceWebTransportEnabled:
          description: Enable or disable the web-transport service. When disabled
            new web-transport Clients may not connect through the global listen-ports,
            and all currently connected web-transport Clients are immediately disconnected.
            Available since 2.17.
          type: boolean
        serviceWebTransportPlainTextListenPort:
          description: The TCP port for plain-text WEB client connections. Available
            since 2.17.
          format: int64
          type: integer
        serviceWebTransportTlsListenPort:
          description: The TCP port for TLS WEB client connections. Available since
            2.17.
          format: int64
          type: integer
        serviceWebTransportWebUrlSuffix:
          description: Used to specify the Web URL suffix that will be used by Web
            clients when communicating with the broker. Available since 2.17.
          type: string
        tlsBlockVersion11Enabled:
          description: Indicates whether TLS version 1.1 connections are blocked.
            When blocked, all existing incoming and outgoing TLS 1.1 connections with
            Clients, SEMP users, and LDAP servers remain connected while new connections
            are blocked. Note that support for TLS 1.1 will eventually be discontinued,
            at which time TLS 1.1 connections will be blocked regardless of this setting.
          type: boolean
        tlsCipherSuiteManagementDefaultList:
          description: The colon-separated list of default cipher suites for TLS management
            connections.
          type: string
        tlsCipherSuiteManagementList:
          description: The colon-separated list of cipher suites used for TLS management
            connections (e.g. SEMP, LDAP). The value "default" implies all supported
            suites ordered from most secure to least secure.
          type: string
        tlsCipherSuiteManagementSupportedList:
          description: The colon-separated list of supported cipher suites for TLS
            management connections.
          type: string
        tlsCipherSuiteMsgBackboneDefaultList:
          description: The colon-separated list of default cipher suites for TLS data
            connections.
          type: string
        tlsCipherSuiteMsgBackboneList:
          description: The colon-separated list of cipher suites used for TLS data
            connections (e.g. client pub/sub). The value "default" implies all supported
            suites ordered from most secure to least secure.
          type: string
        tlsCipherSuiteMsgBackboneSupportedList:
          description: The colon-separated list of supported cipher suites for TLS
            data connections.
          type: string
        tlsCipherSuiteSecureShellDefaultList:
          description: The colon-separated list of default cipher suites for TLS secure
            shell connections.
          type: string
        tlsCipherSuiteSecureShellList:
          description: The colon-separated list of cipher suites used for TLS secure
            shell connections (e.g. SSH, SFTP, SCP). The value "default" implies all
            supported suites ordered from most secure to least secure.
          type: string
        tlsCipherSuiteSecureShellSupportedList:
          description: The colon-separated list of supported cipher suites for TLS
            secure shell connections.
          type: string
        tlsCrimeExploitProtectionEnabled:
          description: Indicates whether protection against the CRIME exploit is enabled.
            When enabled, TLS+compressed messaging performance is degraded. This protection
            should only be disabled if sufficient ACL and authentication features
            are being employed such that a potential attacker does not have sufficient
            access to trigger the exploit.
          type: boolean
        tlsStandardDomainCertificateAuthoritiesEnabled:
          description: Enable or disable the standard domain certificate authority
            list. Available since 2.19.
          type: boolean
        tlsTicketLifetime:
          description: The TLS ticket lifetime in seconds. When a client connects
            with TLS, a session with a session ticket is created using the TLS ticket
            lifetime which determines how long the client has to resume the session.
          format: int32
          type: integer
        tlsVersionSupportedList:
          description: The comma-separated list of supported TLS versions.
          type: string
        txByteCount:
          description: The amount of messages transmitted to clients by the Broker,
            in bytes (B). Available since 2.14.
          format: int64
          type: integer
        txByteRate:
          description: The current message rate transmitted by the Broker, in bytes
            per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        txCompressedByteCount:
          description: The amount of compressed messages transmitted by the Broker,
            in bytes (B). Available since 2.14.
          format: int64
          type: integer
        txCompressedByteRate:
          description: The current compressed message rate transmitted by the Broker,
            in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
        txCompressionRatio:
          description: The compression ratio for messages transmitted by the Broker.
            Available since 2.14.
          type: string
        txMsgCount:
          description: The number of messages transmitted to clients by the Broker.
            Available since 2.14.
          format: int64
          type: integer
        txMsgRate:
          description: The current message rate transmitted by the Broker, in messages
            per second (msg/sec). Available since 2.14.
          format: int64
          type: integer
        txUncompressedByteCount:
          description: The amount of uncompressed messages transmitted by the Broker,
            in bytes (B). Available since 2.14.
          format: int64
          type: integer
        txUncompressedByteRate:
          description: The current uncompressed message rate transmitted by the Broker,
            in bytes per second (B/sec). Available since 2.14.
          format: int64
          type: integer
      type: object
    BrokerCollections:
      example:
        sessions:
          count: 2
        clientCertAuthorities:
          count: 6
        certAuthorities:
          count: 0
        dmrClusters:
          count: 1
        msgVpns:
          count: 5
        virtualHostnames:
          count: 9
        domainCertAuthorities:
          count: 5
        standardDomainCertAuthorities:
          count: 7
      properties:
        certAuthorities:
          $ref: '#/components/schemas/BrokerCollectionsCertauthorities'
        clientCertAuthorities:
          $ref: '#/components/schemas/BrokerCollectionsClientcertauthorities'
        dmrClusters:
          $ref: '#/components/schemas/BrokerCollectionsDmrclusters'
        domainCertAuthorities:
          $ref: '#/components/schemas/BrokerCollectionsDomaincertauthorities'
        msgVpns:
          $ref: '#/components/schemas/BrokerCollectionsMsgvpns'
        sessions:
          $ref: '#/components/schemas/BrokerCollectionsSessions'
        standardDomainCertAuthorities:
          $ref: '#/components/schemas/BrokerCollectionsStandarddomaincertauthorities'
        virtualHostnames:
          $ref: '#/components/schemas/BrokerCollectionsVirtualhostnames'
      type: object
    BrokerCollectionsCertauthorities:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the certAuthorities collection.
            Deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
          format: int64
          type: integer
      type: object
    BrokerCollectionsClientcertauthorities:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the clientCertAuthorities collection.
            Available since 2.19.
          format: int64
          type: integer
      type: object
    BrokerCollectionsDmrclusters:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the dmrClusters collection.
            Available since 2.11.
          format: int64
          type: integer
      type: object
    BrokerCollectionsDomaincertauthorities:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the domainCertAuthorities collection.
            Available since 2.19.
          format: int64
          type: integer
      type: object
    BrokerCollectionsMsgvpns:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the msgVpns collection. Available
            since 2.11.
          format: int64
          type: integer
      type: object
    BrokerCollectionsSessions:
      example:
        count: 2
      properties:
        count:
          description: The total number of objects in the sessions collection. Available
            since 2.21.
          format: int64
          type: integer
      type: object
    BrokerCollectionsStandarddomaincertauthorities:
      example:
        count: 7
      properties:
        count:
          description: The total number of objects in the standardDomainCertAuthorities
            collection. Available since 2.19.
          format: int64
          type: integer
      type: object
    BrokerCollectionsVirtualhostnames:
      example:
        count: 9
      properties:
        count:
          description: The total number of objects in the virtualHostnames collection.
            Available since 2.17.
          format: int64
          type: integer
      type: object
    BrokerLinks:
      example:
        virtualHostnamesUri: virtualHostnamesUri
        standardDomainCertAuthoritiesUri: standardDomainCertAuthoritiesUri
        certAuthoritiesUri: certAuthoritiesUri
        sessionsUri: sessionsUri
        aboutUri: aboutUri
        msgVpnsUri: msgVpnsUri
        domainCertAuthoritiesUri: domainCertAuthoritiesUri
        clientCertAuthoritiesUri: clientCertAuthoritiesUri
        uri: uri
        dmrClustersUri: dmrClustersUri
      properties:
        aboutUri:
          description: The URI of this Broker's About object.
          type: string
        certAuthoritiesUri:
          description: The URI of this Broker's collection of Certificate Authority
            objects. Deprecated since 2.19. Replaced by clientCertAuthorities and
            domainCertAuthorities.
          type: string
        clientCertAuthoritiesUri:
          description: The URI of this Broker's collection of Client Certificate Authority
            objects. Available since 2.19.
          type: string
        dmrClustersUri:
          description: The URI of this Broker's collection of Cluster objects. Available
            since 2.11.
          type: string
        domainCertAuthoritiesUri:
          description: The URI of this Broker's collection of Domain Certificate Authority
            objects. Available since 2.19.
          type: string
        msgVpnsUri:
          description: The URI of this Broker's collection of Message VPN objects.
            Available since 2.11.
          type: string
        sessionsUri:
          description: The URI of this Broker's collection of Session objects. Available
            since 2.21.
          type: string
        standardDomainCertAuthoritiesUri:
          description: The URI of this Broker's collection of Standard Domain Certificate
            Authority objects. Available since 2.19.
          type: string
        uri:
          description: The URI of this Broker object.
          type: string
        virtualHostnamesUri:
          description: The URI of this Broker's collection of Virtual Hostname objects.
            Available since 2.17.
          type: string
      type: object
    BrokerResponse:
      example:
        data:
          averageRxByteRate: 3
          txMsgRate: 7
          txUncompressedByteRate: 4
          guaranteedMsgingDefragmentationLastCompletedOn: 5
          guaranteedMsgingEventMsgSpoolFileCountThreshold:
            clearPercent: 3
            setPercent: 6
          serviceSmfCompressionListenPort: 3
          txCompressedByteRate: 9
          serviceWebTransportWebUrlSuffix: serviceWebTransportWebUrlSuffix
          guaranteedMsgingDefragmentationStatus: guaranteedMsgingDefragmentationStatus
          guaranteedMsgingDefragmentationStatusActiveCompletionPercentage: 9
          guaranteedMsgingDefragmentationLastExitCondition: guaranteedMsgingDefragmentationLastExitCondition
          rxCompressedByteCount: 3
          averageRxUncompressedByteRate: 7
          tlsTicketLifetime: 4
          serviceSmfRoutingControlListenPort: 0
          authClientCertRevocationCheckMode: none
          serviceRestIncomingEnabled: true
          serviceSempSessionIdleTimeout: 3
          tlsCipherSuiteSecureShellList: tlsCipherSuiteSecureShellList
          serviceAmqpEnabled: true
          guaranteedMsgingEventDiskUsageThreshold:
            clearPercent: 3
            setPercent: 6
          serviceSempTlsEnabled: true
          averageRxCompressedByteRate: 2
          txUncompressedByteCount: 5
          serviceEventConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          rxByteRate: 6
          guaranteedMsgingOperationalStatus: guaranteedMsgingOperationalStatus
          guaranteedMsgingEventMsgCountThreshold:
            clearPercent: 3
            setPercent: 6
          serviceHealthCheckListenPort: 4
          serviceRestEventOutgoingConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceHealthCheckEnabled: true
          serviceMateLinkEnabled: true
          txByteRate: 9
          guaranteedMsgingDefragmentationEstimatedFragmentation: 1
          guaranteedMsgingMaxCacheUsage: 1
          serviceAmqpTlsListenPort: 0
          averageTxByteRate: 1
          serviceSempTlsListenPort: 5
          rxUncompressedByteCount: 7
          serviceSempSessionMaxLifetime: 7
          tlsCipherSuiteMsgBackboneList: tlsCipherSuiteMsgBackboneList
          guaranteedMsgingTransactionReplicationCompatibilityMode: legacy
          guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout: 6
          averageRxMsgRate: 4
          serviceRedundancyEnabled: true
          serviceMqttEnabled: true
          tlsBlockVersion11Enabled: true
          tlsCrimeExploitProtectionEnabled: true
          serviceSempPlainTextListenPort: 3
          txByteCount: 7
          guaranteedMsgingEnabled: true
          guaranteedMsgingEventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          guaranteedMsgingEventCacheUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsCipherSuiteMsgBackboneSupportedList: tlsCipherSuiteMsgBackboneSupportedList
          serviceSempPlainTextEnabled: true
          guaranteedMsgingEventDeliveredUnackedThreshold:
            clearPercent: 3
            setPercent: 6
          guaranteedMsgingEventTransactedSessionResourceCountThreshold:
            clearPercent: 3
            setPercent: 6
          guaranteedMsgingDefragmentationEstimatedRecoverableSpace: 4
          serviceSmfEnabled: true
          guaranteedMsgingDefragmentationLastCompletionPercentage: 9
          tlsCipherSuiteManagementList: tlsCipherSuiteManagementList
          serviceMsgBackboneEnabled: true
          rxMsgRate: 0
          guaranteedMsgingEventTransactionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsCipherSuiteSecureShellDefaultList: tlsCipherSuiteSecureShellDefaultList
          serviceSmfPlainTextListenPort: 4
          rxCompressedByteRate: 3
          serviceSmfTlsListenPort: 6
          serviceMateLinkListenPort: 8
          serviceSempLegacyTimeoutEnabled: true
          txCompressionRatio: txCompressionRatio
          txMsgCount: 0
          averageTxMsgRate: 1
          serviceWebTransportPlainTextListenPort: 4
          serviceWebTransportTlsListenPort: 1
          rxByteCount: 5
          serviceWebTransportEnabled: true
          tlsCipherSuiteSecureShellSupportedList: tlsCipherSuiteSecureShellSupportedList
          averageTxCompressedByteRate: 1
          guaranteedMsgingDefragmentationLastExitConditionInformation: guaranteedMsgingDefragmentationLastExitConditionInformation
          serviceRedundancyFirstListenPort: 7
          guaranteedMsgingEventEgressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          guaranteedMsgingEventEndpointCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfEventConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsCipherSuiteManagementDefaultList: tlsCipherSuiteManagementDefaultList
          serviceRestOutgoingEnabled: true
          tlsCipherSuiteMsgBackboneDefaultList: tlsCipherSuiteMsgBackboneDefaultList
          txCompressedByteCount: 0
          tlsVersionSupportedList: tlsVersionSupportedList
          cspfVersion: 7
          guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout: 6
          guaranteedMsgingEventIngressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          rxMsgCount: 7
          rxCompressionRatio: rxCompressionRatio
          guaranteedMsgingMaxMsgSpoolUsage: 2
          tlsCipherSuiteManagementSupportedList: tlsCipherSuiteManagementSupportedList
          averageTxUncompressedByteRate: 6
          serviceTlsEventConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          rxUncompressedByteRate: 6
          guaranteedMsgingEventTransactedSessionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsStandardDomainCertificateAuthoritiesEnabled: true
        collections:
          sessions:
            count: 2
          clientCertAuthorities:
            count: 6
          certAuthorities:
            count: 0
          dmrClusters:
            count: 1
          msgVpns:
            count: 5
          virtualHostnames:
            count: 9
          domainCertAuthorities:
            count: 5
          standardDomainCertAuthorities:
            count: 7
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          virtualHostnamesUri: virtualHostnamesUri
          standardDomainCertAuthoritiesUri: standardDomainCertAuthoritiesUri
          certAuthoritiesUri: certAuthoritiesUri
          sessionsUri: sessionsUri
          aboutUri: aboutUri
          msgVpnsUri: msgVpnsUri
          domainCertAuthoritiesUri: domainCertAuthoritiesUri
          clientCertAuthoritiesUri: clientCertAuthoritiesUri
          uri: uri
          dmrClustersUri: dmrClustersUri
      properties:
        collections:
          $ref: '#/components/schemas/BrokerCollections'
        data:
          $ref: '#/components/schemas/Broker'
        links:
          $ref: '#/components/schemas/BrokerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    CertAuthoritiesResponse:
      example:
        data:
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        collections:
        - ocspTlsTrustedCommonNames:
            count: 0
        - ocspTlsTrustedCommonNames:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/CertAuthorityCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/CertAuthority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/CertAuthorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    CertAuthority:
      example:
        crlTimeList: crlTimeList
        ocspOverrideUrl: ocspOverrideUrl
        crlLastFailureTime: 1
        revocationCheckEnabled: true
        ocspLastFailureReason: ocspLastFailureReason
        crlDayList: crlDayList
        crlLastFailureReason: crlLastFailureReason
        crlNextDownloadTime: 5
        ocspLastFailureTime: 5
        certContent: certContent
        ocspTimeout: 2
        crlUp: true
        ocspLastFailureUrl: ocspLastFailureUrl
        certAuthorityName: certAuthorityName
        crlLastDownloadTime: 6
        ocspNonResponderCertEnabled: true
        crlUrl: crlUrl
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority. Deprecated since 2.19.
            Replaced by clientCertAuthorities and domainCertAuthorities.
          type: string
        certContent:
          description: The PEM formatted content for the trusted root certificate
            of a Certificate Authority. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
          type: string
        crlDayList:
          description: The scheduled CRL refresh day(s), specified as "daily" or a
            comma-separated list of days. Days must be specified as "Sun", "Mon",
            "Tue", "Wed", "Thu", "Fri", or "Sat", with no spaces, and in sorted order
            from Sunday to Saturday. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
          type: string
        crlLastDownloadTime:
          description: The timestamp of the last successful CRL download. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
            Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          format: int32
          type: integer
        crlLastFailureReason:
          description: The reason for the last CRL failure. Deprecated since 2.19.
            certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          type: string
        crlLastFailureTime:
          description: The timestamp of the last CRL failure. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated
            since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          format: int32
          type: integer
        crlNextDownloadTime:
          description: The scheduled time of the next CRL download. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated
            since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          format: int32
          type: integer
        crlTimeList:
          description: The scheduled CRL refresh time(s), specified as "hourly" or
            a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There
            must be no spaces, and times must be in sorted order from 0:00 to 23:59.
            Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          type: string
        crlUp:
          description: Indicates whether CRL revocation checking is operationally
            up. Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          type: boolean
        crlUrl:
          description: The URL for the CRL source. This is a required attribute for
            CRL to be operational and the URL must be complete with http:// included.
            Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          type: string
        ocspLastFailureReason:
          description: The reason for the last OCSP failure. Deprecated since 2.19.
            certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          type: string
        ocspLastFailureTime:
          description: The timestamp of the last OCSP failure. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Deprecated
            since 2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          format: int32
          type: integer
        ocspLastFailureUrl:
          description: The URL involved in the last OCSP failure. Deprecated since
            2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          type: string
        ocspNonResponderCertEnabled:
          description: Indicates whether a non-responder certificate is allowed to
            sign an OCSP response. Typically used with an OCSP override URL in cases
            where a single certificate is used to sign client certificates and OCSP
            responses. Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          type: boolean
        ocspOverrideUrl:
          description: The OCSP responder URL to use for overriding the one supplied
            in the client certificate. The URL must be complete with http:// included.
            Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          type: string
        ocspTimeout:
          description: The timeout in seconds to receive a response from the OCSP
            responder after sending a request or making the initial connection attempt.
            Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          format: int64
          type: integer
        revocationCheckEnabled:
          description: Indicates whether Certificate Authority revocation checking
            is enabled. Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities
            and domainCertAuthorities.
          type: boolean
      type: object
    CertAuthorityCollections:
      example:
        ocspTlsTrustedCommonNames:
          count: 0
      properties:
        ocspTlsTrustedCommonNames:
          $ref: '#/components/schemas/CertAuthorityCollectionsOcsptlstrustedcommonnames'
      type: object
    CertAuthorityCollectionsOcsptlstrustedcommonnames:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the ocspTlsTrustedCommonNames
            collection. Deprecated since 2.19. Replaced by clientCertAuthorities.
          format: int64
          type: integer
      type: object
    CertAuthorityLinks:
      example:
        ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
        uri: uri
      properties:
        ocspTlsTrustedCommonNamesUri:
          description: The URI of this Certificate Authority's collection of OCSP
            Responder Trusted Common Name objects. Deprecated since 2.19. Replaced
            by clientCertAuthorities.
          type: string
        uri:
          description: The URI of this Certificate Authority object.
          type: string
      type: object
    CertAuthorityOcspTlsTrustedCommonName:
      example:
        certAuthorityName: certAuthorityName
        ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority. Deprecated since 2.19.
            Replaced by clientCertAuthorities.
          type: string
        ocspTlsTrustedCommonName:
          description: The expected Trusted Common Name of the OCSP responder remote
            certificate. Deprecated since 2.19. Replaced by clientCertAuthorities.
          type: string
      type: object
    CertAuthorityOcspTlsTrustedCommonNameCollections:
      type: object
    CertAuthorityOcspTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this OCSP Responder Trusted Common Name object.
          type: string
      type: object
    CertAuthorityOcspTlsTrustedCommonNameResponse:
      example:
        data:
          certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    CertAuthorityOcspTlsTrustedCommonNamesResponse:
      example:
        data:
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    CertAuthorityResponse:
      example:
        data:
          crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        collections:
          ocspTlsTrustedCommonNames:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/CertAuthorityCollections'
        data:
          $ref: '#/components/schemas/CertAuthority'
        links:
          $ref: '#/components/schemas/CertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    ClientCertAuthoritiesResponse:
      example:
        data:
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        collections:
        - ocspTlsTrustedCommonNames:
            count: 0
        - ocspTlsTrustedCommonNames:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/ClientCertAuthorityCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/ClientCertAuthority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/ClientCertAuthorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    ClientCertAuthority:
      example:
        crlTimeList: crlTimeList
        ocspOverrideUrl: ocspOverrideUrl
        crlLastFailureTime: 1
        revocationCheckEnabled: true
        ocspLastFailureReason: ocspLastFailureReason
        crlDayList: crlDayList
        crlLastFailureReason: crlLastFailureReason
        crlNextDownloadTime: 5
        ocspLastFailureTime: 5
        certContent: certContent
        ocspTimeout: 2
        crlUp: true
        ocspLastFailureUrl: ocspLastFailureUrl
        certAuthorityName: certAuthorityName
        crlLastDownloadTime: 6
        ocspNonResponderCertEnabled: true
        crlUrl: crlUrl
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority.
          type: string
        certContent:
          description: The PEM formatted content for the trusted root certificate
            of a client Certificate Authority.
          type: string
        crlDayList:
          description: The scheduled CRL refresh day(s), specified as "daily" or a
            comma-separated list of days. Days must be specified as "Sun", "Mon",
            "Tue", "Wed", "Thu", "Fri", or "Sat", with no spaces, and in sorted order
            from Sunday to Saturday.
          type: string
        crlLastDownloadTime:
          description: The timestamp of the last successful CRL download. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        crlLastFailureReason:
          description: The reason for the last CRL failure.
          type: string
        crlLastFailureTime:
          description: The timestamp of the last CRL failure. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        crlNextDownloadTime:
          description: The scheduled time of the next CRL download. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        crlTimeList:
          description: The scheduled CRL refresh time(s), specified as "hourly" or
            a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There
            must be no spaces, and times must be in sorted order from 0:00 to 23:59.
          type: string
        crlUp:
          description: Indicates whether CRL revocation checking is operationally
            up.
          type: boolean
        crlUrl:
          description: The URL for the CRL source. This is a required attribute for
            CRL to be operational and the URL must be complete with http:// included.
          type: string
        ocspLastFailureReason:
          description: The reason for the last OCSP failure.
          type: string
        ocspLastFailureTime:
          description: The timestamp of the last OCSP failure. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        ocspLastFailureUrl:
          description: The URL involved in the last OCSP failure.
          type: string
        ocspNonResponderCertEnabled:
          description: Indicates whether a non-responder certificate is allowed to
            sign an OCSP response. Typically used with an OCSP override URL in cases
            where a single certificate is used to sign client certificates and OCSP
            responses.
          type: boolean
        ocspOverrideUrl:
          description: The OCSP responder URL to use for overriding the one supplied
            in the client certificate. The URL must be complete with http:// included.
          type: string
        ocspTimeout:
          description: The timeout in seconds to receive a response from the OCSP
            responder after sending a request or making the initial connection attempt.
          format: int64
          type: integer
        revocationCheckEnabled:
          description: Indicates whether Certificate Authority revocation checking
            is enabled.
          type: boolean
      type: object
    ClientCertAuthorityCollections:
      example:
        ocspTlsTrustedCommonNames:
          count: 0
      properties:
        ocspTlsTrustedCommonNames:
          $ref: '#/components/schemas/ClientCertAuthorityCollectionsOcsptlstrustedcommonnames'
      type: object
    ClientCertAuthorityCollectionsOcsptlstrustedcommonnames:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the ocspTlsTrustedCommonNames
            collection.
          format: int64
          type: integer
      type: object
    ClientCertAuthorityLinks:
      example:
        ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
        uri: uri
      properties:
        ocspTlsTrustedCommonNamesUri:
          description: The URI of this Client Certificate Authority's collection of
            OCSP Responder Trusted Common Name objects.
          type: string
        uri:
          description: The URI of this Client Certificate Authority object.
          type: string
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonName:
      example:
        certAuthorityName: certAuthorityName
        ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority.
          type: string
        ocspTlsTrustedCommonName:
          description: The expected Trusted Common Name of the OCSP responder remote
            certificate.
          type: string
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonNameCollections:
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this OCSP Responder Trusted Common Name object.
          type: string
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonNameResponse:
      example:
        data:
          certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonNamesResponse:
      example:
        data:
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    ClientCertAuthorityResponse:
      example:
        data:
          crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          crlLastFailureTime: 1
          revocationCheckEnabled: true
          ocspLastFailureReason: ocspLastFailureReason
          crlDayList: crlDayList
          crlLastFailureReason: crlLastFailureReason
          crlNextDownloadTime: 5
          ocspLastFailureTime: 5
          certContent: certContent
          ocspTimeout: 2
          crlUp: true
          ocspLastFailureUrl: ocspLastFailureUrl
          certAuthorityName: certAuthorityName
          crlLastDownloadTime: 6
          ocspNonResponderCertEnabled: true
          crlUrl: crlUrl
        collections:
          ocspTlsTrustedCommonNames:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/ClientCertAuthorityCollections'
        data:
          $ref: '#/components/schemas/ClientCertAuthority'
        links:
          $ref: '#/components/schemas/ClientCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrCluster:
      example:
        nodeName: nodeName
        directOnlyEnabled: true
        enabled: true
        tlsServerCertValidateNameEnabled: true
        uptime: 5
        tlsServerCertMaxChainDepth: 5
        failureReason: failureReason
        authenticationClientCertEnabled: true
        dmrClusterName: dmrClusterName
        tlsServerCertValidateDateEnabled: true
        authenticationBasicEnabled: true
        subscriptionDbBuildPercentage: 1
        up: true
        authenticationBasicType: internal
        tlsServerCertEnforceTrustedCommonNameEnabled: true
      properties:
        authenticationBasicEnabled:
          description: Indicates whether basic authentication is enabled for Cluster
            Links.
          type: boolean
        authenticationBasicType:
          description: |
            The type of basic authentication to use for Cluster Links. The allowed values and their meaning are:

            <pre>
            "internal" - Use locally configured password.
            "none" - No authentication.
            </pre>
          enum:
          - internal
          - none
          type: string
        authenticationClientCertEnabled:
          description: Indicates whether client certificate authentication is enabled
            for Cluster Links.
          type: boolean
        directOnlyEnabled:
          description: Indicates whether this cluster only supports direct messaging.
            If true, guaranteed messages will not be transmitted through the cluster.
          type: boolean
        dmrClusterName:
          description: The name of the Cluster.
          type: string
        enabled:
          description: Indicates whether the Cluster is enabled.
          type: boolean
        failureReason:
          description: The failure reason for the Cluster being down.
          type: string
        nodeName:
          description: The name of this node in the Cluster. This is the name that
            this broker (or redundant group of brokers) is know by to other nodes
            in the Cluster. The name is chosen automatically to be either this broker's
            Router Name or Mate Router Name, depending on which Active Standby Role
            (primary or backup) this broker plays in its redundancy group.
          type: string
        subscriptionDbBuildPercentage:
          description: Cluster Subscription Database build completion percentage.
            Available since 2.20.
          format: int64
          type: integer
        tlsServerCertEnforceTrustedCommonNameEnabled:
          description: Indicates whether the common name provided by the remote broker
            is enforced against the list of trusted common names configured for the
            Link. If enabled, the certificate's common name must match one of the
            trusted common names for the Link to be accepted. Deprecated since 2.18.
            Common Name validation has been replaced by Server Certificate Name validation.
          type: boolean
        tlsServerCertMaxChainDepth:
          description: The maximum allowed depth of a certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
          format: int64
          type: integer
        tlsServerCertValidateDateEnabled:
          description: Indicates whether validation of the "Not Before" and "Not After"
            validity dates in the certificate is enabled. When disabled, the certificate
            is accepted even if the certificate is not valid based on these dates.
          type: boolean
        tlsServerCertValidateNameEnabled:
          description: Enable or disable the standard TLS authentication mechanism
            of verifying the name used to connect to the bridge. If enabled, the name
            used to connect to the bridge is checked against the names specified in
            the certificate returned by the remote router. Legacy Common Name validation
            is not performed if Server Certificate Name Validation is enabled, even
            if Common Name validation is also enabled. Available since 2.18.
          type: boolean
        up:
          description: Indicates whether the Cluster is operationally up.
          type: boolean
        uptime:
          description: The amount of time in seconds since the Cluster was up.
          format: int64
          type: integer
      type: object
    DmrClusterCollections:
      example:
        topologyIssues:
          count: 6
        links:
          count: 0
      properties:
        links:
          $ref: '#/components/schemas/DmrClusterCollectionsLinks'
        topologyIssues:
          $ref: '#/components/schemas/DmrClusterCollectionsTopologyissues'
      type: object
    DmrClusterCollectionsLinks:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the links collection.
          format: int64
          type: integer
      type: object
    DmrClusterCollectionsTopologyissues:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the topologyIssues collection.
          format: int64
          type: integer
      type: object
    DmrClusterLink:
      example:
        transportCompressedEnabled: true
        remoteNodeName: remoteNodeName
        clientProfileQueueDirect2MaxDepth: 9
        clientProfileQueueDirect1MaxDepth: 2
        clientProfileQueueDirect3MinMsgBurst: 4
        initiator: lexical
        queueMaxDeliveredUnackedMsgsPerFlow: 9
        clientProfileName: clientProfileName
        clientProfileQueueDirect3MaxDepth: 2
        queueMaxRedeliveryCount: 6
        transportTlsEnabled: true
        enabled: true
        queueDeadMsgQueue: queueDeadMsgQueue
        authenticationScheme: basic
        clientProfileQueueControl1MaxDepth: 5
        clientProfileQueueDirect2MinMsgBurst: 3
        queueEventSpoolUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        up: true
        clientProfileQueueControl1MinMsgBurst: 5
        queueMaxMsgSpoolUsage: 9
        clientProfileTcpKeepaliveInterval: 7
        egressFlowWindowSize: 5
        clientProfileTcpCongestionWindowSize: 1
        clientProfileQueueDirect1MinMsgBurst: 7
        queueRespectTtlEnabled: true
        remoteClusterName: remoteClusterName
        clientProfileTcpMaxWindowSize: 4
        clientProfileTcpKeepaliveCount: 1
        queueMaxTtl: 8
        uptime: 9
        clientProfileTcpKeepaliveIdleTime: 6
        queueRejectMsgToSenderOnDiscardBehavior: always
        failureReason: failureReason
        dmrClusterName: dmrClusterName
        clientProfileTcpMaxSegmentSize: 1
        clientProfileQueueGuaranteed1MaxDepth: 7
        clientProfileQueueGuaranteed1MinMsgBurst: 1
        span: internal
      properties:
        authenticationScheme:
          description: |
            The authentication scheme to be used by the Link which initiates connections to the remote node. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
          type: string
        clientProfileName:
          description: The name of the Client Profile used by the Link.
          type: string
        clientProfileQueueControl1MaxDepth:
          description: The maximum depth of the "Control 1" (C-1) priority queue,
            in work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        clientProfileQueueControl1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Control 1" (C-1) priority queue, regardless of the `clientProfileQueueControl1MaxDepth`
            value.
          format: int32
          type: integer
        clientProfileQueueDirect1MaxDepth:
          description: The maximum depth of the "Direct 1" (D-1) priority queue, in
            work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        clientProfileQueueDirect1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 1" (D-1) priority queue, regardless of the `clientProfileQueueDirect1MaxDepth`
            value.
          format: int32
          type: integer
        clientProfileQueueDirect2MaxDepth:
          description: The maximum depth of the "Direct 2" (D-2) priority queue, in
            work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        clientProfileQueueDirect2MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 2" (D-2) priority queue, regardless of the `clientProfileQueueDirect2MaxDepth`
            value.
          format: int32
          type: integer
        clientProfileQueueDirect3MaxDepth:
          description: The maximum depth of the "Direct 3" (D-3) priority queue, in
            work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        clientProfileQueueDirect3MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 3" (D-3) priority queue, regardless of the `clientProfileQueueDirect3MaxDepth`
            value.
          format: int32
          type: integer
        clientProfileQueueGuaranteed1MaxDepth:
          description: The maximum depth of the "Guaranteed 1" (G-1) priority queue,
            in work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        clientProfileQueueGuaranteed1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Guaranteed 1" (G-3) priority queue, regardless of the `clientProfileQueueGuaranteed1MaxDepth`
            value.
          format: int32
          type: integer
        clientProfileTcpCongestionWindowSize:
          description: The TCP initial congestion window size, in multiples of the
            TCP Maximum Segment Size (MSS). Changing the value from its default of
            2 results in non-compliance with RFC 2581. Contact Solace Support before
            changing this value.
          format: int64
          type: integer
        clientProfileTcpKeepaliveCount:
          description: The number of TCP keepalive retransmissions to be carried out
            before declaring that the remote end is not available.
          format: int64
          type: integer
        clientProfileTcpKeepaliveIdleTime:
          description: The amount of time a connection must remain idle before TCP
            begins sending keepalive probes, in seconds.
          format: int64
          type: integer
        clientProfileTcpKeepaliveInterval:
          description: The amount of time between TCP keepalive retransmissions when
            no acknowledgement is received, in seconds.
          format: int64
          type: integer
        clientProfileTcpMaxSegmentSize:
          description: The TCP maximum segment size, in bytes. Changes are applied
            to all existing connections.
          format: int64
          type: integer
        clientProfileTcpMaxWindowSize:
          description: The TCP maximum window size, in kilobytes. Changes are applied
            to all existing connections.
          format: int64
          type: integer
        dmrClusterName:
          description: The name of the Cluster.
          type: string
        egressFlowWindowSize:
          description: The number of outstanding guaranteed messages that can be sent
            over the Link before acknowledgement is received by the sender.
          format: int64
          type: integer
        enabled:
          description: Indicates whether the Link is enabled. When disabled, subscription
            sets of this and the remote node are not kept up-to-date, and messages
            are not exchanged with the remote node. Published guaranteed messages
            will be queued up for future delivery based on current subscription sets.
          type: boolean
        failureReason:
          description: The failure reason for the Link being down.
          type: string
        initiator:
          description: |
            The initiator of the Link's TCP connections. The allowed values and their meaning are:

            <pre>
            "lexical" - The "higher" node-name initiates.
            "local" - The local node initiates.
            "remote" - The remote node initiates.
            </pre>
          enum:
          - lexical
          - local
          - remote
          type: string
        queueDeadMsgQueue:
          description: The name of the Dead Message Queue (DMQ) used by the Queue
            for discarded messages.
          type: string
        queueEventSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Queue.
          format: int64
          type: integer
        queueMaxMsgSpoolUsage:
          description: The maximum message spool usage by the Queue (quota), in megabytes
            (MB).
          format: int64
          type: integer
        queueMaxRedeliveryCount:
          description: The maximum number of times the Queue will attempt redelivery
            of a message prior to it being discarded or moved to the DMQ. A value
            of 0 means to retry forever.
          format: int64
          type: integer
        queueMaxTtl:
          description: The maximum time in seconds a message can stay in the Queue
            when `queueRespectTtlEnabled` is `true`. A message expires when the lesser
            of the sender assigned time-to-live (TTL) in the message and the `queueMaxTtl`
            configured for the Queue, is exceeded. A value of 0 disables expiry.
          format: int64
          type: integer
        queueRejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
          type: string
        queueRespectTtlEnabled:
          description: Indicates whether the the time-to-live (TTL) for messages in
            the Queue is respected. When enabled, expired messages are discarded or
            moved to the DMQ.
          type: boolean
        remoteClusterName:
          description: The cluster name of the remote node. Available since 2.17.
          type: string
        remoteNodeName:
          description: The name of the node at the remote end of the Link.
          type: string
        span:
          description: |
            The span of the Link, either internal or external. Internal Links connect nodes within the same Cluster. External Links connect nodes within different Clusters. The allowed values and their meaning are:

            <pre>
            "internal" - Link to same cluster.
            "external" - Link to other cluster.
            </pre>
          enum:
          - internal
          - external
          type: string
        transportCompressedEnabled:
          description: Indicates whether compression is enabled on the Link.
          type: boolean
        transportTlsEnabled:
          description: Indicates whether encryption (TLS) is enabled on the Link.
          type: boolean
        up:
          description: Indicates whether the Link is operationally up.
          type: boolean
        uptime:
          description: The amount of time in seconds since the Link was up.
          format: int64
          type: integer
      type: object
    DmrClusterLinkChannel:
      example:
        remoteNodeName: remoteNodeName
        queueName: queueName
        clientName: clientName
        failureReason: failureReason
        dmrClusterName: dmrClusterName
        msgVpnName: msgVpnName
        up: true
        bridgeName: bridgeName
        establisher: true
        remoteAddress: remoteAddress
        uptime: 0
      properties:
        bridgeName:
          description: The name of the Bridge used by the Channel.
          type: string
        clientName:
          description: The name of the Client used by the Channel.
          type: string
        dmrClusterName:
          description: The name of the Cluster.
          type: string
        establisher:
          description: Indicates whether the local node established the Channel.
          type: boolean
        failureReason:
          description: The failure reason for the Channel being down.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        queueName:
          description: The name of the Queue used by the Channel.
          type: string
        remoteAddress:
          description: The FQDN or IP address (and optional port) of the remote node.
          type: string
        remoteNodeName:
          description: The name of the node at the remote end of the Link.
          type: string
        up:
          description: Indicates whether the Channel is operationally up.
          type: boolean
        uptime:
          description: The amount of time in seconds since the Channel was up.
          format: int64
          type: integer
      type: object
    DmrClusterLinkChannelCollections:
      type: object
    DmrClusterLinkChannelLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Cluster Link Channels object.
          type: string
      type: object
    DmrClusterLinkChannelResponse:
      example:
        data:
          remoteNodeName: remoteNodeName
          queueName: queueName
          clientName: clientName
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          msgVpnName: msgVpnName
          up: true
          bridgeName: bridgeName
          establisher: true
          remoteAddress: remoteAddress
          uptime: 0
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/DmrClusterLinkChannel'
        links:
          $ref: '#/components/schemas/DmrClusterLinkChannelLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkChannelsResponse:
      example:
        data:
        - remoteNodeName: remoteNodeName
          queueName: queueName
          clientName: clientName
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          msgVpnName: msgVpnName
          up: true
          bridgeName: bridgeName
          establisher: true
          remoteAddress: remoteAddress
          uptime: 0
        - remoteNodeName: remoteNodeName
          queueName: queueName
          clientName: clientName
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          msgVpnName: msgVpnName
          up: true
          bridgeName: bridgeName
          establisher: true
          remoteAddress: remoteAddress
          uptime: 0
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/DmrClusterLinkChannelCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/DmrClusterLinkChannel'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinkChannelLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkCollections:
      example:
        channels:
          count: 0
        tlsTrustedCommonNames:
          count: 1
        remoteAddresses:
          count: 6
      properties:
        channels:
          $ref: '#/components/schemas/DmrClusterLinkCollectionsChannels'
        remoteAddresses:
          $ref: '#/components/schemas/DmrClusterLinkCollectionsRemoteaddresses'
        tlsTrustedCommonNames:
          $ref: '#/components/schemas/DmrClusterLinkCollectionsTlstrustedcommonnames'
      type: object
    DmrClusterLinkCollectionsChannels:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the channels collection.
          format: int64
          type: integer
      type: object
    DmrClusterLinkCollectionsRemoteaddresses:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the remoteAddresses collection.
          format: int64
          type: integer
      type: object
    DmrClusterLinkCollectionsTlstrustedcommonnames:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the tlsTrustedCommonNames collection.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          format: int64
          type: integer
      type: object
    DmrClusterLinkLinks:
      example:
        channelsUri: channelsUri
        remoteAddressesUri: remoteAddressesUri
        uri: uri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        channelsUri:
          description: The URI of this Link's collection of Cluster Link Channels
            objects.
          type: string
        remoteAddressesUri:
          description: The URI of this Link's collection of Remote Address objects.
          type: string
        tlsTrustedCommonNamesUri:
          description: The URI of this Link's collection of Trusted Common Name objects.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
        uri:
          description: The URI of this Link object.
          type: string
      type: object
    DmrClusterLinkRemoteAddress:
      example:
        remoteNodeName: remoteNodeName
        dmrClusterName: dmrClusterName
        remoteAddress: remoteAddress
      properties:
        dmrClusterName:
          description: The name of the Cluster.
          type: string
        remoteAddress:
          description: 'The FQDN or IP address (and optional port) of the remote node.
            If a port is not provided, it will vary based on the transport encoding:
            55555 (plain-text), 55443 (encrypted), or 55003 (compressed).'
          type: string
        remoteNodeName:
          description: The name of the node at the remote end of the Link.
          type: string
      type: object
    DmrClusterLinkRemoteAddressCollections:
      type: object
    DmrClusterLinkRemoteAddressLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Remote Address object.
          type: string
      type: object
    DmrClusterLinkRemoteAddressResponse:
      example:
        data:
          remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
        links:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddressLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkRemoteAddressesResponse:
      example:
        data:
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddressCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddressLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkResponse:
      example:
        data:
          transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 9
          clientProfileQueueDirect1MaxDepth: 2
          clientProfileQueueDirect3MinMsgBurst: 4
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 9
          clientProfileName: clientProfileName
          clientProfileQueueDirect3MaxDepth: 2
          queueMaxRedeliveryCount: 6
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 5
          clientProfileQueueDirect2MinMsgBurst: 3
          queueEventSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          up: true
          clientProfileQueueControl1MinMsgBurst: 5
          queueMaxMsgSpoolUsage: 9
          clientProfileTcpKeepaliveInterval: 7
          egressFlowWindowSize: 5
          clientProfileTcpCongestionWindowSize: 1
          clientProfileQueueDirect1MinMsgBurst: 7
          queueRespectTtlEnabled: true
          remoteClusterName: remoteClusterName
          clientProfileTcpMaxWindowSize: 4
          clientProfileTcpKeepaliveCount: 1
          queueMaxTtl: 8
          uptime: 9
          clientProfileTcpKeepaliveIdleTime: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 7
          clientProfileQueueGuaranteed1MinMsgBurst: 1
          span: internal
        collections:
          channels:
            count: 0
          tlsTrustedCommonNames:
            count: 1
          remoteAddresses:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          channelsUri: channelsUri
          remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterLinkCollections'
        data:
          $ref: '#/components/schemas/DmrClusterLink'
        links:
          $ref: '#/components/schemas/DmrClusterLinkLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkTlsTrustedCommonName:
      example:
        remoteNodeName: remoteNodeName
        dmrClusterName: dmrClusterName
        tlsTrustedCommonName: tlsTrustedCommonName
      properties:
        dmrClusterName:
          description: The name of the Cluster. Deprecated since 2.18. Common Name
            validation has been replaced by Server Certificate Name validation.
          type: string
        remoteNodeName:
          description: The name of the node at the remote end of the Link. Deprecated
            since 2.18. Common Name validation has been replaced by Server Certificate
            Name validation.
          type: string
        tlsTrustedCommonName:
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
      type: object
    DmrClusterLinkTlsTrustedCommonNameCollections:
      type: object
    DmrClusterLinkTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Trusted Common Name object.
          type: string
      type: object
    DmrClusterLinkTlsTrustedCommonNameResponse:
      example:
        data:
          remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkTlsTrustedCommonNamesResponse:
      example:
        data:
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinks:
      example:
        linksUri: linksUri
        topologyIssuesUri: topologyIssuesUri
        uri: uri
      properties:
        linksUri:
          description: The URI of this Cluster's collection of Link objects.
          type: string
        topologyIssuesUri:
          description: The URI of this Cluster's collection of Cluster Topology Issue
            objects.
          type: string
        uri:
          description: The URI of this Cluster object.
          type: string
      type: object
    DmrClusterLinksResponse:
      example:
        data:
        - transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 9
          clientProfileQueueDirect1MaxDepth: 2
          clientProfileQueueDirect3MinMsgBurst: 4
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 9
          clientProfileName: clientProfileName
          clientProfileQueueDirect3MaxDepth: 2
          queueMaxRedeliveryCount: 6
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 5
          clientProfileQueueDirect2MinMsgBurst: 3
          queueEventSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          up: true
          clientProfileQueueControl1MinMsgBurst: 5
          queueMaxMsgSpoolUsage: 9
          clientProfileTcpKeepaliveInterval: 7
          egressFlowWindowSize: 5
          clientProfileTcpCongestionWindowSize: 1
          clientProfileQueueDirect1MinMsgBurst: 7
          queueRespectTtlEnabled: true
          remoteClusterName: remoteClusterName
          clientProfileTcpMaxWindowSize: 4
          clientProfileTcpKeepaliveCount: 1
          queueMaxTtl: 8
          uptime: 9
          clientProfileTcpKeepaliveIdleTime: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 7
          clientProfileQueueGuaranteed1MinMsgBurst: 1
          span: internal
        - transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 9
          clientProfileQueueDirect1MaxDepth: 2
          clientProfileQueueDirect3MinMsgBurst: 4
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 9
          clientProfileName: clientProfileName
          clientProfileQueueDirect3MaxDepth: 2
          queueMaxRedeliveryCount: 6
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 5
          clientProfileQueueDirect2MinMsgBurst: 3
          queueEventSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          up: true
          clientProfileQueueControl1MinMsgBurst: 5
          queueMaxMsgSpoolUsage: 9
          clientProfileTcpKeepaliveInterval: 7
          egressFlowWindowSize: 5
          clientProfileTcpCongestionWindowSize: 1
          clientProfileQueueDirect1MinMsgBurst: 7
          queueRespectTtlEnabled: true
          remoteClusterName: remoteClusterName
          clientProfileTcpMaxWindowSize: 4
          clientProfileTcpKeepaliveCount: 1
          queueMaxTtl: 8
          uptime: 9
          clientProfileTcpKeepaliveIdleTime: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          failureReason: failureReason
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 7
          clientProfileQueueGuaranteed1MinMsgBurst: 1
          span: internal
        collections:
        - channels:
            count: 0
          tlsTrustedCommonNames:
            count: 1
          remoteAddresses:
            count: 6
        - channels:
            count: 0
          tlsTrustedCommonNames:
            count: 1
          remoteAddresses:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - channelsUri: channelsUri
          remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - channelsUri: channelsUri
          remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/DmrClusterLinkCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/DmrClusterLink'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinkLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterResponse:
      example:
        data:
          nodeName: nodeName
          directOnlyEnabled: true
          enabled: true
          tlsServerCertValidateNameEnabled: true
          uptime: 5
          tlsServerCertMaxChainDepth: 5
          failureReason: failureReason
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          subscriptionDbBuildPercentage: 1
          up: true
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        collections:
          topologyIssues:
            count: 6
          links:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          linksUri: linksUri
          topologyIssuesUri: topologyIssuesUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/DmrClusterCollections'
        data:
          $ref: '#/components/schemas/DmrCluster'
        links:
          $ref: '#/components/schemas/DmrClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterTopologyIssue:
      example:
        dmrClusterName: dmrClusterName
        topologyIssue: topologyIssue
      properties:
        dmrClusterName:
          description: The name of the Cluster.
          type: string
        topologyIssue:
          description: The topology issue discovered in the Cluster. A topology issue
            indicates incorrect or inconsistent configuration within the DMR network.
            Such issues will cause messages to be misdelivered or lost.
          type: string
      type: object
    DmrClusterTopologyIssueCollections:
      type: object
    DmrClusterTopologyIssueLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Cluster Topology Issue object.
          type: string
      type: object
    DmrClusterTopologyIssueResponse:
      example:
        data:
          dmrClusterName: dmrClusterName
          topologyIssue: topologyIssue
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/DmrClusterTopologyIssue'
        links:
          $ref: '#/components/schemas/DmrClusterTopologyIssueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterTopologyIssuesResponse:
      example:
        data:
        - dmrClusterName: dmrClusterName
          topologyIssue: topologyIssue
        - dmrClusterName: dmrClusterName
          topologyIssue: topologyIssue
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/DmrClusterTopologyIssueCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/DmrClusterTopologyIssue'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterTopologyIssueLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClustersResponse:
      example:
        data:
        - nodeName: nodeName
          directOnlyEnabled: true
          enabled: true
          tlsServerCertValidateNameEnabled: true
          uptime: 5
          tlsServerCertMaxChainDepth: 5
          failureReason: failureReason
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          subscriptionDbBuildPercentage: 1
          up: true
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        - nodeName: nodeName
          directOnlyEnabled: true
          enabled: true
          tlsServerCertValidateNameEnabled: true
          uptime: 5
          tlsServerCertMaxChainDepth: 5
          failureReason: failureReason
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          subscriptionDbBuildPercentage: 1
          up: true
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        collections:
        - topologyIssues:
            count: 6
          links:
            count: 0
        - topologyIssues:
            count: 6
          links:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - linksUri: linksUri
          topologyIssuesUri: topologyIssuesUri
          uri: uri
        - linksUri: linksUri
          topologyIssuesUri: topologyIssuesUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/DmrClusterCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/DmrCluster'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DomainCertAuthoritiesResponse:
      example:
        data:
        - certAuthorityName: certAuthorityName
          certContent: certContent
        - certAuthorityName: certAuthorityName
          certContent: certContent
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/DomainCertAuthorityCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/DomainCertAuthority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DomainCertAuthorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DomainCertAuthority:
      example:
        certAuthorityName: certAuthorityName
        certContent: certContent
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority.
          type: string
        certContent:
          description: The PEM formatted content for the trusted root certificate
            of a domain Certificate Authority.
          type: string
      type: object
    DomainCertAuthorityCollections:
      type: object
    DomainCertAuthorityLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Domain Certificate Authority object.
          type: string
      type: object
    DomainCertAuthorityResponse:
      example:
        data:
          certAuthorityName: certAuthorityName
          certContent: certContent
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/DomainCertAuthority'
        links:
          $ref: '#/components/schemas/DomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    EventThreshold:
      example:
        clearPercent: 6
        setPercent: 9
        setValue: 6
        clearValue: 8
      properties:
        clearPercent:
          description: The clear threshold for the value of this counter as a percentage
            of its maximum value. Falling below this value will trigger a corresponding
            event.
          format: int64
          type: integer
        clearValue:
          description: The clear threshold for the absolute value of this counter.
            Falling below this value will trigger a corresponding event.
          format: int64
          type: integer
        setPercent:
          description: The set threshold for the value of this counter as a percentage
            of its maximum value. Exceeding this value will trigger a corresponding
            event.
          format: int64
          type: integer
        setValue:
          description: The set threshold for the absolute value of this counter. Exceeding
            this value will trigger a corresponding event.
          format: int64
          type: integer
      type: object
    EventThresholdByPercent:
      example:
        clearPercent: 3
        setPercent: 6
      properties:
        clearPercent:
          description: The clear threshold for the value of this counter as a percentage
            of its maximum value. Falling below this value will trigger a corresponding
            event.
          format: int64
          type: integer
        setPercent:
          description: The set threshold for the value of this counter as a percentage
            of its maximum value. Exceeding this value will trigger a corresponding
            event.
          format: int64
          type: integer
      type: object
    EventThresholdByValue:
      example:
        setValue: 5
        clearValue: 7
      properties:
        clearValue:
          description: The clear threshold for the absolute value of this counter
            or rate. Falling below this value will trigger a corresponding event.
          format: int64
          type: integer
        setValue:
          description: The set threshold for the absolute value of this counter or
            rate. Exceeding this value will trigger a corresponding event.
          format: int64
          type: integer
      type: object
    MsgVpn:
      example:
        replicationRemoteBridgeName: replicationRemoteBridgeName
        averageRxByteRate: 9
        txUncompressedByteRate: 3
        serviceRestIncomingPlainTextEnabled: true
        txCompressedByteRate: 4
        discardedRxMsgCount: 9
        replicationAckPropagationIntervalMsgCount: 9
        state: state
        serviceWebPlainTextUp: true
        replicationStandbyAckPropOutOfSeqRxMsgCount: 1
        restTlsServerCertValidateDateEnabled: true
        serviceWebTlsFailureReason: serviceWebTlsFailureReason
        replicationActivePromotedQueuedMsgCount: 9
        authenticationKerberosEnabled: true
        authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
        serviceRestIncomingPlainTextListenPort: 6
        authenticationClientCertUsernameSource: certificate-thumbprint
        configSyncLocalRole: configSyncLocalRole
        authenticationClientCertMaxChainDepth: 8
        msgSpoolUsage: 5
        serviceMqttWebSocketEnabled: true
        serviceWebPlainTextFailureReason: serviceWebPlainTextFailureReason
        authorizationLdapTrimClientUsernameDomainEnabled: true
        serviceMqttWebSocketFailureReason: serviceMqttWebSocketFailureReason
        authenticationClientCertEnabled: true
        averageRxCompressedByteRate: 6
        serviceSmfPlainTextFailureReason: serviceSmfPlainTextFailureReason
        serviceWebTlsUp: true
        restTlsServerCertEnforceTrustedCommonNameEnabled: true
        serviceRestIncomingPlainTextFailureReason: serviceRestIncomingPlainTextFailureReason
        replicationRejectMsgWhenSyncIneligibleEnabled: true
        serviceMqttPlainTextCompressed: true
        eventPublishTopicFormatSmfEnabled: true
        maxEffectiveEndpointCount: 3
        authenticationBasicProfileName: authenticationBasicProfileName
        replicationBridgeBoundToQueue: true
        serviceRestIncomingMaxConnectionCount: 7
        serviceAmqpTlsListenPort: 2
        averageTxByteRate: 1
        eventServiceAmqpConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceRestMode: gateway
        authenticationKerberosAllowApiProvidedUsernameEnabled: true
        replicationBridgeName: replicationBridgeName
        maxSubscriptionCount: 3
        authenticationBasicType: internal
        serviceWebMaxConnectionCount: 9
        replicationBridgeUp: true
        controlTxMsgCount: 0
        serviceAmqpMaxConnectionCount: 4
        serviceMqttTlsUp: true
        maxEgressFlowCount: 4
        serviceMqttWebSocketListenPort: 0
        loginTxMsgCount: 8
        serviceWebTlsEnabled: true
        replicationStandbyTransactionRequestFailureCount: 7
        eventIngressMsgRateThreshold:
          setValue: 5
          clearValue: 7
        replicationStandbyTransactionRequestCount: 7
        eventPublishSubscriptionMode: "off"
        eventConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceSmfTlsEnabled: true
        eventLargeMsgThreshold: 4
        serviceRestIncomingTlsListenPort: 4
        dataRxByteCount: 4
        tlsAverageTxByteRate: 6
        rxCompressedByteRate: 2
        dataTxMsgCount: 0
        eventPublishMsgVpnEnabled: true
        dmrEnabled: true
        txCompressionRatio: txCompressionRatio
        msgVpnName: msgVpnName
        eventEndpointCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        replicationStandbyTransactionRequestSuccessCount: 9
        sempOverMsgBusAdminEnabled: true
        eventServiceRestIncomingConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceSmfMaxConnectionCount: 0
        tlsRxByteCount: 0
        restTlsServerCertValidateNameEnabled: true
        serviceMqttPlainTextEnabled: true
        configSyncLocalState: configSyncLocalState
        replicationStandbyReconcileRequestTxMsgCount: 9
        rxByteCount: 4
        replicationQueueMaxMsgSpoolUsage: 3
        eventServiceMqttConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceSmfPlainTextUp: true
        sempOverMsgBusAdminClientEnabled: true
        averageTxCompressedByteRate: 2
        serviceWebAuthenticationClientCertRequest: always
        serviceRestOutgoingMaxConnectionCount: 0
        serviceSmfTlsUp: true
        replicationBridgeTlsEnabled: true
        authenticationClientCertRevocationCheckMode: allow-all
        replicationActiveMateFlowNotCongestedPeakTime: 6
        authenticationClientCertAllowApiProvidedUsernameEnabled: true
        replicationActiveSyncIneligiblePeakTime: 3
        serviceAmqpPlainTextListenPort: 8
        systemManager: true
        authenticationClientCertValidateDateEnabled: true
        replicationTransactionMode: sync
        replicationRole: active
        authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
        serviceRestIncomingTlsFailureReason: serviceRestIncomingTlsFailureReason
        configSyncLocalTimeInState: 6
        eventLogTag: eventLogTag
        rate:
          tlsAverageTxByteRate: 0
          averageRxByteRate: 7
          txMsgRate: 2
          averageTxByteRate: 3
          tlsRxByteRate: 0
          tlsTxByteRate: 7
          averageRxMsgRate: 0
          tlsAverageRxByteRate: 4
          rxByteRate: 3
          rxMsgRate: 8
          averageTxMsgRate: 2
          txByteRate: 4
        distributedCacheManagementEnabled: true
        discardedTxMsgCount: 0
        maxEffectiveTxFlowCount: 6
        serviceRestIncomingTlsCompressed: true
        msgReplayInitializingCount: 8
        bridgingTlsServerCertValidateNameEnabled: true
        rxMsgCount: 9
        replicationActiveSyncQueuedMsgCount: 1
        subscriptionExportProgress: 9
        tlsRxByteRate: 4
        counter:
          loginRxMsgCount: 3
          msgSpoolRxMsgCount: 0
          controlTxMsgCount: 4
          tlsRxByteCount: 4
          controlRxByteCount: 7
          tlsTxByteCount: 1
          dataRxByteCount: 8
          dataRxMsgCount: 7
          controlRxMsgCount: 6
          loginTxMsgCount: 4
          controlTxByteCount: 0
          dataTxByteCount: 3
          msgSpoolTxMsgCount: 6
          dataTxMsgCount: 3
          discardedRxMsgCount: 7
          discardedTxMsgCount: 5
        serviceAmqpPlainTextFailureReason: serviceAmqpPlainTextFailureReason
        averageTxUncompressedByteRate: 6
        controlTxByteCount: 7
        rxUncompressedByteRate: 6
        mqttRetainMaxMemory: 0
        msgSpoolMsgCount: 3
        eventPublishTopicFormatMqttEnabled: true
        authenticationBasicEnabled: true
        msgReplayFailedCount: 5
        eventIngressFlowCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceMqttMaxConnectionCount: 6
        txMsgRate: 3
        authorizationProfileName: authorizationProfileName
        serviceMqttTlsFailureReason: serviceMqttTlsFailureReason
        replicationActiveReconcileRequestRxMsgCount: 1
        serviceAmqpPlainTextCompressed: true
        serviceMqttPlainTextFailureReason: serviceMqttPlainTextFailureReason
        serviceMqttWebSocketCompressed: true
        replicationActiveSyncQueuedAsAsyncMsgCount: 5
        replicationBridgeEgressFlowWindowSize: 5
        restTlsServerCertMaxChainDepth: 1
        replicationEnabled: true
        eventServiceWebConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        bridgingTlsServerCertValidateDateEnabled: true
        maxEffectiveSubscriptionCount: 2
        authorizationType: ldap
        replicationStandbyRxMsgCount: 7
        serviceMqttTlsWebSocketCompressed: true
        msgSpoolRxMsgCount: 3
        bridgingTlsServerCertMaxChainDepth: 5
        replicationBridgeCompressedDataEnabled: true
        rxCompressedByteCount: 8
        serviceAmqpPlainTextEnabled: true
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
        averageRxUncompressedByteRate: 6
        eventTransactedSessionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        eventSubscriptionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceMqttPlainTextListenPort: 0
        serviceMqttWebSocketUp: true
        dataTxByteCount: 9
        failureReason: failureReason
        serviceRestIncomingAuthorizationHeaderHandling: drop
        txUncompressedByteCount: 5
        rxByteRate: 3
        loginRxMsgCount: 6
        serviceRestIncomingPlainTextCompressed: true
        replicationQueueBound: true
        controlRxMsgCount: 3
        serviceMqttTlsWebSocketUp: true
        enabled: true
        replicationBridgeAuthenticationScheme: basic
        serviceRestIncomingAuthenticationClientCertRequest: always
        replicationActiveMateFlowCongestedPeakTime: 4
        txByteRate: 6
        replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
        sempOverMsgBusEnabled: true
        maxTransactionCount: 8
        serviceMqttTlsListenPort: 2
        rxUncompressedByteCount: 8
        serviceRestIncomingTlsEnabled: true
        sempOverMsgBusAdminDistributedCacheEnabled: true
        tlsAverageRxByteRate: 7
        authenticationOauthEnabled: true
        tlsTxByteCount: 0
        averageRxMsgRate: 3
        dataRxMsgCount: 7
        serviceSmfPlainTextEnabled: true
        maxEndpointCount: 8
        serviceMqttTlsWebSocketEnabled: true
        exportSubscriptionsEnabled: true
        serviceAmqpTlsUp: true
        configSyncLocalLastResult: configSyncLocalLastResult
        replicationActiveLocallyConsumedMsgCount: 6
        txByteCount: 1
        replicationActiveAsyncQueuedMsgCount: 2
        serviceMqttTlsEnabled: true
        maxEffectiveTransactionCount: 8
        serviceMqttPlainTextUp: true
        serviceMqttTlsWebSocketFailureReason: serviceMqttTlsWebSocketFailureReason
        serviceSmfTlsFailureReason: serviceSmfTlsFailureReason
        replicationActiveAckPropTxMsgCount: 0
        replicationQueueRejectMsgToSenderOnDiscardEnabled: true
        eventTransactionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        rxMsgRate: 4
        sempOverMsgBusShowEnabled: true
        serviceWebPlainTextEnabled: true
        txMsgCount: 2
        averageTxMsgRate: 6
        eventEgressFlowCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        serviceAmqpTlsCompressed: true
        eventMsgSpoolUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        replicationActiveTransitionToSyncIneligibleCount: 4
        configSyncLocalKey: configSyncLocalKey
        controlRxByteCount: 3
        jndiEnabled: true
        maxEffectiveTransactedSessionCount: 1
        eventPublishClientEnabled: true
        replicationSyncEligible: true
        replicationActiveSyncEligiblePeakTime: 1
        maxEffectiveRxFlowCount: 0
        tlsAllowDowngradeToPlainTextEnabled: true
        replicationStandbyAckPropRxMsgCount: 3
        maxConnectionCount: 4
        msgReplayActiveCount: 5
        eventServiceSmfConnectionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        tlsTxByteRate: 7
        serviceAmqpPlainTextUp: true
        serviceAmqpTlsEnabled: true
        eventEgressMsgRateThreshold:
          setValue: 5
          clearValue: 7
        replicationBridgeRetryDelay: 5
        txCompressedByteCount: 2
        serviceAmqpTlsFailureReason: serviceAmqpTlsFailureReason
        alias: alias
        serviceMqttTlsWebSocketListenPort: 5
        replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
        rxCompressionRatio: rxCompressionRatio
        maxIngressFlowCount: 9
        serviceMqttTlsCompressed: true
        serviceMqttAuthenticationClientCertRequest: always
        maxTransactedSessionCount: 9
        msgReplayPendingCompleteCount: 7
        serviceRestIncomingTlsUp: true
        serviceRestIncomingPlainTextUp: true
        msgSpoolTxMsgCount: 9
        replicationRemoteBridgeUp: true
        maxMsgSpoolUsage: 1
        authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
      properties:
        alias:
          description: The name of another Message VPN which this Message VPN is an
            alias for. Available since 2.14.
          type: string
        authenticationBasicEnabled:
          description: Indicates whether basic authentication is enabled for clients
            connecting to the Message VPN.
          type: boolean
        authenticationBasicProfileName:
          description: The name of the RADIUS or LDAP Profile to use for basic authentication.
          type: string
        authenticationBasicRadiusDomain:
          description: The RADIUS domain to use for basic authentication.
          type: string
        authenticationBasicType:
          description: |
            The type of basic authentication to use for clients connecting to the Message VPN. The allowed values and their meaning are:

            <pre>
            "internal" - Internal database. Authentication is against Client Usernames.
            "ldap" - LDAP authentication. An LDAP profile name must be provided.
            "radius" - RADIUS authentication. A RADIUS profile name must be provided.
            "none" - No authentication. Anonymous login allowed.
            </pre>
          enum:
          - internal
          - ldap
          - radius
          - none
          type: string
        authenticationClientCertAllowApiProvidedUsernameEnabled:
          description: Indicates whether a client is allowed to specify a Client Username
            via the API connect method. When disabled, the certificate CN (Common
            Name) is always used.
          type: boolean
        authenticationClientCertEnabled:
          description: Indicates whether client certificate authentication is enabled
            in the Message VPN.
          type: boolean
        authenticationClientCertMaxChainDepth:
          description: The maximum depth for a client certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
          format: int64
          type: integer
        authenticationClientCertRevocationCheckMode:
          description: |
            The desired behavior for client certificate revocation checking. The allowed values and their meaning are:

            <pre>
            "allow-all" - Allow the client to authenticate, the result of client certificate revocation check is ignored.
            "allow-unknown" - Allow the client to authenticate even if the revocation status of his certificate cannot be determined.
            "allow-valid" - Allow the client to authenticate only when the revocation check returned an explicit positive response.
            </pre>
          enum:
          - allow-all
          - allow-unknown
          - allow-valid
          type: string
        authenticationClientCertUsernameSource:
          description: |
            The field from the client certificate to use as the client username. The allowed values and their meaning are:

            <pre>
            "certificate-thumbprint" - The username is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.
            "common-name" - The username is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.
            "common-name-last" - The username is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.
            "subject-alternate-name-msupn" - The username is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.
            "uid" - The username is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.
            "uid-last" - The username is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.
            </pre>
          enum:
          - certificate-thumbprint
          - common-name
          - common-name-last
          - subject-alternate-name-msupn
          - uid
          - uid-last
          type: string
        authenticationClientCertValidateDateEnabled:
          description: Indicates whether the "Not Before" and "Not After" validity
            dates in the client certificate are checked.
          type: boolean
        authenticationKerberosAllowApiProvidedUsernameEnabled:
          description: Indicates whether a client is allowed to specify a Client Username
            via the API connect method. When disabled, the Kerberos Principal name
            is always used.
          type: boolean
        authenticationKerberosEnabled:
          description: Indicates whether Kerberos authentication is enabled in the
            Message VPN.
          type: boolean
        authenticationOauthDefaultProviderName:
          description: The name of the provider to use when the client does not supply
            a provider name. Available since 2.13.
          type: string
        authenticationOauthEnabled:
          description: Indicates whether OAuth authentication is enabled. Available
            since 2.13.
          type: boolean
        authorizationLdapGroupMembershipAttributeName:
          description: The name of the attribute that is retrieved from the LDAP server
            as part of the LDAP search when authorizing a client connecting to the
            Message VPN.
          type: string
        authorizationLdapTrimClientUsernameDomainEnabled:
          description: Indicates whether client-username domain trimming for LDAP
            lookups of client connections is enabled. Available since 2.13.
          type: boolean
        authorizationProfileName:
          description: The name of the LDAP Profile to use for client authorization.
          type: string
        authorizationType:
          description: |
            The type of authorization to use for clients connecting to the Message VPN. The allowed values and their meaning are:

            <pre>
            "ldap" - LDAP authorization.
            "internal" - Internal authorization.
            </pre>
          enum:
          - ldap
          - internal
          type: string
        averageRxByteRate:
          description: The one minute average of the message rate received by the
            Message VPN, in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        averageRxCompressedByteRate:
          description: The one minute average of the compressed message rate received
            by the Message VPN, in bytes per second (B/sec). Available since 2.12.
          format: int64
          type: integer
        averageRxMsgRate:
          description: The one minute average of the message rate received by the
            Message VPN, in messages per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        averageRxUncompressedByteRate:
          description: The one minute average of the uncompressed message rate received
            by the Message VPN, in bytes per second (B/sec). Available since 2.12.
          format: int64
          type: integer
        averageTxByteRate:
          description: The one minute average of the message rate transmitted by the
            Message VPN, in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        averageTxCompressedByteRate:
          description: The one minute average of the compressed message rate transmitted
            by the Message VPN, in bytes per second (B/sec). Available since 2.12.
          format: int64
          type: integer
        averageTxMsgRate:
          description: The one minute average of the message rate transmitted by the
            Message VPN, in messages per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        averageTxUncompressedByteRate:
          description: The one minute average of the uncompressed message rate transmitted
            by the Message VPN, in bytes per second (B/sec). Available since 2.12.
          format: int64
          type: integer
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled:
          description: Indicates whether the Common Name (CN) in the server certificate
            from the remote broker is validated for the Bridge. Deprecated since 2.18.
            Common Name validation has been replaced by Server Certificate Name validation.
          type: boolean
        bridgingTlsServerCertMaxChainDepth:
          description: The maximum depth for a server certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
          format: int64
          type: integer
        bridgingTlsServerCertValidateDateEnabled:
          description: Indicates whether the "Not Before" and "Not After" validity
            dates in the server certificate are checked.
          type: boolean
        bridgingTlsServerCertValidateNameEnabled:
          description: Enable or disable the standard TLS authentication mechanism
            of verifying the name used to connect to the bridge. If enabled, the name
            used to connect to the bridge is checked against the names specified in
            the certificate returned by the remote router. Legacy Common Name validation
            is not performed if Server Certificate Name Validation is enabled, even
            if Common Name validation is also enabled. Available since 2.18.
          type: boolean
        configSyncLocalKey:
          description: The key for the config sync table of the local Message VPN.
            Available since 2.12.
          type: string
        configSyncLocalLastResult:
          description: The result of the last operation on the config sync table of
            the local Message VPN. Available since 2.12.
          type: string
        configSyncLocalRole:
          description: |-
            The role of the config sync table of the local Message VPN. The allowed values and their meaning are:

            <pre>
            "unknown" - The role is unknown.
            "primary" - Acts as the primary source of config data.
            "replica" - Acts as a replica of the primary config data.
            </pre>
             Available since 2.12.
          type: string
        configSyncLocalState:
          description: |-
            The state of the config sync table of the local Message VPN. The allowed values and their meaning are:

            <pre>
            "unknown" - The state is unknown.
            "in-sync" - The config data is synchronized between Message VPNs.
            "reconciling" - The config data is reconciling between Message VPNs.
            "blocked" - The config data is blocked from reconciling due to an error.
            "out-of-sync" - The config data is out of sync between Message VPNs.
            "down" - The state is down due to configuration.
            </pre>
             Available since 2.12.
          type: string
        configSyncLocalTimeInState:
          description: The amount of time in seconds the config sync table of the
            local Message VPN has been in the current state. Available since 2.12.
          format: int32
          type: integer
        controlRxByteCount:
          description: The amount of client control messages received from clients
            by the Message VPN, in bytes (B). Available since 2.13.
          format: int64
          type: integer
        controlRxMsgCount:
          description: The number of client control messages received from clients
            by the Message VPN. Available since 2.13.
          format: int64
          type: integer
        controlTxByteCount:
          description: The amount of client control messages transmitted to clients
            by the Message VPN, in bytes (B). Available since 2.13.
          format: int64
          type: integer
        controlTxMsgCount:
          description: The number of client control messages transmitted to clients
            by the Message VPN. Available since 2.13.
          format: int64
          type: integer
        counter:
          $ref: '#/components/schemas/MsgVpnCounter'
        dataRxByteCount:
          description: The amount of client data messages received from clients by
            the Message VPN, in bytes (B). Available since 2.13.
          format: int64
          type: integer
        dataRxMsgCount:
          description: The number of client data messages received from clients by
            the Message VPN. Available since 2.13.
          format: int64
          type: integer
        dataTxByteCount:
          description: The amount of client data messages transmitted to clients by
            the Message VPN, in bytes (B). Available since 2.13.
          format: int64
          type: integer
        dataTxMsgCount:
          description: The number of client data messages transmitted to clients by
            the Message VPN. Available since 2.13.
          format: int64
          type: integer
        discardedRxMsgCount:
          description: The number of messages discarded during reception by the Message
            VPN. Available since 2.13.
          format: int64
          type: integer
        discardedTxMsgCount:
          description: The number of messages discarded during transmission by the
            Message VPN. Available since 2.13.
          format: int64
          type: integer
        distributedCacheManagementEnabled:
          description: Indicates whether managing of cache instances over the message
            bus is enabled in the Message VPN.
          type: boolean
        dmrEnabled:
          description: Indicates whether Dynamic Message Routing (DMR) is enabled
            for the Message VPN.
          type: boolean
        enabled:
          description: Indicates whether the Message VPN is enabled.
          type: boolean
        eventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventEndpointCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventLargeMsgThreshold:
          description: Exceeding this message size in kilobytes (KB) triggers a corresponding
            Event in the Message VPN.
          format: int64
          type: integer
        eventLogTag:
          description: The value of the prefix applied to all published Events in
            the Message VPN.
          type: string
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventPublishClientEnabled:
          description: Indicates whether client Events are published in the Message
            VPN.
          type: boolean
        eventPublishMsgVpnEnabled:
          description: Indicates whether Message VPN Events are published in the Message
            VPN.
          type: boolean
        eventPublishSubscriptionMode:
          description: |
            The mode of subscription Events published in the Message VPN. The allowed values and their meaning are:

            <pre>
            "off" - Disable client level event message publishing.
            "on-with-format-v1" - Enable client level event message publishing with format v1.
            "on-with-no-unsubscribe-events-on-disconnect-format-v1" - As "on-with-format-v1", but unsubscribe events are not generated when a client disconnects. Unsubscribe events are still raised when a client explicitly unsubscribes from its subscriptions.
            "on-with-format-v2" - Enable client level event message publishing with format v2.
            "on-with-no-unsubscribe-events-on-disconnect-format-v2" - As "on-with-format-v2", but unsubscribe events are not generated when a client disconnects. Unsubscribe events are still raised when a client explicitly unsubscribes from its subscriptions.
            </pre>
          enum:
          - "off"
          - on-with-format-v1
          - on-with-no-unsubscribe-events-on-disconnect-format-v1
          - on-with-format-v2
          - on-with-no-unsubscribe-events-on-disconnect-format-v2
          type: string
        eventPublishTopicFormatMqttEnabled:
          description: Indicates whether Message VPN Events are published in the MQTT
            format.
          type: boolean
        eventPublishTopicFormatSmfEnabled:
          description: Indicates whether Message VPN Events are published in the SMF
            format.
          type: boolean
        eventServiceAmqpConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceMqttConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceRestIncomingConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceSmfConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceWebConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSubscriptionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        exportSubscriptionsEnabled:
          description: Indicates whether exports of subscriptions to other routers
            in the network over neighbour links is enabled in the Message VPN.
          type: boolean
        failureReason:
          description: The reason for the Message VPN failure.
          type: string
        jndiEnabled:
          description: Indicates whether the JNDI access for clients is enabled in
            the Message VPN.
          type: boolean
        loginRxMsgCount:
          description: The number of login request messages received by the Message
            VPN. Available since 2.13.
          format: int64
          type: integer
        loginTxMsgCount:
          description: The number of login response messages transmitted by the Message
            VPN. Available since 2.13.
          format: int64
          type: integer
        maxConnectionCount:
          description: The maximum number of client connections to the Message VPN.
          format: int64
          type: integer
        maxEffectiveEndpointCount:
          description: The effective maximum number of Queues and Topic Endpoints
            allowed in the Message VPN.
          format: int32
          type: integer
        maxEffectiveRxFlowCount:
          description: The effective maximum number of receive flows allowed in the
            Message VPN.
          format: int32
          type: integer
        maxEffectiveSubscriptionCount:
          description: The effective maximum number of subscriptions allowed in the
            Message VPN.
          format: int64
          type: integer
        maxEffectiveTransactedSessionCount:
          description: The effective maximum number of transacted sessions allowed
            in the Message VPN.
          format: int32
          type: integer
        maxEffectiveTransactionCount:
          description: The effective maximum number of transactions allowed in the
            Message VPN.
          format: int32
          type: integer
        maxEffectiveTxFlowCount:
          description: The effective maximum number of transmit flows allowed in the
            Message VPN.
          format: int32
          type: integer
        maxEgressFlowCount:
          description: The maximum number of transmit flows that can be created in
            the Message VPN.
          format: int64
          type: integer
        maxEndpointCount:
          description: The maximum number of Queues and Topic Endpoints that can be
            created in the Message VPN.
          format: int64
          type: integer
        maxIngressFlowCount:
          description: The maximum number of receive flows that can be created in
            the Message VPN.
          format: int64
          type: integer
        maxMsgSpoolUsage:
          description: The maximum message spool usage by the Message VPN, in megabytes.
          format: int64
          type: integer
        maxSubscriptionCount:
          description: The maximum number of local client subscriptions that can be
            added to the Message VPN. This limit is not enforced when a subscription
            is added using a management interface, such as CLI or SEMP.
          format: int64
          type: integer
        maxTransactedSessionCount:
          description: The maximum number of transacted sessions that can be created
            in the Message VPN.
          format: int64
          type: integer
        maxTransactionCount:
          description: The maximum number of transactions that can be created in the
            Message VPN.
          format: int64
          type: integer
        mqttRetainMaxMemory:
          description: The maximum total memory usage of the MQTT Retain feature for
            this Message VPN, in MB. If the maximum memory is reached, any arriving
            retain messages that require more memory are discarded. A value of -1
            indicates that the memory is bounded only by the global max memory limit.
            A value of 0 prevents MQTT Retain from becoming operational.
          format: int32
          type: integer
        msgReplayActiveCount:
          description: The number of message replays that are currently active in
            the Message VPN.
          format: int32
          type: integer
        msgReplayFailedCount:
          description: The number of message replays that are currently failed in
            the Message VPN.
          format: int32
          type: integer
        msgReplayInitializingCount:
          description: The number of message replays that are currently initializing
            in the Message VPN.
          format: int32
          type: integer
        msgReplayPendingCompleteCount:
          description: The number of message replays that are pending complete in
            the Message VPN.
          format: int32
          type: integer
        msgSpoolMsgCount:
          description: The current number of messages spooled (persisted in the Message
            Spool) in the Message VPN. Available since 2.14.
          format: int64
          type: integer
        msgSpoolRxMsgCount:
          description: The number of guaranteed messages received by the Message VPN.
            Available since 2.13.
          format: int64
          type: integer
        msgSpoolTxMsgCount:
          description: The number of guaranteed messages transmitted by the Message
            VPN. One message to multiple clients is counted as one message. Available
            since 2.13.
          format: int64
          type: integer
        msgSpoolUsage:
          description: The current message spool usage by the Message VPN, in bytes
            (B).
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        rate:
          $ref: '#/components/schemas/MsgVpnRate'
        replicationAckPropagationIntervalMsgCount:
          description: The acknowledgement (ACK) propagation interval for the replication
            Bridge, in number of replicated messages. Available since 2.12.
          format: int64
          type: integer
        replicationActiveAckPropTxMsgCount:
          description: The number of acknowledgement messages propagated to the replication
            standby remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationActiveAsyncQueuedMsgCount:
          description: The number of async messages queued to the replication standby
            remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationActiveLocallyConsumedMsgCount:
          description: The number of messages consumed in the replication active local
            Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationActiveMateFlowCongestedPeakTime:
          description: The peak amount of time in seconds the message flow has been
            congested to the replication standby remote Message VPN. Available since
            2.12.
          format: int32
          type: integer
        replicationActiveMateFlowNotCongestedPeakTime:
          description: The peak amount of time in seconds the message flow has not
            been congested to the replication standby remote Message VPN. Available
            since 2.12.
          format: int32
          type: integer
        replicationActivePromotedQueuedMsgCount:
          description: The number of promoted messages queued to the replication standby
            remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationActiveReconcileRequestRxMsgCount:
          description: The number of reconcile request messages received from the
            replication standby remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationActiveSyncEligiblePeakTime:
          description: The peak amount of time in seconds sync replication has been
            eligible to the replication standby remote Message VPN. Available since
            2.12.
          format: int32
          type: integer
        replicationActiveSyncIneligiblePeakTime:
          description: The peak amount of time in seconds sync replication has been
            ineligible to the replication standby remote Message VPN. Available since
            2.12.
          format: int32
          type: integer
        replicationActiveSyncQueuedAsAsyncMsgCount:
          description: The number of sync messages queued as async to the replication
            standby remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationActiveSyncQueuedMsgCount:
          description: The number of sync messages queued to the replication standby
            remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationActiveTransitionToSyncIneligibleCount:
          description: The number of sync replication ineligible transitions to the
            replication standby remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationBridgeAuthenticationBasicClientUsername:
          description: The Client Username the replication Bridge uses to login to
            the remote Message VPN. Available since 2.12.
          type: string
        replicationBridgeAuthenticationScheme:
          description: |-
            The authentication scheme for the replication Bridge in the Message VPN. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
             Available since 2.12.
          enum:
          - basic
          - client-certificate
          type: string
        replicationBridgeBoundToQueue:
          description: Indicates whether the local replication Bridge is bound to
            the Queue in the remote Message VPN. Available since 2.12.
          type: boolean
        replicationBridgeCompressedDataEnabled:
          description: Indicates whether compression is used for the replication Bridge.
            Available since 2.12.
          type: boolean
        replicationBridgeEgressFlowWindowSize:
          description: The size of the window used for guaranteed messages published
            to the replication Bridge, in messages. Available since 2.12.
          format: int64
          type: integer
        replicationBridgeName:
          description: The name of the local replication Bridge in the Message VPN.
            Available since 2.12.
          type: string
        replicationBridgeRetryDelay:
          description: The number of seconds that must pass before retrying the replication
            Bridge connection. Available since 2.12.
          format: int64
          type: integer
        replicationBridgeTlsEnabled:
          description: Indicates whether encryption (TLS) is enabled for the replication
            Bridge connection. Available since 2.12.
          type: boolean
        replicationBridgeUnidirectionalClientProfileName:
          description: The Client Profile for the unidirectional replication Bridge
            in the Message VPN. It is used only for the TCP parameters. Available
            since 2.12.
          type: string
        replicationBridgeUp:
          description: Indicates whether the local replication Bridge is operationally
            up in the Message VPN. Available since 2.12.
          type: boolean
        replicationEnabled:
          description: Indicates whether replication is enabled for the Message VPN.
            Available since 2.12.
          type: boolean
        replicationQueueBound:
          description: Indicates whether the remote replication Bridge is bound to
            the Queue in the Message VPN. Available since 2.12.
          type: boolean
        replicationQueueMaxMsgSpoolUsage:
          description: The maximum message spool usage by the replication Bridge local
            Queue (quota), in megabytes. Available since 2.12.
          format: int64
          type: integer
        replicationQueueRejectMsgToSenderOnDiscardEnabled:
          description: Indicates whether messages discarded on this replication Bridge
            Queue are rejected back to the sender. Available since 2.12.
          type: boolean
        replicationRejectMsgWhenSyncIneligibleEnabled:
          description: Indicates whether guaranteed messages published to synchronously
            replicated Topics are rejected back to the sender when synchronous replication
            becomes ineligible. Available since 2.12.
          type: boolean
        replicationRemoteBridgeName:
          description: The name of the remote replication Bridge in the Message VPN.
            Available since 2.12.
          type: string
        replicationRemoteBridgeUp:
          description: Indicates whether the remote replication Bridge is operationally
            up in the Message VPN. Available since 2.12.
          type: boolean
        replicationRole:
          description: |-
            The replication role for the Message VPN. The allowed values and their meaning are:

            <pre>
            "active" - Assume the Active role in replication for the Message VPN.
            "standby" - Assume the Standby role in replication for the Message VPN.
            </pre>
             Available since 2.12.
          enum:
          - active
          - standby
          type: string
        replicationStandbyAckPropOutOfSeqRxMsgCount:
          description: The number of acknowledgement messages received out of sequence
            from the replication active remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationStandbyAckPropRxMsgCount:
          description: The number of acknowledgement messages received from the replication
            active remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationStandbyReconcileRequestTxMsgCount:
          description: The number of reconcile request messages transmitted to the
            replication active remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationStandbyRxMsgCount:
          description: The number of messages received from the replication active
            remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationStandbyTransactionRequestCount:
          description: The number of transaction requests received from the replication
            active remote Message VPN. Available since 2.12.
          format: int64
          type: integer
        replicationStandbyTransactionRequestFailureCount:
          description: The number of transaction requests received from the replication
            active remote Message VPN that failed. Available since 2.12.
          format: int64
          type: integer
        replicationStandbyTransactionRequestSuccessCount:
          description: The number of transaction requests received from the replication
            active remote Message VPN that succeeded. Available since 2.12.
          format: int64
          type: integer
        replicationSyncEligible:
          description: Indicates whether sync replication is eligible in the Message
            VPN. Available since 2.12.
          type: boolean
        replicationTransactionMode:
          description: |-
            Indicates whether synchronous or asynchronous replication mode is used for all transactions within the Message VPN. The allowed values and their meaning are:

            <pre>
            "sync" - Messages are acknowledged when replicated (spooled remotely).
            "async" - Messages are acknowledged when pending replication (spooled locally).
            </pre>
             Available since 2.12.
          enum:
          - sync
          - async
          type: string
        restTlsServerCertEnforceTrustedCommonNameEnabled:
          description: Indicates whether the Common Name (CN) in the server certificate
            from the remote REST Consumer is validated. Deprecated since 2.17. Common
            Name validation has been replaced by Server Certificate Name validation.
          type: boolean
        restTlsServerCertMaxChainDepth:
          description: The maximum depth for a REST Consumer server certificate chain.
            The depth of a chain is defined as the number of signing CA certificates
            that are present in the chain back to a trusted self-signed root CA certificate.
          format: int64
          type: integer
        restTlsServerCertValidateDateEnabled:
          description: Indicates whether the "Not Before" and "Not After" validity
            dates in the REST Consumer server certificate are checked.
          type: boolean
        restTlsServerCertValidateNameEnabled:
          description: Enable or disable the standard TLS authentication mechanism
            of verifying the name used to connect to the remote REST Consumer. If
            enabled, the name used to connect to the remote REST Consumer is checked
            against the names specified in the certificate returned by the remote
            router. Legacy Common Name validation is not performed if Server Certificate
            Name Validation is enabled, even if Common Name validation is also enabled.
            Available since 2.17.
          type: boolean
        rxByteCount:
          description: The amount of messages received from clients by the Message
            VPN, in bytes (B). Available since 2.12.
          format: int64
          type: integer
        rxByteRate:
          description: The current message rate received by the Message VPN, in bytes
            per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        rxCompressedByteCount:
          description: The amount of compressed messages received by the Message VPN,
            in bytes (B). Available since 2.12.
          format: int64
          type: integer
        rxCompressedByteRate:
          description: The current compressed message rate received by the Message
            VPN, in bytes per second (B/sec). Available since 2.12.
          format: int64
          type: integer
        rxCompressionRatio:
          description: The compression ratio for messages received by the message
            VPN. Available since 2.12.
          type: string
        rxMsgCount:
          description: The number of messages received from clients by the Message
            VPN. Available since 2.12.
          format: int64
          type: integer
        rxMsgRate:
          description: The current message rate received by the Message VPN, in messages
            per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        rxUncompressedByteCount:
          description: The amount of uncompressed messages received by the Message
            VPN, in bytes (B). Available since 2.12.
          format: int64
          type: integer
        rxUncompressedByteRate:
          description: The current uncompressed message rate received by the Message
            VPN, in bytes per second (B/sec). Available since 2.12.
          format: int64
          type: integer
        sempOverMsgBusAdminClientEnabled:
          description: Indicates whether the "admin" level "client" commands are enabled
            for SEMP over the message bus in the Message VPN.
          type: boolean
        sempOverMsgBusAdminDistributedCacheEnabled:
          description: Indicates whether the "admin" level "Distributed Cache" commands
            are enabled for SEMP over the message bus in the Message VPN.
          type: boolean
        sempOverMsgBusAdminEnabled:
          description: Indicates whether the "admin" level commands are enabled for
            SEMP over the message bus in the Message VPN.
          type: boolean
        sempOverMsgBusEnabled:
          description: Indicates whether SEMP over the message bus is enabled in the
            Message VPN.
          type: boolean
        sempOverMsgBusShowEnabled:
          description: Indicates whether the "show" level commands are enabled for
            SEMP over the message bus in the Message VPN.
          type: boolean
        serviceAmqpMaxConnectionCount:
          description: The maximum number of AMQP client connections that can be simultaneously
            connected to the Message VPN. This value may be higher than supported
            by the platform.
          format: int64
          type: integer
        serviceAmqpPlainTextCompressed:
          description: Indicates whether the AMQP Service is compressed in the Message
            VPN.
          type: boolean
        serviceAmqpPlainTextEnabled:
          description: Indicates whether the AMQP Service is enabled in the Message
            VPN.
          type: boolean
        serviceAmqpPlainTextFailureReason:
          description: The reason for the AMQP Service failure in the Message VPN.
          type: string
        serviceAmqpPlainTextListenPort:
          description: The port number for plain-text AMQP clients that connect to
            the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
          type: integer
        serviceAmqpPlainTextUp:
          description: Indicates whether the AMQP Service is operationally up in the
            Message VPN.
          type: boolean
        serviceAmqpTlsCompressed:
          description: Indicates whether the TLS related AMQP Service is compressed
            in the Message VPN.
          type: boolean
        serviceAmqpTlsEnabled:
          description: Indicates whether encryption (TLS) is enabled for AMQP clients
            in the Message VPN.
          type: boolean
        serviceAmqpTlsFailureReason:
          description: The reason for the TLS related AMQP Service failure in the
            Message VPN.
          type: string
        serviceAmqpTlsListenPort:
          description: The port number for AMQP clients that connect to the Message
            VPN over TLS. The port must be unique across the message backbone. A value
            of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
          type: integer
        serviceAmqpTlsUp:
          description: Indicates whether the TLS related AMQP Service is operationally
            up in the Message VPN.
          type: boolean
        serviceMqttAuthenticationClientCertRequest:
          description: |-
            Determines when to request a client certificate from an incoming MQTT client connecting via a TLS port. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
          type: string
        serviceMqttMaxConnectionCount:
          description: The maximum number of MQTT client connections that can be simultaneously
            connected to the Message VPN.
          format: int64
          type: integer
        serviceMqttPlainTextCompressed:
          description: Indicates whether the MQTT Service is compressed in the Message
            VPN.
          type: boolean
        serviceMqttPlainTextEnabled:
          description: Indicates whether the MQTT Service is enabled in the Message
            VPN.
          type: boolean
        serviceMqttPlainTextFailureReason:
          description: The reason for the MQTT Service failure in the Message VPN.
          type: string
        serviceMqttPlainTextListenPort:
          description: The port number for plain-text MQTT clients that connect to
            the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
          type: integer
        serviceMqttPlainTextUp:
          description: Indicates whether the MQTT Service is operationally up in the
            Message VPN.
          type: boolean
        serviceMqttTlsCompressed:
          description: Indicates whether the TLS related MQTT Service is compressed
            in the Message VPN.
          type: boolean
        serviceMqttTlsEnabled:
          description: Indicates whether encryption (TLS) is enabled for MQTT clients
            in the Message VPN.
          type: boolean
        serviceMqttTlsFailureReason:
          description: The reason for the TLS related MQTT Service failure in the
            Message VPN.
          type: string
        serviceMqttTlsListenPort:
          description: The port number for MQTT clients that connect to the Message
            VPN over TLS. The port must be unique across the message backbone. A value
            of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
          type: integer
        serviceMqttTlsUp:
          description: Indicates whether the TLS related MQTT Service is operationally
            up in the Message VPN.
          type: boolean
        serviceMqttTlsWebSocketCompressed:
          description: Indicates whether the TLS related Web transport MQTT Service
            is compressed in the Message VPN.
          type: boolean
        serviceMqttTlsWebSocketEnabled:
          description: Indicates whether encryption (TLS) is enabled for MQTT Web
            clients in the Message VPN.
          type: boolean
        serviceMqttTlsWebSocketFailureReason:
          description: The reason for the TLS related Web transport MQTT Service failure
            in the Message VPN.
          type: string
        serviceMqttTlsWebSocketListenPort:
          description: The port number for MQTT clients that connect to the Message
            VPN using WebSocket over TLS. The port must be unique across the message
            backbone. A value of 0 means that the listen-port is unassigned and cannot
            be enabled.
          format: int64
          type: integer
        serviceMqttTlsWebSocketUp:
          description: Indicates whether the TLS related Web transport MQTT Service
            is operationally up in the Message VPN.
          type: boolean
        serviceMqttWebSocketCompressed:
          description: Indicates whether the Web transport related MQTT Service is
            compressed in the Message VPN.
          type: boolean
        serviceMqttWebSocketEnabled:
          description: Indicates whether the Web transport for the SMF Service is
            enabled in the Message VPN.
          type: boolean
        serviceMqttWebSocketFailureReason:
          description: The reason for the Web transport related MQTT Service failure
            in the Message VPN.
          type: string
        serviceMqttWebSocketListenPort:
          description: The port number for plain-text MQTT clients that connect to
            the Message VPN using WebSocket. The port must be unique across the message
            backbone. A value of 0 means that the listen-port is unassigned and cannot
            be enabled.
          format: int64
          type: integer
        serviceMqttWebSocketUp:
          description: Indicates whether the Web transport related MQTT Service is
            operationally up in the Message VPN.
          type: boolean
        serviceRestIncomingAuthenticationClientCertRequest:
          description: |-
            Determines when to request a client certificate from an incoming REST Producer connecting via a TLS port. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
          type: string
        serviceRestIncomingAuthorizationHeaderHandling:
          description: |-
            The handling of Authorization headers for incoming REST connections. The allowed values and their meaning are:

            <pre>
            "drop" - Do not attach the Authorization header to the message as a user property. This configuration is most secure.
            "forward" - Forward the Authorization header, attaching it to the message as a user property in the same way as other headers. For best security, use the drop setting.
            "legacy" - If the Authorization header was used for authentication to the broker, do not attach it to the message. If the Authorization header was not used for authentication to the broker, attach it to the message as a user property in the same way as other headers. For best security, use the drop setting.
            </pre>
             Available since 2.19.
          enum:
          - drop
          - forward
          - legacy
          type: string
        serviceRestIncomingMaxConnectionCount:
          description: The maximum number of REST incoming client connections that
            can be simultaneously connected to the Message VPN. This value may be
            higher than supported by the platform.
          format: int64
          type: integer
        serviceRestIncomingPlainTextCompressed:
          description: Indicates whether the incoming REST Service is compressed in
            the Message VPN.
          type: boolean
        serviceRestIncomingPlainTextEnabled:
          description: Indicates whether the REST Service is enabled in the Message
            VPN for incoming clients.
          type: boolean
        serviceRestIncomingPlainTextFailureReason:
          description: The reason for the incoming REST Service failure in the Message
            VPN.
          type: string
        serviceRestIncomingPlainTextListenPort:
          description: The port number for incoming plain-text REST clients that connect
            to the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
          type: integer
        serviceRestIncomingPlainTextUp:
          description: Indicates whether the incoming REST Service is operationally
            up in the Message VPN.
          type: boolean
        serviceRestIncomingTlsCompressed:
          description: Indicates whether the TLS related incoming REST Service is
            compressed in the Message VPN.
          type: boolean
        serviceRestIncomingTlsEnabled:
          description: Indicates whether encryption (TLS) is enabled for incoming
            REST clients in the Message VPN.
          type: boolean
        serviceRestIncomingTlsFailureReason:
          description: The reason for the TLS related incoming REST Service failure
            in the Message VPN.
          type: string
        serviceRestIncomingTlsListenPort:
          description: The port number for incoming REST clients that connect to the
            Message VPN over TLS. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
          format: int64
          type: integer
        serviceRestIncomingTlsUp:
          description: Indicates whether the TLS related incoming REST Service is
            operationally up in the Message VPN.
          type: boolean
        serviceRestMode:
          description: |
            The REST service mode for incoming REST clients that connect to the Message VPN. The allowed values and their meaning are:

            <pre>
            "gateway" - Act as a message gateway through which REST messages are propagated.
            "messaging" - Act as a message broker on which REST messages are queued.
            </pre>
          enum:
          - gateway
          - messaging
          type: string
        serviceRestOutgoingMaxConnectionCount:
          description: The maximum number of REST Consumer (outgoing) client connections
            that can be simultaneously connected to the Message VPN.
          format: int64
          type: integer
        serviceSmfMaxConnectionCount:
          description: The maximum number of SMF client connections that can be simultaneously
            connected to the Message VPN. This value may be higher than supported
            by the platform.
          format: int64
          type: integer
        serviceSmfPlainTextEnabled:
          description: Indicates whether the SMF Service is enabled in the Message
            VPN.
          type: boolean
        serviceSmfPlainTextFailureReason:
          description: The reason for the SMF Service failure in the Message VPN.
          type: string
        serviceSmfPlainTextUp:
          description: Indicates whether the SMF Service is operationally up in the
            Message VPN.
          type: boolean
        serviceSmfTlsEnabled:
          description: Indicates whether encryption (TLS) is enabled for SMF clients
            in the Message VPN.
          type: boolean
        serviceSmfTlsFailureReason:
          description: The reason for the TLS related SMF Service failure in the Message
            VPN.
          type: string
        serviceSmfTlsUp:
          description: Indicates whether the TLS related SMF Service is operationally
            up in the Message VPN.
          type: boolean
        serviceWebAuthenticationClientCertRequest:
          description: |-
            Determines when to request a client certificate from a Web Transport client connecting via a TLS port. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
          type: string
        serviceWebMaxConnectionCount:
          description: The maximum number of Web Transport client connections that
            can be simultaneously connected to the Message VPN. This value may be
            higher than supported by the platform.
          format: int64
          type: integer
        serviceWebPlainTextEnabled:
          description: Indicates whether the Web transport for the SMF Service is
            enabled in the Message VPN.
          type: boolean
        serviceWebPlainTextFailureReason:
          description: The reason for the Web transport related SMF Service failure
            in the Message VPN.
          type: string
        serviceWebPlainTextUp:
          description: Indicates whether the Web transport for the SMF Service is
            operationally up in the Message VPN.
          type: boolean
        serviceWebTlsEnabled:
          description: Indicates whether TLS is enabled for SMF clients in the Message
            VPN that use the Web transport.
          type: boolean
        serviceWebTlsFailureReason:
          description: The reason for the TLS related Web transport SMF Service failure
            in the Message VPN.
          type: string
        serviceWebTlsUp:
          description: Indicates whether the TLS related Web transport SMF Service
            is operationally up in the Message VPN.
          type: boolean
        state:
          description: |
            The operational state of the local Message VPN. The allowed values and their meaning are:

            <pre>
            "up" - The Message VPN is operationally up.
            "down" - The Message VPN is operationally down.
            "standby" - The Message VPN is operationally replication standby.
            </pre>
          type: string
        subscriptionExportProgress:
          description: The progress of the subscription export task, in percent complete.
          format: int64
          type: integer
        systemManager:
          description: Indicates whether the Message VPN is the system manager for
            handling system level SEMP get requests and system level event publishing.
          type: boolean
        tlsAllowDowngradeToPlainTextEnabled:
          description: Indicates whether SMF clients connected to the Message VPN
            are allowed to downgrade their connections from TLS to plain text.
          type: boolean
        tlsAverageRxByteRate:
          description: The one minute average of the TLS message rate received by
            the Message VPN, in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        tlsAverageTxByteRate:
          description: The one minute average of the TLS message rate transmitted
            by the Message VPN, in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        tlsRxByteCount:
          description: The amount of TLS messages received by the Message VPN, in
            bytes (B). Available since 2.13.
          format: int64
          type: integer
        tlsRxByteRate:
          description: The current TLS message rate received by the Message VPN, in
            bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        tlsTxByteCount:
          description: The amount of TLS messages transmitted by the Message VPN,
            in bytes (B). Available since 2.13.
          format: int64
          type: integer
        tlsTxByteRate:
          description: The current TLS message rate transmitted by the Message VPN,
            in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        txByteCount:
          description: The amount of messages transmitted to clients by the Message
            VPN, in bytes (B). Available since 2.12.
          format: int64
          type: integer
        txByteRate:
          description: The current message rate transmitted by the Message VPN, in
            bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        txCompressedByteCount:
          description: The amount of compressed messages transmitted by the Message
            VPN, in bytes (B). Available since 2.12.
          format: int64
          type: integer
        txCompressedByteRate:
          description: The current compressed message rate transmitted by the Message
            VPN, in bytes per second (B/sec). Available since 2.12.
          format: int64
          type: integer
        txCompressionRatio:
          description: The compression ratio for messages transmitted by the message
            VPN. Available since 2.12.
          type: string
        txMsgCount:
          description: The number of messages transmitted to clients by the Message
            VPN. Available since 2.12.
          format: int64
          type: integer
        txMsgRate:
          description: The current message rate transmitted by the Message VPN, in
            messages per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        txUncompressedByteCount:
          description: The amount of uncompressed messages transmitted by the Message
            VPN, in bytes (B). Available since 2.12.
          format: int64
          type: integer
        txUncompressedByteRate:
          description: The current uncompressed message rate transmitted by the Message
            VPN, in bytes per second (B/sec). Available since 2.12.
          format: int64
          type: integer
      type: object
    MsgVpnAclProfile:
      example:
        clientConnectDefaultAction: allow
        publishTopicDefaultAction: allow
        subscribeTopicDefaultAction: allow
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        subscribeShareNameDefaultAction: allow
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        clientConnectDefaultAction:
          description: |
            The default action to take when a client using the ACL Profile connects to the Message VPN. The allowed values and their meaning are:

            <pre>
            "allow" - Allow client connection unless an exception is found for it.
            "disallow" - Disallow client connection unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        publishTopicDefaultAction:
          description: |
            The default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
          type: string
        subscribeShareNameDefaultAction:
          description: |-
            The default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
             Available since 2.14.
          enum:
          - allow
          - disallow
          type: string
        subscribeTopicDefaultAction:
          description: |
            The default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
          type: string
      type: object
    MsgVpnAclProfileClientConnectException:
      example:
        clientConnectExceptionAddress: clientConnectExceptionAddress
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        clientConnectExceptionAddress:
          description: The IP address/netmask of the client connect exception in CIDR
            form.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnAclProfileClientConnectExceptionCollections:
      type: object
    MsgVpnAclProfileClientConnectExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Connect Exception object.
          type: string
      type: object
    MsgVpnAclProfileClientConnectExceptionResponse:
      example:
        data:
          clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileClientConnectExceptionsResponse:
      example:
        data:
        - clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        - clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileCollections:
      example:
        subscribeTopicExceptions:
          count: 2
        subscribeShareNameExceptions:
          count: 5
        publishExceptions:
          count: 6
        subscribeExceptions:
          count: 5
        clientConnectExceptions:
          count: 0
        publishTopicExceptions:
          count: 1
      properties:
        clientConnectExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsClientconnectexceptions'
        publishExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsPublishexceptions'
        publishTopicExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsPublishtopicexceptions'
        subscribeExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsSubscribeexceptions'
        subscribeShareNameExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsSubscribesharenameexceptions'
        subscribeTopicExceptions:
          $ref: '#/components/schemas/MsgVpnAclProfileCollectionsSubscribetopicexceptions'
      type: object
    MsgVpnAclProfileCollectionsClientconnectexceptions:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the clientConnectExceptions
            collection.
          format: int64
          type: integer
      type: object
    MsgVpnAclProfileCollectionsPublishexceptions:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the publishExceptions collection.
            Deprecated since 2.14. Replaced by publishTopicExceptions.
          format: int64
          type: integer
      type: object
    MsgVpnAclProfileCollectionsPublishtopicexceptions:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the publishTopicExceptions collection.
            Available since 2.14.
          format: int64
          type: integer
      type: object
    MsgVpnAclProfileCollectionsSubscribeexceptions:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the subscribeExceptions collection.
            Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          format: int64
          type: integer
      type: object
    MsgVpnAclProfileCollectionsSubscribesharenameexceptions:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the subscribeShareNameExceptions
            collection. Available since 2.14.
          format: int64
          type: integer
      type: object
    MsgVpnAclProfileCollectionsSubscribetopicexceptions:
      example:
        count: 2
      properties:
        count:
          description: The total number of objects in the subscribeTopicExceptions
            collection. Available since 2.14.
          format: int64
          type: integer
      type: object
    MsgVpnAclProfileLinks:
      example:
        clientConnectExceptionsUri: clientConnectExceptionsUri
        subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
        subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
        publishExceptionsUri: publishExceptionsUri
        uri: uri
        publishTopicExceptionsUri: publishTopicExceptionsUri
        subscribeExceptionsUri: subscribeExceptionsUri
      properties:
        clientConnectExceptionsUri:
          description: The URI of this ACL Profile's collection of Client Connect
            Exception objects.
          type: string
        publishExceptionsUri:
          description: The URI of this ACL Profile's collection of Publish Topic Exception
            objects. Deprecated since 2.14. Replaced by publishTopicExceptions.
          type: string
        publishTopicExceptionsUri:
          description: The URI of this ACL Profile's collection of Publish Topic Exception
            objects. Available since 2.14.
          type: string
        subscribeExceptionsUri:
          description: The URI of this ACL Profile's collection of Subscribe Topic
            Exception objects. Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          type: string
        subscribeShareNameExceptionsUri:
          description: The URI of this ACL Profile's collection of Subscribe Share
            Name Exception objects. Available since 2.14.
          type: string
        subscribeTopicExceptionsUri:
          description: The URI of this ACL Profile's collection of Subscribe Topic
            Exception objects. Available since 2.14.
          type: string
        uri:
          description: The URI of this ACL Profile object.
          type: string
      type: object
    MsgVpnAclProfilePublishException:
      example:
        publishExceptionTopic: publishExceptionTopic
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        topicSyntax: smf
      properties:
        aclProfileName:
          description: The name of the ACL Profile. Deprecated since 2.14. Replaced
            by publishTopicExceptions.
          type: string
        msgVpnName:
          description: The name of the Message VPN. Deprecated since 2.14. Replaced
            by publishTopicExceptions.
          type: string
        publishExceptionTopic:
          description: The topic for the exception to the default action taken. May
            include wildcard characters. Deprecated since 2.14. Replaced by publishTopicExceptions.
          type: string
        topicSyntax:
          description: |-
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
             Deprecated since 2.14. Replaced by publishTopicExceptions.
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfilePublishExceptionCollections:
      type: object
    MsgVpnAclProfilePublishExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Publish Topic Exception object.
          type: string
      type: object
    MsgVpnAclProfilePublishExceptionResponse:
      example:
        data:
          publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfilePublishExceptionsResponse:
      example:
        data:
        - publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        - publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfilePublishTopicException:
      example:
        publishTopicExceptionSyntax: smf
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        publishTopicException: publishTopicException
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        publishTopicException:
          description: The topic for the exception to the default action taken. May
            include wildcard characters.
          type: string
        publishTopicExceptionSyntax:
          description: |
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfilePublishTopicExceptionCollections:
      type: object
    MsgVpnAclProfilePublishTopicExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Publish Topic Exception object.
          type: string
      type: object
    MsgVpnAclProfilePublishTopicExceptionResponse:
      example:
        data:
          publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfilePublishTopicExceptionsResponse:
      example:
        data:
        - publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        - publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileResponse:
      example:
        data:
          clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        collections:
          subscribeTopicExceptions:
            count: 2
          subscribeShareNameExceptions:
            count: 5
          publishExceptions:
            count: 6
          subscribeExceptions:
            count: 5
          clientConnectExceptions:
            count: 0
          publishTopicExceptions:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnAclProfileCollections'
        data:
          $ref: '#/components/schemas/MsgVpnAclProfile'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeException:
      example:
        msgVpnName: msgVpnName
        subscribeExceptionTopic: subscribeExceptionTopic
        aclProfileName: aclProfileName
        topicSyntax: smf
      properties:
        aclProfileName:
          description: The name of the ACL Profile. Deprecated since 2.14. Replaced
            by subscribeTopicExceptions.
          type: string
        msgVpnName:
          description: The name of the Message VPN. Deprecated since 2.14. Replaced
            by subscribeTopicExceptions.
          type: string
        subscribeExceptionTopic:
          description: The topic for the exception to the default action taken. May
            include wildcard characters. Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          type: string
        topicSyntax:
          description: |-
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
             Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfileSubscribeExceptionCollections:
      type: object
    MsgVpnAclProfileSubscribeExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Subscribe Topic Exception object.
          type: string
      type: object
    MsgVpnAclProfileSubscribeExceptionResponse:
      example:
        data:
          msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeExceptionsResponse:
      example:
        data:
        - msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        - msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeShareNameException:
      example:
        subscribeShareNameExceptionSyntax: smf
        msgVpnName: msgVpnName
        subscribeShareNameException: subscribeShareNameException
        aclProfileName: aclProfileName
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        subscribeShareNameException:
          description: The subscribe share name exception to the default action taken.
            May include wildcard characters.
          type: string
        subscribeShareNameExceptionSyntax:
          description: |
            The syntax of the subscribe share name for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfileSubscribeShareNameExceptionCollections:
      type: object
    MsgVpnAclProfileSubscribeShareNameExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Subscribe Share Name Exception object.
          type: string
      type: object
    MsgVpnAclProfileSubscribeShareNameExceptionResponse:
      example:
        data:
          subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeShareNameExceptionsResponse:
      example:
        data:
        - subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        - subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeTopicException:
      example:
        subscribeTopicException: subscribeTopicException
        subscribeTopicExceptionSyntax: smf
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        subscribeTopicException:
          description: The topic for the exception to the default action taken. May
            include wildcard characters.
          type: string
        subscribeTopicExceptionSyntax:
          description: |
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfileSubscribeTopicExceptionCollections:
      type: object
    MsgVpnAclProfileSubscribeTopicExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Subscribe Topic Exception object.
          type: string
      type: object
    MsgVpnAclProfileSubscribeTopicExceptionResponse:
      example:
        data:
          subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeTopicExceptionsResponse:
      example:
        data:
        - subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        - subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfilesResponse:
      example:
        data:
        - clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        - clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        collections:
        - subscribeTopicExceptions:
            count: 2
          subscribeShareNameExceptions:
            count: 5
          publishExceptions:
            count: 6
          subscribeExceptions:
            count: 5
          clientConnectExceptions:
            count: 0
          publishTopicExceptions:
            count: 1
        - subscribeTopicExceptions:
            count: 2
          subscribeShareNameExceptions:
            count: 5
          publishExceptions:
            count: 6
          subscribeExceptions:
            count: 5
          clientConnectExceptions:
            count: 0
          publishTopicExceptions:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
        - clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfile'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAuthenticationOauthProvider:
      example:
        audienceValidationEnabled: true
        loginFailureMissingOrInvalidTokenCount: 1
        jwksRefreshFailureCount: 5
        loginFailureTokenIntrospectionErroredCount: 1
        loginFailureTokenIntrospectionHttpsErrorCount: 5
        tokenIntrospectionTimeout: 1
        loginFailureInvalidAuthorizationGroupValueCount: 3
        jwksNextScheduledRefreshTime: 5
        msgVpnName: msgVpnName
        loginFailureTokenIntrospectionFailureCount: 4
        loginFailureUnsupportedAlgCount: 8
        usernameValidateEnabled: true
        tokenIntrospectionLastFailureReason: tokenIntrospectionLastFailureReason
        missingAuthorizationGroupCount: 9
        loginFailureMissingAudienceCount: 1
        tokenIgnoreTimeLimitsEnabled: true
        jwksLastRefreshTime: 1
        loginFailureTokenIntrospectionTimeoutCount: 9
        loginFailureMissingJwkCount: 1
        loginFailureInvalidUsernameValueCount: 4
        jwksLastRefreshFailureTime: 6
        jwksUri: jwksUri
        loginFailureTokenNotValidYetCount: 6
        loginFailureMissingUsernameCount: 6
        loginFailureTokenIntrospectionInvalidCount: 9
        enabled: true
        jwksRefreshInterval: 2
        authenticationSuccessCount: 0
        authorizationGroupEnabled: true
        tokenIntrospectionLastFailureTime: 3
        authorizationGroupClaimName: authorizationGroupClaimName
        disconnectOnTokenExpirationEnabled: true
        usernameClaimName: usernameClaimName
        audienceClaimName: audienceClaimName
        tokenIntrospectionParameterName: tokenIntrospectionParameterName
        loginFailureTokenExpiredCount: 7
        loginFailureIncorrectAudienceValueCount: 7
        loginFailureInvalidJwtSignatureCount: 2
        audienceClaimValue: audienceClaimValue
        oauthProviderName: oauthProviderName
        loginFailureMismatchedUsernameCount: 7
        loginFailureInvalidAudienceValueCount: 9
        tokenIntrospectionUsername: tokenIntrospectionUsername
        authorizationGroupClaimSource: access-token
        usernameClaimSource: access-token
        jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
        audienceClaimSource: access-token
        tokenIntrospectionUri: tokenIntrospectionUri
        tokenIntrospectionSuccessCount: 6
        tokenIntrospectionAverageTime: 6
      properties:
        audienceClaimName:
          description: The audience claim name, indicating which part of the object
            to use for determining the audience.
          type: string
        audienceClaimSource:
          description: |
            The audience claim source, indicating where to search for the audience value. The allowed values and their meaning are:

            <pre>
            "access-token" - The OAuth v2 access_token.
            "id-token" - The OpenID Connect id_token.
            "introspection" - The result of introspecting the OAuth v2 access_token.
            </pre>
          enum:
          - access-token
          - id-token
          - introspection
          type: string
        audienceClaimValue:
          description: The required audience value for a token to be considered valid.
          type: string
        audienceValidationEnabled:
          description: Indicates whether audience validation is enabled.
          type: boolean
        authenticationSuccessCount:
          description: The number of OAuth Provider client authentications that succeeded.
          format: int64
          type: integer
        authorizationGroupClaimName:
          description: The authorization group claim name, indicating which part of
            the object to use for determining the authorization group.
          type: string
        authorizationGroupClaimSource:
          description: |
            The authorization group claim source, indicating where to search for the authorization group name. The allowed values and their meaning are:

            <pre>
            "access-token" - The OAuth v2 access_token.
            "id-token" - The OpenID Connect id_token.
            "introspection" - The result of introspecting the OAuth v2 access_token.
            </pre>
          enum:
          - access-token
          - id-token
          - introspection
          type: string
        authorizationGroupEnabled:
          description: Indicates whether OAuth based authorization is enabled and
            the configured authorization type for OAuth clients is overridden.
          type: boolean
        disconnectOnTokenExpirationEnabled:
          description: Indicates whether clients are disconnected when their tokens
            expire.
          type: boolean
        enabled:
          description: Indicates whether OAuth Provider client authentication is enabled.
          type: boolean
        jwksLastRefreshFailureReason:
          description: The reason for the last JWKS public key refresh failure.
          type: string
        jwksLastRefreshFailureTime:
          description: The timestamp of the last JWKS public key refresh failure.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        jwksLastRefreshTime:
          description: The timestamp of the last JWKS public key refresh success.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        jwksNextScheduledRefreshTime:
          description: The timestamp of the next scheduled JWKS public key refresh.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        jwksRefreshFailureCount:
          description: The number of JWKS public key refresh failures.
          format: int64
          type: integer
        jwksRefreshInterval:
          description: The number of seconds between forced JWKS public key refreshing.
          format: int32
          type: integer
        jwksUri:
          description: The URI where the OAuth provider publishes its JWKS public
            keys.
          type: string
        loginFailureIncorrectAudienceValueCount:
          description: The number of login failures due to an incorrect audience value.
          format: int64
          type: integer
        loginFailureInvalidAudienceValueCount:
          description: The number of login failures due to an invalid audience value.
          format: int64
          type: integer
        loginFailureInvalidAuthorizationGroupValueCount:
          description: The number of login failures due to an invalid authorization
            group value (zero-length or non-string).
          format: int64
          type: integer
        loginFailureInvalidJwtSignatureCount:
          description: The number of login failures due to an invalid JWT signature.
          format: int64
          type: integer
        loginFailureInvalidUsernameValueCount:
          description: The number of login failures due to an invalid username value.
          format: int64
          type: integer
        loginFailureMismatchedUsernameCount:
          description: The number of login failures due to a mismatched username.
          format: int64
          type: integer
        loginFailureMissingAudienceCount:
          description: The number of login failures due to a missing audience claim.
          format: int64
          type: integer
        loginFailureMissingJwkCount:
          description: The number of login failures due to a missing JSON Web Key
            (JWK).
          format: int64
          type: integer
        loginFailureMissingOrInvalidTokenCount:
          description: The number of login failures due to a missing or invalid token.
          format: int64
          type: integer
        loginFailureMissingUsernameCount:
          description: The number of login failures due to a missing username.
          format: int64
          type: integer
        loginFailureTokenExpiredCount:
          description: The number of login failures due to a token being expired.
          format: int64
          type: integer
        loginFailureTokenIntrospectionErroredCount:
          description: The number of login failures due to a token introspection error
            response.
          format: int64
          type: integer
        loginFailureTokenIntrospectionFailureCount:
          description: The number of login failures due to a failure to complete the
            token introspection.
          format: int64
          type: integer
        loginFailureTokenIntrospectionHttpsErrorCount:
          description: The number of login failures due to a token introspection HTTPS
            error.
          format: int64
          type: integer
        loginFailureTokenIntrospectionInvalidCount:
          description: The number of login failures due to a token introspection response
            being invalid.
          format: int64
          type: integer
        loginFailureTokenIntrospectionTimeoutCount:
          description: The number of login failures due to a token introspection timeout.
          format: int64
          type: integer
        loginFailureTokenNotValidYetCount:
          description: The number of login failures due to a token not being valid
            yet.
          format: int64
          type: integer
        loginFailureUnsupportedAlgCount:
          description: The number of login failures due to an unsupported algorithm.
          format: int64
          type: integer
        missingAuthorizationGroupCount:
          description: The number of clients that did not provide an authorization
            group claim value when expected.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        oauthProviderName:
          description: The name of the OAuth Provider.
          type: string
        tokenIgnoreTimeLimitsEnabled:
          description: Indicates whether to ignore time limits and accept tokens that
            are not yet valid or are no longer valid.
          type: boolean
        tokenIntrospectionAverageTime:
          description: The one minute average of the time required to complete a token
            introspection, in milliseconds (ms).
          format: int32
          type: integer
        tokenIntrospectionLastFailureReason:
          description: The reason for the last token introspection failure.
          type: string
        tokenIntrospectionLastFailureTime:
          description: The timestamp of the last token introspection failure. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
          type: integer
        tokenIntrospectionParameterName:
          description: The parameter name used to identify the token during access
            token introspection. A standards compliant OAuth introspection server
            expects "token".
          type: string
        tokenIntrospectionSuccessCount:
          description: The number of token introspection successes.
          format: int64
          type: integer
        tokenIntrospectionTimeout:
          description: The maximum time in seconds a token introspection is allowed
            to take.
          format: int32
          type: integer
        tokenIntrospectionUri:
          description: The token introspection URI of the OAuth authentication server.
          type: string
        tokenIntrospectionUsername:
          description: The username to use when logging into the token introspection
            URI.
          type: string
        usernameClaimName:
          description: The username claim name, indicating which part of the object
            to use for determining the username.
          type: string
        usernameClaimSource:
          description: |
            The username claim source, indicating where to search for the username value. The allowed values and their meaning are:

            <pre>
            "access-token" - The OAuth v2 access_token.
            "id-token" - The OpenID Connect id_token.
            "introspection" - The result of introspecting the OAuth v2 access_token.
            </pre>
          enum:
          - access-token
          - id-token
          - introspection
          type: string
        usernameValidateEnabled:
          description: Indicates whether the API provided username will be validated
            against the username calculated from the token(s).
          type: boolean
      type: object
    MsgVpnAuthenticationOauthProviderCollections:
      type: object
    MsgVpnAuthenticationOauthProviderLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this OAuth Provider object.
          type: string
      type: object
    MsgVpnAuthenticationOauthProviderResponse:
      example:
        data:
          audienceValidationEnabled: true
          loginFailureMissingOrInvalidTokenCount: 1
          jwksRefreshFailureCount: 5
          loginFailureTokenIntrospectionErroredCount: 1
          loginFailureTokenIntrospectionHttpsErrorCount: 5
          tokenIntrospectionTimeout: 1
          loginFailureInvalidAuthorizationGroupValueCount: 3
          jwksNextScheduledRefreshTime: 5
          msgVpnName: msgVpnName
          loginFailureTokenIntrospectionFailureCount: 4
          loginFailureUnsupportedAlgCount: 8
          usernameValidateEnabled: true
          tokenIntrospectionLastFailureReason: tokenIntrospectionLastFailureReason
          missingAuthorizationGroupCount: 9
          loginFailureMissingAudienceCount: 1
          tokenIgnoreTimeLimitsEnabled: true
          jwksLastRefreshTime: 1
          loginFailureTokenIntrospectionTimeoutCount: 9
          loginFailureMissingJwkCount: 1
          loginFailureInvalidUsernameValueCount: 4
          jwksLastRefreshFailureTime: 6
          jwksUri: jwksUri
          loginFailureTokenNotValidYetCount: 6
          loginFailureMissingUsernameCount: 6
          loginFailureTokenIntrospectionInvalidCount: 9
          enabled: true
          jwksRefreshInterval: 2
          authenticationSuccessCount: 0
          authorizationGroupEnabled: true
          tokenIntrospectionLastFailureTime: 3
          authorizationGroupClaimName: authorizationGroupClaimName
          disconnectOnTokenExpirationEnabled: true
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
          loginFailureTokenExpiredCount: 7
          loginFailureIncorrectAudienceValueCount: 7
          loginFailureInvalidJwtSignatureCount: 2
          audienceClaimValue: audienceClaimValue
          oauthProviderName: oauthProviderName
          loginFailureMismatchedUsernameCount: 7
          loginFailureInvalidAudienceValueCount: 9
          tokenIntrospectionUsername: tokenIntrospectionUsername
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          audienceClaimSource: access-token
          tokenIntrospectionUri: tokenIntrospectionUri
          tokenIntrospectionSuccessCount: 6
          tokenIntrospectionAverageTime: 6
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        links:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAuthenticationOauthProvidersResponse:
      example:
        data:
        - audienceValidationEnabled: true
          loginFailureMissingOrInvalidTokenCount: 1
          jwksRefreshFailureCount: 5
          loginFailureTokenIntrospectionErroredCount: 1
          loginFailureTokenIntrospectionHttpsErrorCount: 5
          tokenIntrospectionTimeout: 1
          loginFailureInvalidAuthorizationGroupValueCount: 3
          jwksNextScheduledRefreshTime: 5
          msgVpnName: msgVpnName
          loginFailureTokenIntrospectionFailureCount: 4
          loginFailureUnsupportedAlgCount: 8
          usernameValidateEnabled: true
          tokenIntrospectionLastFailureReason: tokenIntrospectionLastFailureReason
          missingAuthorizationGroupCount: 9
          loginFailureMissingAudienceCount: 1
          tokenIgnoreTimeLimitsEnabled: true
          jwksLastRefreshTime: 1
          loginFailureTokenIntrospectionTimeoutCount: 9
          loginFailureMissingJwkCount: 1
          loginFailureInvalidUsernameValueCount: 4
          jwksLastRefreshFailureTime: 6
          jwksUri: jwksUri
          loginFailureTokenNotValidYetCount: 6
          loginFailureMissingUsernameCount: 6
          loginFailureTokenIntrospectionInvalidCount: 9
          enabled: true
          jwksRefreshInterval: 2
          authenticationSuccessCount: 0
          authorizationGroupEnabled: true
          tokenIntrospectionLastFailureTime: 3
          authorizationGroupClaimName: authorizationGroupClaimName
          disconnectOnTokenExpirationEnabled: true
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
          loginFailureTokenExpiredCount: 7
          loginFailureIncorrectAudienceValueCount: 7
          loginFailureInvalidJwtSignatureCount: 2
          audienceClaimValue: audienceClaimValue
          oauthProviderName: oauthProviderName
          loginFailureMismatchedUsernameCount: 7
          loginFailureInvalidAudienceValueCount: 9
          tokenIntrospectionUsername: tokenIntrospectionUsername
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          audienceClaimSource: access-token
          tokenIntrospectionUri: tokenIntrospectionUri
          tokenIntrospectionSuccessCount: 6
          tokenIntrospectionAverageTime: 6
        - audienceValidationEnabled: true
          loginFailureMissingOrInvalidTokenCount: 1
          jwksRefreshFailureCount: 5
          loginFailureTokenIntrospectionErroredCount: 1
          loginFailureTokenIntrospectionHttpsErrorCount: 5
          tokenIntrospectionTimeout: 1
          loginFailureInvalidAuthorizationGroupValueCount: 3
          jwksNextScheduledRefreshTime: 5
          msgVpnName: msgVpnName
          loginFailureTokenIntrospectionFailureCount: 4
          loginFailureUnsupportedAlgCount: 8
          usernameValidateEnabled: true
          tokenIntrospectionLastFailureReason: tokenIntrospectionLastFailureReason
          missingAuthorizationGroupCount: 9
          loginFailureMissingAudienceCount: 1
          tokenIgnoreTimeLimitsEnabled: true
          jwksLastRefreshTime: 1
          loginFailureTokenIntrospectionTimeoutCount: 9
          loginFailureMissingJwkCount: 1
          loginFailureInvalidUsernameValueCount: 4
          jwksLastRefreshFailureTime: 6
          jwksUri: jwksUri
          loginFailureTokenNotValidYetCount: 6
          loginFailureMissingUsernameCount: 6
          loginFailureTokenIntrospectionInvalidCount: 9
          enabled: true
          jwksRefreshInterval: 2
          authenticationSuccessCount: 0
          authorizationGroupEnabled: true
          tokenIntrospectionLastFailureTime: 3
          authorizationGroupClaimName: authorizationGroupClaimName
          disconnectOnTokenExpirationEnabled: true
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
          loginFailureTokenExpiredCount: 7
          loginFailureIncorrectAudienceValueCount: 7
          loginFailureInvalidJwtSignatureCount: 2
          audienceClaimValue: audienceClaimValue
          oauthProviderName: oauthProviderName
          loginFailureMismatchedUsernameCount: 7
          loginFailureInvalidAudienceValueCount: 9
          tokenIntrospectionUsername: tokenIntrospectionUsername
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksLastRefreshFailureReason: jwksLastRefreshFailureReason
          audienceClaimSource: access-token
          tokenIntrospectionUri: tokenIntrospectionUri
          tokenIntrospectionSuccessCount: 6
          tokenIntrospectionAverageTime: 6
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAuthorizationGroup:
      example:
        authorizationGroupName: authorizationGroupName
        clientProfileName: clientProfileName
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        enabled: true
      properties:
        aclProfileName:
          description: The ACL Profile of the LDAP Authorization Group.
          type: string
        authorizationGroupName:
          description: The name of the LDAP Authorization Group. Special care is needed
            if the group name contains special characters such as '#', '+', ';', '='
            as the value of the group name returned from the LDAP server might prepend
            those characters with '\'. For example a group name called 'test#,lab,com'
            will be returned from the LDAP server as 'test\#,lab,com'.
          type: string
        clientProfileName:
          description: The Client Profile of the LDAP Authorization Group.
          type: string
        enabled:
          description: Indicates whether the LDAP Authorization Group is enabled.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnAuthorizationGroupCollections:
      type: object
    MsgVpnAuthorizationGroupLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this LDAP Authorization Group object.
          type: string
      type: object
    MsgVpnAuthorizationGroupResponse:
      example:
        data:
          authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        links:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroupLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAuthorizationGroupsResponse:
      example:
        data:
        - authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
        - authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroupCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroupLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridge:
      example:
        averageRxByteRate: 5
        remoteTxFlowId: 0
        txMsgRate: 9
        dataRxByteCount: 2
        remoteDeliverToOnePriority: p1
        rxMsgRate: 4
        localInterface: localInterface
        dataTxMsgCount: 5
        discardedRxMsgCount: 6
        remoteConnectionRetryCount: 3
        msgVpnName: msgVpnName
        txMsgCount: 0
        remoteAddress: remoteAddress
        averageTxMsgRate: 9
        msgSpoolRxMsgCount: 6
        remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
        controlRxByteCount: 3
        rxByteCount: 6
        outboundState: outboundState
        dataTxByteCount: 6
        bridgeVirtualRouter: primary
        inboundState: inboundState
        tlsCipherSuiteList: tlsCipherSuiteList
        lastTxMsgId: 3
        remoteAuthenticationScheme: basic
        rxByteRate: 4
        loginRxMsgCount: 7
        boundToQueue: true
        clientName: clientName
        controlRxMsgCount: 2
        enabled: true
        txByteRate: 9
        inboundFailureReason: inboundFailureReason
        remoteMsgVpnName: remoteMsgVpnName
        averageTxByteRate: 7
        rate:
          averageRxByteRate: 0
          txMsgRate: 5
          averageTxByteRate: 8
          averageRxMsgRate: 4
          rxByteRate: 3
          rxMsgRate: 3
          averageTxMsgRate: 7
          txByteRate: 7
        discardedTxMsgCount: 3
        ttlExceededEventRaised: true
        remoteConnectionRetryDelay: 4
        establisher: establisher
        controlTxMsgCount: 7
        rxMsgCount: 1
        maxTtl: 7
        averageRxMsgRate: 2
        dataRxMsgCount: 6
        localQueueName: localQueueName
        counter:
          loginRxMsgCount: 6
          msgSpoolRxMsgCount: 9
          controlTxMsgCount: 6
          rxMsgCount: 3
          controlRxByteCount: 1
          dataRxByteCount: 7
          dataRxMsgCount: 1
          rxByteCount: 6
          controlRxMsgCount: 1
          loginTxMsgCount: 8
          controlTxByteCount: 1
          dataTxByteCount: 4
          txByteCount: 6
          dataTxMsgCount: 5
          discardedRxMsgCount: 9
          discardedTxMsgCount: 9
          txMsgCount: 1
        loginTxMsgCount: 0
        remoteRouterName: remoteRouterName
        bridgeName: bridgeName
        tlsDefaultCipherSuiteList: true
        controlTxByteCount: 4
        rxConnectionFailureCategory: rxConnectionFailureCategory
        uptime: 0
        txByteCount: 7
        encrypted: true
        compressed: true
      properties:
        averageRxByteRate:
          description: The one minute average of the message rate received from the
            Bridge, in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        averageRxMsgRate:
          description: The one minute average of the message rate received from the
            Bridge, in messages per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        averageTxByteRate:
          description: The one minute average of the message rate transmitted to the
            Bridge, in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        averageTxMsgRate:
          description: The one minute average of the message rate transmitted to the
            Bridge, in messages per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        boundToQueue:
          description: Indicates whether the Bridge is bound to the queue in the remote
            Message VPN.
          type: boolean
        bridgeName:
          description: The name of the Bridge.
          type: string
        bridgeVirtualRouter:
          description: |
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
          enum:
          - primary
          - backup
          - auto
          type: string
        clientName:
          description: The name of the Client for the Bridge.
          type: string
        compressed:
          description: Indicates whether messages transmitted over the Bridge are
            compressed.
          type: boolean
        controlRxByteCount:
          description: The amount of client control messages received from the Bridge,
            in bytes (B). Available since 2.13.
          format: int64
          type: integer
        controlRxMsgCount:
          description: The number of client control messages received from the Bridge.
            Available since 2.13.
          format: int64
          type: integer
        controlTxByteCount:
          description: The amount of client control messages transmitted to the Bridge,
            in bytes (B). Available since 2.13.
          format: int64
          type: integer
        controlTxMsgCount:
          description: The number of client control messages transmitted to the Bridge.
            Available since 2.13.
          format: int64
          type: integer
        counter:
          $ref: '#/components/schemas/MsgVpnBridgeCounter'
        dataRxByteCount:
          description: The amount of client data messages received from the Bridge,
            in bytes (B). Available since 2.13.
          format: int64
          type: integer
        dataRxMsgCount:
          description: The number of client data messages received from the Bridge.
            Available since 2.13.
          format: int64
          type: integer
        dataTxByteCount:
          description: The amount of client data messages transmitted to the Bridge,
            in bytes (B). Available since 2.13.
          format: int64
          type: integer
        dataTxMsgCount:
          description: The number of client data messages transmitted to the Bridge.
            Available since 2.13.
          format: int64
          type: integer
        discardedRxMsgCount:
          description: The number of messages discarded during reception from the
            Bridge. Available since 2.13.
          format: int64
          type: integer
        discardedTxMsgCount:
          description: The number of messages discarded during transmission to the
            Bridge. Available since 2.13.
          format: int64
          type: integer
        enabled:
          description: Indicates whether the Bridge is enabled.
          type: boolean
        encrypted:
          description: Indicates whether messages transmitted over the Bridge are
            encrypted with TLS.
          type: boolean
        establisher:
          description: |
            The establisher of the Bridge connection. The allowed values and their meaning are:

            <pre>
            "local" - The Bridge connection was established by the local Message VPN.
            "remote" - The Bridge connection was established by the remote Message VPN.
            </pre>
          type: string
        inboundFailureReason:
          description: The reason for the inbound connection failure from the Bridge.
            If there is no failure reason, an empty string ("") is returned.
          type: string
        inboundState:
          description: |
            The state of the inbound connection from the Bridge. The allowed values and their meaning are:

            <pre>
            "init" - The connection is initializing.
            "disabled" - The connection is disabled by configuration.
            "enabled" - The connection is enabled by configuration.
            "prepare" - The connection is operationally down.
            "prepare-wait-to-connect" - The connection is waiting to connect.
            "prepare-fetching-dns" - The domain name of the destination node is being resolved.
            "not-ready" - The connection is operationally down.
            "not-ready-connecting" - The connection is trying to connect.
            "not-ready-handshaking" - The connection is handshaking.
            "not-ready-wait-next" - The connection failed to connect and is waiting to retry.
            "not-ready-wait-reuse" - The connection is closing in order to reuse an existing connection.
            "not-ready-wait-bridge-version-mismatch" - The connection is closing because of a version mismatch.
            "not-ready-wait-cleanup" - The connection is closed and cleaning up.
            "ready" - The connection is operationally up.
            "ready-subscribing" - The connection is up and synchronizing subscriptions.
            "ready-in-sync" - The connection is up and subscriptions are synchronized.
            </pre>
          type: string
        lastTxMsgId:
          description: The ID of the last message transmitted to the Bridge.
          format: int64
          type: integer
        localInterface:
          description: The physical interface on the local Message VPN host for connecting
            to the remote Message VPN.
          type: string
        localQueueName:
          description: The name of the local queue for the Bridge.
          type: string
        loginRxMsgCount:
          description: The number of login request messages received from the Bridge.
            Available since 2.13.
          format: int64
          type: integer
        loginTxMsgCount:
          description: The number of login response messages transmitted to the Bridge.
            Available since 2.13.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time-to-live (TTL) in hops. Messages are discarded
            if their TTL exceeds this value.
          format: int64
          type: integer
        msgSpoolRxMsgCount:
          description: The number of guaranteed messages received from the Bridge.
            Available since 2.13.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        outboundState:
          description: |
            The state of the outbound connection to the Bridge. The allowed values and their meaning are:

            <pre>
            "init" - The connection is initializing.
            "disabled" - The connection is disabled by configuration.
            "enabled" - The connection is enabled by configuration.
            "prepare" - The connection is operationally down.
            "prepare-wait-to-connect" - The connection is waiting to connect.
            "prepare-fetching-dns" - The domain name of the destination node is being resolved.
            "not-ready" - The connection is operationally down.
            "not-ready-connecting" - The connection is trying to connect.
            "not-ready-handshaking" - The connection is handshaking.
            "not-ready-wait-next" - The connection failed to connect and is waiting to retry.
            "not-ready-wait-reuse" - The connection is closing in order to reuse an existing connection.
            "not-ready-wait-bridge-version-mismatch" - The connection is closing because of a version mismatch.
            "not-ready-wait-cleanup" - The connection is closed and cleaning up.
            "ready" - The connection is operationally up.
            "ready-subscribing" - The connection is up and synchronizing subscriptions.
            "ready-in-sync" - The connection is up and subscriptions are synchronized.
            </pre>
          type: string
        rate:
          $ref: '#/components/schemas/MsgVpnBridgeRate'
        remoteAddress:
          description: The FQDN or IP address of the remote Message VPN.
          type: string
        remoteAuthenticationBasicClientUsername:
          description: The Client Username the Bridge uses to login to the remote
            Message VPN.
          type: string
        remoteAuthenticationScheme:
          description: |
            The authentication scheme for the remote Message VPN. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
          type: string
        remoteConnectionRetryCount:
          description: The maximum number of retry attempts to establish a connection
            to the remote Message VPN. A value of 0 means to retry forever.
          format: int64
          type: integer
        remoteConnectionRetryDelay:
          description: The number of seconds the broker waits for the bridge connection
            to be established before attempting a new connection.
          format: int64
          type: integer
        remoteDeliverToOnePriority:
          description: |
            The priority for deliver-to-one (DTO) messages transmitted from the remote Message VPN. The allowed values and their meaning are:

            <pre>
            "p1" - The 1st or highest priority.
            "p2" - The 2nd highest priority.
            "p3" - The 3rd highest priority.
            "p4" - The 4th highest priority.
            "da" - Ignore priority and deliver always.
            </pre>
          enum:
          - p1
          - p2
          - p3
          - p4
          - da
          type: string
        remoteMsgVpnName:
          description: The name of the remote Message VPN.
          type: string
        remoteRouterName:
          description: The name of the remote router.
          type: string
        remoteTxFlowId:
          description: The ID of the transmit flow for the connected remote Message
            VPN.
          format: int32
          type: integer
        rxByteCount:
          description: The amount of messages received from the Bridge, in bytes (B).
            Available since 2.13.
          format: int64
          type: integer
        rxByteRate:
          description: The current message rate received from the Bridge, in bytes
            per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        rxConnectionFailureCategory:
          description: |-
            The category of the inbound connection failure from the Bridge. The allowed values and their meaning are:

            <pre>
            "no-failure" - There is no bridge failure.
            "local-configuration-problem" - The bridge failure is a local configuration problem.
            "local-operational-state-problem" - The bridge failure is an operational state problem.
            </pre>
             Available since 2.18.
          type: string
        rxMsgCount:
          description: The number of messages received from the Bridge. Available
            since 2.13.
          format: int64
          type: integer
        rxMsgRate:
          description: The current message rate received from the Bridge, in messages
            per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        tlsCipherSuiteList:
          description: The colon-separated list of cipher suites supported for TLS
            connections to the remote Message VPN. The value "default" implies all
            supported suites ordered from most secure to least secure.
          type: string
        tlsDefaultCipherSuiteList:
          description: Indicates whether the Bridge is configured to use the default
            cipher-suite list.
          type: boolean
        ttlExceededEventRaised:
          description: Indicates whether the TTL (hops) exceeded event has been raised.
          type: boolean
        txByteCount:
          description: The amount of messages transmitted to the Bridge, in bytes
            (B). Available since 2.13.
          format: int64
          type: integer
        txByteRate:
          description: The current message rate transmitted to the Bridge, in bytes
            per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        txMsgCount:
          description: The number of messages transmitted to the Bridge. Available
            since 2.13.
          format: int64
          type: integer
        txMsgRate:
          description: The current message rate transmitted to the Bridge, in messages
            per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        uptime:
          description: The amount of time in seconds since the Bridge connected to
            the remote Message VPN.
          format: int64
          type: integer
      type: object
    MsgVpnBridgeCollections:
      example:
        remoteSubscriptions:
          count: 1
        localSubscriptions:
          count: 0
        tlsTrustedCommonNames:
          count: 5
        remoteMsgVpns:
          count: 6
      properties:
        localSubscriptions:
          $ref: '#/components/schemas/MsgVpnBridgeCollectionsLocalsubscriptions'
        remoteMsgVpns:
          $ref: '#/components/schemas/MsgVpnBridgeCollectionsRemotemsgvpns'
        remoteSubscriptions:
          $ref: '#/components/schemas/MsgVpnBridgeCollectionsRemotesubscriptions'
        tlsTrustedCommonNames:
          $ref: '#/components/schemas/MsgVpnBridgeCollectionsTlstrustedcommonnames'
      type: object
    MsgVpnBridgeCollectionsLocalsubscriptions:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the localSubscriptions collection.
          format: int64
          type: integer
      type: object
    MsgVpnBridgeCollectionsRemotemsgvpns:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the remoteMsgVpns collection.
          format: int64
          type: integer
      type: object
    MsgVpnBridgeCollectionsRemotesubscriptions:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the remoteSubscriptions collection.
          format: int64
          type: integer
      type: object
    MsgVpnBridgeCollectionsTlstrustedcommonnames:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the tlsTrustedCommonNames collection.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          format: int64
          type: integer
      type: object
    MsgVpnBridgeCounter:
      description: The counters for the Bridge. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpnBridge object.
      example:
        loginRxMsgCount: 6
        msgSpoolRxMsgCount: 9
        controlTxMsgCount: 6
        rxMsgCount: 3
        controlRxByteCount: 1
        dataRxByteCount: 7
        dataRxMsgCount: 1
        rxByteCount: 6
        controlRxMsgCount: 1
        loginTxMsgCount: 8
        controlTxByteCount: 1
        dataTxByteCount: 4
        txByteCount: 6
        dataTxMsgCount: 5
        discardedRxMsgCount: 9
        discardedTxMsgCount: 9
        txMsgCount: 1
      properties:
        controlRxByteCount:
          description: The amount of client control messages received from the Bridge,
            in bytes (B). Deprecated since 2.13. This attribute has been moved to
            the MsgVpnBridge object.
          format: int64
          type: integer
        controlRxMsgCount:
          description: The number of client control messages received from the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        controlTxByteCount:
          description: The amount of client control messages transmitted to the Bridge,
            in bytes (B). Deprecated since 2.13. This attribute has been moved to
            the MsgVpnBridge object.
          format: int64
          type: integer
        controlTxMsgCount:
          description: The number of client control messages transmitted to the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        dataRxByteCount:
          description: The amount of client data messages received from the Bridge,
            in bytes (B). Deprecated since 2.13. This attribute has been moved to
            the MsgVpnBridge object.
          format: int64
          type: integer
        dataRxMsgCount:
          description: The number of client data messages received from the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        dataTxByteCount:
          description: The amount of client data messages transmitted to the Bridge,
            in bytes (B). Deprecated since 2.13. This attribute has been moved to
            the MsgVpnBridge object.
          format: int64
          type: integer
        dataTxMsgCount:
          description: The number of client data messages transmitted to the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        discardedRxMsgCount:
          description: The number of messages discarded during reception from the
            Bridge. Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        discardedTxMsgCount:
          description: The number of messages discarded during transmission to the
            Bridge. Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        loginRxMsgCount:
          description: The number of login request messages received from the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        loginTxMsgCount:
          description: The number of login response messages transmitted to the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        msgSpoolRxMsgCount:
          description: The number of guaranteed messages received from the Bridge.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        rxByteCount:
          description: The amount of messages received from the Bridge, in bytes (B).
            Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        rxMsgCount:
          description: The number of messages received from the Bridge. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnBridge object.
          format: int64
          type: integer
        txByteCount:
          description: The amount of messages transmitted to the Bridge, in bytes
            (B). Deprecated since 2.13. This attribute has been moved to the MsgVpnBridge
            object.
          format: int64
          type: integer
        txMsgCount:
          description: The number of messages transmitted to the Bridge. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnBridge object.
          format: int64
          type: integer
      type: object
    MsgVpnBridgeLinks:
      example:
        remoteMsgVpnsUri: remoteMsgVpnsUri
        localSubscriptionsUri: localSubscriptionsUri
        uri: uri
        remoteSubscriptionsUri: remoteSubscriptionsUri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        localSubscriptionsUri:
          description: The URI of this Bridge's collection of Bridge Local Subscriptions
            objects.
          type: string
        remoteMsgVpnsUri:
          description: The URI of this Bridge's collection of Remote Message VPN objects.
          type: string
        remoteSubscriptionsUri:
          description: The URI of this Bridge's collection of Remote Subscription
            objects.
          type: string
        tlsTrustedCommonNamesUri:
          description: The URI of this Bridge's collection of Trusted Common Name
            objects. Deprecated since 2.18. Common Name validation has been replaced
            by Server Certificate Name validation.
          type: string
        uri:
          description: The URI of this Bridge object.
          type: string
      type: object
    MsgVpnBridgeLocalSubscription:
      example:
        bridgeVirtualRouter: primary
        msgVpnName: msgVpnName
        bridgeName: bridgeName
        localSubscriptionTopic: localSubscriptionTopic
        dtoPriority: dtoPriority
      properties:
        bridgeName:
          description: The name of the Bridge.
          type: string
        bridgeVirtualRouter:
          description: |
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
          enum:
          - primary
          - backup
          - auto
          type: string
        dtoPriority:
          description: |
            The priority of the Bridge local subscription topic for receiving deliver-to-one (DTO) messages. The allowed values and their meaning are:

            <pre>
            "p1" - The 1st or highest priority.
            "p2" - The 2nd highest priority.
            "p3" - The 3rd highest priority.
            "p4" - The 4th highest priority.
            "da" - Ignore priority and deliver always.
            </pre>
          type: string
        localSubscriptionTopic:
          description: The topic of the Bridge local subscription.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnBridgeLocalSubscriptionCollections:
      type: object
    MsgVpnBridgeLocalSubscriptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Bridge Local Subscriptions object.
          type: string
      type: object
    MsgVpnBridgeLocalSubscriptionResponse:
      example:
        data:
          bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          localSubscriptionTopic: localSubscriptionTopic
          dtoPriority: dtoPriority
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnBridgeLocalSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeLocalSubscriptionsResponse:
      example:
        data:
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          localSubscriptionTopic: localSubscriptionTopic
          dtoPriority: dtoPriority
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          localSubscriptionTopic: localSubscriptionTopic
          dtoPriority: dtoPriority
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLocalSubscription'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLocalSubscriptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeRate:
      description: The rates for the Bridge. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpnBridge object.
      example:
        averageRxByteRate: 0
        txMsgRate: 5
        averageTxByteRate: 8
        averageRxMsgRate: 4
        rxByteRate: 3
        rxMsgRate: 3
        averageTxMsgRate: 7
        txByteRate: 7
      properties:
        averageRxByteRate:
          description: The one minute average of the message rate received from the
            Bridge, in bytes per second (B/sec). Deprecated since 2.13. This attribute
            has been moved to the MsgVpnBridge object.
          format: int64
          type: integer
        averageRxMsgRate:
          description: The one minute average of the message rate received from the
            Bridge, in messages per second (msg/sec). Deprecated since 2.13. This
            attribute has been moved to the MsgVpnBridge object.
          format: int64
          type: integer
        averageTxByteRate:
          description: The one minute average of the message rate transmitted to the
            Bridge, in bytes per second (B/sec). Deprecated since 2.13. This attribute
            has been moved to the MsgVpnBridge object.
          format: int64
          type: integer
        averageTxMsgRate:
          description: The one minute average of the message rate transmitted to the
            Bridge, in messages per second (msg/sec). Deprecated since 2.13. This
            attribute has been moved to the MsgVpnBridge object.
          format: int64
          type: integer
        rxByteRate:
          description: The current message rate received from the Bridge, in bytes
            per second (B/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpnBridge object.
          format: int64
          type: integer
        rxMsgRate:
          description: The current message rate received from the Bridge, in messages
            per second (msg/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpnBridge object.
          format: int64
          type: integer
        txByteRate:
          description: The current message rate transmitted to the Bridge, in bytes
            per second (B/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpnBridge object.
          format: int64
          type: integer
        txMsgRate:
          description: The current message rate transmitted to the Bridge, in messages
            per second (msg/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpnBridge object.
          format: int64
          type: integer
      type: object
    MsgVpnBridgeRemoteMsgVpn:
      example:
        queueBoundUptime: 1
        boundToQueue: true
        egressFlowWindowSize: 6
        remoteMsgVpnLocation: remoteMsgVpnLocation
        bridgeName: bridgeName
        compressedDataEnabled: true
        enabled: true
        remoteMsgVpnName: remoteMsgVpnName
        bridgeVirtualRouter: primary
        remoteMsgVpnInterface: remoteMsgVpnInterface
        tlsEnabled: true
        clientUsername: clientUsername
        connectOrder: 0
        queueBinding: queueBinding
        msgVpnName: msgVpnName
        up: true
        lastQueueBindFailureReason: lastQueueBindFailureReason
        lastConnectionFailureReason: lastConnectionFailureReason
        unidirectionalClientProfile: unidirectionalClientProfile
      properties:
        boundToQueue:
          description: Indicates whether the Bridge is bound to the queue in the remote
            Message VPN.
          type: boolean
        bridgeName:
          description: The name of the Bridge.
          type: string
        bridgeVirtualRouter:
          description: |
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
          enum:
          - primary
          - backup
          - auto
          type: string
        clientUsername:
          description: The Client Username the Bridge uses to login to the remote
            Message VPN. This per remote Message VPN value overrides the value provided
            for the Bridge overall.
          type: string
        compressedDataEnabled:
          description: Indicates whether data compression is enabled for the remote
            Message VPN connection.
          type: boolean
        connectOrder:
          description: The preference given to incoming connections from remote Message
            VPN hosts, from 1 (highest priority) to 4 (lowest priority).
          format: int32
          type: integer
        egressFlowWindowSize:
          description: The number of outstanding guaranteed messages that can be transmitted
            over the remote Message VPN connection before an acknowledgement is received.
          format: int64
          type: integer
        enabled:
          description: Indicates whether the remote Message VPN is enabled.
          type: boolean
        lastConnectionFailureReason:
          description: The reason for the last connection failure to the remote Message
            VPN.
          type: string
        lastQueueBindFailureReason:
          description: The reason for the last queue bind failure in the remote Message
            VPN.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        queueBinding:
          description: The queue binding of the Bridge in the remote Message VPN.
          type: string
        queueBoundUptime:
          description: The amount of time in seconds since the queue was bound in
            the remote Message VPN.
          format: int32
          type: integer
        remoteMsgVpnInterface:
          description: The physical interface on the local Message VPN host for connecting
            to the remote Message VPN. By default, an interface is chosen automatically
            (recommended), but if specified, `remoteMsgVpnLocation` must not be a
            virtual router name.
          type: string
        remoteMsgVpnLocation:
          description: The location of the remote Message VPN as either an FQDN with
            port, IP address with port, or virtual router name (starting with "v:").
          type: string
        remoteMsgVpnName:
          description: The name of the remote Message VPN.
          type: string
        tlsEnabled:
          description: Indicates whether encryption (TLS) is enabled for the remote
            Message VPN connection.
          type: boolean
        unidirectionalClientProfile:
          description: The Client Profile for the unidirectional Bridge of the remote
            Message VPN. The Client Profile must exist in the local Message VPN, and
            it is used only for the TCP parameters. Note that the default client profile
            has a TCP maximum window size of 2MB.
          type: string
        up:
          description: Indicates whether the connection to the remote Message VPN
            is up.
          type: boolean
      type: object
    MsgVpnBridgeRemoteMsgVpnCollections:
      type: object
    MsgVpnBridgeRemoteMsgVpnLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Remote Message VPN object.
          type: string
      type: object
    MsgVpnBridgeRemoteMsgVpnResponse:
      example:
        data:
          queueBoundUptime: 1
          boundToQueue: true
          egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          up: true
          lastQueueBindFailureReason: lastQueueBindFailureReason
          lastConnectionFailureReason: lastConnectionFailureReason
          unidirectionalClientProfile: unidirectionalClientProfile
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeRemoteMsgVpnsResponse:
      example:
        data:
        - queueBoundUptime: 1
          boundToQueue: true
          egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          up: true
          lastQueueBindFailureReason: lastQueueBindFailureReason
          lastConnectionFailureReason: lastConnectionFailureReason
          unidirectionalClientProfile: unidirectionalClientProfile
        - queueBoundUptime: 1
          boundToQueue: true
          egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          up: true
          lastQueueBindFailureReason: lastQueueBindFailureReason
          lastConnectionFailureReason: lastConnectionFailureReason
          unidirectionalClientProfile: unidirectionalClientProfile
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeRemoteSubscription:
      example:
        bridgeVirtualRouter: primary
        deliverAlwaysEnabled: true
        remoteSubscriptionTopic: remoteSubscriptionTopic
        msgVpnName: msgVpnName
        bridgeName: bridgeName
      properties:
        bridgeName:
          description: The name of the Bridge.
          type: string
        bridgeVirtualRouter:
          description: |
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
          enum:
          - primary
          - backup
          - auto
          type: string
        deliverAlwaysEnabled:
          description: Indicates whether deliver-always is enabled for the Bridge
            remote subscription topic instead of a deliver-to-one remote priority.
            A given topic for the Bridge may be deliver-to-one or deliver-always but
            not both.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        remoteSubscriptionTopic:
          description: The topic of the Bridge remote subscription.
          type: string
      type: object
    MsgVpnBridgeRemoteSubscriptionCollections:
      type: object
    MsgVpnBridgeRemoteSubscriptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Remote Subscription object.
          type: string
      type: object
    MsgVpnBridgeRemoteSubscriptionResponse:
      example:
        data:
          bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeRemoteSubscriptionsResponse:
      example:
        data:
        - bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        - bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeResponse:
      example:
        data:
          averageRxByteRate: 5
          remoteTxFlowId: 0
          txMsgRate: 9
          dataRxByteCount: 2
          remoteDeliverToOnePriority: p1
          rxMsgRate: 4
          localInterface: localInterface
          dataTxMsgCount: 5
          discardedRxMsgCount: 6
          remoteConnectionRetryCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 0
          remoteAddress: remoteAddress
          averageTxMsgRate: 9
          msgSpoolRxMsgCount: 6
          remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          controlRxByteCount: 3
          rxByteCount: 6
          outboundState: outboundState
          dataTxByteCount: 6
          bridgeVirtualRouter: primary
          inboundState: inboundState
          tlsCipherSuiteList: tlsCipherSuiteList
          lastTxMsgId: 3
          remoteAuthenticationScheme: basic
          rxByteRate: 4
          loginRxMsgCount: 7
          boundToQueue: true
          clientName: clientName
          controlRxMsgCount: 2
          enabled: true
          txByteRate: 9
          inboundFailureReason: inboundFailureReason
          remoteMsgVpnName: remoteMsgVpnName
          averageTxByteRate: 7
          rate:
            averageRxByteRate: 0
            txMsgRate: 5
            averageTxByteRate: 8
            averageRxMsgRate: 4
            rxByteRate: 3
            rxMsgRate: 3
            averageTxMsgRate: 7
            txByteRate: 7
          discardedTxMsgCount: 3
          ttlExceededEventRaised: true
          remoteConnectionRetryDelay: 4
          establisher: establisher
          controlTxMsgCount: 7
          rxMsgCount: 1
          maxTtl: 7
          averageRxMsgRate: 2
          dataRxMsgCount: 6
          localQueueName: localQueueName
          counter:
            loginRxMsgCount: 6
            msgSpoolRxMsgCount: 9
            controlTxMsgCount: 6
            rxMsgCount: 3
            controlRxByteCount: 1
            dataRxByteCount: 7
            dataRxMsgCount: 1
            rxByteCount: 6
            controlRxMsgCount: 1
            loginTxMsgCount: 8
            controlTxByteCount: 1
            dataTxByteCount: 4
            txByteCount: 6
            dataTxMsgCount: 5
            discardedRxMsgCount: 9
            discardedTxMsgCount: 9
            txMsgCount: 1
          loginTxMsgCount: 0
          remoteRouterName: remoteRouterName
          bridgeName: bridgeName
          tlsDefaultCipherSuiteList: true
          controlTxByteCount: 4
          rxConnectionFailureCategory: rxConnectionFailureCategory
          uptime: 0
          txByteCount: 7
          encrypted: true
          compressed: true
        collections:
          remoteSubscriptions:
            count: 1
          localSubscriptions:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteMsgVpns:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          remoteMsgVpnsUri: remoteMsgVpnsUri
          localSubscriptionsUri: localSubscriptionsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnBridgeCollections'
        data:
          $ref: '#/components/schemas/MsgVpnBridge'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeTlsTrustedCommonName:
      example:
        bridgeVirtualRouter: primary
        msgVpnName: msgVpnName
        bridgeName: bridgeName
        tlsTrustedCommonName: tlsTrustedCommonName
      properties:
        bridgeName:
          description: The name of the Bridge. Deprecated since 2.18. Common Name
            validation has been replaced by Server Certificate Name validation.
          type: string
        bridgeVirtualRouter:
          description: |-
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
             Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
          enum:
          - primary
          - backup
          - auto
          type: string
        msgVpnName:
          description: The name of the Message VPN. Deprecated since 2.18. Common
            Name validation has been replaced by Server Certificate Name validation.
          type: string
        tlsTrustedCommonName:
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
      type: object
    MsgVpnBridgeTlsTrustedCommonNameCollections:
      type: object
    MsgVpnBridgeTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Trusted Common Name object.
          type: string
      type: object
    MsgVpnBridgeTlsTrustedCommonNameResponse:
      example:
        data:
          bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeTlsTrustedCommonNamesResponse:
      example:
        data:
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgesResponse:
      example:
        data:
        - averageRxByteRate: 5
          remoteTxFlowId: 0
          txMsgRate: 9
          dataRxByteCount: 2
          remoteDeliverToOnePriority: p1
          rxMsgRate: 4
          localInterface: localInterface
          dataTxMsgCount: 5
          discardedRxMsgCount: 6
          remoteConnectionRetryCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 0
          remoteAddress: remoteAddress
          averageTxMsgRate: 9
          msgSpoolRxMsgCount: 6
          remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          controlRxByteCount: 3
          rxByteCount: 6
          outboundState: outboundState
          dataTxByteCount: 6
          bridgeVirtualRouter: primary
          inboundState: inboundState
          tlsCipherSuiteList: tlsCipherSuiteList
          lastTxMsgId: 3
          remoteAuthenticationScheme: basic
          rxByteRate: 4
          loginRxMsgCount: 7
          boundToQueue: true
          clientName: clientName
          controlRxMsgCount: 2
          enabled: true
          txByteRate: 9
          inboundFailureReason: inboundFailureReason
          remoteMsgVpnName: remoteMsgVpnName
          averageTxByteRate: 7
          rate:
            averageRxByteRate: 0
            txMsgRate: 5
            averageTxByteRate: 8
            averageRxMsgRate: 4
            rxByteRate: 3
            rxMsgRate: 3
            averageTxMsgRate: 7
            txByteRate: 7
          discardedTxMsgCount: 3
          ttlExceededEventRaised: true
          remoteConnectionRetryDelay: 4
          establisher: establisher
          controlTxMsgCount: 7
          rxMsgCount: 1
          maxTtl: 7
          averageRxMsgRate: 2
          dataRxMsgCount: 6
          localQueueName: localQueueName
          counter:
            loginRxMsgCount: 6
            msgSpoolRxMsgCount: 9
            controlTxMsgCount: 6
            rxMsgCount: 3
            controlRxByteCount: 1
            dataRxByteCount: 7
            dataRxMsgCount: 1
            rxByteCount: 6
            controlRxMsgCount: 1
            loginTxMsgCount: 8
            controlTxByteCount: 1
            dataTxByteCount: 4
            txByteCount: 6
            dataTxMsgCount: 5
            discardedRxMsgCount: 9
            discardedTxMsgCount: 9
            txMsgCount: 1
          loginTxMsgCount: 0
          remoteRouterName: remoteRouterName
          bridgeName: bridgeName
          tlsDefaultCipherSuiteList: true
          controlTxByteCount: 4
          rxConnectionFailureCategory: rxConnectionFailureCategory
          uptime: 0
          txByteCount: 7
          encrypted: true
          compressed: true
        - averageRxByteRate: 5
          remoteTxFlowId: 0
          txMsgRate: 9
          dataRxByteCount: 2
          remoteDeliverToOnePriority: p1
          rxMsgRate: 4
          localInterface: localInterface
          dataTxMsgCount: 5
          discardedRxMsgCount: 6
          remoteConnectionRetryCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 0
          remoteAddress: remoteAddress
          averageTxMsgRate: 9
          msgSpoolRxMsgCount: 6
          remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          controlRxByteCount: 3
          rxByteCount: 6
          outboundState: outboundState
          dataTxByteCount: 6
          bridgeVirtualRouter: primary
          inboundState: inboundState
          tlsCipherSuiteList: tlsCipherSuiteList
          lastTxMsgId: 3
          remoteAuthenticationScheme: basic
          rxByteRate: 4
          loginRxMsgCount: 7
          boundToQueue: true
          clientName: clientName
          controlRxMsgCount: 2
          enabled: true
          txByteRate: 9
          inboundFailureReason: inboundFailureReason
          remoteMsgVpnName: remoteMsgVpnName
          averageTxByteRate: 7
          rate:
            averageRxByteRate: 0
            txMsgRate: 5
            averageTxByteRate: 8
            averageRxMsgRate: 4
            rxByteRate: 3
            rxMsgRate: 3
            averageTxMsgRate: 7
            txByteRate: 7
          discardedTxMsgCount: 3
          ttlExceededEventRaised: true
          remoteConnectionRetryDelay: 4
          establisher: establisher
          controlTxMsgCount: 7
          rxMsgCount: 1
          maxTtl: 7
          averageRxMsgRate: 2
          dataRxMsgCount: 6
          localQueueName: localQueueName
          counter:
            loginRxMsgCount: 6
            msgSpoolRxMsgCount: 9
            controlTxMsgCount: 6
            rxMsgCount: 3
            controlRxByteCount: 1
            dataRxByteCount: 7
            dataRxMsgCount: 1
            rxByteCount: 6
            controlRxMsgCount: 1
            loginTxMsgCount: 8
            controlTxByteCount: 1
            dataTxByteCount: 4
            txByteCount: 6
            dataTxMsgCount: 5
            discardedRxMsgCount: 9
            discardedTxMsgCount: 9
            txMsgCount: 1
          loginTxMsgCount: 0
          remoteRouterName: remoteRouterName
          bridgeName: bridgeName
          tlsDefaultCipherSuiteList: true
          controlTxByteCount: 4
          rxConnectionFailureCategory: rxConnectionFailureCategory
          uptime: 0
          txByteCount: 7
          encrypted: true
          compressed: true
        collections:
        - remoteSubscriptions:
            count: 1
          localSubscriptions:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteMsgVpns:
            count: 6
        - remoteSubscriptions:
            count: 1
          localSubscriptions:
            count: 0
          tlsTrustedCommonNames:
            count: 5
          remoteMsgVpns:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - remoteMsgVpnsUri: remoteMsgVpnsUri
          localSubscriptionsUri: localSubscriptionsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - remoteMsgVpnsUri: remoteMsgVpnsUri
          localSubscriptionsUri: localSubscriptionsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridge'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClient:
      example:
        averageRxByteRate: 7
        restHttpResponseTxByteCount: 6
        txMsgRate: 3
        webTxTlsVersion: webTxTlsVersion
        clientAddress: clientAddress
        slowSubscriber: true
        publishTopicAclRxDiscardedMsgCount: 9
        bindSuccessCount: 7
        mqttDisconnectRxCount: 7
        webRxMsgCount: 2
        mqttPingrespTxCount: 7
        restHttpResponseTimeoutRxMsgCount: 1
        mqttConnackTxCount: 3
        tlsVersion: tlsVersion
        webTxByteCount: 4
        restHttpRequestTxMsgCount: 4
        webTxProtocol: webTxProtocol
        largeMsgEventRaised: true
        dataTxByteCount: 9
        elidingTopicCount: 6
        msgSpoolCongestionRxDiscardedMsgCount: 4
        rxByteRate: 9
        softwareVersion: softwareVersion
        alreadyBoundBindFailureCount: 2
        loginRxMsgCount: 6
        authorizationGroupName: authorizationGroupName
        clientName: clientName
        webTxRequestCount: 0
        controlRxMsgCount: 1
        noLocalDelivery: true
        aclProfileName: aclProfileName
        dtoNetworkPriority: 9
        restHttpResponseTimeoutTxMsgCount: 8
        txByteRate: 5
        webRxByteCount: 3
        restHttpRequestRxMsgCount: 7
        elidingTopicPeakCount: 3
        averageTxByteRate: 3
        mqttPublishQos2RxCount: 7
        noSubscriptionMatchRxDiscardedMsgCount: 9
        maxBindCountExceededBindFailureCount: 5
        webRxResponseCount: 8
        originalClientUsername: originalClientUsername
        rxDiscardedMsgCount: 1
        webParseErrorRxDiscardedMsgCount: 7
        controlTxMsgCount: 7
        msgSpoolRxDiscardedMsgCount: 7
        clientId: 1
        averageRxMsgRate: 9
        dataRxMsgCount: 5
        loginTxMsgCount: 6
        virtualRouter: virtualRouter
        webInactiveTimeout: 9
        txByteCount: 5
        clientUsername: clientUsername
        mqttPubrecTxCount: 5
        webRxProtocol: webRxProtocol
        restHttpRequestTxByteCount: 5
        webRxRequestCount: 3
        mqttUnsubscribeRxCount: 1
        aliasedFromMsgVpnName: aliasedFromMsgVpnName
        keepalive: true
        dataRxByteCount: 4
        cutThroughDeniedBindFailureCount: 1
        keepaliveEffectiveTimeout: 2
        clientProfileName: clientProfileName
        topicParseErrorRxDiscardedMsgCount: 0
        rxMsgRate: 9
        maxElidingTopicCountEventRaised: true
        webMaxPayload: 5
        webTxResponseCount: 7
        dtoLocalPriority: 8
        dataTxMsgCount: 9
        mqttConnectRxCount: 3
        mqttPublishQos0TxCount: 7
        mqttPublishQos1TxCount: 3
        msgVpnName: msgVpnName
        txMsgCount: 7
        averageTxMsgRate: 2
        bindRequestCount: 4
        webTxMsgCount: 0
        mqttSubscribeRxCount: 6
        mqttPingreqRxCount: 0
        controlRxByteCount: 1
        restHttpResponseErrorRxMsgCount: 6
        rxByteCount: 8
        softwareDate: softwareDate
        restHttpRequestRxByteCount: 0
        disabledBindFailureCount: 6
        webRemainingTimeout: 0
        guaranteedDeniedBindFailureCount: 6
        eliding: true
        webRxTlsVersion: webRxTlsVersion
        tlsCipherDescription: tlsCipherDescription
        webTxTlsCipherDescription: webTxTlsCipherDescription
        mqttPubackRxCount: 6
        otherBindFailureCount: 0
        txDiscardedMsgCount: 8
        webTxTcpState: webTxTcpState
        restHttpResponseSuccessRxMsgCount: 0
        webSessionId: webSessionId
        restHttpResponseRxMsgCount: 3
        description: description
        platform: platform
        scheduledDisconnectTime: 8
        mqttPublishQos1RxCount: 3
        mqttPublishQos0RxCount: 8
        webRxEncoding: webRxEncoding
        restHttpResponseErrorTxMsgCount: 8
        tlsDowngradedToPlainText: true
        restHttpResponseTxMsgCount: 4
        rxMsgCount: 3
        mqttPubrelRxCount: 3
        mqttSubackTxCount: 0
        restHttpResponseSuccessTxMsgCount: 2
        controlTxByteCount: 6
        uptime: 3
        invalidSelectorBindFailureCount: 1
        mqttConnackErrorTxCount: 6
        mqttSubackErrorTxCount: 4
        mqttPubackTxCount: 0
        mqttPubcompTxCount: 4
        restHttpResponseRxByteCount: 4
        webRxTlsCipherDescription: webRxTlsCipherDescription
        mqttUnsubackTxCount: 4
        webTxEncoding: webTxEncoding
        user: user
        webRxTcpState: webRxTcpState
      properties:
        aclProfileName:
          description: The name of the access control list (ACL) profile of the Client.
          type: string
        aliasedFromMsgVpnName:
          description: The name of the original MsgVpn which the client signaled in.
            Available since 2.14.
          type: string
        alreadyBoundBindFailureCount:
          description: The number of Client bind failures due to endpoint being already
            bound.
          format: int64
          type: integer
        authorizationGroupName:
          description: The name of the authorization group of the Client.
          type: string
        averageRxByteRate:
          description: The one minute average of the message rate received from the
            Client, in bytes per second (B/sec).
          format: int64
          type: integer
        averageRxMsgRate:
          description: The one minute average of the message rate received from the
            Client, in messages per second (msg/sec).
          format: int64
          type: integer
        averageTxByteRate:
          description: The one minute average of the message rate transmitted to the
            Client, in bytes per second (B/sec).
          format: int64
          type: integer
        averageTxMsgRate:
          description: The one minute average of the message rate transmitted to the
            Client, in messages per second (msg/sec).
          format: int64
          type: integer
        bindRequestCount:
          description: The number of Client requests to bind to an endpoint.
          format: int64
          type: integer
        bindSuccessCount:
          description: The number of successful Client requests to bind to an endpoint.
          format: int64
          type: integer
        clientAddress:
          description: The IP address and port of the Client.
          type: string
        clientId:
          description: The identifier (ID) of the Client.
          format: int32
          type: integer
        clientName:
          description: The name of the Client.
          type: string
        clientProfileName:
          description: The name of the client profile of the Client.
          type: string
        clientUsername:
          description: The client username of the Client used for authorization.
          type: string
        controlRxByteCount:
          description: The amount of client control messages received from the Client,
            in bytes (B).
          format: int64
          type: integer
        controlRxMsgCount:
          description: The number of client control messages received from the Client.
          format: int64
          type: integer
        controlTxByteCount:
          description: The amount of client control messages transmitted to the Client,
            in bytes (B).
          format: int64
          type: integer
        controlTxMsgCount:
          description: The number of client control messages transmitted to the Client.
          format: int64
          type: integer
        cutThroughDeniedBindFailureCount:
          description: The number of Client bind failures due to being denied cut-through
            forwarding.
          format: int64
          type: integer
        dataRxByteCount:
          description: The amount of client data messages received from the Client,
            in bytes (B).
          format: int64
          type: integer
        dataRxMsgCount:
          description: The number of client data messages received from the Client.
          format: int64
          type: integer
        dataTxByteCount:
          description: The amount of client data messages transmitted to the Client,
            in bytes (B).
          format: int64
          type: integer
        dataTxMsgCount:
          description: The number of client data messages transmitted to the Client.
          format: int64
          type: integer
        description:
          description: The description text of the Client.
          type: string
        disabledBindFailureCount:
          description: The number of Client bind failures due to endpoint being disabled.
          format: int64
          type: integer
        dtoLocalPriority:
          description: The priority of the Client's subscriptions for receiving deliver-to-one
            (DTO) messages published on the local broker.
          format: int32
          type: integer
        dtoNetworkPriority:
          description: The priority of the Client's subscriptions for receiving deliver-to-one
            (DTO) messages published on a remote broker.
          format: int32
          type: integer
        eliding:
          description: Indicates whether message eliding is enabled for the Client.
          type: boolean
        elidingTopicCount:
          description: The number of topics requiring message eliding for the Client.
          format: int32
          type: integer
        elidingTopicPeakCount:
          description: The peak number of topics requiring message eliding for the
            Client.
          format: int32
          type: integer
        guaranteedDeniedBindFailureCount:
          description: The number of Client bind failures due to being denied guaranteed
            messaging.
          format: int64
          type: integer
        invalidSelectorBindFailureCount:
          description: The number of Client bind failures due to an invalid selector.
          format: int64
          type: integer
        keepalive:
          description: Indicates whether keepalive messages from the Client are received
            by the broker. Applicable for SMF and MQTT clients only. Available since
            2.19.
          type: boolean
        keepaliveEffectiveTimeout:
          description: The maximum period of time the broker will accept inactivity
            from the Client before disconnecting, in seconds. Available since 2.19.
          format: int32
          type: integer
        largeMsgEventRaised:
          description: Indicates whether the large-message event has been raised for
            the Client.
          type: boolean
        loginRxMsgCount:
          description: The number of login request messages received from the Client.
          format: int64
          type: integer
        loginTxMsgCount:
          description: The number of login response messages transmitted to the Client.
          format: int64
          type: integer
        maxBindCountExceededBindFailureCount:
          description: The number of Client bind failures due to the endpoint maximum
            bind count being exceeded.
          format: int64
          type: integer
        maxElidingTopicCountEventRaised:
          description: Indicates whether the max-eliding-topic-count event has been
            raised for the Client.
          type: boolean
        mqttConnackErrorTxCount:
          description: The number of MQTT connect acknowledgment (CONNACK) refused
            response packets transmitted to the Client.
          format: int64
          type: integer
        mqttConnackTxCount:
          description: The number of MQTT connect acknowledgment (CONNACK) accepted
            response packets transmitted to the Client.
          format: int64
          type: integer
        mqttConnectRxCount:
          description: The number of MQTT connect (CONNECT) request packets received
            from the Client.
          format: int64
          type: integer
        mqttDisconnectRxCount:
          description: The number of MQTT disconnect (DISCONNECT) request packets
            received from the Client.
          format: int64
          type: integer
        mqttPingreqRxCount:
          description: The number of MQTT ping request (PINGREQ) packets received
            from the Client.
          format: int64
          type: integer
        mqttPingrespTxCount:
          description: The number of MQTT ping response (PINGRESP) packets transmitted
            to the Client.
          format: int64
          type: integer
        mqttPubackRxCount:
          description: The number of MQTT publish acknowledgement (PUBACK) response
            packets received from the Client.
          format: int64
          type: integer
        mqttPubackTxCount:
          description: The number of MQTT publish acknowledgement (PUBACK) response
            packets transmitted to the Client.
          format: int64
          type: integer
        mqttPubcompTxCount:
          description: The number of MQTT publish complete (PUBCOMP) packets transmitted
            to the Client in response to a PUBREL packet. These packets are the fourth
            and final packet of a QoS 2 protocol exchange.
          format: int64
          type: integer
        mqttPublishQos0RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 0 message delivery.
          format: int64
          type: integer
        mqttPublishQos0TxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 0 message delivery.
          format: int64
          type: integer
        mqttPublishQos1RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 1 message delivery.
          format: int64
          type: integer
        mqttPublishQos1TxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 1 message delivery.
          format: int64
          type: integer
        mqttPublishQos2RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 2 message delivery.
          format: int64
          type: integer
        mqttPubrecTxCount:
          description: The number of MQTT publish received (PUBREC) packets transmitted
            to the Client in response to a PUBLISH packet with QoS 2. These packets
            are the second packet of a QoS 2 protocol exchange.
          format: int64
          type: integer
        mqttPubrelRxCount:
          description: The number of MQTT publish release (PUBREL) packets received
            from the Client in response to a PUBREC packet. These packets are the
            third packet of a QoS 2 protocol exchange.
          format: int64
          type: integer
        mqttSubackErrorTxCount:
          description: The number of MQTT subscribe acknowledgement (SUBACK) failure
            response packets transmitted to the Client.
          format: int64
          type: integer
        mqttSubackTxCount:
          description: The number of MQTT subscribe acknowledgement (SUBACK) response
            packets transmitted to the Client.
          format: int64
          type: integer
        mqttSubscribeRxCount:
          description: The number of MQTT subscribe (SUBSCRIBE) request packets received
            from the Client to create one or more topic subscriptions.
          format: int64
          type: integer
        mqttUnsubackTxCount:
          description: The number of MQTT unsubscribe acknowledgement (UNSUBACK) response
            packets transmitted to the Client.
          format: int64
          type: integer
        mqttUnsubscribeRxCount:
          description: The number of MQTT unsubscribe (UNSUBSCRIBE) request packets
            received from the Client to remove one or more topic subscriptions.
          format: int64
          type: integer
        msgSpoolCongestionRxDiscardedMsgCount:
          description: The number of messages from the Client discarded due to message
            spool congestion primarily caused by message promotion.
          format: int64
          type: integer
        msgSpoolRxDiscardedMsgCount:
          description: The number of messages from the Client discarded by the message
            spool.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        noLocalDelivery:
          description: Indicates whether not to deliver messages to the Client if
            it published them.
          type: boolean
        noSubscriptionMatchRxDiscardedMsgCount:
          description: The number of messages from the Client discarded due to no
            matching subscription found.
          format: int64
          type: integer
        originalClientUsername:
          description: The original value of the client username used for Client authentication.
          type: string
        otherBindFailureCount:
          description: The number of Client bind failures due to other reasons.
          format: int64
          type: integer
        platform:
          description: The platform the Client application software was built for,
            which may include the OS and API type.
          type: string
        publishTopicAclRxDiscardedMsgCount:
          description: The number of messages from the Client discarded due to the
            publish topic being denied by the Access Control List (ACL) profile.
          format: int64
          type: integer
        restHttpRequestRxByteCount:
          description: The amount of HTTP request messages received from the Client,
            in bytes (B).
          format: int64
          type: integer
        restHttpRequestRxMsgCount:
          description: The number of HTTP request messages received from the Client.
          format: int64
          type: integer
        restHttpRequestTxByteCount:
          description: The amount of HTTP request messages transmitted to the Client,
            in bytes (B).
          format: int64
          type: integer
        restHttpRequestTxMsgCount:
          description: The number of HTTP request messages transmitted to the Client.
          format: int64
          type: integer
        restHttpResponseErrorRxMsgCount:
          description: The number of HTTP client/server error response messages received
            from the Client.
          format: int64
          type: integer
        restHttpResponseErrorTxMsgCount:
          description: The number of HTTP client/server error response messages transmitted
            to the Client.
          format: int64
          type: integer
        restHttpResponseRxByteCount:
          description: The amount of HTTP response messages received from the Client,
            in bytes (B).
          format: int64
          type: integer
        restHttpResponseRxMsgCount:
          description: The number of HTTP response messages received from the Client.
          format: int64
          type: integer
        restHttpResponseSuccessRxMsgCount:
          description: The number of HTTP successful response messages received from
            the Client.
          format: int64
          type: integer
        restHttpResponseSuccessTxMsgCount:
          description: The number of HTTP successful response messages transmitted
            to the Client.
          format: int64
          type: integer
        restHttpResponseTimeoutRxMsgCount:
          description: The number of HTTP wait for reply timeout response messages
            received from the Client.
          format: int64
          type: integer
        restHttpResponseTimeoutTxMsgCount:
          description: The number of HTTP wait for reply timeout response messages
            transmitted to the Client.
          format: int64
          type: integer
        restHttpResponseTxByteCount:
          description: The amount of HTTP response messages transmitted to the Client,
            in bytes (B).
          format: int64
          type: integer
        restHttpResponseTxMsgCount:
          description: The number of HTTP response messages transmitted to the Client.
          format: int64
          type: integer
        rxByteCount:
          description: The amount of messages received from the Client, in bytes (B).
          format: int64
          type: integer
        rxByteRate:
          description: The current message rate received from the Client, in bytes
            per second (B/sec).
          format: int64
          type: integer
        rxDiscardedMsgCount:
          description: The number of messages discarded during reception from the
            Client.
          format: int64
          type: integer
        rxMsgCount:
          description: The number of messages received from the Client.
          format: int64
          type: integer
        rxMsgRate:
          description: The current message rate received from the Client, in messages
            per second (msg/sec).
          format: int64
          type: integer
        scheduledDisconnectTime:
          description: The timestamp of when the Client will be disconnected by the
            broker. This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time). Available since 2.13.
          format: int32
          type: integer
        slowSubscriber:
          description: Indicates whether the Client is a slow subscriber and blocks
            for a few seconds when receiving messages.
          type: boolean
        softwareDate:
          description: The date the Client application software was built.
          type: string
        softwareVersion:
          description: The version of the Client application software.
          type: string
        tlsCipherDescription:
          description: The description of the TLS cipher used by the Client, which
            may include cipher name, key exchange and encryption algorithms.
          type: string
        tlsDowngradedToPlainText:
          description: Indicates whether the Client TLS connection was downgraded
            to plain-text to increase performance.
          type: boolean
        tlsVersion:
          description: The version of TLS used by the Client.
          type: string
        topicParseErrorRxDiscardedMsgCount:
          description: The number of messages from the Client discarded due to an
            error while parsing the publish topic.
          format: int64
          type: integer
        txByteCount:
          description: The amount of messages transmitted to the Client, in bytes
            (B).
          format: int64
          type: integer
        txByteRate:
          description: The current message rate transmitted to the Client, in bytes
            per second (B/sec).
          format: int64
          type: integer
        txDiscardedMsgCount:
          description: The number of messages discarded during transmission to the
            Client.
          format: int64
          type: integer
        txMsgCount:
          description: The number of messages transmitted to the Client.
          format: int64
          type: integer
        txMsgRate:
          description: The current message rate transmitted to the Client, in messages
            per second (msg/sec).
          format: int64
          type: integer
        uptime:
          description: The amount of time in seconds since the Client connected.
          format: int32
          type: integer
        user:
          description: The user description for the Client, which may include computer
            name and process ID.
          type: string
        virtualRouter:
          description: |
            The virtual router used by the Client. The allowed values and their meaning are:

            <pre>
            "primary" - The Client is using the primary virtual router.
            "backup" - The Client is using the backup virtual router.
            "internal" - The Client is using the internal virtual router.
            "unknown" - The Client virtual router is unknown.
            </pre>
          type: string
        webInactiveTimeout:
          description: The maximum web transport timeout for the Client being inactive,
            in seconds.
          format: int32
          type: integer
        webMaxPayload:
          description: The maximum web transport message payload size which excludes
            the size of the message header, in bytes.
          format: int64
          type: integer
        webParseErrorRxDiscardedMsgCount:
          description: The number of messages from the Client discarded due to an
            error while parsing the web message.
          format: int64
          type: integer
        webRemainingTimeout:
          description: The remaining web transport timeout for the Client being inactive,
            in seconds.
          format: int32
          type: integer
        webRxByteCount:
          description: The amount of web transport messages received from the Client,
            in bytes (B).
          format: int64
          type: integer
        webRxEncoding:
          description: |
            The type of encoding used during reception from the Client. The allowed values and their meaning are:

            <pre>
            "binary" - The Client is using binary encoding.
            "base64" - The Client is using base64 encoding.
            "illegal" - The Client is using an illegal encoding type.
            </pre>
          type: string
        webRxMsgCount:
          description: The number of web transport messages received from the Client.
          format: int64
          type: integer
        webRxProtocol:
          description: |
            The type of web transport used during reception from the Client. The allowed values and their meaning are:

            <pre>
            "ws-binary" - The Client is using WebSocket binary transport.
            "http-binary-streaming" - The Client is using HTTP binary streaming transport.
            "http-binary" - The Client is using HTTP binary transport.
            "http-base64" - The Client is using HTTP base64 transport.
            </pre>
          type: string
        webRxRequestCount:
          description: The number of web transport requests received from the Client
            (HTTP only). Not available for WebSockets.
          format: int64
          type: integer
        webRxResponseCount:
          description: The number of web transport responses transmitted to the Client
            on the receive connection (HTTP only). Not available for WebSockets.
          format: int64
          type: integer
        webRxTcpState:
          description: |
            The TCP state of the receive connection from the Client. When fully operational, should be: established. See RFC 793 for further details. The allowed values and their meaning are:

            <pre>
            "closed" - No connection state at all.
            "listen" - Waiting for a connection request from any remote TCP and port.
            "syn-sent" - Waiting for a matching connection request after having sent a connection request.
            "syn-received" - Waiting for a confirming connection request acknowledgment after having both received and sent a connection request.
            "established" - An open connection, data received can be delivered to the user.
            "close-wait" - Waiting for a connection termination request from the local user.
            "fin-wait-1" - Waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent.
            "closing" - Waiting for a connection termination request acknowledgment from the remote TCP.
            "last-ack" - Waiting for an acknowledgment of the connection termination request previously sent to the remote TCP.
            "fin-wait-2" - Waiting for a connection termination request from the remote TCP.
            "time-wait" - Waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request.
            </pre>
          type: string
        webRxTlsCipherDescription:
          description: The description of the TLS cipher received from the Client,
            which may include cipher name, key exchange and encryption algorithms.
          type: string
        webRxTlsVersion:
          description: The version of TLS used during reception from the Client.
          type: string
        webSessionId:
          description: The identifier (ID) of the web transport session for the Client.
          type: string
        webTxByteCount:
          description: The amount of web transport messages transmitted to the Client,
            in bytes (B).
          format: int64
          type: integer
        webTxEncoding:
          description: |
            The type of encoding used during transmission to the Client. The allowed values and their meaning are:

            <pre>
            "binary" - The Client is using binary encoding.
            "base64" - The Client is using base64 encoding.
            "illegal" - The Client is using an illegal encoding type.
            </pre>
          type: string
        webTxMsgCount:
          description: The number of web transport messages transmitted to the Client.
          format: int64
          type: integer
        webTxProtocol:
          description: |
            The type of web transport used during transmission to the Client. The allowed values and their meaning are:

            <pre>
            "ws-binary" - The Client is using WebSocket binary transport.
            "http-binary-streaming" - The Client is using HTTP binary streaming transport.
            "http-binary" - The Client is using HTTP binary transport.
            "http-base64" - The Client is using HTTP base64 transport.
            </pre>
          type: string
        webTxRequestCount:
          description: The number of web transport requests transmitted to the Client
            (HTTP only). Not available for WebSockets.
          format: int64
          type: integer
        webTxResponseCount:
          description: The number of web transport responses received from the Client
            on the transmit connection (HTTP only). Not available for WebSockets.
          format: int64
          type: integer
        webTxTcpState:
          description: |
            The TCP state of the transmit connection to the Client. When fully operational, should be: established. See RFC 793 for further details. The allowed values and their meaning are:

            <pre>
            "closed" - No connection state at all.
            "listen" - Waiting for a connection request from any remote TCP and port.
            "syn-sent" - Waiting for a matching connection request after having sent a connection request.
            "syn-received" - Waiting for a confirming connection request acknowledgment after having both received and sent a connection request.
            "established" - An open connection, data received can be delivered to the user.
            "close-wait" - Waiting for a connection termination request from the local user.
            "fin-wait-1" - Waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent.
            "closing" - Waiting for a connection termination request acknowledgment from the remote TCP.
            "last-ack" - Waiting for an acknowledgment of the connection termination request previously sent to the remote TCP.
            "fin-wait-2" - Waiting for a connection termination request from the remote TCP.
            "time-wait" - Waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request.
            </pre>
          type: string
        webTxTlsCipherDescription:
          description: The description of the TLS cipher transmitted to the Client,
            which may include cipher name, key exchange and encryption algorithms.
          type: string
        webTxTlsVersion:
          description: The version of TLS used during transmission to the Client.
          type: string
      type: object
    MsgVpnClientCollections:
      example:
        transactedSessions:
          count: 5
        subscriptions:
          count: 1
        txFlows:
          count: 5
        rxFlows:
          count: 6
        connections:
          count: 0
      properties:
        connections:
          $ref: '#/components/schemas/MsgVpnClientCollectionsConnections'
        rxFlows:
          $ref: '#/components/schemas/MsgVpnClientCollectionsRxflows'
        subscriptions:
          $ref: '#/components/schemas/MsgVpnClientCollectionsSubscriptions'
        transactedSessions:
          $ref: '#/components/schemas/MsgVpnClientCollectionsTransactedsessions'
        txFlows:
          $ref: '#/components/schemas/MsgVpnClientCollectionsTxflows'
      type: object
    MsgVpnClientCollectionsConnections:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the connections collection.
          format: int64
          type: integer
      type: object
    MsgVpnClientCollectionsRxflows:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the rxFlows collection.
          format: int64
          type: integer
      type: object
    MsgVpnClientCollectionsSubscriptions:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the subscriptions collection.
          format: int64
          type: integer
      type: object
    MsgVpnClientCollectionsTransactedsessions:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the transactedSessions collection.
          format: int64
          type: integer
      type: object
    MsgVpnClientCollectionsTxflows:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the txFlows collection.
          format: int64
          type: integer
      type: object
    MsgVpnClientConnection:
      example:
        txQueueByteCount: 2
        clientName: clientName
        timedRetransmitCount: 5
        tcpState: tcpState
        rxQueueByteCount: 6
        clientAddress: clientAddress
        uptime: 7
        encryption: true
        smoothedRoundTripTime: 5
        msgVpnName: msgVpnName
        compression: true
        fastRetransmitCount: 0
        segmentReceivedOutOfOrderCount: 1
      properties:
        clientAddress:
          description: The IP address and TCP port on the Client side of the Client
            Connection.
          type: string
        clientName:
          description: The name of the Client.
          type: string
        compression:
          description: Indicates whether compression is enabled for the Client Connection.
          type: boolean
        encryption:
          description: Indicates whether encryption (TLS) is enabled for the Client
            Connection.
          type: boolean
        fastRetransmitCount:
          description: The number of TCP fast retransmits due to duplicate acknowledgments
            (ACKs). See RFC 5681 for further details.
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        rxQueueByteCount:
          description: The number of bytes currently in the receive queue for the
            Client Connection.
          format: int32
          type: integer
        segmentReceivedOutOfOrderCount:
          description: The number of TCP segments received from the Client Connection
            out of order.
          format: int32
          type: integer
        smoothedRoundTripTime:
          description: The TCP smoothed round-trip time (SRTT) for the Client Connection,
            in nanoseconds. See RFC 2988 for further details.
          format: int64
          type: integer
        tcpState:
          description: |
            The TCP state of the Client Connection. When fully operational, should be: established. See RFC 793 for further details. The allowed values and their meaning are:

            <pre>
            "closed" - No connection state at all.
            "listen" - Waiting for a connection request from any remote TCP and port.
            "syn-sent" - Waiting for a matching connection request after having sent a connection request.
            "syn-received" - Waiting for a confirming connection request acknowledgment after having both received and sent a connection request.
            "established" - An open connection, data received can be delivered to the user.
            "close-wait" - Waiting for a connection termination request from the local user.
            "fin-wait-1" - Waiting for a connection termination request from the remote TCP, or an acknowledgment of the connection termination request previously sent.
            "closing" - Waiting for a connection termination request acknowledgment from the remote TCP.
            "last-ack" - Waiting for an acknowledgment of the connection termination request previously sent to the remote TCP.
            "fin-wait-2" - Waiting for a connection termination request from the remote TCP.
            "time-wait" - Waiting for enough time to pass to be sure the remote TCP received the acknowledgment of its connection termination request.
            </pre>
          type: string
        timedRetransmitCount:
          description: The number of TCP segments retransmitted due to timeout awaiting
            an acknowledgement (ACK). See RFC 793 for further details.
          format: int32
          type: integer
        txQueueByteCount:
          description: The number of bytes currently in the transmit queue for the
            Client Connection.
          format: int32
          type: integer
        uptime:
          description: The amount of time in seconds since the Client Connection was
            established.
          format: int64
          type: integer
      type: object
    MsgVpnClientConnectionCollections:
      type: object
    MsgVpnClientConnectionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Connection object.
          type: string
      type: object
    MsgVpnClientConnectionResponse:
      example:
        data:
          txQueueByteCount: 2
          clientName: clientName
          timedRetransmitCount: 5
          tcpState: tcpState
          rxQueueByteCount: 6
          clientAddress: clientAddress
          uptime: 7
          encryption: true
          smoothedRoundTripTime: 5
          msgVpnName: msgVpnName
          compression: true
          fastRetransmitCount: 0
          segmentReceivedOutOfOrderCount: 1
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnClientConnection'
        links:
          $ref: '#/components/schemas/MsgVpnClientConnectionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientConnectionsResponse:
      example:
        data:
        - txQueueByteCount: 2
          clientName: clientName
          timedRetransmitCount: 5
          tcpState: tcpState
          rxQueueByteCount: 6
          clientAddress: clientAddress
          uptime: 7
          encryption: true
          smoothedRoundTripTime: 5
          msgVpnName: msgVpnName
          compression: true
          fastRetransmitCount: 0
          segmentReceivedOutOfOrderCount: 1
        - txQueueByteCount: 2
          clientName: clientName
          timedRetransmitCount: 5
          tcpState: tcpState
          rxQueueByteCount: 6
          clientAddress: clientAddress
          uptime: 7
          encryption: true
          smoothedRoundTripTime: 5
          msgVpnName: msgVpnName
          compression: true
          fastRetransmitCount: 0
          segmentReceivedOutOfOrderCount: 1
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnClientConnectionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientConnection'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientConnectionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientLinks:
      example:
        txFlowsUri: txFlowsUri
        connectionsUri: connectionsUri
        transactedSessionsUri: transactedSessionsUri
        rxFlowsUri: rxFlowsUri
        subscriptionsUri: subscriptionsUri
        uri: uri
      properties:
        connectionsUri:
          description: The URI of this Client's collection of Client Connection objects.
          type: string
        rxFlowsUri:
          description: The URI of this Client's collection of Client Receive Flow
            objects.
          type: string
        subscriptionsUri:
          description: The URI of this Client's collection of Client Subscription
            objects.
          type: string
        transactedSessionsUri:
          description: The URI of this Client's collection of Client Transacted Session
            objects.
          type: string
        txFlowsUri:
          description: The URI of this Client's collection of Client Transmit Flow
            objects.
          type: string
        uri:
          description: The URI of this Client object.
          type: string
      type: object
    MsgVpnClientProfile:
      example:
        apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
        compressionEnabled: true
        tcpMaxWindowSize: 7
        allowGuaranteedEndpointCreateDurability: all
        clientProfileName: clientProfileName
        eventTransactionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        tcpMaxSegmentSize: 3
        queueDirect2MaxDepth: 9
        serviceSmfMinKeepaliveEnabled: true
        maxEffectiveSubscriptionCount: 2
        msgVpnName: msgVpnName
        allowSharedSubscriptionsEnabled: true
        eventClientProvisionedEndpointSpoolUsageThreshold:
          clearPercent: 3
          setPercent: 6
        eventEgressFlowCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        queueDirect3MinMsgBurst: 8
        elidingDelay: 0
        eventServiceWebConnectionCountPerClientUsernameThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        queueControl1MinMsgBurst: 1
        serviceWebMaxPayload: 6
        maxEffectiveTransactedSessionCount: 7
        serviceMinKeepaliveTimeout: 3
        eventTransactedSessionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
        maxEffectiveRxFlowCount: 5
        eventSubscriptionCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        tlsAllowDowngradeToPlainTextEnabled: true
        tcpKeepaliveIdleTime: 6
        maxEndpointCountPerClientUsername: 4
        queueDirect2MinMsgBurst: 9
        queueGuaranteed1MinMsgBurst: 6
        queueDirect1MaxDepth: 4
        eventServiceSmfConnectionCountPerClientUsernameThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        tcpCongestionWindowSize: 6
        eventEndpointCountPerClientUsernameThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        queueDirect3MaxDepth: 6
        allowBridgeConnectionsEnabled: true
        allowTransactedSessionsEnabled: true
        maxEffectiveEndpointCount: 5
        serviceSmfMaxConnectionCountPerClientUsername: 6
        allowGuaranteedMsgSendEnabled: true
        queueDirect1MinMsgBurst: 5
        queueGuaranteed1MaxDepth: 9
        serviceWebInactiveTimeout: 1
        allowGuaranteedMsgReceiveEnabled: true
        tcpKeepaliveCount: 5
        maxTransactionCount: 6
        apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
        maxSubscriptionCount: 1
        eventConnectionCountPerClientUsernameThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        maxEffectiveTxFlowCount: 3
        elidingMaxTopicCount: 6
        maxMsgsPerTransaction: 1
        queueControl1MaxDepth: 7
        tcpKeepaliveInterval: 3
        elidingEnabled: true
        maxIngressFlowCount: 7
        replicationAllowClientConnectWhenStandbyEnabled: true
        maxEgressFlowCount: 2
        maxTransactedSessionCount: 1
        rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
        serviceWebMaxConnectionCountPerClientUsername: 2
        allowGuaranteedEndpointCreateEnabled: true
        allowCutThroughForwardingEnabled: true
        apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
        maxEffectiveTransactionCount: 9
        maxConnectionCountPerClientUsername: 1
        eventIngressFlowCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
      properties:
        allowBridgeConnectionsEnabled:
          description: Indicates whether Bridge clients using the Client Profile are
            allowed to connect.
          type: boolean
        allowCutThroughForwardingEnabled:
          description: Indicates whether clients using the Client Profile are allowed
            to bind to endpoints with the cut-through forwarding delivery mode.
          type: boolean
        allowGuaranteedEndpointCreateDurability:
          description: |-
            Indicates whether clients using the Client Profile are allowed to create durable and/or non-durable topic endponts or queues. The allowed values and their meaning are:

            <pre>
            "all" - Client can create any type of endpoint.
            "durable" - Client can create only durable endpoints.
            "non-durable" - Client can create only non-durable endpoints.
            </pre>
             Available since 2.14.
          enum:
          - all
          - durable
          - non-durable
          type: string
        allowGuaranteedEndpointCreateEnabled:
          description: Indicates whether clients using the Client Profile are allowed
            to create topic endponts or queues.
          type: boolean
        allowGuaranteedMsgReceiveEnabled:
          description: Indicates whether clients using the Client Profile are allowed
            to receive guaranteed messages.
          type: boolean
        allowGuaranteedMsgSendEnabled:
          description: Indicates whether clients using the Client Profile are allowed
            to send guaranteed messages.
          type: boolean
        allowSharedSubscriptionsEnabled:
          description: Indicates whether shared subscriptions are allowed. Changing
            this setting does not affect existing subscriptions.
          type: boolean
        allowTransactedSessionsEnabled:
          description: Indicates whether clients using the Client Profile are allowed
            to establish transacted sessions.
          type: boolean
        apiQueueManagementCopyFromOnCreateName:
          description: The name of a queue to copy settings from when a new queue
            is created by a client using the Client Profile. The referenced queue
            must exist in the Message VPN. Deprecated since 2.14. This attribute has
            been replaced with `apiQueueManagementCopyFromOnCreateTemplateName`.
          type: string
        apiQueueManagementCopyFromOnCreateTemplateName:
          description: The name of a queue template to copy settings from when a new
            queue is created by a client using the Client Profile. If the referenced
            queue template does not exist, queue creation will fail when it tries
            to resolve this template. Available since 2.14.
          type: string
        apiTopicEndpointManagementCopyFromOnCreateName:
          description: The name of a topic endpoint to copy settings from when a new
            topic endpoint is created by a client using the Client Profile. The referenced
            topic endpoint must exist in the Message VPN. Deprecated since 2.14. This
            attribute has been replaced with `apiTopicEndpointManagementCopyFromOnCreateTemplateName`.
          type: string
        apiTopicEndpointManagementCopyFromOnCreateTemplateName:
          description: The name of a topic endpoint template to copy settings from
            when a new topic endpoint is created by a client using the Client Profile.
            If the referenced topic endpoint template does not exist, topic endpoint
            creation will fail when it tries to resolve this template. Available since
            2.14.
          type: string
        clientProfileName:
          description: The name of the Client Profile.
          type: string
        compressionEnabled:
          description: Indicates whether clients using the Client Profile are allowed
            to use compression.
          type: boolean
        elidingDelay:
          description: The amount of time to delay the delivery of messages to clients
            using the Client Profile after the initial message has been delivered
            (the eliding delay interval), in milliseconds. A value of 0 means there
            is no delay in delivering messages to clients.
          format: int64
          type: integer
        elidingEnabled:
          description: Indicates whether message eliding is enabled for clients using
            the Client Profile.
          type: boolean
        elidingMaxTopicCount:
          description: The maximum number of topics tracked for message eliding per
            client connection using the Client Profile.
          format: int64
          type: integer
        eventClientProvisionedEndpointSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEndpointCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceSmfConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceWebConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSubscriptionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxConnectionCountPerClientUsername:
          description: The maximum number of client connections per Client Username
            using the Client Profile.
          format: int64
          type: integer
        maxEffectiveEndpointCount:
          description: The effective maximum number of queues and topic endpoints
            per Client Username using the Client Profile.
          format: int32
          type: integer
        maxEffectiveRxFlowCount:
          description: The effective maximum number of receive flows per client using
            the Client Profile.
          format: int32
          type: integer
        maxEffectiveSubscriptionCount:
          description: The effective maximum number of subscriptions per client using
            the Client Profile.
          format: int32
          type: integer
        maxEffectiveTransactedSessionCount:
          description: The effective maximum number of transacted sessions per client
            using the Client Profile.
          format: int32
          type: integer
        maxEffectiveTransactionCount:
          description: The effective maximum number of transactions per client using
            the Client Profile.
          format: int32
          type: integer
        maxEffectiveTxFlowCount:
          description: The effective maximum number of transmit flows per client using
            the Client Profile.
          format: int32
          type: integer
        maxEgressFlowCount:
          description: The maximum number of transmit flows that can be created by
            one client using the Client Profile.
          format: int64
          type: integer
        maxEndpointCountPerClientUsername:
          description: The maximum number of queues and topic endpoints that can be
            created by clients with the same Client Username using the Client Profile.
          format: int64
          type: integer
        maxIngressFlowCount:
          description: The maximum number of receive flows that can be created by
            one client using the Client Profile.
          format: int64
          type: integer
        maxMsgsPerTransaction:
          description: The maximum number of publisher and consumer messages combined
            that is allowed within a transaction for each client associated with this
            client-profile. Exceeding this limit will result in a transaction prepare
            or commit failure. Changing this value during operation will not affect
            existing sessions. It is only validated at transaction creation time.
            Large transactions consume more resources and are more likely to require
            retrieving messages from the ADB or from disk to process the transaction
            prepare or commit requests. The transaction processing rate may diminish
            if a large number of messages must be retrieved from the ADB or from disk.
            Care should be taken to not use excessively large transactions needlessly
            to avoid exceeding resource limits and to avoid reducing the overall broker
            performance. Available since 2.20.
          format: int32
          type: integer
        maxSubscriptionCount:
          description: The maximum number of subscriptions per client using the Client
            Profile. This limit is not enforced when a client adds a subscription
            to an endpoint, except for MQTT QoS 1 subscriptions. In addition, this
            limit is not enforced when a subscription is added using a management
            interface, such as CLI or SEMP.
          format: int64
          type: integer
        maxTransactedSessionCount:
          description: The maximum number of transacted sessions that can be created
            by one client using the Client Profile.
          format: int64
          type: integer
        maxTransactionCount:
          description: The maximum number of transactions that can be created by one
            client using the Client Profile.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        queueControl1MaxDepth:
          description: The maximum depth of the "Control 1" (C-1) priority queue,
            in work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        queueControl1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Control 1" (C-1) priority queue, regardless of the `queueControl1MaxDepth`
            value.
          format: int32
          type: integer
        queueDirect1MaxDepth:
          description: The maximum depth of the "Direct 1" (D-1) priority queue, in
            work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        queueDirect1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 1" (D-1) priority queue, regardless of the `queueDirect1MaxDepth`
            value.
          format: int32
          type: integer
        queueDirect2MaxDepth:
          description: The maximum depth of the "Direct 2" (D-2) priority queue, in
            work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        queueDirect2MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 2" (D-2) priority queue, regardless of the `queueDirect2MaxDepth`
            value.
          format: int32
          type: integer
        queueDirect3MaxDepth:
          description: The maximum depth of the "Direct 3" (D-3) priority queue, in
            work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        queueDirect3MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 3" (D-3) priority queue, regardless of the `queueDirect3MaxDepth`
            value.
          format: int32
          type: integer
        queueGuaranteed1MaxDepth:
          description: The maximum depth of the "Guaranteed 1" (G-1) priority queue,
            in work units. Each work unit is 2048 bytes of message data.
          format: int32
          type: integer
        queueGuaranteed1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Guaranteed 1" (G-3) priority queue, regardless of the `queueGuaranteed1MaxDepth`
            value.
          format: int32
          type: integer
        rejectMsgToSenderOnNoSubscriptionMatchEnabled:
          description: Indicates whether to send a negative acknowledgement (NACK)
            to a client using the Client Profile when discarding a guaranteed message
            due to no matching subscription found.
          type: boolean
        replicationAllowClientConnectWhenStandbyEnabled:
          description: Indicates whether clients using the Client Profile are allowed
            to connect to the Message VPN when its replication state is standby.
          type: boolean
        serviceMinKeepaliveTimeout:
          description: The minimum client keepalive timeout which will be enforced
            for client connections. Available since 2.19.
          format: int32
          type: integer
        serviceSmfMaxConnectionCountPerClientUsername:
          description: The maximum number of SMF client connections per Client Username
            using the Client Profile.
          format: int64
          type: integer
        serviceSmfMinKeepaliveEnabled:
          description: Enable or disable the enforcement of a minimum keepalive timeout
            for SMF clients. Available since 2.19.
          type: boolean
        serviceWebInactiveTimeout:
          description: The timeout for inactive Web Transport client sessions using
            the Client Profile, in seconds.
          format: int64
          type: integer
        serviceWebMaxConnectionCountPerClientUsername:
          description: The maximum number of Web Transport client connections per
            Client Username using the Client Profile.
          format: int64
          type: integer
        serviceWebMaxPayload:
          description: The maximum Web Transport payload size before fragmentation
            occurs for clients using the Client Profile, in bytes. The size of the
            header is not included.
          format: int64
          type: integer
        tcpCongestionWindowSize:
          description: The TCP initial congestion window size for clients using the
            Client Profile, in multiples of the TCP Maximum Segment Size (MSS). Changing
            the value from its default of 2 results in non-compliance with RFC 2581.
            Contact Solace Support before changing this value.
          format: int64
          type: integer
        tcpKeepaliveCount:
          description: The number of TCP keepalive retransmissions to a client using
            the Client Profile before declaring that it is not available.
          format: int64
          type: integer
        tcpKeepaliveIdleTime:
          description: The amount of time a client connection using the Client Profile
            must remain idle before TCP begins sending keepalive probes, in seconds.
          format: int64
          type: integer
        tcpKeepaliveInterval:
          description: The amount of time between TCP keepalive retransmissions to
            a client using the Client Profile when no acknowledgement is received,
            in seconds.
          format: int64
          type: integer
        tcpMaxSegmentSize:
          description: The TCP maximum segment size for clients using the Client Profile,
            in bytes. Changes are applied to all existing connections.
          format: int64
          type: integer
        tcpMaxWindowSize:
          description: The TCP maximum window size for clients using the Client Profile,
            in kilobytes. Changes are applied to all existing connections.
          format: int64
          type: integer
        tlsAllowDowngradeToPlainTextEnabled:
          description: Indicates whether clients using the Client Profile are allowed
            to downgrade an encrypted connection to plain text.
          type: boolean
      type: object
    MsgVpnClientProfileCollections:
      type: object
    MsgVpnClientProfileLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Profile object.
          type: string
      type: object
    MsgVpnClientProfileResponse:
      example:
        data:
          apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 7
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tcpMaxSegmentSize: 3
          queueDirect2MaxDepth: 9
          serviceSmfMinKeepaliveEnabled: true
          maxEffectiveSubscriptionCount: 2
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 3
            setPercent: 6
          eventEgressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueDirect3MinMsgBurst: 8
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueControl1MinMsgBurst: 1
          serviceWebMaxPayload: 6
          maxEffectiveTransactedSessionCount: 7
          serviceMinKeepaliveTimeout: 3
          eventTransactedSessionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          maxEffectiveRxFlowCount: 5
          eventSubscriptionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 4
          queueDirect2MinMsgBurst: 9
          queueGuaranteed1MinMsgBurst: 6
          queueDirect1MaxDepth: 4
          eventServiceSmfConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueDirect3MaxDepth: 6
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          maxEffectiveEndpointCount: 5
          serviceSmfMaxConnectionCountPerClientUsername: 6
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 5
          queueGuaranteed1MaxDepth: 9
          serviceWebInactiveTimeout: 1
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 5
          maxTransactionCount: 6
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 1
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          maxEffectiveTxFlowCount: 3
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 1
          queueControl1MaxDepth: 7
          tcpKeepaliveInterval: 3
          elidingEnabled: true
          maxIngressFlowCount: 7
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 2
          maxTransactedSessionCount: 1
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 2
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxEffectiveTransactionCount: 9
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnClientProfile'
        links:
          $ref: '#/components/schemas/MsgVpnClientProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientProfilesResponse:
      example:
        data:
        - apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 7
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tcpMaxSegmentSize: 3
          queueDirect2MaxDepth: 9
          serviceSmfMinKeepaliveEnabled: true
          maxEffectiveSubscriptionCount: 2
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 3
            setPercent: 6
          eventEgressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueDirect3MinMsgBurst: 8
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueControl1MinMsgBurst: 1
          serviceWebMaxPayload: 6
          maxEffectiveTransactedSessionCount: 7
          serviceMinKeepaliveTimeout: 3
          eventTransactedSessionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          maxEffectiveRxFlowCount: 5
          eventSubscriptionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 4
          queueDirect2MinMsgBurst: 9
          queueGuaranteed1MinMsgBurst: 6
          queueDirect1MaxDepth: 4
          eventServiceSmfConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueDirect3MaxDepth: 6
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          maxEffectiveEndpointCount: 5
          serviceSmfMaxConnectionCountPerClientUsername: 6
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 5
          queueGuaranteed1MaxDepth: 9
          serviceWebInactiveTimeout: 1
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 5
          maxTransactionCount: 6
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 1
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          maxEffectiveTxFlowCount: 3
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 1
          queueControl1MaxDepth: 7
          tcpKeepaliveInterval: 3
          elidingEnabled: true
          maxIngressFlowCount: 7
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 2
          maxTransactedSessionCount: 1
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 2
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxEffectiveTransactionCount: 9
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
        - apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 7
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tcpMaxSegmentSize: 3
          queueDirect2MaxDepth: 9
          serviceSmfMinKeepaliveEnabled: true
          maxEffectiveSubscriptionCount: 2
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 3
            setPercent: 6
          eventEgressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueDirect3MinMsgBurst: 8
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueControl1MinMsgBurst: 1
          serviceWebMaxPayload: 6
          maxEffectiveTransactedSessionCount: 7
          serviceMinKeepaliveTimeout: 3
          eventTransactedSessionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          maxEffectiveRxFlowCount: 5
          eventSubscriptionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 4
          queueDirect2MinMsgBurst: 9
          queueGuaranteed1MinMsgBurst: 6
          queueDirect1MaxDepth: 4
          eventServiceSmfConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueDirect3MaxDepth: 6
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          maxEffectiveEndpointCount: 5
          serviceSmfMaxConnectionCountPerClientUsername: 6
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 5
          queueGuaranteed1MaxDepth: 9
          serviceWebInactiveTimeout: 1
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 5
          maxTransactionCount: 6
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 1
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          maxEffectiveTxFlowCount: 3
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 1
          queueControl1MaxDepth: 7
          tcpKeepaliveInterval: 3
          elidingEnabled: true
          maxIngressFlowCount: 7
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 2
          maxTransactedSessionCount: 1
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 2
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxEffectiveTransactionCount: 9
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnClientProfileCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientProfile'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientProfileLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientResponse:
      example:
        data:
          averageRxByteRate: 7
          restHttpResponseTxByteCount: 6
          txMsgRate: 3
          webTxTlsVersion: webTxTlsVersion
          clientAddress: clientAddress
          slowSubscriber: true
          publishTopicAclRxDiscardedMsgCount: 9
          bindSuccessCount: 7
          mqttDisconnectRxCount: 7
          webRxMsgCount: 2
          mqttPingrespTxCount: 7
          restHttpResponseTimeoutRxMsgCount: 1
          mqttConnackTxCount: 3
          tlsVersion: tlsVersion
          webTxByteCount: 4
          restHttpRequestTxMsgCount: 4
          webTxProtocol: webTxProtocol
          largeMsgEventRaised: true
          dataTxByteCount: 9
          elidingTopicCount: 6
          msgSpoolCongestionRxDiscardedMsgCount: 4
          rxByteRate: 9
          softwareVersion: softwareVersion
          alreadyBoundBindFailureCount: 2
          loginRxMsgCount: 6
          authorizationGroupName: authorizationGroupName
          clientName: clientName
          webTxRequestCount: 0
          controlRxMsgCount: 1
          noLocalDelivery: true
          aclProfileName: aclProfileName
          dtoNetworkPriority: 9
          restHttpResponseTimeoutTxMsgCount: 8
          txByteRate: 5
          webRxByteCount: 3
          restHttpRequestRxMsgCount: 7
          elidingTopicPeakCount: 3
          averageTxByteRate: 3
          mqttPublishQos2RxCount: 7
          noSubscriptionMatchRxDiscardedMsgCount: 9
          maxBindCountExceededBindFailureCount: 5
          webRxResponseCount: 8
          originalClientUsername: originalClientUsername
          rxDiscardedMsgCount: 1
          webParseErrorRxDiscardedMsgCount: 7
          controlTxMsgCount: 7
          msgSpoolRxDiscardedMsgCount: 7
          clientId: 1
          averageRxMsgRate: 9
          dataRxMsgCount: 5
          loginTxMsgCount: 6
          virtualRouter: virtualRouter
          webInactiveTimeout: 9
          txByteCount: 5
          clientUsername: clientUsername
          mqttPubrecTxCount: 5
          webRxProtocol: webRxProtocol
          restHttpRequestTxByteCount: 5
          webRxRequestCount: 3
          mqttUnsubscribeRxCount: 1
          aliasedFromMsgVpnName: aliasedFromMsgVpnName
          keepalive: true
          dataRxByteCount: 4
          cutThroughDeniedBindFailureCount: 1
          keepaliveEffectiveTimeout: 2
          clientProfileName: clientProfileName
          topicParseErrorRxDiscardedMsgCount: 0
          rxMsgRate: 9
          maxElidingTopicCountEventRaised: true
          webMaxPayload: 5
          webTxResponseCount: 7
          dtoLocalPriority: 8
          dataTxMsgCount: 9
          mqttConnectRxCount: 3
          mqttPublishQos0TxCount: 7
          mqttPublishQos1TxCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 7
          averageTxMsgRate: 2
          bindRequestCount: 4
          webTxMsgCount: 0
          mqttSubscribeRxCount: 6
          mqttPingreqRxCount: 0
          controlRxByteCount: 1
          restHttpResponseErrorRxMsgCount: 6
          rxByteCount: 8
          softwareDate: softwareDate
          restHttpRequestRxByteCount: 0
          disabledBindFailureCount: 6
          webRemainingTimeout: 0
          guaranteedDeniedBindFailureCount: 6
          eliding: true
          webRxTlsVersion: webRxTlsVersion
          tlsCipherDescription: tlsCipherDescription
          webTxTlsCipherDescription: webTxTlsCipherDescription
          mqttPubackRxCount: 6
          otherBindFailureCount: 0
          txDiscardedMsgCount: 8
          webTxTcpState: webTxTcpState
          restHttpResponseSuccessRxMsgCount: 0
          webSessionId: webSessionId
          restHttpResponseRxMsgCount: 3
          description: description
          platform: platform
          scheduledDisconnectTime: 8
          mqttPublishQos1RxCount: 3
          mqttPublishQos0RxCount: 8
          webRxEncoding: webRxEncoding
          restHttpResponseErrorTxMsgCount: 8
          tlsDowngradedToPlainText: true
          restHttpResponseTxMsgCount: 4
          rxMsgCount: 3
          mqttPubrelRxCount: 3
          mqttSubackTxCount: 0
          restHttpResponseSuccessTxMsgCount: 2
          controlTxByteCount: 6
          uptime: 3
          invalidSelectorBindFailureCount: 1
          mqttConnackErrorTxCount: 6
          mqttSubackErrorTxCount: 4
          mqttPubackTxCount: 0
          mqttPubcompTxCount: 4
          restHttpResponseRxByteCount: 4
          webRxTlsCipherDescription: webRxTlsCipherDescription
          mqttUnsubackTxCount: 4
          webTxEncoding: webTxEncoding
          user: user
          webRxTcpState: webRxTcpState
        collections:
          transactedSessions:
            count: 5
          subscriptions:
            count: 1
          txFlows:
            count: 5
          rxFlows:
            count: 6
          connections:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          txFlowsUri: txFlowsUri
          connectionsUri: connectionsUri
          transactedSessionsUri: transactedSessionsUri
          rxFlowsUri: rxFlowsUri
          subscriptionsUri: subscriptionsUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnClientCollections'
        data:
          $ref: '#/components/schemas/MsgVpnClient'
        links:
          $ref: '#/components/schemas/MsgVpnClientLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientRxFlow:
      example:
        spoolFileLimitExceededDiscardedMsgCount: 9
        clientName: clientName
        replicationStandbyDiscardedMsgCount: 5
        maxMsgSizeExceededDiscardedMsgCount: 7
        notCompatibleWithForwardingModeDiscardedMsgCount: 1
        publisherId: 1
        windowSize: 1
        syncReplicationIneligibleDiscardedMsgCount: 3
        connectTime: 0
        destinationGroupErrorDiscardedMsgCount: 6
        msgVpnName: msgVpnName
        noLocalDeliveryDiscardedMsgCount: 1
        spoolToAdbFailDiscardedMsgCount: 8
        flowId: 7
        queueNotFoundDiscardedMsgCount: 4
        endpointDisabledDiscardedMsgCount: 5
        spoolToDiskFailDiscardedMsgCount: 9
        outOfOrderDiscardedMsgCount: 6
        sessionName: sessionName
        guaranteedMsgCount: 9
        localMsgCountExceededDiscardedMsgCount: 2
        userProfileDeniedGuaranteedDiscardedMsgCount: 6
        spoolUsageExceededDiscardedMsgCount: 6
        duplicateDiscardedMsgCount: 1
        lastRxMsgId: 3
        spoolNotReadyDiscardedMsgCount: 6
        flowName: flowName
        publishAclDeniedDiscardedMsgCount: 7
        noEligibleDestinationsDiscardedMsgCount: 1
        endpointUsageExceededDiscardedMsgCount: 5
        erroredDiscardedMsgCount: 2
        smfTtlExceededDiscardedMsgCount: 9
        lowPriorityMsgCongestionDiscardedMsgCount: 4
      properties:
        clientName:
          description: The name of the Client.
          type: string
        connectTime:
          description: The timestamp of when the Flow from the Client connected.
          format: int32
          type: integer
        destinationGroupErrorDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to a destination group error.
          format: int64
          type: integer
        duplicateDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to being a duplicate.
          format: int64
          type: integer
        endpointDisabledDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to an eligible endpoint destination being disabled.
          format: int64
          type: integer
        endpointUsageExceededDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to an eligible endpoint destination having its maximum message spool usage
            exceeded.
          format: int64
          type: integer
        erroredDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to errors being detected.
          format: int64
          type: integer
        flowId:
          description: The identifier (ID) of the flow.
          format: int64
          type: integer
        flowName:
          description: The name of the Flow.
          type: string
        guaranteedMsgCount:
          description: The number of guaranteed messages from the Flow.
          format: int64
          type: integer
        lastRxMsgId:
          description: The identifier (ID) of the last message received on the Flow.
          format: int64
          type: integer
        localMsgCountExceededDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to the maximum number of messages allowed on the broker being exceeded.
          format: int64
          type: integer
        lowPriorityMsgCongestionDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to congestion of low priority messages.
          format: int64
          type: integer
        maxMsgSizeExceededDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to the maximum allowed message size being exceeded.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        noEligibleDestinationsDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to there being no eligible endpoint destination.
          format: int64
          type: integer
        noLocalDeliveryDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to no local delivery being requested.
          format: int64
          type: integer
        notCompatibleWithForwardingModeDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to being incompatible with the forwarding mode of an eligible endpoint
            destination.
          format: int64
          type: integer
        outOfOrderDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to being received out of order.
          format: int64
          type: integer
        publishAclDeniedDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to being denied by the access control list (ACL) profile for the published
            topic.
          format: int64
          type: integer
        publisherId:
          description: The identifier (ID) of the publisher for the Flow.
          format: int64
          type: integer
        queueNotFoundDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to the destination queue not being found.
          format: int64
          type: integer
        replicationStandbyDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to the Message VPN being in the replication standby state.
          format: int64
          type: integer
        sessionName:
          description: The name of the transacted session on the Flow.
          type: string
        smfTtlExceededDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to the message time-to-live (TTL) count being exceeded. The message TTL
            count is the maximum number of times the message can cross a bridge between
            Message VPNs.
          format: int64
          type: integer
        spoolFileLimitExceededDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to all available message spool file resources being used.
          format: int64
          type: integer
        spoolNotReadyDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to the message spool being not ready.
          format: int64
          type: integer
        spoolToAdbFailDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to a failure while spooling to the Assured Delivery Blade (ADB).
          format: int64
          type: integer
        spoolToDiskFailDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to a failure while spooling to the disk.
          format: int64
          type: integer
        spoolUsageExceededDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to the maximum message spool usage being exceeded.
          format: int64
          type: integer
        syncReplicationIneligibleDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to synchronous replication being ineligible.
          format: int64
          type: integer
        userProfileDeniedGuaranteedDiscardedMsgCount:
          description: The number of guaranteed messages from the Flow discarded due
            to being denied by the client profile.
          format: int64
          type: integer
        windowSize:
          description: The size of the window used for guaranteed messages sent on
            the Flow, in messages.
          format: int32
          type: integer
      type: object
    MsgVpnClientRxFlowCollections:
      type: object
    MsgVpnClientRxFlowLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Receive Flow object.
          type: string
      type: object
    MsgVpnClientRxFlowResponse:
      example:
        data:
          spoolFileLimitExceededDiscardedMsgCount: 9
          clientName: clientName
          replicationStandbyDiscardedMsgCount: 5
          maxMsgSizeExceededDiscardedMsgCount: 7
          notCompatibleWithForwardingModeDiscardedMsgCount: 1
          publisherId: 1
          windowSize: 1
          syncReplicationIneligibleDiscardedMsgCount: 3
          connectTime: 0
          destinationGroupErrorDiscardedMsgCount: 6
          msgVpnName: msgVpnName
          noLocalDeliveryDiscardedMsgCount: 1
          spoolToAdbFailDiscardedMsgCount: 8
          flowId: 7
          queueNotFoundDiscardedMsgCount: 4
          endpointDisabledDiscardedMsgCount: 5
          spoolToDiskFailDiscardedMsgCount: 9
          outOfOrderDiscardedMsgCount: 6
          sessionName: sessionName
          guaranteedMsgCount: 9
          localMsgCountExceededDiscardedMsgCount: 2
          userProfileDeniedGuaranteedDiscardedMsgCount: 6
          spoolUsageExceededDiscardedMsgCount: 6
          duplicateDiscardedMsgCount: 1
          lastRxMsgId: 3
          spoolNotReadyDiscardedMsgCount: 6
          flowName: flowName
          publishAclDeniedDiscardedMsgCount: 7
          noEligibleDestinationsDiscardedMsgCount: 1
          endpointUsageExceededDiscardedMsgCount: 5
          erroredDiscardedMsgCount: 2
          smfTtlExceededDiscardedMsgCount: 9
          lowPriorityMsgCongestionDiscardedMsgCount: 4
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnClientRxFlow'
        links:
          $ref: '#/components/schemas/MsgVpnClientRxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientRxFlowsResponse:
      example:
        data:
        - spoolFileLimitExceededDiscardedMsgCount: 9
          clientName: clientName
          replicationStandbyDiscardedMsgCount: 5
          maxMsgSizeExceededDiscardedMsgCount: 7
          notCompatibleWithForwardingModeDiscardedMsgCount: 1
          publisherId: 1
          windowSize: 1
          syncReplicationIneligibleDiscardedMsgCount: 3
          connectTime: 0
          destinationGroupErrorDiscardedMsgCount: 6
          msgVpnName: msgVpnName
          noLocalDeliveryDiscardedMsgCount: 1
          spoolToAdbFailDiscardedMsgCount: 8
          flowId: 7
          queueNotFoundDiscardedMsgCount: 4
          endpointDisabledDiscardedMsgCount: 5
          spoolToDiskFailDiscardedMsgCount: 9
          outOfOrderDiscardedMsgCount: 6
          sessionName: sessionName
          guaranteedMsgCount: 9
          localMsgCountExceededDiscardedMsgCount: 2
          userProfileDeniedGuaranteedDiscardedMsgCount: 6
          spoolUsageExceededDiscardedMsgCount: 6
          duplicateDiscardedMsgCount: 1
          lastRxMsgId: 3
          spoolNotReadyDiscardedMsgCount: 6
          flowName: flowName
          publishAclDeniedDiscardedMsgCount: 7
          noEligibleDestinationsDiscardedMsgCount: 1
          endpointUsageExceededDiscardedMsgCount: 5
          erroredDiscardedMsgCount: 2
          smfTtlExceededDiscardedMsgCount: 9
          lowPriorityMsgCongestionDiscardedMsgCount: 4
        - spoolFileLimitExceededDiscardedMsgCount: 9
          clientName: clientName
          replicationStandbyDiscardedMsgCount: 5
          maxMsgSizeExceededDiscardedMsgCount: 7
          notCompatibleWithForwardingModeDiscardedMsgCount: 1
          publisherId: 1
          windowSize: 1
          syncReplicationIneligibleDiscardedMsgCount: 3
          connectTime: 0
          destinationGroupErrorDiscardedMsgCount: 6
          msgVpnName: msgVpnName
          noLocalDeliveryDiscardedMsgCount: 1
          spoolToAdbFailDiscardedMsgCount: 8
          flowId: 7
          queueNotFoundDiscardedMsgCount: 4
          endpointDisabledDiscardedMsgCount: 5
          spoolToDiskFailDiscardedMsgCount: 9
          outOfOrderDiscardedMsgCount: 6
          sessionName: sessionName
          guaranteedMsgCount: 9
          localMsgCountExceededDiscardedMsgCount: 2
          userProfileDeniedGuaranteedDiscardedMsgCount: 6
          spoolUsageExceededDiscardedMsgCount: 6
          duplicateDiscardedMsgCount: 1
          lastRxMsgId: 3
          spoolNotReadyDiscardedMsgCount: 6
          flowName: flowName
          publishAclDeniedDiscardedMsgCount: 7
          noEligibleDestinationsDiscardedMsgCount: 1
          endpointUsageExceededDiscardedMsgCount: 5
          erroredDiscardedMsgCount: 2
          smfTtlExceededDiscardedMsgCount: 9
          lowPriorityMsgCongestionDiscardedMsgCount: 4
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnClientRxFlowCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientRxFlow'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientRxFlowLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientSubscription:
      example:
        clientName: clientName
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
        dtoPriority: dtoPriority
      properties:
        clientName:
          description: The name of the Client.
          type: string
        dtoPriority:
          description: |
            The priority of the Subscription topic for receiving deliver-to-one (DTO) messages. The allowed values and their meaning are:

            <pre>
            "p1" - The 1st or highest priority.
            "p2" - The 2nd highest priority.
            "p3" - The 3rd highest priority.
            "p4" - The 4th highest priority.
            "da" - Ignore priority and deliver always.
            </pre>
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        subscriptionTopic:
          description: The topic of the Subscription.
          type: string
      type: object
    MsgVpnClientSubscriptionCollections:
      type: object
    MsgVpnClientSubscriptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Subscription object.
          type: string
      type: object
    MsgVpnClientSubscriptionResponse:
      example:
        data:
          clientName: clientName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          dtoPriority: dtoPriority
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnClientSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnClientSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientSubscriptionsResponse:
      example:
        data:
        - clientName: clientName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          dtoPriority: dtoPriority
        - clientName: clientName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          dtoPriority: dtoPriority
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnClientSubscriptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientSubscription'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientSubscriptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientTransactedSession:
      example:
        pendingPublishedMsgCount: 7
        startSuccessCount: 1
        twoPhaseCommitFailureCount: 6
        clientName: clientName
        suspendFailureCount: 6
        commitCount: 0
        pendingConsumedMsgCount: 6
        endFailureCount: 7
        resumeSuccessCount: 9
        rollbackCount: 8
        successCount: 2
        onePhaseCommitSuccessCount: 1
        prepareFailureCount: 1
        rollbackSuccessCount: 6
        msgVpnName: msgVpnName
        endRollbackSuccessCount: 3
        forgetSuccessCount: 1
        previousTransactionState: previousTransactionState
        consumedMsgCount: 5
        publishedMsgCount: 5
        endFailSuccessCount: 2
        resumeFailureCount: 9
        prepareSuccessCount: 4
        sessionName: sessionName
        commitFailureCount: 6
        endSuccessCount: 2
        suspendSuccessCount: 6
        transactionId: 5
        twoPhaseCommitSuccessCount: 3
        commitSuccessCount: 1
        spooledMsgCount: 3
        endFailFailureCount: 5
        startFailureCount: 6
        retrievedMsgCount: 6
        forgetFailureCount: 7
        endRollbackFailureCount: 9
        onePhaseCommitFailureCount: 1
        rollbackFailureCount: 9
        transactionState: transactionState
        failureCount: 4
      properties:
        clientName:
          description: The name of the Client.
          type: string
        commitCount:
          description: The number of transactions committed within the Transacted
            Session.
          format: int64
          type: integer
        commitFailureCount:
          description: The number of transaction commit operations that failed.
          format: int64
          type: integer
        commitSuccessCount:
          description: The number of transaction commit operations that succeeded.
          format: int64
          type: integer
        consumedMsgCount:
          description: The number of messages consumed within the Transacted Session.
          format: int64
          type: integer
        endFailFailureCount:
          description: The number of transaction end fail operations that failed.
          format: int64
          type: integer
        endFailSuccessCount:
          description: The number of transaction end fail operations that succeeded.
          format: int64
          type: integer
        endFailureCount:
          description: The number of transaction end operations that failed.
          format: int64
          type: integer
        endRollbackFailureCount:
          description: The number of transaction end rollback operations that failed.
          format: int64
          type: integer
        endRollbackSuccessCount:
          description: The number of transaction end rollback operations that succeeded.
          format: int64
          type: integer
        endSuccessCount:
          description: The number of transaction end operations that succeeded.
          format: int64
          type: integer
        failureCount:
          description: The number of transactions that failed within the Transacted
            Session.
          format: int64
          type: integer
        forgetFailureCount:
          description: The number of transaction forget operations that failed.
          format: int64
          type: integer
        forgetSuccessCount:
          description: The number of transaction forget operations that succeeded.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        onePhaseCommitFailureCount:
          description: The number of transaction one-phase commit operations that
            failed.
          format: int64
          type: integer
        onePhaseCommitSuccessCount:
          description: The number of transaction one-phase commit operations that
            succeeded.
          format: int64
          type: integer
        pendingConsumedMsgCount:
          description: The number of messages to be consumed when the transaction
            is committed.
          format: int32
          type: integer
        pendingPublishedMsgCount:
          description: The number of messages to be published when the transaction
            is committed.
          format: int32
          type: integer
        prepareFailureCount:
          description: The number of transaction prepare operations that failed.
          format: int64
          type: integer
        prepareSuccessCount:
          description: The number of transaction prepare operations that succeeded.
          format: int64
          type: integer
        previousTransactionState:
          description: |
            The state of the previous transaction. The allowed values and their meaning are:

            <pre>
            "none" - The previous transaction had no state.
            "committed" - The previous transaction was committed.
            "rolled-back" - The previous transaction was rolled back.
            "failed" - The previous transaction failed.
            </pre>
          type: string
        publishedMsgCount:
          description: The number of messages published within the Transacted Session.
          format: int64
          type: integer
        resumeFailureCount:
          description: The number of transaction resume operations that failed.
          format: int64
          type: integer
        resumeSuccessCount:
          description: The number of transaction resume operations that succeeded.
          format: int64
          type: integer
        retrievedMsgCount:
          description: The number of messages retrieved within the Transacted Session.
          format: int64
          type: integer
        rollbackCount:
          description: The number of transactions rolled back within the Transacted
            Session.
          format: int64
          type: integer
        rollbackFailureCount:
          description: The number of transaction rollback operations that failed.
          format: int64
          type: integer
        rollbackSuccessCount:
          description: The number of transaction rollback operations that succeeded.
          format: int64
          type: integer
        sessionName:
          description: The name of the Transacted Session.
          type: string
        spooledMsgCount:
          description: The number of messages spooled within the Transacted Session.
          format: int64
          type: integer
        startFailureCount:
          description: The number of transaction start operations that failed.
          format: int64
          type: integer
        startSuccessCount:
          description: The number of transaction start operations that succeeded.
          format: int64
          type: integer
        successCount:
          description: The number of transactions that succeeded within the Transacted
            Session.
          format: int64
          type: integer
        suspendFailureCount:
          description: The number of transaction suspend operations that failed.
          format: int64
          type: integer
        suspendSuccessCount:
          description: The number of transaction suspend operations that succeeded.
          format: int64
          type: integer
        transactionId:
          description: The identifier (ID) of the transaction in the Transacted Session.
          format: int32
          type: integer
        transactionState:
          description: |
            The state of the current transaction. The allowed values and their meaning are:

            <pre>
            "in-progress" - The current transaction is in progress.
            "committing" - The current transaction is committing.
            "rolling-back" - The current transaction is rolling back.
            "failing" - The current transaction is failing.
            </pre>
          type: string
        twoPhaseCommitFailureCount:
          description: The number of transaction two-phase commit operations that
            failed.
          format: int64
          type: integer
        twoPhaseCommitSuccessCount:
          description: The number of transaction two-phase commit operations that
            succeeded.
          format: int64
          type: integer
      type: object
    MsgVpnClientTransactedSessionCollections:
      type: object
    MsgVpnClientTransactedSessionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Transacted Session object.
          type: string
      type: object
    MsgVpnClientTransactedSessionResponse:
      example:
        data:
          pendingPublishedMsgCount: 7
          startSuccessCount: 1
          twoPhaseCommitFailureCount: 6
          clientName: clientName
          suspendFailureCount: 6
          commitCount: 0
          pendingConsumedMsgCount: 6
          endFailureCount: 7
          resumeSuccessCount: 9
          rollbackCount: 8
          successCount: 2
          onePhaseCommitSuccessCount: 1
          prepareFailureCount: 1
          rollbackSuccessCount: 6
          msgVpnName: msgVpnName
          endRollbackSuccessCount: 3
          forgetSuccessCount: 1
          previousTransactionState: previousTransactionState
          consumedMsgCount: 5
          publishedMsgCount: 5
          endFailSuccessCount: 2
          resumeFailureCount: 9
          prepareSuccessCount: 4
          sessionName: sessionName
          commitFailureCount: 6
          endSuccessCount: 2
          suspendSuccessCount: 6
          transactionId: 5
          twoPhaseCommitSuccessCount: 3
          commitSuccessCount: 1
          spooledMsgCount: 3
          endFailFailureCount: 5
          startFailureCount: 6
          retrievedMsgCount: 6
          forgetFailureCount: 7
          endRollbackFailureCount: 9
          onePhaseCommitFailureCount: 1
          rollbackFailureCount: 9
          transactionState: transactionState
          failureCount: 4
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnClientTransactedSession'
        links:
          $ref: '#/components/schemas/MsgVpnClientTransactedSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientTransactedSessionsResponse:
      example:
        data:
        - pendingPublishedMsgCount: 7
          startSuccessCount: 1
          twoPhaseCommitFailureCount: 6
          clientName: clientName
          suspendFailureCount: 6
          commitCount: 0
          pendingConsumedMsgCount: 6
          endFailureCount: 7
          resumeSuccessCount: 9
          rollbackCount: 8
          successCount: 2
          onePhaseCommitSuccessCount: 1
          prepareFailureCount: 1
          rollbackSuccessCount: 6
          msgVpnName: msgVpnName
          endRollbackSuccessCount: 3
          forgetSuccessCount: 1
          previousTransactionState: previousTransactionState
          consumedMsgCount: 5
          publishedMsgCount: 5
          endFailSuccessCount: 2
          resumeFailureCount: 9
          prepareSuccessCount: 4
          sessionName: sessionName
          commitFailureCount: 6
          endSuccessCount: 2
          suspendSuccessCount: 6
          transactionId: 5
          twoPhaseCommitSuccessCount: 3
          commitSuccessCount: 1
          spooledMsgCount: 3
          endFailFailureCount: 5
          startFailureCount: 6
          retrievedMsgCount: 6
          forgetFailureCount: 7
          endRollbackFailureCount: 9
          onePhaseCommitFailureCount: 1
          rollbackFailureCount: 9
          transactionState: transactionState
          failureCount: 4
        - pendingPublishedMsgCount: 7
          startSuccessCount: 1
          twoPhaseCommitFailureCount: 6
          clientName: clientName
          suspendFailureCount: 6
          commitCount: 0
          pendingConsumedMsgCount: 6
          endFailureCount: 7
          resumeSuccessCount: 9
          rollbackCount: 8
          successCount: 2
          onePhaseCommitSuccessCount: 1
          prepareFailureCount: 1
          rollbackSuccessCount: 6
          msgVpnName: msgVpnName
          endRollbackSuccessCount: 3
          forgetSuccessCount: 1
          previousTransactionState: previousTransactionState
          consumedMsgCount: 5
          publishedMsgCount: 5
          endFailSuccessCount: 2
          resumeFailureCount: 9
          prepareSuccessCount: 4
          sessionName: sessionName
          commitFailureCount: 6
          endSuccessCount: 2
          suspendSuccessCount: 6
          transactionId: 5
          twoPhaseCommitSuccessCount: 3
          commitSuccessCount: 1
          spooledMsgCount: 3
          endFailFailureCount: 5
          startFailureCount: 6
          retrievedMsgCount: 6
          forgetFailureCount: 7
          endRollbackFailureCount: 9
          onePhaseCommitFailureCount: 1
          rollbackFailureCount: 9
          transactionState: transactionState
          failureCount: 4
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnClientTransactedSessionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientTransactedSession'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientTransactedSessionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientTxFlow:
      example:
        endpointType: endpointType
        clientName: clientName
        endpointName: endpointName
        msgVpnName: msgVpnName
        flowId: 0
      properties:
        clientName:
          description: The name of the Client.
          type: string
        endpointName:
          description: The name of the Queue or Topic Endpoint bound.
          type: string
        endpointType:
          description: |
            The type of endpoint bound. The allowed values and their meaning are:

            <pre>
            "queue" - The Client is bound to a Queue.
            "topic-endpoint" - The Client is bound to a Topic Endpoint.
            </pre>
          type: string
        flowId:
          description: The identifier (ID) of the flow.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnClientTxFlowCollections:
      type: object
    MsgVpnClientTxFlowLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Transmit Flow object.
          type: string
      type: object
    MsgVpnClientTxFlowResponse:
      example:
        data:
          endpointType: endpointType
          clientName: clientName
          endpointName: endpointName
          msgVpnName: msgVpnName
          flowId: 0
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnClientTxFlow'
        links:
          $ref: '#/components/schemas/MsgVpnClientTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientTxFlowsResponse:
      example:
        data:
        - endpointType: endpointType
          clientName: clientName
          endpointName: endpointName
          msgVpnName: msgVpnName
          flowId: 0
        - endpointType: endpointType
          clientName: clientName
          endpointName: endpointName
          msgVpnName: msgVpnName
          flowId: 0
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnClientTxFlowCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientTxFlow'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientTxFlowLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientUsername:
      example:
        subscriptionManagerEnabled: true
        clientUsername: clientUsername
        clientProfileName: clientProfileName
        dynamic: true
        msgVpnName: msgVpnName
        guaranteedEndpointPermissionOverrideEnabled: true
        aclProfileName: aclProfileName
        enabled: true
      properties:
        aclProfileName:
          description: The ACL Profile of the Client Username.
          type: string
        clientProfileName:
          description: The Client Profile of the Client Username.
          type: string
        clientUsername:
          description: The name of the Client Username.
          type: string
        dynamic:
          description: Indicates whether the Client Username was dynamically created
            based on remote authorization data.
          type: boolean
        enabled:
          description: Indicates whether the Client Username is enabled.
          type: boolean
        guaranteedEndpointPermissionOverrideEnabled:
          description: Indicates whether the guaranteed endpoint permission override
            is enabled for the Client Username.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        subscriptionManagerEnabled:
          description: Indicates whether the subscription management capability is
            enabled for the Client Username.
          type: boolean
      type: object
    MsgVpnClientUsernameCollections:
      type: object
    MsgVpnClientUsernameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Username object.
          type: string
      type: object
    MsgVpnClientUsernameResponse:
      example:
        data:
          subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          dynamic: true
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnClientUsername'
        links:
          $ref: '#/components/schemas/MsgVpnClientUsernameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientUsernamesResponse:
      example:
        data:
        - subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          dynamic: true
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        - subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          dynamic: true
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientUsername'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientsResponse:
      example:
        data:
        - averageRxByteRate: 7
          restHttpResponseTxByteCount: 6
          txMsgRate: 3
          webTxTlsVersion: webTxTlsVersion
          clientAddress: clientAddress
          slowSubscriber: true
          publishTopicAclRxDiscardedMsgCount: 9
          bindSuccessCount: 7
          mqttDisconnectRxCount: 7
          webRxMsgCount: 2
          mqttPingrespTxCount: 7
          restHttpResponseTimeoutRxMsgCount: 1
          mqttConnackTxCount: 3
          tlsVersion: tlsVersion
          webTxByteCount: 4
          restHttpRequestTxMsgCount: 4
          webTxProtocol: webTxProtocol
          largeMsgEventRaised: true
          dataTxByteCount: 9
          elidingTopicCount: 6
          msgSpoolCongestionRxDiscardedMsgCount: 4
          rxByteRate: 9
          softwareVersion: softwareVersion
          alreadyBoundBindFailureCount: 2
          loginRxMsgCount: 6
          authorizationGroupName: authorizationGroupName
          clientName: clientName
          webTxRequestCount: 0
          controlRxMsgCount: 1
          noLocalDelivery: true
          aclProfileName: aclProfileName
          dtoNetworkPriority: 9
          restHttpResponseTimeoutTxMsgCount: 8
          txByteRate: 5
          webRxByteCount: 3
          restHttpRequestRxMsgCount: 7
          elidingTopicPeakCount: 3
          averageTxByteRate: 3
          mqttPublishQos2RxCount: 7
          noSubscriptionMatchRxDiscardedMsgCount: 9
          maxBindCountExceededBindFailureCount: 5
          webRxResponseCount: 8
          originalClientUsername: originalClientUsername
          rxDiscardedMsgCount: 1
          webParseErrorRxDiscardedMsgCount: 7
          controlTxMsgCount: 7
          msgSpoolRxDiscardedMsgCount: 7
          clientId: 1
          averageRxMsgRate: 9
          dataRxMsgCount: 5
          loginTxMsgCount: 6
          virtualRouter: virtualRouter
          webInactiveTimeout: 9
          txByteCount: 5
          clientUsername: clientUsername
          mqttPubrecTxCount: 5
          webRxProtocol: webRxProtocol
          restHttpRequestTxByteCount: 5
          webRxRequestCount: 3
          mqttUnsubscribeRxCount: 1
          aliasedFromMsgVpnName: aliasedFromMsgVpnName
          keepalive: true
          dataRxByteCount: 4
          cutThroughDeniedBindFailureCount: 1
          keepaliveEffectiveTimeout: 2
          clientProfileName: clientProfileName
          topicParseErrorRxDiscardedMsgCount: 0
          rxMsgRate: 9
          maxElidingTopicCountEventRaised: true
          webMaxPayload: 5
          webTxResponseCount: 7
          dtoLocalPriority: 8
          dataTxMsgCount: 9
          mqttConnectRxCount: 3
          mqttPublishQos0TxCount: 7
          mqttPublishQos1TxCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 7
          averageTxMsgRate: 2
          bindRequestCount: 4
          webTxMsgCount: 0
          mqttSubscribeRxCount: 6
          mqttPingreqRxCount: 0
          controlRxByteCount: 1
          restHttpResponseErrorRxMsgCount: 6
          rxByteCount: 8
          softwareDate: softwareDate
          restHttpRequestRxByteCount: 0
          disabledBindFailureCount: 6
          webRemainingTimeout: 0
          guaranteedDeniedBindFailureCount: 6
          eliding: true
          webRxTlsVersion: webRxTlsVersion
          tlsCipherDescription: tlsCipherDescription
          webTxTlsCipherDescription: webTxTlsCipherDescription
          mqttPubackRxCount: 6
          otherBindFailureCount: 0
          txDiscardedMsgCount: 8
          webTxTcpState: webTxTcpState
          restHttpResponseSuccessRxMsgCount: 0
          webSessionId: webSessionId
          restHttpResponseRxMsgCount: 3
          description: description
          platform: platform
          scheduledDisconnectTime: 8
          mqttPublishQos1RxCount: 3
          mqttPublishQos0RxCount: 8
          webRxEncoding: webRxEncoding
          restHttpResponseErrorTxMsgCount: 8
          tlsDowngradedToPlainText: true
          restHttpResponseTxMsgCount: 4
          rxMsgCount: 3
          mqttPubrelRxCount: 3
          mqttSubackTxCount: 0
          restHttpResponseSuccessTxMsgCount: 2
          controlTxByteCount: 6
          uptime: 3
          invalidSelectorBindFailureCount: 1
          mqttConnackErrorTxCount: 6
          mqttSubackErrorTxCount: 4
          mqttPubackTxCount: 0
          mqttPubcompTxCount: 4
          restHttpResponseRxByteCount: 4
          webRxTlsCipherDescription: webRxTlsCipherDescription
          mqttUnsubackTxCount: 4
          webTxEncoding: webTxEncoding
          user: user
          webRxTcpState: webRxTcpState
        - averageRxByteRate: 7
          restHttpResponseTxByteCount: 6
          txMsgRate: 3
          webTxTlsVersion: webTxTlsVersion
          clientAddress: clientAddress
          slowSubscriber: true
          publishTopicAclRxDiscardedMsgCount: 9
          bindSuccessCount: 7
          mqttDisconnectRxCount: 7
          webRxMsgCount: 2
          mqttPingrespTxCount: 7
          restHttpResponseTimeoutRxMsgCount: 1
          mqttConnackTxCount: 3
          tlsVersion: tlsVersion
          webTxByteCount: 4
          restHttpRequestTxMsgCount: 4
          webTxProtocol: webTxProtocol
          largeMsgEventRaised: true
          dataTxByteCount: 9
          elidingTopicCount: 6
          msgSpoolCongestionRxDiscardedMsgCount: 4
          rxByteRate: 9
          softwareVersion: softwareVersion
          alreadyBoundBindFailureCount: 2
          loginRxMsgCount: 6
          authorizationGroupName: authorizationGroupName
          clientName: clientName
          webTxRequestCount: 0
          controlRxMsgCount: 1
          noLocalDelivery: true
          aclProfileName: aclProfileName
          dtoNetworkPriority: 9
          restHttpResponseTimeoutTxMsgCount: 8
          txByteRate: 5
          webRxByteCount: 3
          restHttpRequestRxMsgCount: 7
          elidingTopicPeakCount: 3
          averageTxByteRate: 3
          mqttPublishQos2RxCount: 7
          noSubscriptionMatchRxDiscardedMsgCount: 9
          maxBindCountExceededBindFailureCount: 5
          webRxResponseCount: 8
          originalClientUsername: originalClientUsername
          rxDiscardedMsgCount: 1
          webParseErrorRxDiscardedMsgCount: 7
          controlTxMsgCount: 7
          msgSpoolRxDiscardedMsgCount: 7
          clientId: 1
          averageRxMsgRate: 9
          dataRxMsgCount: 5
          loginTxMsgCount: 6
          virtualRouter: virtualRouter
          webInactiveTimeout: 9
          txByteCount: 5
          clientUsername: clientUsername
          mqttPubrecTxCount: 5
          webRxProtocol: webRxProtocol
          restHttpRequestTxByteCount: 5
          webRxRequestCount: 3
          mqttUnsubscribeRxCount: 1
          aliasedFromMsgVpnName: aliasedFromMsgVpnName
          keepalive: true
          dataRxByteCount: 4
          cutThroughDeniedBindFailureCount: 1
          keepaliveEffectiveTimeout: 2
          clientProfileName: clientProfileName
          topicParseErrorRxDiscardedMsgCount: 0
          rxMsgRate: 9
          maxElidingTopicCountEventRaised: true
          webMaxPayload: 5
          webTxResponseCount: 7
          dtoLocalPriority: 8
          dataTxMsgCount: 9
          mqttConnectRxCount: 3
          mqttPublishQos0TxCount: 7
          mqttPublishQos1TxCount: 3
          msgVpnName: msgVpnName
          txMsgCount: 7
          averageTxMsgRate: 2
          bindRequestCount: 4
          webTxMsgCount: 0
          mqttSubscribeRxCount: 6
          mqttPingreqRxCount: 0
          controlRxByteCount: 1
          restHttpResponseErrorRxMsgCount: 6
          rxByteCount: 8
          softwareDate: softwareDate
          restHttpRequestRxByteCount: 0
          disabledBindFailureCount: 6
          webRemainingTimeout: 0
          guaranteedDeniedBindFailureCount: 6
          eliding: true
          webRxTlsVersion: webRxTlsVersion
          tlsCipherDescription: tlsCipherDescription
          webTxTlsCipherDescription: webTxTlsCipherDescription
          mqttPubackRxCount: 6
          otherBindFailureCount: 0
          txDiscardedMsgCount: 8
          webTxTcpState: webTxTcpState
          restHttpResponseSuccessRxMsgCount: 0
          webSessionId: webSessionId
          restHttpResponseRxMsgCount: 3
          description: description
          platform: platform
          scheduledDisconnectTime: 8
          mqttPublishQos1RxCount: 3
          mqttPublishQos0RxCount: 8
          webRxEncoding: webRxEncoding
          restHttpResponseErrorTxMsgCount: 8
          tlsDowngradedToPlainText: true
          restHttpResponseTxMsgCount: 4
          rxMsgCount: 3
          mqttPubrelRxCount: 3
          mqttSubackTxCount: 0
          restHttpResponseSuccessTxMsgCount: 2
          controlTxByteCount: 6
          uptime: 3
          invalidSelectorBindFailureCount: 1
          mqttConnackErrorTxCount: 6
          mqttSubackErrorTxCount: 4
          mqttPubackTxCount: 0
          mqttPubcompTxCount: 4
          restHttpResponseRxByteCount: 4
          webRxTlsCipherDescription: webRxTlsCipherDescription
          mqttUnsubackTxCount: 4
          webTxEncoding: webTxEncoding
          user: user
          webRxTcpState: webRxTcpState
        collections:
        - transactedSessions:
            count: 5
          subscriptions:
            count: 1
          txFlows:
            count: 5
          rxFlows:
            count: 6
          connections:
            count: 0
        - transactedSessions:
            count: 5
          subscriptions:
            count: 1
          txFlows:
            count: 5
          rxFlows:
            count: 6
          connections:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - txFlowsUri: txFlowsUri
          connectionsUri: connectionsUri
          transactedSessionsUri: transactedSessionsUri
          rxFlowsUri: rxFlowsUri
          subscriptionsUri: subscriptionsUri
          uri: uri
        - txFlowsUri: txFlowsUri
          connectionsUri: connectionsUri
          transactedSessionsUri: transactedSessionsUri
          rxFlowsUri: rxFlowsUri
          subscriptionsUri: subscriptionsUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnClientCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClient'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnCollections:
      example:
        restDeliveryPoints:
          count: 5
        clients:
          count: 7
        jndiConnectionFactories:
          count: 4
        clientProfiles:
          count: 5
        topicEndpoints:
          count: 9
        configSyncRemoteNodes:
          count: 9
        jndiQueues:
          count: 7
        queueTemplates:
          count: 6
        distributedCaches:
          count: 3
        bridges:
          count: 5
        transactions:
          count: 6
        jndiTopics:
          count: 1
        dmrBridges:
          count: 2
        clientUsernames:
          count: 2
        queues:
          count: 7
        mqttRetainCaches:
          count: 1
        topicEndpointTemplates:
          count: 9
        authenticationOauthProviders:
          count: 6
        replicatedTopics:
          count: 4
        replayLogs:
          count: 1
        authorizationGroups:
          count: 1
        mqttSessions:
          count: 1
        aclProfiles:
          count: 0
      properties:
        aclProfiles:
          $ref: '#/components/schemas/MsgVpnCollectionsAclprofiles'
        authenticationOauthProviders:
          $ref: '#/components/schemas/MsgVpnCollectionsAuthenticationoauthproviders'
        authorizationGroups:
          $ref: '#/components/schemas/MsgVpnCollectionsAuthorizationgroups'
        bridges:
          $ref: '#/components/schemas/MsgVpnCollectionsBridges'
        clientProfiles:
          $ref: '#/components/schemas/MsgVpnCollectionsClientprofiles'
        clientUsernames:
          $ref: '#/components/schemas/MsgVpnCollectionsClientusernames'
        clients:
          $ref: '#/components/schemas/MsgVpnCollectionsClients'
        configSyncRemoteNodes:
          $ref: '#/components/schemas/MsgVpnCollectionsConfigsyncremotenodes'
        distributedCaches:
          $ref: '#/components/schemas/MsgVpnCollectionsDistributedcaches'
        dmrBridges:
          $ref: '#/components/schemas/MsgVpnCollectionsDmrbridges'
        jndiConnectionFactories:
          $ref: '#/components/schemas/MsgVpnCollectionsJndiconnectionfactories'
        jndiQueues:
          $ref: '#/components/schemas/MsgVpnCollectionsJndiqueues'
        jndiTopics:
          $ref: '#/components/schemas/MsgVpnCollectionsJnditopics'
        mqttRetainCaches:
          $ref: '#/components/schemas/MsgVpnCollectionsMqttretaincaches'
        mqttSessions:
          $ref: '#/components/schemas/MsgVpnCollectionsMqttsessions'
        queueTemplates:
          $ref: '#/components/schemas/MsgVpnCollectionsQueuetemplates'
        queues:
          $ref: '#/components/schemas/MsgVpnCollectionsQueues'
        replayLogs:
          $ref: '#/components/schemas/MsgVpnCollectionsReplaylogs'
        replicatedTopics:
          $ref: '#/components/schemas/MsgVpnCollectionsReplicatedtopics'
        restDeliveryPoints:
          $ref: '#/components/schemas/MsgVpnCollectionsRestdeliverypoints'
        topicEndpointTemplates:
          $ref: '#/components/schemas/MsgVpnCollectionsTopicendpointtemplates'
        topicEndpoints:
          $ref: '#/components/schemas/MsgVpnCollectionsTopicendpoints'
        transactions:
          $ref: '#/components/schemas/MsgVpnCollectionsTransactions'
      type: object
    MsgVpnCollectionsAclprofiles:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the aclProfiles collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsAuthenticationoauthproviders:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the authenticationOauthProviders
            collection. Available since 2.13.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsAuthorizationgroups:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the authorizationGroups collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsBridges:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the bridges collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsClientprofiles:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the clientProfiles collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsClients:
      example:
        count: 7
      properties:
        count:
          description: The total number of objects in the clients collection. Available
            since 2.12.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsClientusernames:
      example:
        count: 2
      properties:
        count:
          description: The total number of objects in the clientUsernames collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsConfigsyncremotenodes:
      example:
        count: 9
      properties:
        count:
          description: The total number of objects in the configSyncRemoteNodes collection.
            Available since 2.12.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsDistributedcaches:
      example:
        count: 3
      properties:
        count:
          description: The total number of objects in the distributedCaches collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsDmrbridges:
      example:
        count: 2
      properties:
        count:
          description: The total number of objects in the dmrBridges collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsJndiconnectionfactories:
      example:
        count: 4
      properties:
        count:
          description: The total number of objects in the jndiConnectionFactories
            collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsJndiqueues:
      example:
        count: 7
      properties:
        count:
          description: The total number of objects in the jndiQueues collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsJnditopics:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the jndiTopics collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsMqttretaincaches:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the mqttRetainCaches collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsMqttsessions:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the mqttSessions collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsQueues:
      example:
        count: 7
      properties:
        count:
          description: The total number of objects in the queues collection. Available
            since 2.12.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsQueuetemplates:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the queueTemplates collection.
            Available since 2.14.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsReplaylogs:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the replayLogs collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsReplicatedtopics:
      example:
        count: 4
      properties:
        count:
          description: The total number of objects in the replicatedTopics collection.
            Available since 2.12.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsRestdeliverypoints:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the restDeliveryPoints collection.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsTopicendpoints:
      example:
        count: 9
      properties:
        count:
          description: The total number of objects in the topicEndpoints collection.
            Available since 2.12.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsTopicendpointtemplates:
      example:
        count: 9
      properties:
        count:
          description: The total number of objects in the topicEndpointTemplates collection.
            Available since 2.14.
          format: int64
          type: integer
      type: object
    MsgVpnCollectionsTransactions:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the transactions collection.
            Available since 2.12.
          format: int64
          type: integer
      type: object
    MsgVpnConfigSyncRemoteNode:
      example:
        timeInState: 6
        remoteNodeName: remoteNodeName
        role: role
        stale: true
        lastMsgRxTime: 0
        msgVpnName: msgVpnName
        state: state
      properties:
        lastMsgRxTime:
          description: The amount of time in seconds since the last message was received
            from the config sync table of the remote Message VPN.
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        remoteNodeName:
          description: The name of the Config Sync Remote Node.
          type: string
        role:
          description: |
            The role of the config sync table of the remote Message VPN. The allowed values and their meaning are:

            <pre>
            "unknown" - The role is unknown.
            "primary" - Acts as the primary source of config data.
            "replica" - Acts as a replica of the primary config data.
            </pre>
          type: string
        stale:
          description: Indicates whether the config sync table of the remote Message
            VPN is stale.
          type: boolean
        state:
          description: |
            The state of the config sync table of the remote Message VPN. The allowed values and their meaning are:

            <pre>
            "unknown" - The state is unknown.
            "in-sync" - The config data is synchronized between Message VPNs.
            "reconciling" - The config data is reconciling between Message VPNs.
            "blocked" - The config data is blocked from reconciling due to an error.
            "out-of-sync" - The config data is out of sync between Message VPNs.
            "down" - The state is down due to configuration.
            </pre>
          type: string
        timeInState:
          description: The amount of time in seconds the config sync table of the
            remote Message VPN has been in the current state.
          format: int32
          type: integer
      type: object
    MsgVpnConfigSyncRemoteNodeCollections:
      type: object
    MsgVpnConfigSyncRemoteNodeLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Config Sync Remote Node object.
          type: string
      type: object
    MsgVpnConfigSyncRemoteNodeResponse:
      example:
        data:
          timeInState: 6
          remoteNodeName: remoteNodeName
          role: role
          stale: true
          lastMsgRxTime: 0
          msgVpnName: msgVpnName
          state: state
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNode'
        links:
          $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnConfigSyncRemoteNodesResponse:
      example:
        data:
        - timeInState: 6
          remoteNodeName: remoteNodeName
          role: role
          stale: true
          lastMsgRxTime: 0
          msgVpnName: msgVpnName
          state: state
        - timeInState: 6
          remoteNodeName: remoteNodeName
          role: role
          stale: true
          lastMsgRxTime: 0
          msgVpnName: msgVpnName
          state: state
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNode'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnConfigSyncRemoteNodeLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnCounter:
      description: The counters for the Message VPN. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpn object.
      example:
        loginRxMsgCount: 3
        msgSpoolRxMsgCount: 0
        controlTxMsgCount: 4
        tlsRxByteCount: 4
        controlRxByteCount: 7
        tlsTxByteCount: 1
        dataRxByteCount: 8
        dataRxMsgCount: 7
        controlRxMsgCount: 6
        loginTxMsgCount: 4
        controlTxByteCount: 0
        dataTxByteCount: 3
        msgSpoolTxMsgCount: 6
        dataTxMsgCount: 3
        discardedRxMsgCount: 7
        discardedTxMsgCount: 5
      properties:
        controlRxByteCount:
          description: The amount of client control messages received from clients
            by the Message VPN, in bytes (B). Deprecated since 2.13. This attribute
            has been moved to the MsgVpn object.
          format: int64
          type: integer
        controlRxMsgCount:
          description: The number of client control messages received from clients
            by the Message VPN. Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
          type: integer
        controlTxByteCount:
          description: The amount of client control messages transmitted to clients
            by the Message VPN, in bytes (B). Deprecated since 2.13. This attribute
            has been moved to the MsgVpn object.
          format: int64
          type: integer
        controlTxMsgCount:
          description: The number of client control messages transmitted to clients
            by the Message VPN. Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
          type: integer
        dataRxByteCount:
          description: The amount of client data messages received from clients by
            the Message VPN, in bytes (B). Deprecated since 2.13. This attribute has
            been moved to the MsgVpn object.
          format: int64
          type: integer
        dataRxMsgCount:
          description: The number of client data messages received from clients by
            the Message VPN. Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
          type: integer
        dataTxByteCount:
          description: The amount of client data messages transmitted to clients by
            the Message VPN, in bytes (B). Deprecated since 2.13. This attribute has
            been moved to the MsgVpn object.
          format: int64
          type: integer
        dataTxMsgCount:
          description: The number of client data messages transmitted to clients by
            the Message VPN. Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
          type: integer
        discardedRxMsgCount:
          description: The number of messages discarded during reception by the Message
            VPN. Deprecated since 2.13. This attribute has been moved to the MsgVpn
            object.
          format: int64
          type: integer
        discardedTxMsgCount:
          description: The number of messages discarded during transmission by the
            Message VPN. Deprecated since 2.13. This attribute has been moved to the
            MsgVpn object.
          format: int64
          type: integer
        loginRxMsgCount:
          description: The number of login request messages received by the Message
            VPN. Deprecated since 2.13. This attribute has been moved to the MsgVpn
            object.
          format: int64
          type: integer
        loginTxMsgCount:
          description: The number of login response messages transmitted by the Message
            VPN. Deprecated since 2.13. This attribute has been moved to the MsgVpn
            object.
          format: int64
          type: integer
        msgSpoolRxMsgCount:
          description: The number of guaranteed messages received by the Message VPN.
            Deprecated since 2.13. This attribute has been moved to the MsgVpn object.
          format: int64
          type: integer
        msgSpoolTxMsgCount:
          description: The number of guaranteed messages transmitted by the Message
            VPN. One message to multiple clients is counted as one message. Deprecated
            since 2.13. This attribute has been moved to the MsgVpn object.
          format: int64
          type: integer
        tlsRxByteCount:
          description: The amount of TLS messages received by the Message VPN, in
            bytes (B). Deprecated since 2.13. This attribute has been moved to the
            MsgVpn object.
          format: int64
          type: integer
        tlsTxByteCount:
          description: The amount of TLS messages transmitted by the Message VPN,
            in bytes (B). Deprecated since 2.13. This attribute has been moved to
            the MsgVpn object.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCache:
      example:
        cacheName: cacheName
        heartbeat: 6
        scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
        msgVpnName: msgVpnName
        scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
        enabled: true
        msgsLost: true
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        enabled:
          description: Indicates whether the Distributed Cache is enabled.
          type: boolean
        heartbeat:
          description: The heartbeat interval, in seconds, used by the Cache Instances
            to monitor connectivity with the message broker.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        msgsLost:
          description: Indicates whether one or more messages were lost by any Cache
            Instance in the Distributed Cache.
          type: boolean
        scheduledDeleteMsgDayList:
          description: The scheduled delete message day(s), specified as "daily" or
            a comma-separated list of days. Days must be specified as "Sun", "Mon",
            "Tue", "Wed", "Thu", "Fri", or "Sat", with no spaces, and in sorted order
            from Sunday to Saturday.
          type: string
        scheduledDeleteMsgTimeList:
          description: The scheduled delete message time(s), specified as "hourly"
            or a comma-separated list of 24-hour times in the form hh:mm, or h:mm.
            There must be no spaces, and times must be in sorted order from 0:00 to
            23:59.
          type: string
      type: object
    MsgVpnDistributedCacheCluster:
      example:
        eventRequestQueueDepthThreshold:
          clearPercent: 3
          setPercent: 6
        eventResponseRateThreshold:
          setValue: 5
          clearValue: 7
        msgLifetime: 2
        eventDataByteRateThreshold:
          setValue: 5
          clearValue: 7
        eventDataMsgRateThreshold:
          setValue: 5
          clearValue: 7
        maxMemory: 2
        maxMsgsPerTopic: 7
        deliverToOneOverrideEnabled: true
        enabled: true
        eventRequestRateThreshold:
          setValue: 5
          clearValue: 7
        cacheName: cacheName
        globalCachingEnabled: true
        globalCachingHeartbeat: 5
        clusterName: clusterName
        newTopicAdvertisementEnabled: true
        eventMaxTopicsThreshold:
          clearPercent: 3
          setPercent: 6
        msgVpnName: msgVpnName
        eventMaxMemoryThreshold:
          clearPercent: 3
          setPercent: 6
        maxTopicCount: 3
        globalCachingTopicLifetime: 5
        maxRequestQueueDepth: 9
        msgsLost: true
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        deliverToOneOverrideEnabled:
          description: Indicates whether deliver-to-one override is enabled for the
            Cache Cluster.
          type: boolean
        enabled:
          description: Indicates whether the Cache Cluster is enabled.
          type: boolean
        eventDataByteRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventDataMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventMaxMemoryThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventMaxTopicsThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventRequestQueueDepthThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventRequestRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventResponseRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        globalCachingEnabled:
          description: Indicates whether global caching for the Cache Cluster is enabled,
            and the Cache Instances will fetch topics from remote Home Cache Clusters
            when requested, and subscribe to those topics to cache them locally.
          type: boolean
        globalCachingHeartbeat:
          description: The heartbeat interval, in seconds, used by the Cache Instances
            to monitor connectivity with the remote Home Cache Clusters.
          format: int64
          type: integer
        globalCachingTopicLifetime:
          description: The topic lifetime, in seconds. If no client requests are received
            for a given global topic over the duration of the topic lifetime, then
            the Cache Instance will remove the subscription and cached messages for
            that topic. A value of 0 disables aging.
          format: int64
          type: integer
        maxMemory:
          description: The maximum memory usage, in megabytes (MB), for each Cache
            Instance in the Cache Cluster.
          format: int64
          type: integer
        maxMsgsPerTopic:
          description: The maximum number of messages per topic for each Cache Instance
            in the Cache Cluster. When at the maximum, old messages are removed as
            new messages arrive.
          format: int64
          type: integer
        maxRequestQueueDepth:
          description: The maximum queue depth for cache requests received by the
            Cache Cluster.
          format: int64
          type: integer
        maxTopicCount:
          description: The maximum number of topics for each Cache Instance in the
            Cache Cluster.
          format: int64
          type: integer
        msgLifetime:
          description: The message lifetime, in seconds. If a message remains cached
            for the duration of its lifetime, the Cache Instance will remove the message.
            A lifetime of 0 results in the message being retained indefinitely.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        msgsLost:
          description: Indicates whether one or more messages were lost by any Cache
            Instance in the Cache Cluster.
          type: boolean
        newTopicAdvertisementEnabled:
          description: Indicates whether advertising of new topics learned by the
            Cache Instances in this Cache Cluster is enabled.
          type: boolean
      type: object
    MsgVpnDistributedCacheClusterCollections:
      example:
        globalCachingHomeClusters:
          count: 0
        instances:
          count: 6
        topics:
          count: 1
      properties:
        globalCachingHomeClusters:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollectionsGlobalcachinghomeclusters'
        instances:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollectionsInstances'
        topics:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollectionsTopics'
      type: object
    MsgVpnDistributedCacheClusterCollectionsGlobalcachinghomeclusters:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the globalCachingHomeClusters
            collection.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterCollectionsInstances:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the instances collection.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterCollectionsTopics:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the topics collection.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeCluster:
      example:
        cacheName: cacheName
        clusterName: clusterName
        msgVpnName: msgVpnName
        homeClusterName: homeClusterName
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        homeClusterName:
          description: The name of the remote Home Cache Cluster.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections:
      example:
        topicPrefixes:
          count: 0
      properties:
        topicPrefixes:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollectionsTopicprefixes'
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollectionsTopicprefixes:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the topicPrefixes collection.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks:
      example:
        topicPrefixesUri: topicPrefixesUri
        uri: uri
      properties:
        topicPrefixesUri:
          description: The URI of this Home Cache Cluster's collection of Topic Prefix
            objects.
          type: string
        uri:
          description: The URI of this Home Cache Cluster object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse:
      example:
        data:
          cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        collections:
          topicPrefixes:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          topicPrefixesUri: topicPrefixesUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix:
      example:
        cacheName: cacheName
        topicPrefix: topicPrefix
        clusterName: clusterName
        msgVpnName: msgVpnName
        homeClusterName: homeClusterName
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        homeClusterName:
          description: The name of the remote Home Cache Cluster.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        topicPrefix:
          description: A topic prefix for global topics available from the remote
            Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
          type: string
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixCollections:
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic Prefix object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse:
      example:
        data:
          cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse:
      example:
        data:
        - cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        - cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse:
      example:
        data:
        - cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        - cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        collections:
        - topicPrefixes:
            count: 0
        - topicPrefixes:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - topicPrefixesUri: topicPrefixesUri
          uri: uri
        - topicPrefixesUri: topicPrefixesUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterInstance:
      example:
        averageDataRxMsgRate: 2
        requestQueueDepthPeakCount: 5
        instanceName: instanceName
        averageDataRxByteRate: 5
        averageDataTxMsgPeakRate: 7
        averageDataTxMsgRate: 9
        lastStoppedTime: 6
        dataRxBytePeakRate: 7
        averageRequestRxRate: 2
        enabled: true
        dataTxMsgRate: 9
        lastRxSetLostMsgTime: 9
        requestRxPeakRate: 3
        cacheName: cacheName
        rate:
          averageDataRxMsgRate: 6
          averageDataRxByteRate: 6
          averageDataTxMsgPeakRate: 3
          averageDataTxMsgRate: 3
          dataRxByteRate: 6
          dataRxMsgRate: 4
          dataRxBytePeakRate: 7
          averageRequestRxRate: 0
          requestRxRate: 3
          dataTxMsgRate: 7
          requestRxPeakRate: 3
          dataRxMsgPeakRate: 0
          averageDataRxBytePeakRate: 6
          averageRequestRxPeakRate: 7
          averageDataRxMsgPeakRate: 5
          dataTxMsgPeakRate: 8
        clusterName: clusterName
        lastRegisteredTime: 6
        averageDataRxBytePeakRate: 1
        topicCount: 0
        msgVpnName: msgVpnName
        state: state
        msgsLost: true
        averageDataRxMsgPeakRate: 5
        lastStoppedReason: lastStoppedReason
        memoryUsage: 6
        dataRxByteRate: 1
        requestQueueDepthCount: 7
        counter:
          requestQueueDepthPeakCount: 1
          msgPeakCount: 7
          topicCount: 1
          msgCount: 4
          requestQueueDepthCount: 1
          topicPeakCount: 6
        dataRxMsgRate: 5
        topicPeakCount: 6
        requestRxRate: 4
        lastTxClearLostMsgTime: 3
        msgPeakCount: 2
        stopOnLostMsgEnabled: true
        dataRxMsgPeakRate: 4
        lastRxHeartbeatTime: 8
        msgCount: 1
        averageRequestRxPeakRate: 3
        autoStartEnabled: true
        dataTxMsgPeakRate: 9
      properties:
        autoStartEnabled:
          description: Indicates whether auto-start for the Cache Instance is enabled,
            and the Cache Instance will automatically attempt to transition from the
            Stopped operational state to Up whenever it restarts or reconnects to
            the message broker.
          type: boolean
        averageDataRxBytePeakRate:
          description: The peak of the one minute average of the data message rate
            received by the Cache Instance, in bytes per second (B/sec). Available
            since 2.13.
          format: int64
          type: integer
        averageDataRxByteRate:
          description: The one minute average of the data message rate received by
            the Cache Instance, in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        averageDataRxMsgPeakRate:
          description: The peak of the one minute average of the data message rate
            received by the Cache Instance, in messages per second (msg/sec). Available
            since 2.13.
          format: int64
          type: integer
        averageDataRxMsgRate:
          description: The one minute average of the data message rate received by
            the Cache Instance, in messages per second (msg/sec). Available since
            2.13.
          format: int64
          type: integer
        averageDataTxMsgPeakRate:
          description: The peak of the one minute average of the data message rate
            transmitted by the Cache Instance, in messages per second (msg/sec). Available
            since 2.13.
          format: int64
          type: integer
        averageDataTxMsgRate:
          description: The one minute average of the data message rate transmitted
            by the Cache Instance, in messages per second (msg/sec). Available since
            2.13.
          format: int64
          type: integer
        averageRequestRxPeakRate:
          description: The peak of the one minute average of the request rate received
            by the Cache Instance, in requests per second (req/sec). Available since
            2.13.
          format: int64
          type: integer
        averageRequestRxRate:
          description: The one minute average of the request rate received by the
            Cache Instance, in requests per second (req/sec). Available since 2.13.
          format: int64
          type: integer
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        counter:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCounter'
        dataRxBytePeakRate:
          description: The data message peak rate received by the Cache Instance,
            in bytes per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        dataRxByteRate:
          description: The data message rate received by the Cache Instance, in bytes
            per second (B/sec). Available since 2.13.
          format: int64
          type: integer
        dataRxMsgPeakRate:
          description: The data message peak rate received by the Cache Instance,
            in messages per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        dataRxMsgRate:
          description: The data message rate received by the Cache Instance, in messages
            per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        dataTxMsgPeakRate:
          description: The data message peak rate transmitted by the Cache Instance,
            in messages per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        dataTxMsgRate:
          description: The data message rate transmitted by the Cache Instance, in
            messages per second (msg/sec). Available since 2.13.
          format: int64
          type: integer
        enabled:
          description: Indicates whether the Cache Instance is enabled.
          type: boolean
        instanceName:
          description: The name of the Cache Instance.
          type: string
        lastRegisteredTime:
          description: The timestamp of when the Cache Instance last registered with
            the message broker. This value represents the number of seconds since
            1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        lastRxHeartbeatTime:
          description: The timestamp of the last heartbeat message received from the
            Cache Instance. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time).
          format: int32
          type: integer
        lastRxSetLostMsgTime:
          description: The timestamp of the last request for setting the lost message
            indication received from the Cache Instance. This value represents the
            number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        lastStoppedReason:
          description: The reason why the Cache Instance was last stopped.
          type: string
        lastStoppedTime:
          description: The timestamp of when the Cache Instance was last stopped.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        lastTxClearLostMsgTime:
          description: The timestamp of the last request for clearing the lost message
            indication transmitted to the Cache Instance. This value represents the
            number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        memoryUsage:
          description: The memory usage of the Cache Instance, in megabytes (MB).
          format: int32
          type: integer
        msgCount:
          description: The number of messages cached for the Cache Instance. Available
            since 2.13.
          format: int64
          type: integer
        msgPeakCount:
          description: The number of messages cached peak for the Cache Instance.
            Available since 2.13.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        msgsLost:
          description: Indicates whether one or more messages were lost by the Cache
            Instance.
          type: boolean
        rate:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRate'
        requestQueueDepthCount:
          description: The received request message queue depth for the Cache Instance.
            Available since 2.13.
          format: int64
          type: integer
        requestQueueDepthPeakCount:
          description: The received request message queue depth peak for the Cache
            Instance. Available since 2.13.
          format: int64
          type: integer
        requestRxPeakRate:
          description: The request peak rate received by the Cache Instance, in requests
            per second (req/sec). Available since 2.13.
          format: int64
          type: integer
        requestRxRate:
          description: The request rate received by the Cache Instance, in requests
            per second (req/sec). Available since 2.13.
          format: int64
          type: integer
        state:
          description: |
            The operational state of the Cache Instance. The allowed values and their meaning are:

            <pre>
            "invalid" - The Cache Instance state is invalid.
            "down" - The Cache Instance is operationally down.
            "stopped" - The Cache Instance has stopped processing cache requests.
            "stopped-lost-msg" - The Cache Instance has stopped due to a lost message.
            "register" - The Cache Instance is registering with the broker.
            "config-sync" - The Cache Instance is synchronizing its configuration with the broker.
            "cluster-sync" - The Cache Instance is synchronizing its messages with the Cache Cluster.
            "up" - The Cache Instance is operationally up.
            "backup" - The Cache Instance is backing up its messages to disk.
            "restore" - The Cache Instance is restoring its messages from disk.
            "not-available" - The Cache Instance state is not available.
            </pre>
          type: string
        stopOnLostMsgEnabled:
          description: Indicates whether stop-on-lost-message is enabled, and the
            Cache Instance will transition to the Stopped operational state upon losing
            a message. When Stopped, it cannot accept or respond to cache requests,
            but continues to cache messages.
          type: boolean
        topicCount:
          description: The number of topics cached for the Cache Instance. Available
            since 2.13.
          format: int64
          type: integer
        topicPeakCount:
          description: The number of topics cached peak for the Cache Instance. Available
            since 2.13.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterInstanceCollections:
      example:
        remoteGlobalCachingHomeClusters:
          count: 0
        remoteTopics:
          count: 6
      properties:
        remoteGlobalCachingHomeClusters:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCollectionsRemoteglobalcachinghomeclusters'
        remoteTopics:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCollectionsRemotetopics'
      type: object
    MsgVpnDistributedCacheClusterInstanceCollectionsRemoteglobalcachinghomeclusters:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the remoteGlobalCachingHomeClusters
            collection.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterInstanceCollectionsRemotetopics:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the remoteTopics collection.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterInstanceCounter:
      description: The counters associated with the Cache Instance. Deprecated since
        2.13. All attributes in this object have been moved to the MsgVpnDistributedCacheClusterInstance
        object.
      example:
        requestQueueDepthPeakCount: 1
        msgPeakCount: 7
        topicCount: 1
        msgCount: 4
        requestQueueDepthCount: 1
        topicPeakCount: 6
      properties:
        msgCount:
          description: The number of messages cached for the Cache Instance. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        msgPeakCount:
          description: The number of messages cached peak for the Cache Instance.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        requestQueueDepthCount:
          description: The received request message queue depth for the Cache Instance.
            Deprecated since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        requestQueueDepthPeakCount:
          description: The received request message queue depth peak for the Cache
            Instance. Deprecated since 2.13. This attribute has been moved to the
            MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
        topicCount:
          description: The number of topics cached for the Cache Instance. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        topicPeakCount:
          description: The number of topics cached peak for the Cache Instance. Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterInstanceLinks:
      example:
        remoteGlobalCachingHomeClustersUri: remoteGlobalCachingHomeClustersUri
        remoteTopicsUri: remoteTopicsUri
        uri: uri
      properties:
        remoteGlobalCachingHomeClustersUri:
          description: The URI of this Cache Instance's collection of Remote Home
            Cache Cluster objects.
          type: string
        remoteTopicsUri:
          description: The URI of this Cache Instance's collection of Remote Topic
            objects.
          type: string
        uri:
          description: The URI of this Cache Instance object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterInstanceRate:
      description: The rates associated with the Cache Instance. Deprecated since
        2.13. All attributes in this object have been moved to the MsgVpnDistributedCacheClusterInstance
        object.
      example:
        averageDataRxMsgRate: 6
        averageDataRxByteRate: 6
        averageDataTxMsgPeakRate: 3
        averageDataTxMsgRate: 3
        dataRxByteRate: 6
        dataRxMsgRate: 4
        dataRxBytePeakRate: 7
        averageRequestRxRate: 0
        requestRxRate: 3
        dataTxMsgRate: 7
        requestRxPeakRate: 3
        dataRxMsgPeakRate: 0
        averageDataRxBytePeakRate: 6
        averageRequestRxPeakRate: 7
        averageDataRxMsgPeakRate: 5
        dataTxMsgPeakRate: 8
      properties:
        averageDataRxBytePeakRate:
          description: The peak of the one minute average of the data message rate
            received by the Cache Instance, in bytes per second (B/sec). Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        averageDataRxByteRate:
          description: The one minute average of the data message rate received by
            the Cache Instance, in bytes per second (B/sec). Deprecated since 2.13.
            This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        averageDataRxMsgPeakRate:
          description: The peak of the one minute average of the data message rate
            received by the Cache Instance, in messages per second (msg/sec). Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        averageDataRxMsgRate:
          description: The one minute average of the data message rate received by
            the Cache Instance, in messages per second (msg/sec). Deprecated since
            2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        averageDataTxMsgPeakRate:
          description: The peak of the one minute average of the data message rate
            transmitted by the Cache Instance, in messages per second (msg/sec). Deprecated
            since 2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        averageDataTxMsgRate:
          description: The one minute average of the data message rate transmitted
            by the Cache Instance, in messages per second (msg/sec). Deprecated since
            2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        averageRequestRxPeakRate:
          description: The peak of the one minute average of the request rate received
            by the Cache Instance, in requests per second (req/sec). Deprecated since
            2.13. This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        averageRequestRxRate:
          description: The one minute average of the request rate received by the
            Cache Instance, in requests per second (req/sec). Deprecated since 2.13.
            This attribute has been moved to the MsgVpnDistributedCacheClusterInstance
            object.
          format: int64
          type: integer
        dataRxBytePeakRate:
          description: The data message peak rate received by the Cache Instance,
            in bytes per second (B/sec). Deprecated since 2.13. This attribute has
            been moved to the MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
        dataRxByteRate:
          description: The data message rate received by the Cache Instance, in bytes
            per second (B/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
        dataRxMsgPeakRate:
          description: The data message peak rate received by the Cache Instance,
            in messages per second (msg/sec). Deprecated since 2.13. This attribute
            has been moved to the MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
        dataRxMsgRate:
          description: The data message rate received by the Cache Instance, in messages
            per second (msg/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
        dataTxMsgPeakRate:
          description: The data message peak rate transmitted by the Cache Instance,
            in messages per second (msg/sec). Deprecated since 2.13. This attribute
            has been moved to the MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
        dataTxMsgRate:
          description: The data message rate transmitted by the Cache Instance, in
            messages per second (msg/sec). Deprecated since 2.13. This attribute has
            been moved to the MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
        requestRxPeakRate:
          description: The request peak rate received by the Cache Instance, in requests
            per second (req/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
        requestRxRate:
          description: The request rate received by the Cache Instance, in requests
            per second (req/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpnDistributedCacheClusterInstance object.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster:
      example:
        cacheName: cacheName
        heartbeatRxCount: 1
        cacheRequestForwardedCount: 0
        instanceName: instanceName
        heartbeatUp: true
        clusterName: clusterName
        msgVpnName: msgVpnName
        cacheRequestRxCount: 6
        homeClusterName: homeClusterName
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        cacheRequestForwardedCount:
          description: The number of cache requests forwarded to the remote Home Cache
            Cluster.
          format: int64
          type: integer
        cacheRequestRxCount:
          description: The number of cache requests received from the remote Home
            Cache Cluster.
          format: int64
          type: integer
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        heartbeatRxCount:
          description: The number of heartbeat messages received from the remote Home
            Cache Cluster.
          format: int64
          type: integer
        heartbeatUp:
          description: Indicates whether the operational state of the heartbeat with
            the remote Home Cache Cluster is up.
          type: boolean
        homeClusterName:
          description: The name of the remote Home Cache Cluster.
          type: string
        instanceName:
          description: The name of the Cache Instance.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterCollections:
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Remote Home Cache Cluster object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterResponse:
      example:
        data:
          cacheName: cacheName
          heartbeatRxCount: 1
          cacheRequestForwardedCount: 0
          instanceName: instanceName
          heartbeatUp: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          cacheRequestRxCount: 6
          homeClusterName: homeClusterName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClustersResponse:
      example:
        data:
        - cacheName: cacheName
          heartbeatRxCount: 1
          cacheRequestForwardedCount: 0
          instanceName: instanceName
          heartbeatUp: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          cacheRequestRxCount: 6
          homeClusterName: homeClusterName
        - cacheName: cacheName
          heartbeatRxCount: 1
          cacheRequestForwardedCount: 0
          instanceName: instanceName
          heartbeatUp: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          cacheRequestRxCount: 6
          homeClusterName: homeClusterName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeCluster'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteGlobalCachingHomeClusterLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteTopic:
      example:
        cacheName: cacheName
        instanceName: instanceName
        globalTopic: true
        clusterName: clusterName
        topic: topic
        msgCount: 0
        msgVpnName: msgVpnName
        suspect: true
        homeClusterName: homeClusterName
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        globalTopic:
          description: Indicates whether the type of the remote Topic is global.
          type: boolean
        homeClusterName:
          description: The name of the remote Home Cache Cluster.
          type: string
        instanceName:
          description: The name of the Cache Instance.
          type: string
        msgCount:
          description: The number of messages cached for the remote Topic.
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        suspect:
          description: Indicates whether the remote Topic is suspect due to the remote
            Home Cache Cluster being in the lost message state.
          type: boolean
        topic:
          description: The value of the remote Topic.
          type: string
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteTopicCollections:
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Remote Topic object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteTopicResponse:
      example:
        data:
          cacheName: cacheName
          instanceName: instanceName
          globalTopic: true
          clusterName: clusterName
          topic: topic
          msgCount: 0
          msgVpnName: msgVpnName
          suspect: true
          homeClusterName: homeClusterName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopic'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterInstanceRemoteTopicsResponse:
      example:
        data:
        - cacheName: cacheName
          instanceName: instanceName
          globalTopic: true
          clusterName: clusterName
          topic: topic
          msgCount: 0
          msgVpnName: msgVpnName
          suspect: true
          homeClusterName: homeClusterName
        - cacheName: cacheName
          instanceName: instanceName
          globalTopic: true
          clusterName: clusterName
          topic: topic
          msgCount: 0
          msgVpnName: msgVpnName
          suspect: true
          homeClusterName: homeClusterName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopic'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceRemoteTopicLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterInstanceResponse:
      example:
        data:
          averageDataRxMsgRate: 2
          requestQueueDepthPeakCount: 5
          instanceName: instanceName
          averageDataRxByteRate: 5
          averageDataTxMsgPeakRate: 7
          averageDataTxMsgRate: 9
          lastStoppedTime: 6
          dataRxBytePeakRate: 7
          averageRequestRxRate: 2
          enabled: true
          dataTxMsgRate: 9
          lastRxSetLostMsgTime: 9
          requestRxPeakRate: 3
          cacheName: cacheName
          rate:
            averageDataRxMsgRate: 6
            averageDataRxByteRate: 6
            averageDataTxMsgPeakRate: 3
            averageDataTxMsgRate: 3
            dataRxByteRate: 6
            dataRxMsgRate: 4
            dataRxBytePeakRate: 7
            averageRequestRxRate: 0
            requestRxRate: 3
            dataTxMsgRate: 7
            requestRxPeakRate: 3
            dataRxMsgPeakRate: 0
            averageDataRxBytePeakRate: 6
            averageRequestRxPeakRate: 7
            averageDataRxMsgPeakRate: 5
            dataTxMsgPeakRate: 8
          clusterName: clusterName
          lastRegisteredTime: 6
          averageDataRxBytePeakRate: 1
          topicCount: 0
          msgVpnName: msgVpnName
          state: state
          msgsLost: true
          averageDataRxMsgPeakRate: 5
          lastStoppedReason: lastStoppedReason
          memoryUsage: 6
          dataRxByteRate: 1
          requestQueueDepthCount: 7
          counter:
            requestQueueDepthPeakCount: 1
            msgPeakCount: 7
            topicCount: 1
            msgCount: 4
            requestQueueDepthCount: 1
            topicPeakCount: 6
          dataRxMsgRate: 5
          topicPeakCount: 6
          requestRxRate: 4
          lastTxClearLostMsgTime: 3
          msgPeakCount: 2
          stopOnLostMsgEnabled: true
          dataRxMsgPeakRate: 4
          lastRxHeartbeatTime: 8
          msgCount: 1
          averageRequestRxPeakRate: 3
          autoStartEnabled: true
          dataTxMsgPeakRate: 9
        collections:
          remoteGlobalCachingHomeClusters:
            count: 0
          remoteTopics:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          remoteGlobalCachingHomeClustersUri: remoteGlobalCachingHomeClustersUri
          remoteTopicsUri: remoteTopicsUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterInstancesResponse:
      example:
        data:
        - averageDataRxMsgRate: 2
          requestQueueDepthPeakCount: 5
          instanceName: instanceName
          averageDataRxByteRate: 5
          averageDataTxMsgPeakRate: 7
          averageDataTxMsgRate: 9
          lastStoppedTime: 6
          dataRxBytePeakRate: 7
          averageRequestRxRate: 2
          enabled: true
          dataTxMsgRate: 9
          lastRxSetLostMsgTime: 9
          requestRxPeakRate: 3
          cacheName: cacheName
          rate:
            averageDataRxMsgRate: 6
            averageDataRxByteRate: 6
            averageDataTxMsgPeakRate: 3
            averageDataTxMsgRate: 3
            dataRxByteRate: 6
            dataRxMsgRate: 4
            dataRxBytePeakRate: 7
            averageRequestRxRate: 0
            requestRxRate: 3
            dataTxMsgRate: 7
            requestRxPeakRate: 3
            dataRxMsgPeakRate: 0
            averageDataRxBytePeakRate: 6
            averageRequestRxPeakRate: 7
            averageDataRxMsgPeakRate: 5
            dataTxMsgPeakRate: 8
          clusterName: clusterName
          lastRegisteredTime: 6
          averageDataRxBytePeakRate: 1
          topicCount: 0
          msgVpnName: msgVpnName
          state: state
          msgsLost: true
          averageDataRxMsgPeakRate: 5
          lastStoppedReason: lastStoppedReason
          memoryUsage: 6
          dataRxByteRate: 1
          requestQueueDepthCount: 7
          counter:
            requestQueueDepthPeakCount: 1
            msgPeakCount: 7
            topicCount: 1
            msgCount: 4
            requestQueueDepthCount: 1
            topicPeakCount: 6
          dataRxMsgRate: 5
          topicPeakCount: 6
          requestRxRate: 4
          lastTxClearLostMsgTime: 3
          msgPeakCount: 2
          stopOnLostMsgEnabled: true
          dataRxMsgPeakRate: 4
          lastRxHeartbeatTime: 8
          msgCount: 1
          averageRequestRxPeakRate: 3
          autoStartEnabled: true
          dataTxMsgPeakRate: 9
        - averageDataRxMsgRate: 2
          requestQueueDepthPeakCount: 5
          instanceName: instanceName
          averageDataRxByteRate: 5
          averageDataTxMsgPeakRate: 7
          averageDataTxMsgRate: 9
          lastStoppedTime: 6
          dataRxBytePeakRate: 7
          averageRequestRxRate: 2
          enabled: true
          dataTxMsgRate: 9
          lastRxSetLostMsgTime: 9
          requestRxPeakRate: 3
          cacheName: cacheName
          rate:
            averageDataRxMsgRate: 6
            averageDataRxByteRate: 6
            averageDataTxMsgPeakRate: 3
            averageDataTxMsgRate: 3
            dataRxByteRate: 6
            dataRxMsgRate: 4
            dataRxBytePeakRate: 7
            averageRequestRxRate: 0
            requestRxRate: 3
            dataTxMsgRate: 7
            requestRxPeakRate: 3
            dataRxMsgPeakRate: 0
            averageDataRxBytePeakRate: 6
            averageRequestRxPeakRate: 7
            averageDataRxMsgPeakRate: 5
            dataTxMsgPeakRate: 8
          clusterName: clusterName
          lastRegisteredTime: 6
          averageDataRxBytePeakRate: 1
          topicCount: 0
          msgVpnName: msgVpnName
          state: state
          msgsLost: true
          averageDataRxMsgPeakRate: 5
          lastStoppedReason: lastStoppedReason
          memoryUsage: 6
          dataRxByteRate: 1
          requestQueueDepthCount: 7
          counter:
            requestQueueDepthPeakCount: 1
            msgPeakCount: 7
            topicCount: 1
            msgCount: 4
            requestQueueDepthCount: 1
            topicPeakCount: 6
          dataRxMsgRate: 5
          topicPeakCount: 6
          requestRxRate: 4
          lastTxClearLostMsgTime: 3
          msgPeakCount: 2
          stopOnLostMsgEnabled: true
          dataRxMsgPeakRate: 4
          lastRxHeartbeatTime: 8
          msgCount: 1
          averageRequestRxPeakRate: 3
          autoStartEnabled: true
          dataTxMsgPeakRate: 9
        collections:
        - remoteGlobalCachingHomeClusters:
            count: 0
          remoteTopics:
            count: 6
        - remoteGlobalCachingHomeClusters:
            count: 0
          remoteTopics:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - remoteGlobalCachingHomeClustersUri: remoteGlobalCachingHomeClustersUri
          remoteTopicsUri: remoteTopicsUri
          uri: uri
        - remoteGlobalCachingHomeClustersUri: remoteGlobalCachingHomeClustersUri
          remoteTopicsUri: remoteTopicsUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterLinks:
      example:
        globalCachingHomeClustersUri: globalCachingHomeClustersUri
        instancesUri: instancesUri
        topicsUri: topicsUri
        uri: uri
      properties:
        globalCachingHomeClustersUri:
          description: The URI of this Cache Cluster's collection of Home Cache Cluster
            objects.
          type: string
        instancesUri:
          description: The URI of this Cache Cluster's collection of Cache Instance
            objects.
          type: string
        topicsUri:
          description: The URI of this Cache Cluster's collection of Topic objects.
          type: string
        uri:
          description: The URI of this Cache Cluster object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterResponse:
      example:
        data:
          eventRequestQueueDepthThreshold:
            clearPercent: 3
            setPercent: 6
          eventResponseRateThreshold:
            setValue: 5
            clearValue: 7
          msgLifetime: 2
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 7
          eventDataMsgRateThreshold:
            setValue: 5
            clearValue: 7
          maxMemory: 2
          maxMsgsPerTopic: 7
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold:
            setValue: 5
            clearValue: 7
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 5
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold:
            clearPercent: 3
            setPercent: 6
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 3
            setPercent: 6
          maxTopicCount: 3
          globalCachingTopicLifetime: 5
          maxRequestQueueDepth: 9
          msgsLost: true
        collections:
          globalCachingHomeClusters:
            count: 0
          instances:
            count: 6
          topics:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterTopic:
      example:
        cacheName: cacheName
        clusterName: clusterName
        topic: topic
        msgVpnName: msgVpnName
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        topic:
          description: The value of the Topic in the form a/b/c.
          type: string
      type: object
    MsgVpnDistributedCacheClusterTopicCollections:
      type: object
    MsgVpnDistributedCacheClusterTopicLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterTopicResponse:
      example:
        data:
          cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterTopicsResponse:
      example:
        data:
        - cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        - cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClustersResponse:
      example:
        data:
        - eventRequestQueueDepthThreshold:
            clearPercent: 3
            setPercent: 6
          eventResponseRateThreshold:
            setValue: 5
            clearValue: 7
          msgLifetime: 2
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 7
          eventDataMsgRateThreshold:
            setValue: 5
            clearValue: 7
          maxMemory: 2
          maxMsgsPerTopic: 7
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold:
            setValue: 5
            clearValue: 7
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 5
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold:
            clearPercent: 3
            setPercent: 6
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 3
            setPercent: 6
          maxTopicCount: 3
          globalCachingTopicLifetime: 5
          maxRequestQueueDepth: 9
          msgsLost: true
        - eventRequestQueueDepthThreshold:
            clearPercent: 3
            setPercent: 6
          eventResponseRateThreshold:
            setValue: 5
            clearValue: 7
          msgLifetime: 2
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 7
          eventDataMsgRateThreshold:
            setValue: 5
            clearValue: 7
          maxMemory: 2
          maxMsgsPerTopic: 7
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold:
            setValue: 5
            clearValue: 7
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 5
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold:
            clearPercent: 3
            setPercent: 6
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 3
            setPercent: 6
          maxTopicCount: 3
          globalCachingTopicLifetime: 5
          maxRequestQueueDepth: 9
          msgsLost: true
        collections:
        - globalCachingHomeClusters:
            count: 0
          instances:
            count: 6
          topics:
            count: 1
        - globalCachingHomeClusters:
            count: 0
          instances:
            count: 6
          topics:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
        - globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheCollections:
      example:
        clusters:
          count: 0
      properties:
        clusters:
          $ref: '#/components/schemas/MsgVpnDistributedCacheCollectionsClusters'
      type: object
    MsgVpnDistributedCacheCollectionsClusters:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the clusters collection.
          format: int64
          type: integer
      type: object
    MsgVpnDistributedCacheLinks:
      example:
        clustersUri: clustersUri
        uri: uri
      properties:
        clustersUri:
          description: The URI of this Distributed Cache's collection of Cache Cluster
            objects.
          type: string
        uri:
          description: The URI of this Distributed Cache object.
          type: string
      type: object
    MsgVpnDistributedCacheResponse:
      example:
        data:
          cacheName: cacheName
          heartbeat: 6
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
          msgsLost: true
        collections:
          clusters:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          clustersUri: clustersUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnDistributedCacheCollections'
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCache'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCachesResponse:
      example:
        data:
        - cacheName: cacheName
          heartbeat: 6
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
          msgsLost: true
        - cacheName: cacheName
          heartbeat: 6
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
          msgsLost: true
        collections:
        - clusters:
            count: 0
        - clusters:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - clustersUri: clustersUri
          uri: uri
        - clustersUri: clustersUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCache'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDmrBridge:
      example:
        remoteMsgVpnName: remoteMsgVpnName
        remoteNodeName: remoteNodeName
        failureReason: failureReason
        msgVpnName: msgVpnName
        up: true
        uptime: 0
      properties:
        failureReason:
          description: The last failure reason for the DMR Bridge.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        remoteMsgVpnName:
          description: The remote Message VPN of the DMR Bridge.
          type: string
        remoteNodeName:
          description: The name of the node at the remote end of the DMR Bridge.
          type: string
        up:
          description: Indicates whether the operational state of the DMR Bridge is
            up.
          type: boolean
        uptime:
          description: The amount of time in seconds since the DMR Bridge was up.
          format: int64
          type: integer
      type: object
    MsgVpnDmrBridgeCollections:
      type: object
    MsgVpnDmrBridgeLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this DMR Bridge object.
          type: string
      type: object
    MsgVpnDmrBridgeResponse:
      example:
        data:
          remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          failureReason: failureReason
          msgVpnName: msgVpnName
          up: true
          uptime: 0
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnDmrBridge'
        links:
          $ref: '#/components/schemas/MsgVpnDmrBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDmrBridgesResponse:
      example:
        data:
        - remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          failureReason: failureReason
          msgVpnName: msgVpnName
          up: true
          uptime: 0
        - remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          failureReason: failureReason
          msgVpnName: msgVpnName
          up: true
          uptime: 0
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridgeCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridge'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridgeLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiConnectionFactoriesResponse:
      example:
        data:
        - messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        - messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiConnectionFactory:
      example:
        messagingDefaultDeliveryMode: persistent
        connectionFactoryName: connectionFactoryName
        guaranteedReceiveAckTimeout: 1
        transportReadTimeout: 7
        transportReconnectRetryCount: 4
        dtoReceiveSubscriberNetworkPriority: 6
        messagingDefaultElidingEligibleEnabled: true
        transportDirectTransportEnabled: true
        transportReconnectRetryWait: 5
        clientDescription: clientDescription
        guaranteedReceiveWindowSize: 2
        dtoReceiveSubscriberLocalPriority: 0
        transportCompressionLevel: 2
        transportConnectRetryPerHostCount: 7
        guaranteedSendAckTimeout: 9
        transportReceiveBufferSize: 1
        msgVpnName: msgVpnName
        transportKeepaliveEnabled: true
        allowDuplicateClientIdEnabled: true
        transportPort: 6
        guaranteedReceiveReconnectRetryCount: 5
        transportConnectRetryCount: 4
        transportConnectTimeout: 1
        dynamicEndpointCreateDurableEnabled: true
        clientId: clientId
        messagingJmsxUserIdEnabled: true
        guaranteedReceiveWindowSizeAckThreshold: 7
        dynamicEndpointRespectTtlEnabled: true
        messagingTextInXmlPayloadEnabled: true
        guaranteedSendWindowSize: 3
        transportKeepaliveInterval: 1
        transportOptimizeDirectEnabled: true
        transportTcpNoDelayEnabled: true
        guaranteedReceiveReconnectRetryWait: 5
        transportSendBufferSize: 9
        transportKeepaliveCount: 1
        xaEnabled: true
        dtoSendEnabled: true
        messagingDefaultDmqEligibleEnabled: true
        dtoReceiveOverrideEnabled: true
        transportMsgCallbackOnIoThreadEnabled: true
      properties:
        allowDuplicateClientIdEnabled:
          description: Indicates whether new JMS connections can use the same Client
            identifier (ID) as an existing connection.
          type: boolean
        clientDescription:
          description: The description of the Client.
          type: string
        clientId:
          description: The Client identifier (ID). If not specified, a unique value
            for it will be generated.
          type: string
        connectionFactoryName:
          description: The name of the JMS Connection Factory.
          type: string
        dtoReceiveOverrideEnabled:
          description: Indicates whether overriding by the Subscriber (Consumer) of
            the deliver-to-one (DTO) property on messages is enabled. When enabled,
            the Subscriber can receive all DTO tagged messages.
          type: boolean
        dtoReceiveSubscriberLocalPriority:
          description: The priority for receiving deliver-to-one (DTO) messages by
            the Subscriber (Consumer) if the messages are published on the local broker
            that the Subscriber is directly connected to.
          format: int32
          type: integer
        dtoReceiveSubscriberNetworkPriority:
          description: The priority for receiving deliver-to-one (DTO) messages by
            the Subscriber (Consumer) if the messages are published on a remote broker.
          format: int32
          type: integer
        dtoSendEnabled:
          description: Indicates whether the deliver-to-one (DTO) property is enabled
            on messages sent by the Publisher (Producer).
          type: boolean
        dynamicEndpointCreateDurableEnabled:
          description: Indicates whether a durable endpoint will be dynamically created
            on the broker when the client calls "Session.createDurableSubscriber()"
            or "Session.createQueue()". The created endpoint respects the message
            time-to-live (TTL) according to the "dynamicEndpointRespectTtlEnabled"
            property.
          type: boolean
        dynamicEndpointRespectTtlEnabled:
          description: Indicates whether dynamically created durable and non-durable
            endpoints respect the message time-to-live (TTL) property.
          type: boolean
        guaranteedReceiveAckTimeout:
          description: The timeout for sending the acknowledgement (ACK) for guaranteed
            messages received by the Subscriber (Consumer), in milliseconds.
          format: int32
          type: integer
        guaranteedReceiveReconnectRetryCount:
          description: The maximum number of attempts to reconnect to the host or
            list of hosts after the guaranteed  messaging connection has been lost.
            The value "-1" means to retry forever. Available since 2.14.
          format: int32
          type: integer
        guaranteedReceiveReconnectRetryWait:
          description: The amount of time to wait before making another attempt to
            connect or reconnect to the host after the guaranteed messaging connection
            has been lost, in milliseconds. Available since 2.14.
          format: int32
          type: integer
        guaranteedReceiveWindowSize:
          description: The size of the window for guaranteed messages received by
            the Subscriber (Consumer), in messages.
          format: int32
          type: integer
        guaranteedReceiveWindowSizeAckThreshold:
          description: The threshold for sending the acknowledgement (ACK) for guaranteed
            messages received by the Subscriber (Consumer) as a percentage of `guaranteedReceiveWindowSize`.
          format: int32
          type: integer
        guaranteedSendAckTimeout:
          description: The timeout for receiving the acknowledgement (ACK) for guaranteed
            messages sent by the Publisher (Producer), in milliseconds.
          format: int32
          type: integer
        guaranteedSendWindowSize:
          description: The size of the window for non-persistent guaranteed messages
            sent by the Publisher (Producer), in messages. For persistent messages
            the window size is fixed at 1.
          format: int32
          type: integer
        messagingDefaultDeliveryMode:
          description: |
            The default delivery mode for messages sent by the Publisher (Producer). The allowed values and their meaning are:

            <pre>
            "persistent" - The broker spools messages (persists in the Message Spool) as part of the send operation.
            "non-persistent" - The broker does not spool messages (does not persist in the Message Spool) as part of the send operation.
            </pre>
          enum:
          - persistent
          - non-persistent
          type: string
        messagingDefaultDmqEligibleEnabled:
          description: Indicates whether messages sent by the Publisher (Producer)
            are Dead Message Queue (DMQ) eligible by default.
          type: boolean
        messagingDefaultElidingEligibleEnabled:
          description: Indicates whether messages sent by the Publisher (Producer)
            are Eliding eligible by default.
          type: boolean
        messagingJmsxUserIdEnabled:
          description: Indicates whether to include (add or replace) the JMSXUserID
            property in messages sent by the Publisher (Producer).
          type: boolean
        messagingTextInXmlPayloadEnabled:
          description: Indicates whether encoding of JMS text messages in Publisher
            (Producer) messages is as XML payload. When disabled, JMS text messages
            are encoded as a binary attachment.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        transportCompressionLevel:
          description: The ZLIB compression level for the connection to the broker.
            The value "0" means no compression, and the value "-1" means the compression
            level is specified in the JNDI Properties file.
          format: int32
          type: integer
        transportConnectRetryCount:
          description: The maximum number of retry attempts to establish an initial
            connection to the host or list of hosts. The value "0" means a single
            attempt (no retries), and the value "-1" means to retry forever.
          format: int32
          type: integer
        transportConnectRetryPerHostCount:
          description: The maximum number of retry attempts to establish an initial
            connection to each host on the list of hosts. The value "0" means a single
            attempt (no retries), and the value "-1" means to retry forever.
          format: int32
          type: integer
        transportConnectTimeout:
          description: The timeout for establishing an initial connection to the broker,
            in milliseconds.
          format: int32
          type: integer
        transportDirectTransportEnabled:
          description: Indicates whether usage of the Direct Transport mode for sending
            non-persistent messages is enabled. When disabled, the Guaranteed Transport
            mode is used.
          type: boolean
        transportKeepaliveCount:
          description: The maximum number of consecutive application-level keepalive
            messages sent without the broker response before the connection to the
            broker is closed.
          format: int32
          type: integer
        transportKeepaliveEnabled:
          description: Indicates whether application-level keepalive messages are
            used to maintain a connection with the Router.
          type: boolean
        transportKeepaliveInterval:
          description: The interval between application-level keepalive messages,
            in milliseconds.
          format: int32
          type: integer
        transportMsgCallbackOnIoThreadEnabled:
          description: Indicates whether delivery of asynchronous messages is done
            directly from the I/O thread.
          type: boolean
        transportOptimizeDirectEnabled:
          description: Indicates whether optimization for the Direct Transport delivery
            mode is enabled. If enabled, the client application is limited to one
            Publisher (Producer) and one non-durable Subscriber (Consumer).
          type: boolean
        transportPort:
          description: The connection port number on the broker for SMF clients. The
            value "-1" means the port is specified in the JNDI Properties file.
          format: int32
          type: integer
        transportReadTimeout:
          description: The timeout for reading a reply from the broker, in milliseconds.
          format: int32
          type: integer
        transportReceiveBufferSize:
          description: The size of the receive socket buffer, in bytes. It corresponds
            to the SO_RCVBUF socket option.
          format: int32
          type: integer
        transportReconnectRetryCount:
          description: The maximum number of attempts to reconnect to the host or
            list of hosts after the connection has been lost. The value "-1" means
            to retry forever.
          format: int32
          type: integer
        transportReconnectRetryWait:
          description: The amount of time before making another attempt to connect
            or reconnect to the host after the connection has been lost, in milliseconds.
          format: int32
          type: integer
        transportSendBufferSize:
          description: The size of the send socket buffer, in bytes. It corresponds
            to the SO_SNDBUF socket option.
          format: int32
          type: integer
        transportTcpNoDelayEnabled:
          description: Indicates whether the TCP_NODELAY option is enabled, which
            disables Nagle's algorithm for TCP/IP congestion control (RFC 896).
          type: boolean
        xaEnabled:
          description: Indicates whether this is an XA Connection Factory. When enabled,
            the Connection Factory can be cast to "XAConnectionFactory", "XAQueueConnectionFactory"
            or "XATopicConnectionFactory".
          type: boolean
      type: object
    MsgVpnJndiConnectionFactoryCollections:
      type: object
    MsgVpnJndiConnectionFactoryLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this JNDI Connection Factory object.
          type: string
      type: object
    MsgVpnJndiConnectionFactoryResponse:
      example:
        data:
          messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        links:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiQueue:
      example:
        queueName: queueName
        physicalName: physicalName
        msgVpnName: msgVpnName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        physicalName:
          description: The physical name of the JMS Queue.
          type: string
        queueName:
          description: The JNDI name of the JMS Queue.
          type: string
      type: object
    MsgVpnJndiQueueCollections:
      type: object
    MsgVpnJndiQueueLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this JNDI Queue object.
          type: string
      type: object
    MsgVpnJndiQueueResponse:
      example:
        data:
          queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnJndiQueue'
        links:
          $ref: '#/components/schemas/MsgVpnJndiQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiQueuesResponse:
      example:
        data:
        - queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        - queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueueCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueue'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueueLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiTopic:
      example:
        physicalName: physicalName
        topicName: topicName
        msgVpnName: msgVpnName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        physicalName:
          description: The physical name of the JMS Topic.
          type: string
        topicName:
          description: The JNDI name of the JMS Topic.
          type: string
      type: object
    MsgVpnJndiTopicCollections:
      type: object
    MsgVpnJndiTopicLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this JNDI Topic object.
          type: string
      type: object
    MsgVpnJndiTopicResponse:
      example:
        data:
          physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnJndiTopic'
        links:
          $ref: '#/components/schemas/MsgVpnJndiTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiTopicsResponse:
      example:
        data:
        - physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        - physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopicCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopic'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopicLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnLinks:
      example:
        authenticationOauthProvidersUri: authenticationOauthProvidersUri
        transactionsUri: transactionsUri
        clientProfilesUri: clientProfilesUri
        topicEndpointsUri: topicEndpointsUri
        jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
        configSyncRemoteNodesUri: configSyncRemoteNodesUri
        clientsUri: clientsUri
        mqttRetainCachesUri: mqttRetainCachesUri
        clientUsernamesUri: clientUsernamesUri
        bridgesUri: bridgesUri
        replicatedTopicsUri: replicatedTopicsUri
        topicEndpointTemplatesUri: topicEndpointTemplatesUri
        aclProfilesUri: aclProfilesUri
        uri: uri
        jndiTopicsUri: jndiTopicsUri
        dmrBridgesUri: dmrBridgesUri
        replayLogsUri: replayLogsUri
        queueTemplatesUri: queueTemplatesUri
        queuesUri: queuesUri
        restDeliveryPointsUri: restDeliveryPointsUri
        distributedCachesUri: distributedCachesUri
        mqttSessionsUri: mqttSessionsUri
        authorizationGroupsUri: authorizationGroupsUri
        jndiQueuesUri: jndiQueuesUri
      properties:
        aclProfilesUri:
          description: The URI of this Message VPN's collection of ACL Profile objects.
          type: string
        authenticationOauthProvidersUri:
          description: The URI of this Message VPN's collection of OAuth Provider
            objects. Available since 2.13.
          type: string
        authorizationGroupsUri:
          description: The URI of this Message VPN's collection of LDAP Authorization
            Group objects.
          type: string
        bridgesUri:
          description: The URI of this Message VPN's collection of Bridge objects.
          type: string
        clientProfilesUri:
          description: The URI of this Message VPN's collection of Client Profile
            objects.
          type: string
        clientUsernamesUri:
          description: The URI of this Message VPN's collection of Client Username
            objects.
          type: string
        clientsUri:
          description: The URI of this Message VPN's collection of Client objects.
            Available since 2.12.
          type: string
        configSyncRemoteNodesUri:
          description: The URI of this Message VPN's collection of Config Sync Remote
            Node objects. Available since 2.12.
          type: string
        distributedCachesUri:
          description: The URI of this Message VPN's collection of Distributed Cache
            objects.
          type: string
        dmrBridgesUri:
          description: The URI of this Message VPN's collection of DMR Bridge objects.
          type: string
        jndiConnectionFactoriesUri:
          description: The URI of this Message VPN's collection of JNDI Connection
            Factory objects.
          type: string
        jndiQueuesUri:
          description: The URI of this Message VPN's collection of JNDI Queue objects.
          type: string
        jndiTopicsUri:
          description: The URI of this Message VPN's collection of JNDI Topic objects.
          type: string
        mqttRetainCachesUri:
          description: The URI of this Message VPN's collection of MQTT Retain Cache
            objects.
          type: string
        mqttSessionsUri:
          description: The URI of this Message VPN's collection of MQTT Session objects.
          type: string
        queueTemplatesUri:
          description: The URI of this Message VPN's collection of Queue Template
            objects. Available since 2.14.
          type: string
        queuesUri:
          description: The URI of this Message VPN's collection of Queue objects.
            Available since 2.12.
          type: string
        replayLogsUri:
          description: The URI of this Message VPN's collection of Replay Log objects.
          type: string
        replicatedTopicsUri:
          description: The URI of this Message VPN's collection of Replicated Topic
            objects. Available since 2.12.
          type: string
        restDeliveryPointsUri:
          description: The URI of this Message VPN's collection of REST Delivery Point
            objects.
          type: string
        topicEndpointTemplatesUri:
          description: The URI of this Message VPN's collection of Topic Endpoint
            Template objects. Available since 2.14.
          type: string
        topicEndpointsUri:
          description: The URI of this Message VPN's collection of Topic Endpoint
            objects. Available since 2.12.
          type: string
        transactionsUri:
          description: The URI of this Message VPN's collection of Replicated Local
            Transaction or XA Transaction objects. Available since 2.12.
          type: string
        uri:
          description: The URI of this Message VPN object.
          type: string
      type: object
    MsgVpnMqttRetainCache:
      example:
        cacheCluster: cacheCluster
        primaryCacheInstance: primaryCacheInstance
        backupUp: true
        msgLifetime: 6
        primaryUp: true
        enabled: true
        uptime: 5
        backupUptime: 0
        primaryFailureReason: primaryFailureReason
        cacheName: cacheName
        failureReason: failureReason
        distributedCache: distributedCache
        primaryUptime: 1
        msgVpnName: msgVpnName
        up: true
        backupFailureReason: backupFailureReason
        backupCacheInstance: backupCacheInstance
      properties:
        backupCacheInstance:
          description: The name of the backup Cache Instance associated with this
            MQTT Retain Cache.
          type: string
        backupFailureReason:
          description: The reason why the backup cache associated with this MQTT Retain
            Cache is operationally down, if any.
          type: string
        backupUp:
          description: Indicates whether the backup cache associated with this MQTT
            Retain Cache is operationally up.
          type: boolean
        backupUptime:
          description: The number of seconds that the backup cache associated with
            this MQTT Retain Cache has been operationally up.
          format: int32
          type: integer
        cacheCluster:
          description: The name of the Cache Cluster associated with this MQTT Retain
            Cache.
          type: string
        cacheName:
          description: The name of the MQTT Retain Cache.
          type: string
        distributedCache:
          description: The name of the Distributed Cache associated with this MQTT
            Retain Cache.
          type: string
        enabled:
          description: Indicates whether this MQTT Retain Cache is enabled. When the
            cache is disabled, neither retain messages nor retain requests will be
            delivered by the cache. However, live retain messages will continue to
            be delivered to currently connected MQTT clients.
          type: boolean
        failureReason:
          description: The reason why this MQTT Retain Cache is operationally down,
            if any.
          type: string
        msgLifetime:
          description: The message lifetime, in seconds. If a message remains cached
            for the duration of its lifetime, the cache will remove the message. A
            lifetime of 0 results in the message being retained indefinitely.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        primaryCacheInstance:
          description: The name of the primary Cache Instance associated with this
            MQTT Retain Cache.
          type: string
        primaryFailureReason:
          description: The reason why the primary cache associated with this MQTT
            Retain Cache is operationally down, if any.
          type: string
        primaryUp:
          description: Indicates whether the primary cache associated with this MQTT
            Retain Cache is operationally up.
          type: boolean
        primaryUptime:
          description: The number of seconds that the primary cache associated with
            this MQTT Retain Cache has been operationally up.
          format: int32
          type: integer
        up:
          description: Indicates whether this MQTT Retain Cache is operationally up.
          type: boolean
        uptime:
          description: The number of seconds that the MQTT Retain Cache has been operationally
            up.
          format: int32
          type: integer
      type: object
    MsgVpnMqttRetainCacheCollections:
      type: object
    MsgVpnMqttRetainCacheLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this MQTT Retain Cache object.
          type: string
      type: object
    MsgVpnMqttRetainCacheResponse:
      example:
        data:
          cacheCluster: cacheCluster
          primaryCacheInstance: primaryCacheInstance
          backupUp: true
          msgLifetime: 6
          primaryUp: true
          enabled: true
          uptime: 5
          backupUptime: 0
          primaryFailureReason: primaryFailureReason
          cacheName: cacheName
          failureReason: failureReason
          distributedCache: distributedCache
          primaryUptime: 1
          msgVpnName: msgVpnName
          up: true
          backupFailureReason: backupFailureReason
          backupCacheInstance: backupCacheInstance
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        links:
          $ref: '#/components/schemas/MsgVpnMqttRetainCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttRetainCachesResponse:
      example:
        data:
        - cacheCluster: cacheCluster
          primaryCacheInstance: primaryCacheInstance
          backupUp: true
          msgLifetime: 6
          primaryUp: true
          enabled: true
          uptime: 5
          backupUptime: 0
          primaryFailureReason: primaryFailureReason
          cacheName: cacheName
          failureReason: failureReason
          distributedCache: distributedCache
          primaryUptime: 1
          msgVpnName: msgVpnName
          up: true
          backupFailureReason: backupFailureReason
          backupCacheInstance: backupCacheInstance
        - cacheCluster: cacheCluster
          primaryCacheInstance: primaryCacheInstance
          backupUp: true
          msgLifetime: 6
          primaryUp: true
          enabled: true
          uptime: 5
          backupUptime: 0
          primaryFailureReason: primaryFailureReason
          cacheName: cacheName
          failureReason: failureReason
          distributedCache: distributedCache
          primaryUptime: 1
          msgVpnName: msgVpnName
          up: true
          backupFailureReason: backupFailureReason
          backupCacheInstance: backupCacheInstance
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCacheCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCache'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCacheLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttSession:
      example:
        queueMaxBindCount: 6
        rxMax: 3
        clientName: clientName
        queueMaxDeliveredUnackedMsgsPerFlow: 1
        maxPacketSize: 1
        queueMaxRedeliveryCount: 6
        enabled: true
        queueRejectLowPriorityMsgLimit: 6
        mqttPublishQos1RxCount: 6
        queueDeadMsgQueue: queueDeadMsgQueue
        durable: true
        mqttPublishQos0RxCount: 9
        queueEventBindCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        mqttPublishQos2RxCount: 9
        mqttConnectRxCount: 1
        queueEventMsgSpoolUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        mqttDisconnectRxCount: 4
        mqttPublishQos0TxCount: 9
        mqttPublishQos1TxCount: 8
        msgVpnName: msgVpnName
        queueMaxMsgSpoolUsage: 6
        owner: owner
        mqttConnackTxCount: 7
        mqttSessionClientId: mqttSessionClientId
        mqttPubrelRxCount: 3
        queueRejectLowPriorityMsgEnabled: true
        will: true
        queueRespectTtlEnabled: true
        counter:
          mqttPublishQos1RxCount: 3
          mqttConnackErrorTxCount: 6
          mqttConnackTxCount: 1
          mqttPublishQos0RxCount: 7
          mqttPubrelRxCount: 1
          mqttPublishQos2RxCount: 4
          mqttConnectRxCount: 5
          mqttPubcompTxCount: 2
          mqttDisconnectRxCount: 5
          mqttPubrecTxCount: 7
          mqttPublishQos0TxCount: 9
          mqttPublishQos1TxCount: 2
        clean: true
        createdByManagement: true
        queueMaxTtl: 5
        mqttConnackErrorTxCount: 6
        queueName: queueName
        queueRejectMsgToSenderOnDiscardBehavior: always
        mqttPubcompTxCount: 5
        expiryTime: 1
        mqttPubrecTxCount: 6
        queueMaxMsgSize: 2
        queueEventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        mqttSessionVirtualRouter: primary
        queueConsumerAckPropagationEnabled: true
      properties:
        clean:
          description: Indicates whether the Client requested a clean (newly created)
            MQTT Session when connecting. If not clean (already existing), then previously
            stored messages for QoS 1 subscriptions are delivered.
          type: boolean
        clientName:
          description: The name of the MQTT Session Client.
          type: string
        counter:
          $ref: '#/components/schemas/MsgVpnMqttSessionCounter'
        createdByManagement:
          description: Indicates whether the MQTT Session was created by a Management
            API.
          type: boolean
        durable:
          description: Indicates whether the MQTT Session is durable. Disconnected
            durable MQTT Sessions are deleted when their expiry time is reached. Disconnected
            non-durable MQTT Sessions are deleted immediately. Available since 2.21.
          type: boolean
        enabled:
          description: Indicates whether the MQTT Session is enabled.
          type: boolean
        expiryTime:
          description: The timestamp of when the disconnected MQTT session expires
            and is deleted. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time). A value of 0 indicates that the session is either
            connected, or will never expire. Available since 2.21.
          format: int64
          type: integer
        maxPacketSize:
          description: The maximum size of a packet, including all headers and payload,
            that the Client has signaled it is willing to accept. A value of zero
            indicates no limit. Note that there are other broker settings which may
            further limit packet size. Available since 2.21.
          format: int64
          type: integer
        mqttConnackErrorTxCount:
          description: The number of MQTT connect acknowledgment (CONNACK) refused
            response packets transmitted to the Client. Available since 2.13.
          format: int64
          type: integer
        mqttConnackTxCount:
          description: The number of MQTT connect acknowledgment (CONNACK) accepted
            response packets transmitted to the Client. Available since 2.13.
          format: int64
          type: integer
        mqttConnectRxCount:
          description: The number of MQTT connect (CONNECT) request packets received
            from the Client. Available since 2.13.
          format: int64
          type: integer
        mqttDisconnectRxCount:
          description: The number of MQTT disconnect (DISCONNECT) request packets
            received from the Client. Available since 2.13.
          format: int64
          type: integer
        mqttPubcompTxCount:
          description: The number of MQTT publish complete (PUBCOMP) packets transmitted
            to the Client in response to a PUBREL packet. These packets are the fourth
            and final packet of a QoS 2 protocol exchange. Available since 2.13.
          format: int64
          type: integer
        mqttPublishQos0RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 0 message delivery. Available since 2.13.
          format: int64
          type: integer
        mqttPublishQos0TxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 0 message delivery. Available since
            2.13.
          format: int64
          type: integer
        mqttPublishQos1RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 1 message delivery. Available since 2.13.
          format: int64
          type: integer
        mqttPublishQos1TxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 1 message delivery. Available since
            2.13.
          format: int64
          type: integer
        mqttPublishQos2RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 2 message delivery. Available since 2.13.
          format: int64
          type: integer
        mqttPubrecTxCount:
          description: The number of MQTT publish received (PUBREC) packets transmitted
            to the Client in response to a PUBLISH packet with QoS 2. These packets
            are the second packet of a QoS 2 protocol exchange. Available since 2.13.
          format: int64
          type: integer
        mqttPubrelRxCount:
          description: The number of MQTT publish release (PUBREL) packets received
            from the Client in response to a PUBREC packet. These packets are the
            third packet of a QoS 2 protocol exchange. Available since 2.13.
          format: int64
          type: integer
        mqttSessionClientId:
          description: The Client ID of the MQTT Session, which corresponds to the
            ClientId provided in the MQTT CONNECT packet.
          type: string
        mqttSessionVirtualRouter:
          description: |
            The virtual router of the MQTT Session. The allowed values and their meaning are:

            <pre>
            "primary" - The MQTT Session belongs to the primary virtual router.
            "backup" - The MQTT Session belongs to the backup virtual router.
            </pre>
          enum:
          - primary
          - backup
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        owner:
          description: The Client Username which owns the MQTT Session.
          type: string
        queueConsumerAckPropagationEnabled:
          description: Indicates whether consumer acknowledgements (ACKs) received
            on the active replication Message VPN are propagated to the standby replication
            Message VPN. Available since 2.14.
          type: boolean
        queueDeadMsgQueue:
          description: The name of the Dead Message Queue (DMQ) used by the MQTT Session
            Queue. Available since 2.14.
          type: string
        queueEventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxBindCount:
          description: The maximum number of consumer flows that can bind to the MQTT
            Session Queue. Available since 2.14.
          format: int64
          type: integer
        queueMaxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow for the MQTT Session Queue. Available since 2.14.
          format: int64
          type: integer
        queueMaxMsgSize:
          description: The maximum message size allowed in the MQTT Session Queue,
            in bytes (B). Available since 2.14.
          format: int32
          type: integer
        queueMaxMsgSpoolUsage:
          description: The maximum message spool usage allowed by the MQTT Session
            Queue, in megabytes (MB). A value of 0 only allows spooling of the last
            message received and disables quota checking. Available since 2.14.
          format: int64
          type: integer
        queueMaxRedeliveryCount:
          description: The maximum number of times the MQTT Session Queue will attempt
            redelivery of a message prior to it being discarded or moved to the DMQ.
            A value of 0 means to retry forever. Available since 2.14.
          format: int64
          type: integer
        queueMaxTtl:
          description: The maximum time in seconds a message can stay in the MQTT
            Session Queue when `queueRespectTtlEnabled` is `"true"`. A message expires
            when the lesser of the sender assigned time-to-live (TTL) in the message
            and the `queueMaxTtl` configured for the MQTT Session Queue, is exceeded.
            A value of 0 disables expiry. Available since 2.14.
          format: int64
          type: integer
        queueName:
          description: The name of the MQTT Session Queue.
          type: string
        queueRejectLowPriorityMsgEnabled:
          description: Indicates whether to return negative acknowledgements (NACKs)
            to sending clients on message discards. Note that NACKs cause the message
            to not be delivered to any destination and Transacted Session commits
            to fail. Available since 2.14.
          type: boolean
        queueRejectLowPriorityMsgLimit:
          description: The number of messages of any priority in the MQTT Session
            Queue above which low priority messages are not admitted but higher priority
            messages are allowed. Available since 2.14.
          format: int64
          type: integer
        queueRejectMsgToSenderOnDiscardBehavior:
          description: |-
            Indicates whether negative acknowledgements (NACKs) are returned to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
             Available since 2.14.
          enum:
          - always
          - when-queue-enabled
          - never
          type: string
        queueRespectTtlEnabled:
          description: Indicates whether the time-to-live (TTL) for messages in the
            MQTT Session Queue is respected. When enabled, expired messages are discarded
            or moved to the DMQ. Available since 2.14.
          type: boolean
        rxMax:
          description: The maximum number of outstanding QoS1 and QoS2 messages that
            the Client has signaled it is willing to accept. Note that there are other
            broker settings which may further limit the number of outstanding messasges.
            Available since 2.21.
          format: int64
          type: integer
        will:
          description: Indicates whether the MQTT Session has the Will message specified
            by the Client. The Will message is published if the Client disconnects
            without sending the MQTT DISCONNECT packet.
          type: boolean
      type: object
    MsgVpnMqttSessionCollections:
      example:
        subscriptions:
          count: 0
      properties:
        subscriptions:
          $ref: '#/components/schemas/MsgVpnMqttSessionCollectionsSubscriptions'
      type: object
    MsgVpnMqttSessionCollectionsSubscriptions:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the subscriptions collection.
          format: int64
          type: integer
      type: object
    MsgVpnMqttSessionCounter:
      description: The counters for the MQTT Session. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpnMqttSession object.
      example:
        mqttPublishQos1RxCount: 3
        mqttConnackErrorTxCount: 6
        mqttConnackTxCount: 1
        mqttPublishQos0RxCount: 7
        mqttPubrelRxCount: 1
        mqttPublishQos2RxCount: 4
        mqttConnectRxCount: 5
        mqttPubcompTxCount: 2
        mqttDisconnectRxCount: 5
        mqttPubrecTxCount: 7
        mqttPublishQos0TxCount: 9
        mqttPublishQos1TxCount: 2
      properties:
        mqttConnackErrorTxCount:
          description: The number of MQTT connect acknowledgment (CONNACK) refused
            response packets transmitted to the Client. Deprecated since 2.13. This
            attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttConnackTxCount:
          description: The number of MQTT connect acknowledgment (CONNACK) accepted
            response packets transmitted to the Client. Deprecated since 2.13. This
            attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttConnectRxCount:
          description: The number of MQTT connect (CONNECT) request packets received
            from the Client. Deprecated since 2.13. This attribute has been moved
            to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttDisconnectRxCount:
          description: The number of MQTT disconnect (DISCONNECT) request packets
            received from the Client. Deprecated since 2.13. This attribute has been
            moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttPubcompTxCount:
          description: The number of MQTT publish complete (PUBCOMP) packets transmitted
            to the Client in response to a PUBREL packet. These packets are the fourth
            and final packet of a QoS 2 protocol exchange. Deprecated since 2.13.
            This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttPublishQos0RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 0 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttPublishQos0TxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 0 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttPublishQos1RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 1 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttPublishQos1TxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            transmitted to the Client for QoS 1 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttPublishQos2RxCount:
          description: The number of MQTT publish message (PUBLISH) request packets
            received from the Client for QoS 2 message delivery. Deprecated since
            2.13. This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttPubrecTxCount:
          description: The number of MQTT publish received (PUBREC) packets transmitted
            to the Client in response to a PUBLISH packet with QoS 2. These packets
            are the second packet of a QoS 2 protocol exchange. Deprecated since 2.13.
            This attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
        mqttPubrelRxCount:
          description: The number of MQTT publish release (PUBREL) packets received
            from the Client in response to a PUBREC packet. These packets are the
            third packet of a QoS 2 protocol exchange. Deprecated since 2.13. This
            attribute has been moved to the MsgVpnMqttSession object.
          format: int64
          type: integer
      type: object
    MsgVpnMqttSessionLinks:
      example:
        subscriptionsUri: subscriptionsUri
        uri: uri
      properties:
        subscriptionsUri:
          description: The URI of this MQTT Session's collection of Subscription objects.
          type: string
        uri:
          description: The URI of this MQTT Session object.
          type: string
      type: object
    MsgVpnMqttSessionResponse:
      example:
        data:
          queueMaxBindCount: 6
          rxMax: 3
          clientName: clientName
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          maxPacketSize: 1
          queueMaxRedeliveryCount: 6
          enabled: true
          queueRejectLowPriorityMsgLimit: 6
          mqttPublishQos1RxCount: 6
          queueDeadMsgQueue: queueDeadMsgQueue
          durable: true
          mqttPublishQos0RxCount: 9
          queueEventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttPublishQos2RxCount: 9
          mqttConnectRxCount: 1
          queueEventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttDisconnectRxCount: 4
          mqttPublishQos0TxCount: 9
          mqttPublishQos1TxCount: 8
          msgVpnName: msgVpnName
          queueMaxMsgSpoolUsage: 6
          owner: owner
          mqttConnackTxCount: 7
          mqttSessionClientId: mqttSessionClientId
          mqttPubrelRxCount: 3
          queueRejectLowPriorityMsgEnabled: true
          will: true
          queueRespectTtlEnabled: true
          counter:
            mqttPublishQos1RxCount: 3
            mqttConnackErrorTxCount: 6
            mqttConnackTxCount: 1
            mqttPublishQos0RxCount: 7
            mqttPubrelRxCount: 1
            mqttPublishQos2RxCount: 4
            mqttConnectRxCount: 5
            mqttPubcompTxCount: 2
            mqttDisconnectRxCount: 5
            mqttPubrecTxCount: 7
            mqttPublishQos0TxCount: 9
            mqttPublishQos1TxCount: 2
          clean: true
          createdByManagement: true
          queueMaxTtl: 5
          mqttConnackErrorTxCount: 6
          queueName: queueName
          queueRejectMsgToSenderOnDiscardBehavior: always
          mqttPubcompTxCount: 5
          expiryTime: 1
          mqttPubrecTxCount: 6
          queueMaxMsgSize: 2
          queueEventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        collections:
          subscriptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          subscriptionsUri: subscriptionsUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnMqttSessionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnMqttSession'
        links:
          $ref: '#/components/schemas/MsgVpnMqttSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttSessionSubscription:
      example:
        mqttSessionClientId: mqttSessionClientId
        subscriptionQos: 0
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
        mqttSessionVirtualRouter: primary
      properties:
        mqttSessionClientId:
          description: The Client ID of the MQTT Session, which corresponds to the
            ClientId provided in the MQTT CONNECT packet.
          type: string
        mqttSessionVirtualRouter:
          description: |
            The virtual router of the MQTT Session. The allowed values and their meaning are:

            <pre>
            "primary" - The MQTT Session belongs to the primary virtual router.
            "backup" - The MQTT Session belongs to the backup virtual router.
            </pre>
          enum:
          - primary
          - backup
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        subscriptionQos:
          description: The quality of service (QoS) for the MQTT Session subscription.
          format: int64
          type: integer
        subscriptionTopic:
          description: The MQTT subscription topic.
          type: string
      type: object
    MsgVpnMqttSessionSubscriptionCollections:
      type: object
    MsgVpnMqttSessionSubscriptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Subscription object.
          type: string
      type: object
    MsgVpnMqttSessionSubscriptionResponse:
      example:
        data:
          mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttSessionSubscriptionsResponse:
      example:
        data:
        - mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        - mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttSessionsResponse:
      example:
        data:
        - queueMaxBindCount: 6
          rxMax: 3
          clientName: clientName
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          maxPacketSize: 1
          queueMaxRedeliveryCount: 6
          enabled: true
          queueRejectLowPriorityMsgLimit: 6
          mqttPublishQos1RxCount: 6
          queueDeadMsgQueue: queueDeadMsgQueue
          durable: true
          mqttPublishQos0RxCount: 9
          queueEventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttPublishQos2RxCount: 9
          mqttConnectRxCount: 1
          queueEventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttDisconnectRxCount: 4
          mqttPublishQos0TxCount: 9
          mqttPublishQos1TxCount: 8
          msgVpnName: msgVpnName
          queueMaxMsgSpoolUsage: 6
          owner: owner
          mqttConnackTxCount: 7
          mqttSessionClientId: mqttSessionClientId
          mqttPubrelRxCount: 3
          queueRejectLowPriorityMsgEnabled: true
          will: true
          queueRespectTtlEnabled: true
          counter:
            mqttPublishQos1RxCount: 3
            mqttConnackErrorTxCount: 6
            mqttConnackTxCount: 1
            mqttPublishQos0RxCount: 7
            mqttPubrelRxCount: 1
            mqttPublishQos2RxCount: 4
            mqttConnectRxCount: 5
            mqttPubcompTxCount: 2
            mqttDisconnectRxCount: 5
            mqttPubrecTxCount: 7
            mqttPublishQos0TxCount: 9
            mqttPublishQos1TxCount: 2
          clean: true
          createdByManagement: true
          queueMaxTtl: 5
          mqttConnackErrorTxCount: 6
          queueName: queueName
          queueRejectMsgToSenderOnDiscardBehavior: always
          mqttPubcompTxCount: 5
          expiryTime: 1
          mqttPubrecTxCount: 6
          queueMaxMsgSize: 2
          queueEventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        - queueMaxBindCount: 6
          rxMax: 3
          clientName: clientName
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          maxPacketSize: 1
          queueMaxRedeliveryCount: 6
          enabled: true
          queueRejectLowPriorityMsgLimit: 6
          mqttPublishQos1RxCount: 6
          queueDeadMsgQueue: queueDeadMsgQueue
          durable: true
          mqttPublishQos0RxCount: 9
          queueEventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttPublishQos2RxCount: 9
          mqttConnectRxCount: 1
          queueEventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttDisconnectRxCount: 4
          mqttPublishQos0TxCount: 9
          mqttPublishQos1TxCount: 8
          msgVpnName: msgVpnName
          queueMaxMsgSpoolUsage: 6
          owner: owner
          mqttConnackTxCount: 7
          mqttSessionClientId: mqttSessionClientId
          mqttPubrelRxCount: 3
          queueRejectLowPriorityMsgEnabled: true
          will: true
          queueRespectTtlEnabled: true
          counter:
            mqttPublishQos1RxCount: 3
            mqttConnackErrorTxCount: 6
            mqttConnackTxCount: 1
            mqttPublishQos0RxCount: 7
            mqttPubrelRxCount: 1
            mqttPublishQos2RxCount: 4
            mqttConnectRxCount: 5
            mqttPubcompTxCount: 2
            mqttDisconnectRxCount: 5
            mqttPubrecTxCount: 7
            mqttPublishQos0TxCount: 9
            mqttPublishQos1TxCount: 2
          clean: true
          createdByManagement: true
          queueMaxTtl: 5
          mqttConnackErrorTxCount: 6
          queueName: queueName
          queueRejectMsgToSenderOnDiscardBehavior: always
          mqttPubcompTxCount: 5
          expiryTime: 1
          mqttPubrecTxCount: 6
          queueMaxMsgSize: 2
          queueEventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        collections:
        - subscriptions:
            count: 0
        - subscriptions:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - subscriptionsUri: subscriptionsUri
          uri: uri
        - subscriptionsUri: subscriptionsUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSession'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueue:
      example:
        averageRxByteRate: 2
        maxTtlExpiredDiscardedMsgCount: 4
        txMsgRate: 4
        redeliveryEnabled: true
        replicationActiveAckPropTxMsgCount: 7
        maxMsgSizeExceededDiscardedMsgCount: 5
        maxTtlExceededDiscardedMsgCount: 0
        txUnackedMsgCount: 3
        maxMsgSize: 6
        rxMsgRate: 7
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        replayFailureCount: 0
        respectMsgPriorityEnabled: true
        bindSuccessCount: 4
        networkTopic: networkTopic
        replicationStandbyRxMsgCount: 9
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        averageTxMsgRate: 3
        lastReplayFailureTime: 9
        bindRequestCount: 2
        lastSpooledMsgId: 9
        lowestMsgId: 6
        eventMsgSpoolUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        replayedTxMsgCount: 4
        egressEnabled: true
        replayStartCount: 6
        respectTtlEnabled: true
        clientProfileDeniedDiscardedMsgCount: 7
        disabledBindFailureCount: 1
        createdByManagement: true
        disabledDiscardedMsgCount: 6
        lastReplayStartTime: 6
        replicationStandbyAckPropRxMsgCount: 9
        msgSpoolUsage: 3
        lastReplayedMsgTxTime: 8
        maxTtlExpiredToDmqMsgCount: 7
        maxRedeliveryExceededToDmqMsgCount: 7
        txSelector: true
        eventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        otherBindFailureCount: 5
        rxByteRate: 0
        alreadyBoundBindFailureCount: 5
        lastReplayFailureReason: lastReplayFailureReason
        highestMsgId: 1
        lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
        highestAckedMsgId: 7
        maxRedeliveryExceededToDmqFailedMsgCount: 0
        transportRetransmitMsgCount: 6
        lowestAckedMsgId: 3
        maxMsgSpoolUsageExceededDiscardedMsgCount: 3
        maxRedeliveryExceededDiscardedMsgCount: 7
        rejectLowPriorityMsgLimit: 4
        txByteRate: 8
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        deliveryCountEnabled: true
        durable: true
        replayedAckedMsgCount: 1
        averageTxByteRate: 9
        replayState: replayState
        maxBindCountExceededBindFailureCount: 2
        bindTimeForwardingMode: bindTimeForwardingMode
        lastReplayCompleteTime: 9
        destinationGroupErrorDiscardedMsgCount: 1
        noLocalDeliveryDiscardedMsgCount: 7
        rejectLowPriorityMsgEnabled: true
        replicationStandbyAckedByAckPropMsgCount: 0
        maxBindCount: 1
        owner: owner
        maxTtl: 6
        replaySuccessCount: 4
        spooledByteCount: 5
        averageRxMsgRate: 7
        permission: no-access
        maxTtlExpiredToDmqFailedMsgCount: 8
        redeliveredMsgCount: 3
        maxRedeliveryCount: 3
        msgSpoolPeakUsage: 3
        virtualRouter: virtualRouter
        deletedMsgCount: 1
        ingressEnabled: true
        invalidSelectorBindFailureCount: 5
        spooledMsgCount: 4
        queueName: queueName
        inProgressAckMsgCount: 4
        maxMsgSpoolUsage: 6
        lowPriorityMsgCongestionDiscardedMsgCount: 6
      properties:
        accessType:
          description: |
            The access type for delivering messages to consumer flows bound to the Queue. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
          type: string
        alreadyBoundBindFailureCount:
          description: The number of Queue bind failures due to being already bound.
          format: int64
          type: integer
        averageRxByteRate:
          description: The one minute average of the message rate received by the
            Queue, in bytes per second (B/sec).
          format: int64
          type: integer
        averageRxMsgRate:
          description: The one minute average of the message rate received by the
            Queue, in messages per second (msg/sec).
          format: int64
          type: integer
        averageTxByteRate:
          description: The one minute average of the message rate transmitted by the
            Queue, in bytes per second (B/sec).
          format: int64
          type: integer
        averageTxMsgRate:
          description: The one minute average of the message rate transmitted by the
            Queue, in messages per second (msg/sec).
          format: int64
          type: integer
        bindRequestCount:
          description: The number of consumer requests to bind to the Queue.
          format: int64
          type: integer
        bindSuccessCount:
          description: The number of successful consumer requests to bind to the Queue.
          format: int64
          type: integer
        bindTimeForwardingMode:
          description: |
            The forwarding mode of the Queue at bind time. The allowed values and their meaning are:

            <pre>
            "store-and-forward" - Deliver messages using the guaranteed data path.
            "cut-through" - Deliver messages using the direct and guaranteed data paths for lower latency.
            </pre>
          type: string
        clientProfileDeniedDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to being denied by the Client Profile.
          format: int64
          type: integer
        consumerAckPropagationEnabled:
          description: Indicates whether the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN is enabled.
          type: boolean
        createdByManagement:
          description: Indicates whether the Queue was created by a management API
            (CLI or SEMP).
          type: boolean
        deadMsgQueue:
          description: The name of the Dead Message Queue (DMQ) used by the Queue.
          type: string
        deletedMsgCount:
          description: The number of guaranteed messages deleted from the Queue.
          format: int64
          type: integer
        deliveryCountEnabled:
          description: Enable or disable the ability for client applications to query
            the message delivery count of messages received from the Queue. This is
            a controlled availability feature. Please contact Solace to find out if
            this feature is supported for your use case. Available since 2.19.
          type: boolean
        destinationGroupErrorDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to a destination group error.
          format: int64
          type: integer
        disabledBindFailureCount:
          description: The number of Queue bind failures due to being disabled.
          format: int64
          type: integer
        disabledDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to it being disabled.
          format: int64
          type: integer
        durable:
          description: Indicates whether the Queue is durable and not temporary.
          type: boolean
        egressEnabled:
          description: Indicates whether the transmission of messages from the Queue
            is enabled.
          type: boolean
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        highestAckedMsgId:
          description: The highest identifier (ID) of guaranteed messages in the Queue
            that were acknowledged.
          format: int64
          type: integer
        highestMsgId:
          description: The highest identifier (ID) of guaranteed messages in the Queue.
          format: int64
          type: integer
        inProgressAckMsgCount:
          description: The number of acknowledgement messages received by the Queue
            that are in the process of updating and deleting associated guaranteed
            messages.
          format: int64
          type: integer
        ingressEnabled:
          description: Indicates whether the reception of messages to the Queue is
            enabled.
          type: boolean
        invalidSelectorBindFailureCount:
          description: The number of Queue bind failures due to an invalid selector.
          format: int64
          type: integer
        lastReplayCompleteTime:
          description: The timestamp of the last completed replay for the Queue. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
          type: integer
        lastReplayFailureReason:
          description: The reason for the last replay failure for the Queue.
          type: string
        lastReplayFailureTime:
          description: The timestamp of the last replay failure for the Queue. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
          type: integer
        lastReplayStartTime:
          description: The timestamp of the last replay started for the Queue. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
          type: integer
        lastReplayedMsgTxTime:
          description: The timestamp of the last replayed message transmitted by the
            Queue. This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        lastSpooledMsgId:
          description: The identifier (ID) of the last guaranteed message spooled
            in the Queue.
          format: int64
          type: integer
        lowPriorityMsgCongestionDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to low priority message congestion control.
          format: int64
          type: integer
        lowPriorityMsgCongestionState:
          description: |
            The state of the low priority message congestion in the Queue. The allowed values and their meaning are:

            <pre>
            "disabled" - Messages are not being checked for priority.
            "not-congested" - Low priority messages are being stored and delivered.
            "congested" - Low priority messages are being discarded.
            </pre>
          type: string
        lowestAckedMsgId:
          description: The lowest identifier (ID) of guaranteed messages in the Queue
            that were acknowledged.
          format: int64
          type: integer
        lowestMsgId:
          description: The lowest identifier (ID) of guaranteed messages in the Queue.
          format: int64
          type: integer
        maxBindCount:
          description: The maximum number of consumer flows that can bind to the Queue.
          format: int64
          type: integer
        maxBindCountExceededBindFailureCount:
          description: The number of Queue bind failures due to the maximum bind count
            being exceeded.
          format: int64
          type: integer
        maxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Queue.
          format: int64
          type: integer
        maxMsgSize:
          description: The maximum message size allowed in the Queue, in bytes (B).
          format: int32
          type: integer
        maxMsgSizeExceededDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum message size being exceeded.
          format: int64
          type: integer
        maxMsgSpoolUsage:
          description: The maximum message spool usage allowed by the Queue, in megabytes
            (MB). A value of 0 only allows spooling of the last message received and
            disables quota checking.
          format: int64
          type: integer
        maxMsgSpoolUsageExceededDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum message spool usage being exceeded.
          format: int64
          type: integer
        maxRedeliveryCount:
          description: The maximum number of times the Queue will attempt redelivery
            of a message prior to it being discarded or moved to the DMQ. A value
            of 0 means to retry forever.
          format: int64
          type: integer
        maxRedeliveryExceededDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum redelivery attempts being exceeded.
          format: int64
          type: integer
        maxRedeliveryExceededToDmqFailedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum redelivery attempts being exceeded and failing to move
            to the Dead Message Queue (DMQ).
          format: int64
          type: integer
        maxRedeliveryExceededToDmqMsgCount:
          description: The number of guaranteed messages moved to the Dead Message
            Queue (DMQ) by the Queue due to the maximum redelivery attempts being
            exceeded.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time in seconds a message can stay in the Queue
            when `respectTtlEnabled` is `"true"`. A message expires when the lesser
            of the sender assigned time-to-live (TTL) in the message and the `maxTtl`
            configured for the Queue, is exceeded. A value of 0 disables expiry.
          format: int64
          type: integer
        maxTtlExceededDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum time-to-live (TTL) in hops being exceeded. The TTL hop
            count is incremented when the message crosses a bridge.
          format: int64
          type: integer
        maxTtlExpiredDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum time-to-live (TTL) timestamp expiring.
          format: int64
          type: integer
        maxTtlExpiredToDmqFailedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to the maximum time-to-live (TTL) timestamp expiring and failing to move
            to the Dead Message Queue (DMQ).
          format: int64
          type: integer
        maxTtlExpiredToDmqMsgCount:
          description: The number of guaranteed messages moved to the Dead Message
            Queue (DMQ) by the Queue due to the maximum time-to-live (TTL) timestamp
            expiring.
          format: int64
          type: integer
        msgSpoolPeakUsage:
          description: The message spool peak usage by the Queue, in bytes (B).
          format: int64
          type: integer
        msgSpoolUsage:
          description: The message spool usage by the Queue, in bytes (B).
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        networkTopic:
          description: The name of the network topic for the Queue.
          type: string
        noLocalDeliveryDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Queue due
            to no local delivery being requested.
          format: int64
          type: integer
        otherBindFailureCount:
          description: The number of Queue bind failures due to other reasons.
          format: int64
          type: integer
        owner:
          description: The Client Username that owns the Queue and has permission
            equivalent to `"delete"`.
          type: string
        permission:
          description: |
            The permission level for all consumers of the Queue, excluding the owner. The allowed values and their meaning are:

            <pre>
            "no-access" - Disallows all access.
            "read-only" - Read-only access to the messages.
            "consume" - Consume (read and remove) messages.
            "modify-topic" - Consume messages or modify the topic/selector.
            "delete" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.
            </pre>
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
          type: string
        queueName:
          description: The name of the Queue.
          type: string
        redeliveredMsgCount:
          description: The number of guaranteed messages transmitted by the Queue
            for redelivery.
          format: int64
          type: integer
        redeliveryEnabled:
          description: Enable or disable message redelivery. When enabled, the number
            of redelivery attempts is controlled by maxRedeliveryCount. When disabled,
            the message will never be delivered from the queue more than once. Available
            since 2.18.
          type: boolean
        rejectLowPriorityMsgEnabled:
          description: Indicates whether the checking of low priority messages against
            the `rejectLowPriorityMsgLimit` is enabled.
          type: boolean
        rejectLowPriorityMsgLimit:
          description: The number of messages of any priority in the Queue above which
            low priority messages are not admitted but higher priority messages are
            allowed.
          format: int64
          type: integer
        rejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
          type: string
        replayFailureCount:
          description: The number of replays that failed for the Queue.
          format: int64
          type: integer
        replayStartCount:
          description: The number of replays started for the Queue.
          format: int64
          type: integer
        replayState:
          description: |
            The state of replay for the Queue. The allowed values and their meaning are:

            <pre>
            "initializing" - All messages are being deleted from the endpoint before replay starts.
            "active" - Subscription matching logged messages are being replayed to the endpoint.
            "pending-complete" - Replay is complete, but final accounting is in progress.
            "complete" - Replay and all related activities are complete.
            "failed" - Replay has failed and is waiting for an unbind response.
            </pre>
          type: string
        replaySuccessCount:
          description: The number of replays that succeeded for the Queue.
          format: int64
          type: integer
        replayedAckedMsgCount:
          description: The number of replayed messages transmitted by the Queue and
            acked by all consumers.
          format: int64
          type: integer
        replayedTxMsgCount:
          description: The number of replayed messages transmitted by the Queue.
          format: int64
          type: integer
        replicationActiveAckPropTxMsgCount:
          description: The number of acknowledgement messages propagated by the Queue
            to the replication standby remote Message VPN.
          format: int64
          type: integer
        replicationStandbyAckPropRxMsgCount:
          description: The number of propagated acknowledgement messages received
            by the Queue from the replication active remote Message VPN.
          format: int64
          type: integer
        replicationStandbyAckedByAckPropMsgCount:
          description: The number of messages acknowledged in the Queue by acknowledgement
            propagation from the replication active remote Message VPN.
          format: int64
          type: integer
        replicationStandbyRxMsgCount:
          description: The number of messages received by the Queue from the replication
            active remote Message VPN.
          format: int64
          type: integer
        respectMsgPriorityEnabled:
          description: Indicates whether message priorities are respected. When enabled,
            messages contained in the Queue are delivered in priority order, from
            9 (highest) to 0 (lowest).
          type: boolean
        respectTtlEnabled:
          description: Indicates whether the the time-to-live (TTL) for messages in
            the Queue is respected. When enabled, expired messages are discarded or
            moved to the DMQ.
          type: boolean
        rxByteRate:
          description: The current message rate received by the Queue, in bytes per
            second (B/sec).
          format: int64
          type: integer
        rxMsgRate:
          description: The current message rate received by the Queue, in messages
            per second (msg/sec).
          format: int64
          type: integer
        spooledByteCount:
          description: The amount of guaranteed messages that were spooled in the
            Queue, in bytes (B).
          format: int64
          type: integer
        spooledMsgCount:
          description: The number of guaranteed messages that were spooled in the
            Queue.
          format: int64
          type: integer
        transportRetransmitMsgCount:
          description: The number of guaranteed messages that were retransmitted by
            the Queue at the transport layer as part of a single delivery attempt.
            Available since 2.18.
          format: int64
          type: integer
        txByteRate:
          description: The current message rate transmitted by the Queue, in bytes
            per second (B/sec).
          format: int64
          type: integer
        txMsgRate:
          description: The current message rate transmitted by the Queue, in messages
            per second (msg/sec).
          format: int64
          type: integer
        txSelector:
          description: Indicates whether the Queue has consumers with selectors to
            filter transmitted messages.
          type: boolean
        txUnackedMsgCount:
          description: The number of guaranteed messages in the Queue that have been
            transmitted but not acknowledged by all consumers.
          format: int64
          type: integer
        virtualRouter:
          description: |
            The virtual router of the Queue. The allowed values and their meaning are:

            <pre>
            "primary" - The endpoint belongs to the primary virtual router.
            "backup" - The endpoint belongs to the backup virtual router.
            </pre>
          type: string
      type: object
    MsgVpnQueueCollections:
      example:
        msgs:
          count: 0
        priorities:
          count: 6
        subscriptions:
          count: 1
        txFlows:
          count: 5
      properties:
        msgs:
          $ref: '#/components/schemas/MsgVpnQueueCollectionsMsgs'
        priorities:
          $ref: '#/components/schemas/MsgVpnQueueCollectionsPriorities'
        subscriptions:
          $ref: '#/components/schemas/MsgVpnQueueCollectionsSubscriptions'
        txFlows:
          $ref: '#/components/schemas/MsgVpnQueueCollectionsTxflows'
      type: object
    MsgVpnQueueCollectionsMsgs:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the msgs collection.
          format: int64
          type: integer
      type: object
    MsgVpnQueueCollectionsPriorities:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the priorities collection.
          format: int64
          type: integer
      type: object
    MsgVpnQueueCollectionsSubscriptions:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the subscriptions collection.
          format: int64
          type: integer
      type: object
    MsgVpnQueueCollectionsTxflows:
      example:
        count: 5
      properties:
        count:
          description: The total number of objects in the txFlows collection.
          format: int64
          type: integer
      type: object
    MsgVpnQueueLinks:
      example:
        txFlowsUri: txFlowsUri
        subscriptionsUri: subscriptionsUri
        prioritiesUri: prioritiesUri
        uri: uri
        msgsUri: msgsUri
      properties:
        msgsUri:
          description: The URI of this Queue's collection of Queue Message objects.
          type: string
        prioritiesUri:
          description: The URI of this Queue's collection of Queue Priority objects.
          type: string
        subscriptionsUri:
          description: The URI of this Queue's collection of Queue Subscription objects.
          type: string
        txFlowsUri:
          description: The URI of this Queue's collection of Queue Transmit Flow objects.
          type: string
        uri:
          description: The URI of this Queue object.
          type: string
      type: object
    MsgVpnQueueMsg:
      example:
        replicationState: replicationState
        msgId: 5
        undelivered: true
        priority: 5
        publisherId: 2
        attachmentSize: 0
        queueName: queueName
        dmqEligible: true
        redeliveryCount: 7
        spooledTime: 3
        contentSize: 6
        expiryTime: 1
        msgVpnName: msgVpnName
        replicationGroupMsgId: replicationGroupMsgId
        replicatedMateMsgId: 9
      properties:
        attachmentSize:
          description: The size of the Message attachment, in bytes (B).
          format: int64
          type: integer
        contentSize:
          description: The size of the Message content, in bytes (B).
          format: int64
          type: integer
        dmqEligible:
          description: Indicates whether the Message is eligible for the Dead Message
            Queue (DMQ).
          type: boolean
        expiryTime:
          description: The timestamp of when the Message expires. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        msgId:
          description: The identifier (ID) of the Message.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        priority:
          description: The priority level of the Message, from 9 (highest) to 0 (lowest).
          format: int32
          type: integer
        publisherId:
          description: The identifier (ID) of the Message publisher.
          format: int64
          type: integer
        queueName:
          description: The name of the Queue.
          type: string
        redeliveryCount:
          description: The number of times the Message has been redelivered.
          format: int32
          type: integer
        replicatedMateMsgId:
          description: The Message identifier (ID) on the replication mate. Applicable
            only to replicated messages.
          format: int64
          type: integer
        replicationGroupMsgId:
          description: An ID that uniquely identifies this Message within this replication
            group. Available since 2.21.
          type: string
        replicationState:
          description: |
            The replication state of the Message. The allowed values and their meaning are:

            <pre>
            "replicated" - The Message is replicated to the remote Message VPN.
            "not-replicated" - The Message is not being replicated to the remote Message VPN.
            "pending-replication" - The Message is queued for replication to the remote Message VPN.
            </pre>
          type: string
        spooledTime:
          description: The timestamp of when the Message was spooled in the Queue.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        undelivered:
          description: Indicates whether delivery of the Message has never been attempted.
          type: boolean
      type: object
    MsgVpnQueueMsgCollections:
      type: object
    MsgVpnQueueMsgLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Message object.
          type: string
      type: object
    MsgVpnQueueMsgResponse:
      example:
        data:
          replicationState: replicationState
          msgId: 5
          undelivered: true
          priority: 5
          publisherId: 2
          attachmentSize: 0
          queueName: queueName
          dmqEligible: true
          redeliveryCount: 7
          spooledTime: 3
          contentSize: 6
          expiryTime: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 9
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnQueueMsg'
        links:
          $ref: '#/components/schemas/MsgVpnQueueMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueMsgsResponse:
      example:
        data:
        - replicationState: replicationState
          msgId: 5
          undelivered: true
          priority: 5
          publisherId: 2
          attachmentSize: 0
          queueName: queueName
          dmqEligible: true
          redeliveryCount: 7
          spooledTime: 3
          contentSize: 6
          expiryTime: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 9
        - replicationState: replicationState
          msgId: 5
          undelivered: true
          priority: 5
          publisherId: 2
          attachmentSize: 0
          queueName: queueName
          dmqEligible: true
          redeliveryCount: 7
          spooledTime: 3
          contentSize: 6
          expiryTime: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 9
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnQueueMsgCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueueMsg'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueueMsgLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueuePrioritiesResponse:
      example:
        data:
        - spooledMsgCount: 1
          queueName: queueName
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        - spooledMsgCount: 1
          queueName: queueName
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnQueuePriorityCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueuePriority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueuePriorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueuePriority:
      example:
        spooledMsgCount: 1
        queueName: queueName
        spooledByteCount: 6
        msgVpnName: msgVpnName
        priority: 0
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        priority:
          description: The level of the Priority, from 9 (highest) to 0 (lowest).
          format: int32
          type: integer
        queueName:
          description: The name of the Queue.
          type: string
        spooledByteCount:
          description: The amount of guaranteed messages at this Priority spooled
            by the Queue, in bytes (B).
          format: int64
          type: integer
        spooledMsgCount:
          description: The number of guaranteed messages at this Priority spooled
            by the Queue.
          format: int64
          type: integer
      type: object
    MsgVpnQueuePriorityCollections:
      type: object
    MsgVpnQueuePriorityLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Priority object.
          type: string
      type: object
    MsgVpnQueuePriorityResponse:
      example:
        data:
          spooledMsgCount: 1
          queueName: queueName
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnQueuePriority'
        links:
          $ref: '#/components/schemas/MsgVpnQueuePriorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueResponse:
      example:
        data:
          averageRxByteRate: 2
          maxTtlExpiredDiscardedMsgCount: 4
          txMsgRate: 4
          redeliveryEnabled: true
          replicationActiveAckPropTxMsgCount: 7
          maxMsgSizeExceededDiscardedMsgCount: 5
          maxTtlExceededDiscardedMsgCount: 0
          txUnackedMsgCount: 3
          maxMsgSize: 6
          rxMsgRate: 7
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayFailureCount: 0
          respectMsgPriorityEnabled: true
          bindSuccessCount: 4
          networkTopic: networkTopic
          replicationStandbyRxMsgCount: 9
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          averageTxMsgRate: 3
          lastReplayFailureTime: 9
          bindRequestCount: 2
          lastSpooledMsgId: 9
          lowestMsgId: 6
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayedTxMsgCount: 4
          egressEnabled: true
          replayStartCount: 6
          respectTtlEnabled: true
          clientProfileDeniedDiscardedMsgCount: 7
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 6
          lastReplayStartTime: 6
          replicationStandbyAckPropRxMsgCount: 9
          msgSpoolUsage: 3
          lastReplayedMsgTxTime: 8
          maxTtlExpiredToDmqMsgCount: 7
          maxRedeliveryExceededToDmqMsgCount: 7
          txSelector: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          otherBindFailureCount: 5
          rxByteRate: 0
          alreadyBoundBindFailureCount: 5
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 1
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          highestAckedMsgId: 7
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          transportRetransmitMsgCount: 6
          lowestAckedMsgId: 3
          maxMsgSpoolUsageExceededDiscardedMsgCount: 3
          maxRedeliveryExceededDiscardedMsgCount: 7
          rejectLowPriorityMsgLimit: 4
          txByteRate: 8
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          durable: true
          replayedAckedMsgCount: 1
          averageTxByteRate: 9
          replayState: replayState
          maxBindCountExceededBindFailureCount: 2
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 9
          destinationGroupErrorDiscardedMsgCount: 1
          noLocalDeliveryDiscardedMsgCount: 7
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 0
          maxBindCount: 1
          owner: owner
          maxTtl: 6
          replaySuccessCount: 4
          spooledByteCount: 5
          averageRxMsgRate: 7
          permission: no-access
          maxTtlExpiredToDmqFailedMsgCount: 8
          redeliveredMsgCount: 3
          maxRedeliveryCount: 3
          msgSpoolPeakUsage: 3
          virtualRouter: virtualRouter
          deletedMsgCount: 1
          ingressEnabled: true
          invalidSelectorBindFailureCount: 5
          spooledMsgCount: 4
          queueName: queueName
          inProgressAckMsgCount: 4
          maxMsgSpoolUsage: 6
          lowPriorityMsgCongestionDiscardedMsgCount: 6
        collections:
          msgs:
            count: 0
          priorities:
            count: 6
          subscriptions:
            count: 1
          txFlows:
            count: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          txFlowsUri: txFlowsUri
          subscriptionsUri: subscriptionsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnQueueCollections'
        data:
          $ref: '#/components/schemas/MsgVpnQueue'
        links:
          $ref: '#/components/schemas/MsgVpnQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueSubscription:
      example:
        queueName: queueName
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
        createdByManagement: true
      properties:
        createdByManagement:
          description: Indicates whether the Subscription topic was created by a management
            API (CLI or SEMP).
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        queueName:
          description: The name of the Queue.
          type: string
        subscriptionTopic:
          description: The topic of the Subscription.
          type: string
      type: object
    MsgVpnQueueSubscriptionCollections:
      type: object
    MsgVpnQueueSubscriptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Subscription object.
          type: string
      type: object
    MsgVpnQueueSubscriptionResponse:
      example:
        data:
          queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          createdByManagement: true
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnQueueSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnQueueSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueSubscriptionsResponse:
      example:
        data:
        - queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          createdByManagement: true
        - queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          createdByManagement: true
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscriptionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscription'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscriptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueTemplate:
      example:
        maxBindCount: 0
        eventMsgSpoolUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        redeliveryEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        rejectLowPriorityMsgLimit: 7
        maxRedeliveryCount: 5
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        queueNameFilter: queueNameFilter
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        queueTemplateName: queueTemplateName
        respectMsgPriorityEnabled: true
        durabilityOverride: none
        eventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        maxMsgSpoolUsage: 5
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
      properties:
        accessType:
          description: |
            The access type for delivering messages to consumer flows. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
          type: string
        consumerAckPropagationEnabled:
          description: Indicates whether the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN is enabled.
          type: boolean
        deadMsgQueue:
          description: The name of the Dead Message Queue (DMQ).
          type: string
        durabilityOverride:
          description: |
            Controls the durability of queues created from this template. If non-durable, the created queue will be non-durable, regardless of the specified durability. If none, the created queue will have the requested durability. The allowed values and their meaning are:

            <pre>
            "none" - The durability of the endpoint will be as requested on create.
            "non-durable" - The durability of the created queue will be non-durable, regardless of what was requested.
            </pre>
          enum:
          - none
          - non-durable
          type: string
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxBindCount:
          description: The maximum number of consumer flows that can bind.
          format: int64
          type: integer
        maxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow.
          format: int64
          type: integer
        maxMsgSize:
          description: The maximum message size allowed, in bytes (B).
          format: int32
          type: integer
        maxMsgSpoolUsage:
          description: The maximum message spool usage allowed, in megabytes (MB).
            A value of 0 only allows spooling of the last message received and disables
            quota checking.
          format: int64
          type: integer
        maxRedeliveryCount:
          description: The maximum number of message redelivery attempts that will
            occur prior to the message being discarded or moved to the DMQ. A value
            of 0 means to retry forever.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time in seconds a message can stay in a Queue when
            `respectTtlEnabled` is `"true"`. A message expires when the lesser of
            the sender assigned time-to-live (TTL) in the message and the `maxTtl`
            configured for the Queue, is exceeded. A value of 0 disables expiry.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        permission:
          description: |
            The permission level for all consumers, excluding the owner. The allowed values and their meaning are:

            <pre>
            "no-access" - Disallows all access.
            "read-only" - Read-only access to the messages.
            "consume" - Consume (read and remove) messages.
            "modify-topic" - Consume messages or modify the topic/selector.
            "delete" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.
            </pre>
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
          type: string
        queueNameFilter:
          description: 'A wildcardable pattern used to determine which Queues use
            settings from this Template. Two different wildcards are supported: *
            and >. Similar to topic filters or subscription patterns, a > matches
            anything (but only when used at the end), and a * matches zero or more
            characters but never a slash (/). A > is only a wildcard when used at
            the end, after a /. A * is only allowed at the end, after a slash (/).'
          type: string
        queueTemplateName:
          description: The name of the Queue Template.
          type: string
        redeliveryEnabled:
          description: Enable or disable message redelivery. When enabled, the number
            of redelivery attempts is controlled by maxRedeliveryCount. When disabled,
            the message will never be delivered from the queue more than once. Available
            since 2.18.
          type: boolean
        rejectLowPriorityMsgEnabled:
          description: Indicates whether the checking of low priority messages against
            the `rejectLowPriorityMsgLimit` is enabled.
          type: boolean
        rejectLowPriorityMsgLimit:
          description: The number of messages of any priority above which low priority
            messages are not admitted but higher priority messages are allowed.
          format: int64
          type: integer
        rejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs prevent the message from being delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
          type: string
        respectMsgPriorityEnabled:
          description: Indicates whether message priorities are respected. When enabled,
            messages are delivered in priority order, from 9 (highest) to 0 (lowest).
          type: boolean
        respectTtlEnabled:
          description: Indicates whether the the time-to-live (TTL) for messages is
            respected. When enabled, expired messages are discarded or moved to the
            DMQ.
          type: boolean
      type: object
    MsgVpnQueueTemplateCollections:
      type: object
    MsgVpnQueueTemplateLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Template object.
          type: string
      type: object
    MsgVpnQueueTemplateResponse:
      example:
        data:
          maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnQueueTemplate'
        links:
          $ref: '#/components/schemas/MsgVpnQueueTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueTemplatesResponse:
      example:
        data:
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplateCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplate'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplateLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueTxFlow:
      example:
        clientName: clientName
        transportRetransmitMsgCount: 7
        selectorExaminedMsgCount: 1
        noLocalDelivery: true
        selectorNotMatchedMsgCount: 1
        windowSize: 9
        windowClosedCount: 5
        usedWindowSize: 4
        bindTime: 1
        activityState: activityState
        cutThroughAckedMsgCount: 5
        selector: selector
        msgVpnName: msgVpnName
        unackedMsgCount: 1
        activationTime: 6
        flowId: 5
        lowestAckPendingMsgId: 3
        storeAndForwardAckedMsgCount: 6
        ackedMsgCount: 0
        lastAckedMsgId: 7
        sessionName: sessionName
        highestAckPendingMsgId: 2
        redeliveredMsgCount: 4
        lastSelectorExaminedMsgId: 9
        activityUpdateState: activityUpdateState
        queueName: queueName
        deliveryState: deliveryState
        consumerRedeliveryRequestAllowed: true
        maxUnackedMsgsExceededMsgCount: 2
        redeliveryRequestCount: 7
        selectorMatchedMsgCount: 1
      properties:
        ackedMsgCount:
          description: The number of guaranteed messages delivered and acknowledged
            by the consumer.
          format: int64
          type: integer
        activationTime:
          description: The timestamp of when the bound Flow became active. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        activityState:
          description: |
            The activity state of the Flow. The allowed values and their meaning are:

            <pre>
            "active-browser" - The Flow is active as a browser.
            "active-consumer" - The Flow is active as a consumer.
            "inactive" - The Flow is inactive.
            </pre>
          type: string
        activityUpdateState:
          description: |
            The state of updating the consumer with the Flow activity. The allowed values and their meaning are:

            <pre>
            "in-progress" - The Flow is in the process of updating the client with its activity state.
            "synchronized" - The Flow has updated the client with its activity state.
            "not-requested" - The Flow has not been requested by the client to provide activity updates.
            </pre>
          type: string
        bindTime:
          description: The timestamp of when the Flow bound to the Queue. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        clientName:
          description: The name of the Client.
          type: string
        consumerRedeliveryRequestAllowed:
          description: Indicates whether redelivery requests can be received as negative
            acknowledgements (NACKs) from the consumer. Applicable only to REST consumers.
          type: boolean
        cutThroughAckedMsgCount:
          description: The number of guaranteed messages that used cut-through delivery
            and are acknowledged by the consumer.
          format: int64
          type: integer
        deliveryState:
          description: |
            The delivery state of the Flow. The allowed values and their meaning are:

            <pre>
            "closed" - The Flow is unbound.
            "opened" - The Flow is bound but inactive.
            "unbinding" - The Flow received an unbind request.
            "handshaking" - The Flow is handshaking to become active.
            "deliver-cut-through" - The Flow is streaming messages using direct+guaranteed delivery.
            "deliver-from-input-stream" - The Flow is streaming messages using guaranteed delivery.
            "deliver-from-memory" - The Flow throttled causing message delivery from memory (RAM).
            "deliver-from-spool" - The Flow stalled causing message delivery from spool (ADB or disk).
            </pre>
          type: string
        flowId:
          description: The identifier (ID) of the Flow.
          format: int64
          type: integer
        highestAckPendingMsgId:
          description: The highest identifier (ID) of message transmitted and waiting
            for acknowledgement.
          format: int64
          type: integer
        lastAckedMsgId:
          description: The identifier (ID) of the last message transmitted and acknowledged
            by the consumer.
          format: int64
          type: integer
        lastSelectorExaminedMsgId:
          description: The identifier (ID) of the last message examined by the Flow
            selector.
          format: int64
          type: integer
        lowestAckPendingMsgId:
          description: The lowest identifier (ID) of message transmitted and waiting
            for acknowledgement.
          format: int64
          type: integer
        maxUnackedMsgsExceededMsgCount:
          description: The number of guaranteed messages that exceeded the maximum
            number of delivered unacknowledged messages.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        noLocalDelivery:
          description: Indicates whether not to deliver messages to a consumer that
            published them.
          type: boolean
        queueName:
          description: The name of the Queue.
          type: string
        redeliveredMsgCount:
          description: The number of guaranteed messages that were redelivered.
          format: int64
          type: integer
        redeliveryRequestCount:
          description: The number of consumer requests via negative acknowledgements
            (NACKs) to redeliver guaranteed messages.
          format: int64
          type: integer
        selector:
          description: The value of the Flow selector.
          type: string
        selectorExaminedMsgCount:
          description: The number of guaranteed messages examined by the Flow selector.
          format: int64
          type: integer
        selectorMatchedMsgCount:
          description: The number of guaranteed messages for which the Flow selector
            matched.
          format: int64
          type: integer
        selectorNotMatchedMsgCount:
          description: The number of guaranteed messages for which the Flow selector
            did not match.
          format: int64
          type: integer
        sessionName:
          description: The name of the Transacted Session for the Flow.
          type: string
        storeAndForwardAckedMsgCount:
          description: The number of guaranteed messages that used store and forward
            delivery and are acknowledged by the consumer.
          format: int64
          type: integer
        transportRetransmitMsgCount:
          description: The number of guaranteed messages that were retransmitted at
            the transport layer as part of a single delivery attempt. Available since
            2.18.
          format: int64
          type: integer
        unackedMsgCount:
          description: The number of guaranteed messages delivered but not yet acknowledged
            by the consumer.
          format: int64
          type: integer
        usedWindowSize:
          description: The number of guaranteed messages using the available window
            size.
          format: int64
          type: integer
        windowClosedCount:
          description: The number of times the window for guaranteed messages was
            filled and closed before an acknowledgement was received.
          format: int64
          type: integer
        windowSize:
          description: The number of outstanding guaranteed messages that can be transmitted
            over the Flow before an acknowledgement is received.
          format: int64
          type: integer
      type: object
    MsgVpnQueueTxFlowCollections:
      type: object
    MsgVpnQueueTxFlowLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Transmit Flow object.
          type: string
      type: object
    MsgVpnQueueTxFlowResponse:
      example:
        data:
          clientName: clientName
          transportRetransmitMsgCount: 7
          selectorExaminedMsgCount: 1
          noLocalDelivery: true
          selectorNotMatchedMsgCount: 1
          windowSize: 9
          windowClosedCount: 5
          usedWindowSize: 4
          bindTime: 1
          activityState: activityState
          cutThroughAckedMsgCount: 5
          selector: selector
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          activationTime: 6
          flowId: 5
          lowestAckPendingMsgId: 3
          storeAndForwardAckedMsgCount: 6
          ackedMsgCount: 0
          lastAckedMsgId: 7
          sessionName: sessionName
          highestAckPendingMsgId: 2
          redeliveredMsgCount: 4
          lastSelectorExaminedMsgId: 9
          activityUpdateState: activityUpdateState
          queueName: queueName
          deliveryState: deliveryState
          consumerRedeliveryRequestAllowed: true
          maxUnackedMsgsExceededMsgCount: 2
          redeliveryRequestCount: 7
          selectorMatchedMsgCount: 1
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnQueueTxFlow'
        links:
          $ref: '#/components/schemas/MsgVpnQueueTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueTxFlowsResponse:
      example:
        data:
        - clientName: clientName
          transportRetransmitMsgCount: 7
          selectorExaminedMsgCount: 1
          noLocalDelivery: true
          selectorNotMatchedMsgCount: 1
          windowSize: 9
          windowClosedCount: 5
          usedWindowSize: 4
          bindTime: 1
          activityState: activityState
          cutThroughAckedMsgCount: 5
          selector: selector
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          activationTime: 6
          flowId: 5
          lowestAckPendingMsgId: 3
          storeAndForwardAckedMsgCount: 6
          ackedMsgCount: 0
          lastAckedMsgId: 7
          sessionName: sessionName
          highestAckPendingMsgId: 2
          redeliveredMsgCount: 4
          lastSelectorExaminedMsgId: 9
          activityUpdateState: activityUpdateState
          queueName: queueName
          deliveryState: deliveryState
          consumerRedeliveryRequestAllowed: true
          maxUnackedMsgsExceededMsgCount: 2
          redeliveryRequestCount: 7
          selectorMatchedMsgCount: 1
        - clientName: clientName
          transportRetransmitMsgCount: 7
          selectorExaminedMsgCount: 1
          noLocalDelivery: true
          selectorNotMatchedMsgCount: 1
          windowSize: 9
          windowClosedCount: 5
          usedWindowSize: 4
          bindTime: 1
          activityState: activityState
          cutThroughAckedMsgCount: 5
          selector: selector
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          activationTime: 6
          flowId: 5
          lowestAckPendingMsgId: 3
          storeAndForwardAckedMsgCount: 6
          ackedMsgCount: 0
          lastAckedMsgId: 7
          sessionName: sessionName
          highestAckPendingMsgId: 2
          redeliveredMsgCount: 4
          lastSelectorExaminedMsgId: 9
          activityUpdateState: activityUpdateState
          queueName: queueName
          deliveryState: deliveryState
          consumerRedeliveryRequestAllowed: true
          maxUnackedMsgsExceededMsgCount: 2
          redeliveryRequestCount: 7
          selectorMatchedMsgCount: 1
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnQueueTxFlowCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueueTxFlow'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueueTxFlowLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueuesResponse:
      example:
        data:
        - averageRxByteRate: 2
          maxTtlExpiredDiscardedMsgCount: 4
          txMsgRate: 4
          redeliveryEnabled: true
          replicationActiveAckPropTxMsgCount: 7
          maxMsgSizeExceededDiscardedMsgCount: 5
          maxTtlExceededDiscardedMsgCount: 0
          txUnackedMsgCount: 3
          maxMsgSize: 6
          rxMsgRate: 7
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayFailureCount: 0
          respectMsgPriorityEnabled: true
          bindSuccessCount: 4
          networkTopic: networkTopic
          replicationStandbyRxMsgCount: 9
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          averageTxMsgRate: 3
          lastReplayFailureTime: 9
          bindRequestCount: 2
          lastSpooledMsgId: 9
          lowestMsgId: 6
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayedTxMsgCount: 4
          egressEnabled: true
          replayStartCount: 6
          respectTtlEnabled: true
          clientProfileDeniedDiscardedMsgCount: 7
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 6
          lastReplayStartTime: 6
          replicationStandbyAckPropRxMsgCount: 9
          msgSpoolUsage: 3
          lastReplayedMsgTxTime: 8
          maxTtlExpiredToDmqMsgCount: 7
          maxRedeliveryExceededToDmqMsgCount: 7
          txSelector: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          otherBindFailureCount: 5
          rxByteRate: 0
          alreadyBoundBindFailureCount: 5
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 1
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          highestAckedMsgId: 7
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          transportRetransmitMsgCount: 6
          lowestAckedMsgId: 3
          maxMsgSpoolUsageExceededDiscardedMsgCount: 3
          maxRedeliveryExceededDiscardedMsgCount: 7
          rejectLowPriorityMsgLimit: 4
          txByteRate: 8
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          durable: true
          replayedAckedMsgCount: 1
          averageTxByteRate: 9
          replayState: replayState
          maxBindCountExceededBindFailureCount: 2
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 9
          destinationGroupErrorDiscardedMsgCount: 1
          noLocalDeliveryDiscardedMsgCount: 7
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 0
          maxBindCount: 1
          owner: owner
          maxTtl: 6
          replaySuccessCount: 4
          spooledByteCount: 5
          averageRxMsgRate: 7
          permission: no-access
          maxTtlExpiredToDmqFailedMsgCount: 8
          redeliveredMsgCount: 3
          maxRedeliveryCount: 3
          msgSpoolPeakUsage: 3
          virtualRouter: virtualRouter
          deletedMsgCount: 1
          ingressEnabled: true
          invalidSelectorBindFailureCount: 5
          spooledMsgCount: 4
          queueName: queueName
          inProgressAckMsgCount: 4
          maxMsgSpoolUsage: 6
          lowPriorityMsgCongestionDiscardedMsgCount: 6
        - averageRxByteRate: 2
          maxTtlExpiredDiscardedMsgCount: 4
          txMsgRate: 4
          redeliveryEnabled: true
          replicationActiveAckPropTxMsgCount: 7
          maxMsgSizeExceededDiscardedMsgCount: 5
          maxTtlExceededDiscardedMsgCount: 0
          txUnackedMsgCount: 3
          maxMsgSize: 6
          rxMsgRate: 7
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayFailureCount: 0
          respectMsgPriorityEnabled: true
          bindSuccessCount: 4
          networkTopic: networkTopic
          replicationStandbyRxMsgCount: 9
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          averageTxMsgRate: 3
          lastReplayFailureTime: 9
          bindRequestCount: 2
          lastSpooledMsgId: 9
          lowestMsgId: 6
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayedTxMsgCount: 4
          egressEnabled: true
          replayStartCount: 6
          respectTtlEnabled: true
          clientProfileDeniedDiscardedMsgCount: 7
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 6
          lastReplayStartTime: 6
          replicationStandbyAckPropRxMsgCount: 9
          msgSpoolUsage: 3
          lastReplayedMsgTxTime: 8
          maxTtlExpiredToDmqMsgCount: 7
          maxRedeliveryExceededToDmqMsgCount: 7
          txSelector: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          otherBindFailureCount: 5
          rxByteRate: 0
          alreadyBoundBindFailureCount: 5
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 1
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          highestAckedMsgId: 7
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          transportRetransmitMsgCount: 6
          lowestAckedMsgId: 3
          maxMsgSpoolUsageExceededDiscardedMsgCount: 3
          maxRedeliveryExceededDiscardedMsgCount: 7
          rejectLowPriorityMsgLimit: 4
          txByteRate: 8
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          durable: true
          replayedAckedMsgCount: 1
          averageTxByteRate: 9
          replayState: replayState
          maxBindCountExceededBindFailureCount: 2
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 9
          destinationGroupErrorDiscardedMsgCount: 1
          noLocalDeliveryDiscardedMsgCount: 7
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 0
          maxBindCount: 1
          owner: owner
          maxTtl: 6
          replaySuccessCount: 4
          spooledByteCount: 5
          averageRxMsgRate: 7
          permission: no-access
          maxTtlExpiredToDmqFailedMsgCount: 8
          redeliveredMsgCount: 3
          maxRedeliveryCount: 3
          msgSpoolPeakUsage: 3
          virtualRouter: virtualRouter
          deletedMsgCount: 1
          ingressEnabled: true
          invalidSelectorBindFailureCount: 5
          spooledMsgCount: 4
          queueName: queueName
          inProgressAckMsgCount: 4
          maxMsgSpoolUsage: 6
          lowPriorityMsgCongestionDiscardedMsgCount: 6
        collections:
        - msgs:
            count: 0
          priorities:
            count: 6
          subscriptions:
            count: 1
          txFlows:
            count: 5
        - msgs:
            count: 0
          priorities:
            count: 6
          subscriptions:
            count: 1
          txFlows:
            count: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - txFlowsUri: txFlowsUri
          subscriptionsUri: subscriptionsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
        - txFlowsUri: txFlowsUri
          subscriptionsUri: subscriptionsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnQueueCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueue'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueueLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRate:
      description: The rates for the Message VPN. Deprecated since 2.13. All attributes
        in this object have been moved to the MsgVpn object.
      example:
        tlsAverageTxByteRate: 0
        averageRxByteRate: 7
        txMsgRate: 2
        averageTxByteRate: 3
        tlsRxByteRate: 0
        tlsTxByteRate: 7
        averageRxMsgRate: 0
        tlsAverageRxByteRate: 4
        rxByteRate: 3
        rxMsgRate: 8
        averageTxMsgRate: 2
        txByteRate: 4
      properties:
        averageRxByteRate:
          description: The one minute average of the message rate received by the
            Message VPN, in bytes per second (B/sec). Deprecated since 2.13. This
            attribute has been moved to the MsgVpn object.
          format: int64
          type: integer
        averageRxMsgRate:
          description: The one minute average of the message rate received by the
            Message VPN, in messages per second (msg/sec). Deprecated since 2.13.
            This attribute has been moved to the MsgVpn object.
          format: int64
          type: integer
        averageTxByteRate:
          description: The one minute average of the message rate transmitted by the
            Message VPN, in bytes per second (B/sec). Deprecated since 2.13. This
            attribute has been moved to the MsgVpn object.
          format: int64
          type: integer
        averageTxMsgRate:
          description: The one minute average of the message rate transmitted by the
            Message VPN, in messages per second (msg/sec). Deprecated since 2.13.
            This attribute has been moved to the MsgVpn object.
          format: int64
          type: integer
        rxByteRate:
          description: The current message rate received by the Message VPN, in bytes
            per second (B/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
          type: integer
        rxMsgRate:
          description: The current message rate received by the Message VPN, in messages
            per second (msg/sec). Deprecated since 2.13. This attribute has been moved
            to the MsgVpn object.
          format: int64
          type: integer
        tlsAverageRxByteRate:
          description: The one minute average of the TLS message rate received by
            the Message VPN, in bytes per second (B/sec). Deprecated since 2.13. This
            attribute has been moved to the MsgVpn object.
          format: int64
          type: integer
        tlsAverageTxByteRate:
          description: The one minute average of the TLS message rate transmitted
            by the Message VPN, in bytes per second (B/sec). Deprecated since 2.13.
            This attribute has been moved to the MsgVpn object.
          format: int64
          type: integer
        tlsRxByteRate:
          description: The current TLS message rate received by the Message VPN, in
            bytes per second (B/sec). Deprecated since 2.13. This attribute has been
            moved to the MsgVpn object.
          format: int64
          type: integer
        tlsTxByteRate:
          description: The current TLS message rate transmitted by the Message VPN,
            in bytes per second (B/sec). Deprecated since 2.13. This attribute has
            been moved to the MsgVpn object.
          format: int64
          type: integer
        txByteRate:
          description: The current message rate transmitted by the Message VPN, in
            bytes per second (B/sec). Deprecated since 2.13. This attribute has been
            moved to the MsgVpn object.
          format: int64
          type: integer
        txMsgRate:
          description: The current message rate transmitted by the Message VPN, in
            messages per second (msg/sec). Deprecated since 2.13. This attribute has
            been moved to the MsgVpn object.
          format: int64
          type: integer
      type: object
    MsgVpnReplayLog:
      example:
        ingressEnabled: true
        replayLogName: replayLogName
        msgSpoolUsage: 1
        maxSpoolUsage: 6
        egressEnabled: true
        msgVpnName: msgVpnName
      properties:
        egressEnabled:
          description: Indicates whether the transmission of messages from the Replay
            Log is enabled.
          type: boolean
        ingressEnabled:
          description: Indicates whether the reception of messages to the Replay Log
            is enabled.
          type: boolean
        maxSpoolUsage:
          description: The maximum spool usage allowed by the Replay Log, in megabytes
            (MB). If this limit is exceeded, old messages will be trimmed.
          format: int64
          type: integer
        msgSpoolUsage:
          description: The spool usage of the Replay Log, in bytes (B).
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        replayLogName:
          description: The name of the Replay Log.
          type: string
      type: object
    MsgVpnReplayLogCollections:
      example:
        msgs:
          count: 0
      properties:
        msgs:
          $ref: '#/components/schemas/MsgVpnReplayLogCollectionsMsgs'
      type: object
    MsgVpnReplayLogCollectionsMsgs:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the msgs collection.
          format: int64
          type: integer
      type: object
    MsgVpnReplayLogLinks:
      example:
        uri: uri
        msgsUri: msgsUri
      properties:
        msgsUri:
          description: The URI of this Replay Log's collection of Message objects.
          type: string
        uri:
          description: The URI of this Replay Log object.
          type: string
      type: object
    MsgVpnReplayLogMsg:
      example:
        replayLogName: replayLogName
        sequenceNumber: 2
        publisherId: 5
        attachmentSize: 0
        dmqEligible: true
        spooledTime: 7
        contentSize: 6
        msgId: 1
        msgVpnName: msgVpnName
        replicationGroupMsgId: replicationGroupMsgId
        priority: 5
      properties:
        attachmentSize:
          description: The size of the message attachment, in bytes (B).
          format: int64
          type: integer
        contentSize:
          description: The size of the message content, in bytes (B).
          format: int64
          type: integer
        dmqEligible:
          description: Indicates whether the message is eligible for the Dead Message
            Queue (DMQ).
          type: boolean
        msgId:
          description: The identifier (ID) of the message.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        priority:
          description: The priority level of the message.
          format: int32
          type: integer
        publisherId:
          description: The identifier (ID) of the message publisher.
          format: int64
          type: integer
        replayLogName:
          description: The name of the Replay Log.
          type: string
        replicationGroupMsgId:
          description: An ID that uniquely identifies this Message within this replication
            group. Available since 2.21.
          type: string
        sequenceNumber:
          description: The sequence number assigned to the message. Applicable only
            to messages received on sequenced topics.
          format: int64
          type: integer
        spooledTime:
          description: The timestamp of when the message was spooled in the Replay
            Log. This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
      type: object
    MsgVpnReplayLogMsgCollections:
      type: object
    MsgVpnReplayLogMsgLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Message object.
          type: string
      type: object
    MsgVpnReplayLogMsgResponse:
      example:
        data:
          replayLogName: replayLogName
          sequenceNumber: 2
          publisherId: 5
          attachmentSize: 0
          dmqEligible: true
          spooledTime: 7
          contentSize: 6
          msgId: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          priority: 5
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnReplayLogMsg'
        links:
          $ref: '#/components/schemas/MsgVpnReplayLogMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplayLogMsgsResponse:
      example:
        data:
        - replayLogName: replayLogName
          sequenceNumber: 2
          publisherId: 5
          attachmentSize: 0
          dmqEligible: true
          spooledTime: 7
          contentSize: 6
          msgId: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          priority: 5
        - replayLogName: replayLogName
          sequenceNumber: 2
          publisherId: 5
          attachmentSize: 0
          dmqEligible: true
          spooledTime: 7
          contentSize: 6
          msgId: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          priority: 5
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogMsgCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogMsg'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogMsgLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplayLogResponse:
      example:
        data:
          ingressEnabled: true
          replayLogName: replayLogName
          msgSpoolUsage: 1
          maxSpoolUsage: 6
          egressEnabled: true
          msgVpnName: msgVpnName
        collections:
          msgs:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
          msgsUri: msgsUri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnReplayLogCollections'
        data:
          $ref: '#/components/schemas/MsgVpnReplayLog'
        links:
          $ref: '#/components/schemas/MsgVpnReplayLogLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplayLogsResponse:
      example:
        data:
        - ingressEnabled: true
          replayLogName: replayLogName
          msgSpoolUsage: 1
          maxSpoolUsage: 6
          egressEnabled: true
          msgVpnName: msgVpnName
        - ingressEnabled: true
          replayLogName: replayLogName
          msgSpoolUsage: 1
          maxSpoolUsage: 6
          egressEnabled: true
          msgVpnName: msgVpnName
        collections:
        - msgs:
            count: 0
        - msgs:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
          msgsUri: msgsUri
        - uri: uri
          msgsUri: msgsUri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnReplayLog'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplicatedTopic:
      example:
        replicationMode: sync
        replicatedTopic: replicatedTopic
        msgVpnName: msgVpnName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        replicatedTopic:
          description: The topic for applying replication. Published messages matching
            this topic will be replicated to the standby site.
          type: string
        replicationMode:
          description: |
            The replication mode for the Replicated Topic. The allowed values and their meaning are:

            <pre>
            "sync" - Messages are acknowledged when replicated (spooled remotely).
            "async" - Messages are acknowledged when pending replication (spooled locally).
            </pre>
          enum:
          - sync
          - async
          type: string
      type: object
    MsgVpnReplicatedTopicCollections:
      type: object
    MsgVpnReplicatedTopicLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Replicated Topic object.
          type: string
      type: object
    MsgVpnReplicatedTopicResponse:
      example:
        data:
          replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        links:
          $ref: '#/components/schemas/MsgVpnReplicatedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplicatedTopicsResponse:
      example:
        data:
        - replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        - replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopicCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopic'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopicLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnResponse:
      example:
        data:
          replicationRemoteBridgeName: replicationRemoteBridgeName
          averageRxByteRate: 9
          txUncompressedByteRate: 3
          serviceRestIncomingPlainTextEnabled: true
          txCompressedByteRate: 4
          discardedRxMsgCount: 9
          replicationAckPropagationIntervalMsgCount: 9
          state: state
          serviceWebPlainTextUp: true
          replicationStandbyAckPropOutOfSeqRxMsgCount: 1
          restTlsServerCertValidateDateEnabled: true
          serviceWebTlsFailureReason: serviceWebTlsFailureReason
          replicationActivePromotedQueuedMsgCount: 9
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 6
          authenticationClientCertUsernameSource: certificate-thumbprint
          configSyncLocalRole: configSyncLocalRole
          authenticationClientCertMaxChainDepth: 8
          msgSpoolUsage: 5
          serviceMqttWebSocketEnabled: true
          serviceWebPlainTextFailureReason: serviceWebPlainTextFailureReason
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceMqttWebSocketFailureReason: serviceMqttWebSocketFailureReason
          authenticationClientCertEnabled: true
          averageRxCompressedByteRate: 6
          serviceSmfPlainTextFailureReason: serviceSmfPlainTextFailureReason
          serviceWebTlsUp: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          serviceRestIncomingPlainTextFailureReason: serviceRestIncomingPlainTextFailureReason
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          serviceMqttPlainTextCompressed: true
          eventPublishTopicFormatSmfEnabled: true
          maxEffectiveEndpointCount: 3
          authenticationBasicProfileName: authenticationBasicProfileName
          replicationBridgeBoundToQueue: true
          serviceRestIncomingMaxConnectionCount: 7
          serviceAmqpTlsListenPort: 2
          averageTxByteRate: 1
          eventServiceAmqpConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceRestMode: gateway
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          replicationBridgeName: replicationBridgeName
          maxSubscriptionCount: 3
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 9
          replicationBridgeUp: true
          controlTxMsgCount: 0
          serviceAmqpMaxConnectionCount: 4
          serviceMqttTlsUp: true
          maxEgressFlowCount: 4
          serviceMqttWebSocketListenPort: 0
          loginTxMsgCount: 8
          serviceWebTlsEnabled: true
          replicationStandbyTransactionRequestFailureCount: 7
          eventIngressMsgRateThreshold:
            setValue: 5
            clearValue: 7
          replicationStandbyTransactionRequestCount: 7
          eventPublishSubscriptionMode: "off"
          eventConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 4
          serviceRestIncomingTlsListenPort: 4
          dataRxByteCount: 4
          tlsAverageTxByteRate: 6
          rxCompressedByteRate: 2
          dataTxMsgCount: 0
          eventPublishMsgVpnEnabled: true
          dmrEnabled: true
          txCompressionRatio: txCompressionRatio
          msgVpnName: msgVpnName
          eventEndpointCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replicationStandbyTransactionRequestSuccessCount: 9
          sempOverMsgBusAdminEnabled: true
          eventServiceRestIncomingConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfMaxConnectionCount: 0
          tlsRxByteCount: 0
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          configSyncLocalState: configSyncLocalState
          replicationStandbyReconcileRequestTxMsgCount: 9
          rxByteCount: 4
          replicationQueueMaxMsgSpoolUsage: 3
          eventServiceMqttConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfPlainTextUp: true
          sempOverMsgBusAdminClientEnabled: true
          averageTxCompressedByteRate: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 0
          serviceSmfTlsUp: true
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          replicationActiveMateFlowNotCongestedPeakTime: 6
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          replicationActiveSyncIneligiblePeakTime: 3
          serviceAmqpPlainTextListenPort: 8
          systemManager: true
          authenticationClientCertValidateDateEnabled: true
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          serviceRestIncomingTlsFailureReason: serviceRestIncomingTlsFailureReason
          configSyncLocalTimeInState: 6
          eventLogTag: eventLogTag
          rate:
            tlsAverageTxByteRate: 0
            averageRxByteRate: 7
            txMsgRate: 2
            averageTxByteRate: 3
            tlsRxByteRate: 0
            tlsTxByteRate: 7
            averageRxMsgRate: 0
            tlsAverageRxByteRate: 4
            rxByteRate: 3
            rxMsgRate: 8
            averageTxMsgRate: 2
            txByteRate: 4
          distributedCacheManagementEnabled: true
          discardedTxMsgCount: 0
          maxEffectiveTxFlowCount: 6
          serviceRestIncomingTlsCompressed: true
          msgReplayInitializingCount: 8
          bridgingTlsServerCertValidateNameEnabled: true
          rxMsgCount: 9
          replicationActiveSyncQueuedMsgCount: 1
          subscriptionExportProgress: 9
          tlsRxByteRate: 4
          counter:
            loginRxMsgCount: 3
            msgSpoolRxMsgCount: 0
            controlTxMsgCount: 4
            tlsRxByteCount: 4
            controlRxByteCount: 7
            tlsTxByteCount: 1
            dataRxByteCount: 8
            dataRxMsgCount: 7
            controlRxMsgCount: 6
            loginTxMsgCount: 4
            controlTxByteCount: 0
            dataTxByteCount: 3
            msgSpoolTxMsgCount: 6
            dataTxMsgCount: 3
            discardedRxMsgCount: 7
            discardedTxMsgCount: 5
          serviceAmqpPlainTextFailureReason: serviceAmqpPlainTextFailureReason
          averageTxUncompressedByteRate: 6
          controlTxByteCount: 7
          rxUncompressedByteRate: 6
          mqttRetainMaxMemory: 0
          msgSpoolMsgCount: 3
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          msgReplayFailedCount: 5
          eventIngressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceMqttMaxConnectionCount: 6
          txMsgRate: 3
          authorizationProfileName: authorizationProfileName
          serviceMqttTlsFailureReason: serviceMqttTlsFailureReason
          replicationActiveReconcileRequestRxMsgCount: 1
          serviceAmqpPlainTextCompressed: true
          serviceMqttPlainTextFailureReason: serviceMqttPlainTextFailureReason
          serviceMqttWebSocketCompressed: true
          replicationActiveSyncQueuedAsAsyncMsgCount: 5
          replicationBridgeEgressFlowWindowSize: 5
          restTlsServerCertMaxChainDepth: 1
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          bridgingTlsServerCertValidateDateEnabled: true
          maxEffectiveSubscriptionCount: 2
          authorizationType: ldap
          replicationStandbyRxMsgCount: 7
          serviceMqttTlsWebSocketCompressed: true
          msgSpoolRxMsgCount: 3
          bridgingTlsServerCertMaxChainDepth: 5
          replicationBridgeCompressedDataEnabled: true
          rxCompressedByteCount: 8
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          averageRxUncompressedByteRate: 6
          eventTransactedSessionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          eventSubscriptionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceMqttPlainTextListenPort: 0
          serviceMqttWebSocketUp: true
          dataTxByteCount: 9
          failureReason: failureReason
          serviceRestIncomingAuthorizationHeaderHandling: drop
          txUncompressedByteCount: 5
          rxByteRate: 3
          loginRxMsgCount: 6
          serviceRestIncomingPlainTextCompressed: true
          replicationQueueBound: true
          controlRxMsgCount: 3
          serviceMqttTlsWebSocketUp: true
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationActiveMateFlowCongestedPeakTime: 4
          txByteRate: 6
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          sempOverMsgBusEnabled: true
          maxTransactionCount: 8
          serviceMqttTlsListenPort: 2
          rxUncompressedByteCount: 8
          serviceRestIncomingTlsEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          tlsAverageRxByteRate: 7
          authenticationOauthEnabled: true
          tlsTxByteCount: 0
          averageRxMsgRate: 3
          dataRxMsgCount: 7
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 8
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          serviceAmqpTlsUp: true
          configSyncLocalLastResult: configSyncLocalLastResult
          replicationActiveLocallyConsumedMsgCount: 6
          txByteCount: 1
          replicationActiveAsyncQueuedMsgCount: 2
          serviceMqttTlsEnabled: true
          maxEffectiveTransactionCount: 8
          serviceMqttPlainTextUp: true
          serviceMqttTlsWebSocketFailureReason: serviceMqttTlsWebSocketFailureReason
          serviceSmfTlsFailureReason: serviceSmfTlsFailureReason
          replicationActiveAckPropTxMsgCount: 0
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          rxMsgRate: 4
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          txMsgCount: 2
          averageTxMsgRate: 6
          eventEgressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceAmqpTlsCompressed: true
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replicationActiveTransitionToSyncIneligibleCount: 4
          configSyncLocalKey: configSyncLocalKey
          controlRxByteCount: 3
          jndiEnabled: true
          maxEffectiveTransactedSessionCount: 1
          eventPublishClientEnabled: true
          replicationSyncEligible: true
          replicationActiveSyncEligiblePeakTime: 1
          maxEffectiveRxFlowCount: 0
          tlsAllowDowngradeToPlainTextEnabled: true
          replicationStandbyAckPropRxMsgCount: 3
          maxConnectionCount: 4
          msgReplayActiveCount: 5
          eventServiceSmfConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsTxByteRate: 7
          serviceAmqpPlainTextUp: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 7
          replicationBridgeRetryDelay: 5
          txCompressedByteCount: 2
          serviceAmqpTlsFailureReason: serviceAmqpTlsFailureReason
          alias: alias
          serviceMqttTlsWebSocketListenPort: 5
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          rxCompressionRatio: rxCompressionRatio
          maxIngressFlowCount: 9
          serviceMqttTlsCompressed: true
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 9
          msgReplayPendingCompleteCount: 7
          serviceRestIncomingTlsUp: true
          serviceRestIncomingPlainTextUp: true
          msgSpoolTxMsgCount: 9
          replicationRemoteBridgeUp: true
          maxMsgSpoolUsage: 1
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
        collections:
          restDeliveryPoints:
            count: 5
          clients:
            count: 7
          jndiConnectionFactories:
            count: 4
          clientProfiles:
            count: 5
          topicEndpoints:
            count: 9
          configSyncRemoteNodes:
            count: 9
          jndiQueues:
            count: 7
          queueTemplates:
            count: 6
          distributedCaches:
            count: 3
          bridges:
            count: 5
          transactions:
            count: 6
          jndiTopics:
            count: 1
          dmrBridges:
            count: 2
          clientUsernames:
            count: 2
          queues:
            count: 7
          mqttRetainCaches:
            count: 1
          topicEndpointTemplates:
            count: 9
          authenticationOauthProviders:
            count: 6
          replicatedTopics:
            count: 4
          replayLogs:
            count: 1
          authorizationGroups:
            count: 1
          mqttSessions:
            count: 1
          aclProfiles:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          authenticationOauthProvidersUri: authenticationOauthProvidersUri
          transactionsUri: transactionsUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          configSyncRemoteNodesUri: configSyncRemoteNodesUri
          clientsUri: clientsUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnCollections'
        data:
          $ref: '#/components/schemas/MsgVpn'
        links:
          $ref: '#/components/schemas/MsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPoint:
      example:
        clientName: clientName
        timeConnectionsBlocked: 5
        service: service
        vendor: vendor
        clientProfileName: clientProfileName
        lastFailureTime: 1
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        up: true
        enabled: true
        lastFailureReason: lastFailureReason
      properties:
        clientName:
          description: The name of the Client for the REST Delivery Point.
          type: string
        clientProfileName:
          description: The name of the Client Profile for the REST Delivery Point.
          type: string
        enabled:
          description: Indicates whether the REST Delivery Point is enabled.
          type: boolean
        lastFailureReason:
          description: The reason for the last REST Delivery Point failure.
          type: string
        lastFailureTime:
          description: The timestamp of the last REST Delivery Point failure. This
            value represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix
            time).
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point.
          type: string
        service:
          description: The name of the service that this REST Delivery Point connects
            to. Internally the broker does not use this value; it is informational
            only. Available since 2.19.
          type: string
        timeConnectionsBlocked:
          description: The percentage of time the REST Delivery Point connections
            are blocked from transmitting data.
          format: int64
          type: integer
        up:
          description: Indicates whether the operational state of the REST Delivery
            Point is up.
          type: boolean
        vendor:
          description: The name of the vendor that this REST Delivery Point connects
            to. Internally the broker does not use this value; it is informational
            only. Available since 2.19.
          type: string
      type: object
    MsgVpnRestDeliveryPointCollections:
      example:
        restConsumers:
          count: 6
        queueBindings:
          count: 0
      properties:
        queueBindings:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointCollectionsQueuebindings'
        restConsumers:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointCollectionsRestconsumers'
      type: object
    MsgVpnRestDeliveryPointCollectionsQueuebindings:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the queueBindings collection.
          format: int64
          type: integer
      type: object
    MsgVpnRestDeliveryPointCollectionsRestconsumers:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the restConsumers collection.
          format: int64
          type: integer
      type: object
    MsgVpnRestDeliveryPointLinks:
      example:
        restConsumersUri: restConsumersUri
        queueBindingsUri: queueBindingsUri
        uri: uri
      properties:
        queueBindingsUri:
          description: The URI of this REST Delivery Point's collection of Queue Binding
            objects.
          type: string
        restConsumersUri:
          description: The URI of this REST Delivery Point's collection of REST Consumer
            objects.
          type: string
        uri:
          description: The URI of this REST Delivery Point object.
          type: string
      type: object
    MsgVpnRestDeliveryPointQueueBinding:
      example:
        gatewayReplaceTargetAuthorityEnabled: true
        queueBindingName: queueBindingName
        lastFailureTime: 0
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        up: true
        lastFailureReason: lastFailureReason
        postRequestTarget: postRequestTarget
        uptime: 6
      properties:
        gatewayReplaceTargetAuthorityEnabled:
          description: Indicates whether the authority for the request-target is replaced
            with that configured for the REST Consumer remote.
          type: boolean
        lastFailureReason:
          description: The reason for the last REST Delivery Point queue binding failure.
          type: string
        lastFailureTime:
          description: The timestamp of the last REST Delivery Point queue binding
            failure. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time).
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        postRequestTarget:
          description: The request-target string being used when sending requests
            to a REST Consumer.
          type: string
        queueBindingName:
          description: The name of a queue in the Message VPN.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point.
          type: string
        up:
          description: Indicates whether the operational state of the REST Delivery
            Point queue binding is up.
          type: boolean
        uptime:
          description: The amount of time in seconds since the REST Delivery Point
            queue binding was up.
          format: int64
          type: integer
      type: object
    MsgVpnRestDeliveryPointQueueBindingCollections:
      type: object
    MsgVpnRestDeliveryPointQueueBindingLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Binding object.
          type: string
      type: object
    MsgVpnRestDeliveryPointQueueBindingResponse:
      example:
        data:
          gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          lastFailureTime: 0
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          lastFailureReason: lastFailureReason
          postRequestTarget: postRequestTarget
          uptime: 6
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointQueueBindingsResponse:
      example:
        data:
        - gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          lastFailureTime: 0
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          lastFailureReason: lastFailureReason
          postRequestTarget: postRequestTarget
          uptime: 6
        - gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          lastFailureTime: 0
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          lastFailureReason: lastFailureReason
          postRequestTarget: postRequestTarget
          uptime: 6
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointResponse:
      example:
        data:
          clientName: clientName
          timeConnectionsBlocked: 5
          service: service
          vendor: vendor
          clientProfileName: clientProfileName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          enabled: true
          lastFailureReason: lastFailureReason
        collections:
          restConsumers:
            count: 6
          queueBindings:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumer:
      example:
        authenticationOauthClientLastFailureReason: authenticationOauthClientLastFailureReason
        authenticationOauthJwtTokenRetrievedTime: 9
        remoteHost: remoteHost
        httpResponseRxByteCount: 8
        httpMethod: post
        enabled: true
        lastConnectionFailureTime: 3
        lastFailureReason: lastFailureReason
        authenticationOauthJwtTokenLifetime: 7
        localInterface: localInterface
        outgoingConnectionCount: 2
        retryDelay: 5
        httpRequestOutstandingTxMsgCount: 4
        httpResponseRxMsgCount: 9
        lastConnectionFailureRemoteEndpoint: lastConnectionFailureRemoteEndpoint
        tlsEnabled: true
        authenticationScheme: none
        httpRequestTimedOutTxMsgCount: 5
        lastFailureTime: 6
        msgVpnName: msgVpnName
        up: true
        authenticationOauthClientTokenRetrievedTime: 5
        authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
        authenticationOauthClientTokenState: authenticationOauthClientTokenState
        authenticationHttpBasicUsername: authenticationHttpBasicUsername
        httpRequestConnectionCloseTxMsgCount: 1
        authenticationOauthJwtLastFailureReason: authenticationOauthJwtLastFailureReason
        maxPostWaitTime: 1
        authenticationOauthClientLastFailureTime: 1
        authenticationOauthClientId: authenticationOauthClientId
        httpResponseErrorRxMsgCount: 6
        restConsumerName: restConsumerName
        remotePort: 6
        authenticationOauthClientTokenLifetime: 5
        counter:
          httpRequestConnectionCloseTxMsgCount: 3
          httpRequestTxMsgCount: 1
          httpRequestOutstandingTxMsgCount: 2
          httpResponseRxMsgCount: 6
          httpResponseErrorRxMsgCount: 1
          httpResponseRxByteCount: 1
          httpRequestTimedOutTxMsgCount: 4
          httpResponseSuccessRxMsgCount: 7
          httpRequestTxByteCount: 7
        authenticationOauthJwtTokenState: authenticationOauthJwtTokenState
        authenticationHttpHeaderName: authenticationHttpHeaderName
        httpRequestTxMsgCount: 9
        authenticationOauthJwtLastFailureTime: 2
        authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
        tlsCipherSuiteList: tlsCipherSuiteList
        authenticationOauthClientScope: authenticationOauthClientScope
        restDeliveryPointName: restDeliveryPointName
        lastConnectionFailureLocalEndpoint: lastConnectionFailureLocalEndpoint
        remoteOutgoingConnectionUpCount: 6
        httpResponseSuccessRxMsgCount: 6
        httpRequestTxByteCount: 9
        lastConnectionFailureReason: lastConnectionFailureReason
      properties:
        authenticationHttpBasicUsername:
          description: The username that the REST Consumer will use to login to the
            REST host.
          type: string
        authenticationHttpHeaderName:
          description: The authentication header name. Available since 2.15.
          type: string
        authenticationOauthClientId:
          description: The OAuth client ID. Available since 2.19.
          type: string
        authenticationOauthClientLastFailureReason:
          description: The reason for the most recent OAuth token retrieval failure.
            Available since 2.19.
          type: string
        authenticationOauthClientLastFailureTime:
          description: The time of the last OAuth token retrieval failure. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
            Available since 2.19.
          format: int32
          type: integer
        authenticationOauthClientScope:
          description: The OAuth scope. Available since 2.19.
          type: string
        authenticationOauthClientTokenEndpoint:
          description: The OAuth token endpoint URL that the REST Consumer will use
            to request a token for login to the REST host. Must begin with "https".
            Available since 2.19.
          type: string
        authenticationOauthClientTokenLifetime:
          description: The validity duration of the OAuth token. Available since 2.19.
          format: int64
          type: integer
        authenticationOauthClientTokenRetrievedTime:
          description: The time at which the broker requested the token from the OAuth
            token endpoint. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time). Available since 2.19.
          format: int32
          type: integer
        authenticationOauthClientTokenState:
          description: |-
            The current state of the current OAuth token. The allowed values and their meaning are:

            <pre>
            "valid" - The token is valid.
            "invalid" - The token is invalid.
            </pre>
             Available since 2.19.
          type: string
        authenticationOauthJwtLastFailureReason:
          description: The reason for the most recent OAuth token retrieval failure.
            Available since 2.21.
          type: string
        authenticationOauthJwtLastFailureTime:
          description: The time of the last OAuth token retrieval failure. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
            Available since 2.21.
          format: int32
          type: integer
        authenticationOauthJwtTokenEndpoint:
          description: The OAuth token endpoint URL that the REST Consumer will use
            to request a token for login to the REST host. Available since 2.21.
          type: string
        authenticationOauthJwtTokenLifetime:
          description: The validity duration of the OAuth token. Available since 2.21.
          format: int64
          type: integer
        authenticationOauthJwtTokenRetrievedTime:
          description: The time at which the broker requested the token from the OAuth
            token endpoint. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time). Available since 2.21.
          format: int32
          type: integer
        authenticationOauthJwtTokenState:
          description: |-
            The current state of the current OAuth token. The allowed values and their meaning are:

            <pre>
            "valid" - The token is valid.
            "invalid" - The token is invalid.
            </pre>
             Available since 2.21.
          type: string
        authenticationScheme:
          description: |
            The authentication scheme used by the REST Consumer to login to the REST host. The allowed values and their meaning are:

            <pre>
            "none" - Login with no authentication. This may be useful for anonymous connections or when a REST Consumer does not require authentication.
            "http-basic" - Login with a username and optional password according to HTTP Basic authentication as per RFC2616.
            "client-certificate" - Login with a client TLS certificate as per RFC5246. Client certificate authentication is only available on TLS connections.
            "http-header" - Login with a specified HTTP header.
            "oauth-client" - Login with OAuth 2.0 client credentials.
            "oauth-jwt" - Login with OAuth (RFC 7523 JWT Profile).
            "transparent" - Login using the Authorization header from the message properties, if present. Transparent authentication passes along existing Authorization header metadata instead of discarding it. Note that if the message is coming from a REST producer, the REST service must be configured to forward the Authorization header.
            </pre>
          enum:
          - none
          - http-basic
          - client-certificate
          - http-header
          - oauth-client
          - oauth-jwt
          - transparent
          type: string
        counter:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCounter'
        enabled:
          description: Indicates whether the REST Consumer is enabled.
          type: boolean
        httpMethod:
          description: |-
            The HTTP method to use (POST or PUT). This is used only when operating in the REST service "messaging" mode and is ignored in "gateway" mode. The allowed values and their meaning are:

            <pre>
            "post" - Use the POST HTTP method.
            "put" - Use the PUT HTTP method.
            </pre>
             Available since 2.17.
          enum:
          - post
          - put
          type: string
        httpRequestConnectionCloseTxMsgCount:
          description: The number of HTTP request messages transmitted to the REST
            Consumer to close the connection. Available since 2.13.
          format: int64
          type: integer
        httpRequestOutstandingTxMsgCount:
          description: The number of HTTP request messages transmitted to the REST
            Consumer that are waiting for a response. Available since 2.13.
          format: int64
          type: integer
        httpRequestTimedOutTxMsgCount:
          description: The number of HTTP request messages transmitted to the REST
            Consumer that have timed out. Available since 2.13.
          format: int64
          type: integer
        httpRequestTxByteCount:
          description: The amount of HTTP request messages transmitted to the REST
            Consumer, in bytes (B). Available since 2.13.
          format: int64
          type: integer
        httpRequestTxMsgCount:
          description: The number of HTTP request messages transmitted to the REST
            Consumer. Available since 2.13.
          format: int64
          type: integer
        httpResponseErrorRxMsgCount:
          description: The number of HTTP client/server error response messages received
            from the REST Consumer. Available since 2.13.
          format: int64
          type: integer
        httpResponseRxByteCount:
          description: The amount of HTTP response messages received from the REST
            Consumer, in bytes (B). Available since 2.13.
          format: int64
          type: integer
        httpResponseRxMsgCount:
          description: The number of HTTP response messages received from the REST
            Consumer. Available since 2.13.
          format: int64
          type: integer
        httpResponseSuccessRxMsgCount:
          description: The number of HTTP successful response messages received from
            the REST Consumer. Available since 2.13.
          format: int64
          type: integer
        lastConnectionFailureLocalEndpoint:
          description: The local endpoint at the time of the last connection failure.
          type: string
        lastConnectionFailureReason:
          description: The reason for the last connection failure between local and
            remote endpoints.
          type: string
        lastConnectionFailureRemoteEndpoint:
          description: The remote endpoint at the time of the last connection failure.
          type: string
        lastConnectionFailureTime:
          description: The timestamp of the last connection failure between local
            and remote endpoints. This value represents the number of seconds since
            1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        lastFailureReason:
          description: The reason for the last REST Consumer failure.
          type: string
        lastFailureTime:
          description: The timestamp of the last REST Consumer failure. This value
            represents the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        localInterface:
          description: The interface that will be used for all outgoing connections
            associated with the REST Consumer. When unspecified, an interface is automatically
            chosen.
          type: string
        maxPostWaitTime:
          description: The maximum amount of time (in seconds) to wait for an HTTP
            POST response from the REST Consumer. Once this time is exceeded, the
            TCP connection is reset.
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        outgoingConnectionCount:
          description: The number of concurrent TCP connections open to the REST Consumer.
          format: int32
          type: integer
        remoteHost:
          description: The IP address or DNS name for the REST Consumer.
          type: string
        remoteOutgoingConnectionUpCount:
          description: The number of outgoing connections for the REST Consumer that
            are up.
          format: int64
          type: integer
        remotePort:
          description: The port associated with the host of the REST Consumer.
          format: int64
          type: integer
        restConsumerName:
          description: The name of the REST Consumer.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point.
          type: string
        retryDelay:
          description: The number of seconds that must pass before retrying the remote
            REST Consumer connection.
          format: int32
          type: integer
        tlsCipherSuiteList:
          description: The colon-separated list of cipher suites the REST Consumer
            uses in its encrypted connection. The value `"default"` implies all supported
            suites ordered from most secure to least secure. The list of default cipher
            suites is available in the `tlsCipherSuiteMsgBackboneDefaultList` attribute
            of the Broker object in the Monitoring API. The REST Consumer should choose
            the first suite from this list that it supports.
          type: string
        tlsEnabled:
          description: Indicates whether encryption (TLS) is enabled for the REST
            Consumer.
          type: boolean
        up:
          description: Indicates whether the operational state of the REST Consumer
            is up.
          type: boolean
      type: object
    MsgVpnRestDeliveryPointRestConsumerCollections:
      example:
        oauthJwtClaims:
          count: 0
        tlsTrustedCommonNames:
          count: 6
      properties:
        oauthJwtClaims:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCollectionsOauthjwtclaims'
        tlsTrustedCommonNames:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCollectionsTlstrustedcommonnames'
      type: object
    MsgVpnRestDeliveryPointRestConsumerCollectionsOauthjwtclaims:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the oauthJwtClaims collection.
            Available since 2.21.
          format: int64
          type: integer
      type: object
    MsgVpnRestDeliveryPointRestConsumerCollectionsTlstrustedcommonnames:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the tlsTrustedCommonNames collection.
            Deprecated since 2.17. Common Name validation has been replaced by Server
            Certificate Name validation.
          format: int64
          type: integer
      type: object
    MsgVpnRestDeliveryPointRestConsumerCounter:
      description: The counters for the REST Consumer. Deprecated since 2.13. All
        attributes in this object have been moved to the MsgVpnRestDeliveryPointRestConsumer
        object.
      example:
        httpRequestConnectionCloseTxMsgCount: 3
        httpRequestTxMsgCount: 1
        httpRequestOutstandingTxMsgCount: 2
        httpResponseRxMsgCount: 6
        httpResponseErrorRxMsgCount: 1
        httpResponseRxByteCount: 1
        httpRequestTimedOutTxMsgCount: 4
        httpResponseSuccessRxMsgCount: 7
        httpRequestTxByteCount: 7
      properties:
        httpRequestConnectionCloseTxMsgCount:
          description: The number of HTTP request messages transmitted to the REST
            Consumer to close the connection. Deprecated since 2.13. This attribute
            has been moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
        httpRequestOutstandingTxMsgCount:
          description: The number of HTTP request messages transmitted to the REST
            Consumer that are waiting for a response. Deprecated since 2.13. This
            attribute has been moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
        httpRequestTimedOutTxMsgCount:
          description: The number of HTTP request messages transmitted to the REST
            Consumer that have timed out. Deprecated since 2.13. This attribute has
            been moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
        httpRequestTxByteCount:
          description: The amount of HTTP request messages transmitted to the REST
            Consumer, in bytes (B). Deprecated since 2.13. This attribute has been
            moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
        httpRequestTxMsgCount:
          description: The number of HTTP request messages transmitted to the REST
            Consumer. Deprecated since 2.13. This attribute has been moved to the
            MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
        httpResponseErrorRxMsgCount:
          description: The number of HTTP client/server error response messages received
            from the REST Consumer. Deprecated since 2.13. This attribute has been
            moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
        httpResponseRxByteCount:
          description: The amount of HTTP response messages received from the REST
            Consumer, in bytes (B). Deprecated since 2.13. This attribute has been
            moved to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
        httpResponseRxMsgCount:
          description: The number of HTTP response messages received from the REST
            Consumer. Deprecated since 2.13. This attribute has been moved to the
            MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
        httpResponseSuccessRxMsgCount:
          description: The number of HTTP successful response messages received from
            the REST Consumer. Deprecated since 2.13. This attribute has been moved
            to the MsgVpnRestDeliveryPointRestConsumer object.
          format: int64
          type: integer
      type: object
    MsgVpnRestDeliveryPointRestConsumerLinks:
      example:
        oauthJwtClaimsUri: oauthJwtClaimsUri
        uri: uri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        oauthJwtClaimsUri:
          description: The URI of this REST Consumer's collection of Claim objects.
            Available since 2.21.
          type: string
        tlsTrustedCommonNamesUri:
          description: The URI of this REST Consumer's collection of Trusted Common
            Name objects. Deprecated since 2.17. Common Name validation has been replaced
            by Server Certificate Name validation.
          type: string
        uri:
          description: The URI of this REST Consumer object.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim:
      example:
        oauthJwtClaimValue: oauthJwtClaimValue
        oauthJwtClaimName: oauthJwtClaimName
        restConsumerName: restConsumerName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        oauthJwtClaimName:
          description: The name of the additional claim. Cannot be "exp", "iat", or
            "jti".
          type: string
        oauthJwtClaimValue:
          description: The value of the additional claim.
          type: string
        restConsumerName:
          description: The name of the REST Consumer.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimCollections:
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Claim object.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse:
      example:
        data:
          oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse:
      example:
        data:
        - oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        - oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumerResponse:
      example:
        data:
          authenticationOauthClientLastFailureReason: authenticationOauthClientLastFailureReason
          authenticationOauthJwtTokenRetrievedTime: 9
          remoteHost: remoteHost
          httpResponseRxByteCount: 8
          httpMethod: post
          enabled: true
          lastConnectionFailureTime: 3
          lastFailureReason: lastFailureReason
          authenticationOauthJwtTokenLifetime: 7
          localInterface: localInterface
          outgoingConnectionCount: 2
          retryDelay: 5
          httpRequestOutstandingTxMsgCount: 4
          httpResponseRxMsgCount: 9
          lastConnectionFailureRemoteEndpoint: lastConnectionFailureRemoteEndpoint
          tlsEnabled: true
          authenticationScheme: none
          httpRequestTimedOutTxMsgCount: 5
          lastFailureTime: 6
          msgVpnName: msgVpnName
          up: true
          authenticationOauthClientTokenRetrievedTime: 5
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthClientTokenState: authenticationOauthClientTokenState
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          httpRequestConnectionCloseTxMsgCount: 1
          authenticationOauthJwtLastFailureReason: authenticationOauthJwtLastFailureReason
          maxPostWaitTime: 1
          authenticationOauthClientLastFailureTime: 1
          authenticationOauthClientId: authenticationOauthClientId
          httpResponseErrorRxMsgCount: 6
          restConsumerName: restConsumerName
          remotePort: 6
          authenticationOauthClientTokenLifetime: 5
          counter:
            httpRequestConnectionCloseTxMsgCount: 3
            httpRequestTxMsgCount: 1
            httpRequestOutstandingTxMsgCount: 2
            httpResponseRxMsgCount: 6
            httpResponseErrorRxMsgCount: 1
            httpResponseRxByteCount: 1
            httpRequestTimedOutTxMsgCount: 4
            httpResponseSuccessRxMsgCount: 7
            httpRequestTxByteCount: 7
          authenticationOauthJwtTokenState: authenticationOauthJwtTokenState
          authenticationHttpHeaderName: authenticationHttpHeaderName
          httpRequestTxMsgCount: 9
          authenticationOauthJwtLastFailureTime: 2
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
          lastConnectionFailureLocalEndpoint: lastConnectionFailureLocalEndpoint
          remoteOutgoingConnectionUpCount: 6
          httpResponseSuccessRxMsgCount: 6
          httpRequestTxByteCount: 9
          lastConnectionFailureReason: lastConnectionFailureReason
        collections:
          oauthJwtClaims:
            count: 0
          tlsTrustedCommonNames:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCollections'
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName:
      example:
        restConsumerName: restConsumerName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        tlsTrustedCommonName: tlsTrustedCommonName
      properties:
        msgVpnName:
          description: The name of the Message VPN. Deprecated since 2.17. Common
            Name validation has been replaced by Server Certificate Name validation.
          type: string
        restConsumerName:
          description: The name of the REST Consumer. Deprecated since 2.17. Common
            Name validation has been replaced by Server Certificate Name validation.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point. Deprecated since 2.17.
            Common Name validation has been replaced by Server Certificate Name validation.
          type: string
        tlsTrustedCommonName:
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.17. Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameCollections:
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Trusted Common Name object.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse:
      example:
        data:
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse:
      example:
        data:
        - restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        - restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumersResponse:
      example:
        data:
        - authenticationOauthClientLastFailureReason: authenticationOauthClientLastFailureReason
          authenticationOauthJwtTokenRetrievedTime: 9
          remoteHost: remoteHost
          httpResponseRxByteCount: 8
          httpMethod: post
          enabled: true
          lastConnectionFailureTime: 3
          lastFailureReason: lastFailureReason
          authenticationOauthJwtTokenLifetime: 7
          localInterface: localInterface
          outgoingConnectionCount: 2
          retryDelay: 5
          httpRequestOutstandingTxMsgCount: 4
          httpResponseRxMsgCount: 9
          lastConnectionFailureRemoteEndpoint: lastConnectionFailureRemoteEndpoint
          tlsEnabled: true
          authenticationScheme: none
          httpRequestTimedOutTxMsgCount: 5
          lastFailureTime: 6
          msgVpnName: msgVpnName
          up: true
          authenticationOauthClientTokenRetrievedTime: 5
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthClientTokenState: authenticationOauthClientTokenState
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          httpRequestConnectionCloseTxMsgCount: 1
          authenticationOauthJwtLastFailureReason: authenticationOauthJwtLastFailureReason
          maxPostWaitTime: 1
          authenticationOauthClientLastFailureTime: 1
          authenticationOauthClientId: authenticationOauthClientId
          httpResponseErrorRxMsgCount: 6
          restConsumerName: restConsumerName
          remotePort: 6
          authenticationOauthClientTokenLifetime: 5
          counter:
            httpRequestConnectionCloseTxMsgCount: 3
            httpRequestTxMsgCount: 1
            httpRequestOutstandingTxMsgCount: 2
            httpResponseRxMsgCount: 6
            httpResponseErrorRxMsgCount: 1
            httpResponseRxByteCount: 1
            httpRequestTimedOutTxMsgCount: 4
            httpResponseSuccessRxMsgCount: 7
            httpRequestTxByteCount: 7
          authenticationOauthJwtTokenState: authenticationOauthJwtTokenState
          authenticationHttpHeaderName: authenticationHttpHeaderName
          httpRequestTxMsgCount: 9
          authenticationOauthJwtLastFailureTime: 2
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
          lastConnectionFailureLocalEndpoint: lastConnectionFailureLocalEndpoint
          remoteOutgoingConnectionUpCount: 6
          httpResponseSuccessRxMsgCount: 6
          httpRequestTxByteCount: 9
          lastConnectionFailureReason: lastConnectionFailureReason
        - authenticationOauthClientLastFailureReason: authenticationOauthClientLastFailureReason
          authenticationOauthJwtTokenRetrievedTime: 9
          remoteHost: remoteHost
          httpResponseRxByteCount: 8
          httpMethod: post
          enabled: true
          lastConnectionFailureTime: 3
          lastFailureReason: lastFailureReason
          authenticationOauthJwtTokenLifetime: 7
          localInterface: localInterface
          outgoingConnectionCount: 2
          retryDelay: 5
          httpRequestOutstandingTxMsgCount: 4
          httpResponseRxMsgCount: 9
          lastConnectionFailureRemoteEndpoint: lastConnectionFailureRemoteEndpoint
          tlsEnabled: true
          authenticationScheme: none
          httpRequestTimedOutTxMsgCount: 5
          lastFailureTime: 6
          msgVpnName: msgVpnName
          up: true
          authenticationOauthClientTokenRetrievedTime: 5
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthClientTokenState: authenticationOauthClientTokenState
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          httpRequestConnectionCloseTxMsgCount: 1
          authenticationOauthJwtLastFailureReason: authenticationOauthJwtLastFailureReason
          maxPostWaitTime: 1
          authenticationOauthClientLastFailureTime: 1
          authenticationOauthClientId: authenticationOauthClientId
          httpResponseErrorRxMsgCount: 6
          restConsumerName: restConsumerName
          remotePort: 6
          authenticationOauthClientTokenLifetime: 5
          counter:
            httpRequestConnectionCloseTxMsgCount: 3
            httpRequestTxMsgCount: 1
            httpRequestOutstandingTxMsgCount: 2
            httpResponseRxMsgCount: 6
            httpResponseErrorRxMsgCount: 1
            httpResponseRxByteCount: 1
            httpRequestTimedOutTxMsgCount: 4
            httpResponseSuccessRxMsgCount: 7
            httpRequestTxByteCount: 7
          authenticationOauthJwtTokenState: authenticationOauthJwtTokenState
          authenticationHttpHeaderName: authenticationHttpHeaderName
          httpRequestTxMsgCount: 9
          authenticationOauthJwtLastFailureTime: 2
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
          lastConnectionFailureLocalEndpoint: lastConnectionFailureLocalEndpoint
          remoteOutgoingConnectionUpCount: 6
          httpResponseSuccessRxMsgCount: 6
          httpRequestTxByteCount: 9
          lastConnectionFailureReason: lastConnectionFailureReason
        collections:
        - oauthJwtClaims:
            count: 0
          tlsTrustedCommonNames:
            count: 6
        - oauthJwtClaims:
            count: 0
          tlsTrustedCommonNames:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointsResponse:
      example:
        data:
        - clientName: clientName
          timeConnectionsBlocked: 5
          service: service
          vendor: vendor
          clientProfileName: clientProfileName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          enabled: true
          lastFailureReason: lastFailureReason
        - clientName: clientName
          timeConnectionsBlocked: 5
          service: service
          vendor: vendor
          clientProfileName: clientProfileName
          lastFailureTime: 1
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          up: true
          enabled: true
          lastFailureReason: lastFailureReason
        collections:
        - restConsumers:
            count: 6
          queueBindings:
            count: 0
        - restConsumers:
            count: 6
          queueBindings:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
        - restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpoint:
      example:
        averageRxByteRate: 5
        maxTtlExpiredDiscardedMsgCount: 8
        txMsgRate: 1
        redeliveryEnabled: true
        maxMsgSizeExceededDiscardedMsgCount: 6
        selectorExaminedMsgCount: 4
        txUnackedMsgCount: 8
        maxMsgSize: 5
        rejectMsgToSenderOnDiscardBehavior: always
        eventBindCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        replayFailureCount: 6
        respectMsgPriorityEnabled: true
        bindSuccessCount: 2
        replicationStandbyRxMsgCount: 0
        maxDeliveredUnackedMsgsPerFlow: 6
        lastSpooledMsgId: 9
        lowestMsgId: 6
        egressEnabled: true
        respectTtlEnabled: true
        lastSelectorExaminedMsgId: 8
        lastReplayStartTime: 9
        msgSpoolUsage: 7
        lastReplayedMsgTxTime: 6
        rxByteRate: 7
        alreadyBoundBindFailureCount: 5
        highestAckedMsgId: 6
        maxRedeliveryExceededToDmqFailedMsgCount: 0
        maxRedeliveryExceededDiscardedMsgCount: 7
        rejectLowPriorityMsgLimit: 0
        eventSpoolUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        txByteRate: 2
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        deliveryCountEnabled: true
        replayedAckedMsgCount: 4
        averageTxByteRate: 7
        maxBindCountExceededBindFailureCount: 2
        destinationGroupErrorDiscardedMsgCount: 1
        noLocalDeliveryDiscardedMsgCount: 5
        rejectLowPriorityMsgEnabled: true
        replicationStandbyAckedByAckPropMsgCount: 9
        topicEndpointName: topicEndpointName
        maxTtl: 0
        spooledByteCount: 4
        averageRxMsgRate: 2
        maxTtlExpiredToDmqFailedMsgCount: 7
        redeliveredMsgCount: 4
        virtualRouter: virtualRouter
        ingressEnabled: true
        spooledMsgCount: 3
        inProgressAckMsgCount: 1
        replicationActiveAckPropTxMsgCount: 9
        maxTtlExceededDiscardedMsgCount: 4
        selectorNotMatchedMsgCount: 8
        rxMsgRate: 5
        consumerAckPropagationEnabled: true
        networkTopic: networkTopic
        msgVpnName: msgVpnName
        averageTxMsgRate: 9
        lastReplayFailureTime: 9
        bindRequestCount: 3
        replayedTxMsgCount: 7
        replayStartCount: 4
        clientProfileDeniedDiscardedMsgCount: 4
        disabledBindFailureCount: 1
        createdByManagement: true
        disabledDiscardedMsgCount: 1
        replicationStandbyAckPropRxMsgCount: 0
        maxEffectiveBindCount: 6
        maxTtlExpiredToDmqMsgCount: 3
        maxRedeliveryExceededToDmqMsgCount: 7
        eventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        otherBindFailureCount: 3
        lastReplayFailureReason: lastReplayFailureReason
        highestMsgId: 7
        lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
        transportRetransmitMsgCount: 0
        lowestAckedMsgId: 3
        maxMsgSpoolUsageExceededDiscardedMsgCount: 3
        durable: true
        replayState: replayState
        bindTimeForwardingMode: bindTimeForwardingMode
        lastReplayCompleteTime: 5
        selector: selector
        maxBindCount: 1
        owner: owner
        maxSpoolUsage: 6
        replaySuccessCount: 1
        permission: no-access
        maxRedeliveryCount: 3
        msgSpoolPeakUsage: 3
        rxSelector: true
        deletedMsgCount: 7
        invalidSelectorBindFailureCount: 4
        destinationTopic: destinationTopic
        lowPriorityMsgCongestionDiscardedMsgCount: 6
        selectorMatchedMsgCount: 6
      properties:
        accessType:
          description: |
            The access type for delivering messages to consumer flows bound to the Topic Endpoint. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
          type: string
        alreadyBoundBindFailureCount:
          description: The number of Topic Endpoint bind failures due to being already
            bound.
          format: int64
          type: integer
        averageRxByteRate:
          description: The one minute average of the message rate received by the
            Topic Endpoint, in bytes per second (B/sec).
          format: int64
          type: integer
        averageRxMsgRate:
          description: The one minute average of the message rate received by the
            Topic Endpoint, in messages per second (msg/sec).
          format: int64
          type: integer
        averageTxByteRate:
          description: The one minute average of the message rate transmitted by the
            Topic Endpoint, in bytes per second (B/sec).
          format: int64
          type: integer
        averageTxMsgRate:
          description: The one minute average of the message rate transmitted by the
            Topic Endpoint, in messages per second (msg/sec).
          format: int64
          type: integer
        bindRequestCount:
          description: The number of consumer requests to bind to the Topic Endpoint.
          format: int64
          type: integer
        bindSuccessCount:
          description: The number of successful consumer requests to bind to the Topic
            Endpoint.
          format: int64
          type: integer
        bindTimeForwardingMode:
          description: |
            The forwarding mode of the Topic Endpoint at bind time. The allowed values and their meaning are:

            <pre>
            "store-and-forward" - Deliver messages using the guaranteed data path.
            "cut-through" - Deliver messages using the direct and guaranteed data paths for lower latency.
            </pre>
          type: string
        clientProfileDeniedDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to being denied by the Client Profile.
          format: int64
          type: integer
        consumerAckPropagationEnabled:
          description: Indicates whether the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN is enabled.
          type: boolean
        createdByManagement:
          description: Indicates whether the Topic Endpoint was created by a management
            API (CLI or SEMP).
          type: boolean
        deadMsgQueue:
          description: The name of the Dead Message Queue (DMQ) used by the Topic
            Endpoint.
          type: string
        deletedMsgCount:
          description: The number of guaranteed messages deleted from the Topic Endpoint.
          format: int64
          type: integer
        deliveryCountEnabled:
          description: Enable or disable the ability for client applications to query
            the message delivery count of messages received from the Topic Endpoint.
            This is a controlled availability feature. Please contact Solace to find
            out if this feature is supported for your use case. Available since 2.19.
          type: boolean
        destinationGroupErrorDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to a destination group error.
          format: int64
          type: integer
        destinationTopic:
          description: The destination topic of the Topic Endpoint.
          type: string
        disabledBindFailureCount:
          description: The number of Topic Endpoint bind failures due to being disabled.
          format: int64
          type: integer
        disabledDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to it being disabled.
          format: int64
          type: integer
        durable:
          description: Indicates whether the Topic Endpoint is durable and not temporary.
          type: boolean
        egressEnabled:
          description: Indicates whether the transmission of messages from the Topic
            Endpoint is enabled.
          type: boolean
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        highestAckedMsgId:
          description: The highest identifier (ID) of guaranteed messages in the Topic
            Endpoint that were acknowledged.
          format: int64
          type: integer
        highestMsgId:
          description: The highest identifier (ID) of guaranteed messages in the Topic
            Endpoint.
          format: int64
          type: integer
        inProgressAckMsgCount:
          description: The number of acknowledgement messages received by the Topic
            Endpoint that are in the process of updating and deleting associated guaranteed
            messages.
          format: int64
          type: integer
        ingressEnabled:
          description: Indicates whether the reception of messages to the Topic Endpoint
            is enabled.
          type: boolean
        invalidSelectorBindFailureCount:
          description: The number of Topic Endpoint bind failures due to an invalid
            selector.
          format: int64
          type: integer
        lastReplayCompleteTime:
          description: The timestamp of the last completed replay for the Topic Endpoint.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        lastReplayFailureReason:
          description: The reason for the last replay failure for the Topic Endpoint.
          type: string
        lastReplayFailureTime:
          description: The timestamp of the last replay failure for the Topic Endpoint.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        lastReplayStartTime:
          description: The timestamp of the last replay started for the Topic Endpoint.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        lastReplayedMsgTxTime:
          description: The timestamp of the last replayed message transmitted by the
            Topic Endpoint. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time).
          format: int32
          type: integer
        lastSelectorExaminedMsgId:
          description: The identifier (ID) of the last message examined by the Topic
            Endpoint selector.
          format: int64
          type: integer
        lastSpooledMsgId:
          description: The identifier (ID) of the last guaranteed message spooled
            in the Topic Endpoint.
          format: int64
          type: integer
        lowPriorityMsgCongestionDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to low priority message congestion control.
          format: int64
          type: integer
        lowPriorityMsgCongestionState:
          description: |
            The state of the low priority message congestion in the Topic Endpoint. The allowed values and their meaning are:

            <pre>
            "disabled" - Messages are not being checked for priority.
            "not-congested" - Low priority messages are being stored and delivered.
            "congested" - Low priority messages are being discarded.
            </pre>
          type: string
        lowestAckedMsgId:
          description: The lowest identifier (ID) of guaranteed messages in the Topic
            Endpoint that were acknowledged.
          format: int64
          type: integer
        lowestMsgId:
          description: The lowest identifier (ID) of guaranteed messages in the Topic
            Endpoint.
          format: int64
          type: integer
        maxBindCount:
          description: The maximum number of consumer flows that can bind to the Topic
            Endpoint.
          format: int64
          type: integer
        maxBindCountExceededBindFailureCount:
          description: The number of Topic Endpoint bind failures due to the maximum
            bind count being exceeded.
          format: int64
          type: integer
        maxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Topic Endpoint.
          format: int64
          type: integer
        maxEffectiveBindCount:
          description: The effective maximum number of consumer flows that can bind
            to the Topic Endpoint.
          format: int32
          type: integer
        maxMsgSize:
          description: The maximum message size allowed in the Topic Endpoint, in
            bytes (B).
          format: int32
          type: integer
        maxMsgSizeExceededDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum message size being exceeded.
          format: int64
          type: integer
        maxMsgSpoolUsageExceededDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum message spool usage being exceeded.
          format: int64
          type: integer
        maxRedeliveryCount:
          description: The maximum number of times the Topic Endpoint will attempt
            redelivery of a message prior to it being discarded or moved to the DMQ.
            A value of 0 means to retry forever.
          format: int64
          type: integer
        maxRedeliveryExceededDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum redelivery attempts being exceeded.
          format: int64
          type: integer
        maxRedeliveryExceededToDmqFailedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum redelivery attempts being exceeded and failing to move
            to the Dead Message Queue (DMQ).
          format: int64
          type: integer
        maxRedeliveryExceededToDmqMsgCount:
          description: The number of guaranteed messages moved to the Dead Message
            Queue (DMQ) by the Topic Endpoint due to the maximum redelivery attempts
            being exceeded.
          format: int64
          type: integer
        maxSpoolUsage:
          description: The maximum message spool usage allowed by the Topic Endpoint,
            in megabytes (MB). A value of 0 only allows spooling of the last message
            received and disables quota checking.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time in seconds a message can stay in the Topic
            Endpoint when `respectTtlEnabled` is `"true"`. A message expires when
            the lesser of the sender assigned time-to-live (TTL) in the message and
            the `maxTtl` configured for the Topic Endpoint, is exceeded. A value of
            0 disables expiry.
          format: int64
          type: integer
        maxTtlExceededDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum time-to-live (TTL) in hops being exceeded. The TTL
            hop count is incremented when the message crosses a bridge.
          format: int64
          type: integer
        maxTtlExpiredDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum time-to-live (TTL) timestamp expiring.
          format: int64
          type: integer
        maxTtlExpiredToDmqFailedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to the maximum time-to-live (TTL) timestamp expiring and failing to
            move to the Dead Message Queue (DMQ).
          format: int64
          type: integer
        maxTtlExpiredToDmqMsgCount:
          description: The number of guaranteed messages moved to the Dead Message
            Queue (DMQ) by the Topic Endpoint due to the maximum time-to-live (TTL)
            timestamp expiring.
          format: int64
          type: integer
        msgSpoolPeakUsage:
          description: The message spool peak usage by the Topic Endpoint, in bytes
            (B).
          format: int64
          type: integer
        msgSpoolUsage:
          description: The message spool usage by the Topic Endpoint, in bytes (B).
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        networkTopic:
          description: The name of the network topic for the Topic Endpoint.
          type: string
        noLocalDeliveryDiscardedMsgCount:
          description: The number of guaranteed messages discarded by the Topic Endpoint
            due to no local delivery being requested.
          format: int64
          type: integer
        otherBindFailureCount:
          description: The number of Topic Endpoint bind failures due to other reasons.
          format: int64
          type: integer
        owner:
          description: The Client Username that owns the Topic Endpoint and has permission
            equivalent to `"delete"`.
          type: string
        permission:
          description: |
            The permission level for all consumers of the Topic Endpoint, excluding the owner. The allowed values and their meaning are:

            <pre>
            "no-access" - Disallows all access.
            "read-only" - Read-only access to the messages.
            "consume" - Consume (read and remove) messages.
            "modify-topic" - Consume messages or modify the topic/selector.
            "delete" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.
            </pre>
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
          type: string
        redeliveredMsgCount:
          description: The number of guaranteed messages transmitted by the Topic
            Endpoint for redelivery.
          format: int64
          type: integer
        redeliveryEnabled:
          description: Enable or disable message redelivery. When enabled, the number
            of redelivery attempts is controlled by maxRedeliveryCount. When disabled,
            the message will never be delivered from the topic-endpoint more than
            once. Available since 2.18.
          type: boolean
        rejectLowPriorityMsgEnabled:
          description: Indicates whether the checking of low priority messages against
            the `rejectLowPriorityMsgLimit` is enabled.
          type: boolean
        rejectLowPriorityMsgLimit:
          description: The number of messages of any priority in the Topic Endpoint
            above which low priority messages are not admitted but higher priority
            messages are allowed.
          format: int64
          type: integer
        rejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-topic-endpoint-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Topic Endpoint is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-topic-endpoint-enabled
          - never
          type: string
        replayFailureCount:
          description: The number of replays that failed for the Topic Endpoint.
          format: int64
          type: integer
        replayStartCount:
          description: The number of replays started for the Topic Endpoint.
          format: int64
          type: integer
        replayState:
          description: |
            The state of replay for the Topic Endpoint. The allowed values and their meaning are:

            <pre>
            "initializing" - All messages are being deleted from the endpoint before replay starts.
            "active" - Subscription matching logged messages are being replayed to the endpoint.
            "pending-complete" - Replay is complete, but final accounting is in progress.
            "complete" - Replay and all related activities are complete.
            "failed" - Replay has failed and is waiting for an unbind response.
            </pre>
          type: string
        replaySuccessCount:
          description: The number of replays that succeeded for the Topic Endpoint.
          format: int64
          type: integer
        replayedAckedMsgCount:
          description: The number of replayed messages transmitted by the Topic Endpoint
            and acked by all consumers.
          format: int64
          type: integer
        replayedTxMsgCount:
          description: The number of replayed messages transmitted by the Topic Endpoint.
          format: int64
          type: integer
        replicationActiveAckPropTxMsgCount:
          description: The number of acknowledgement messages propagated by the Topic
            Endpoint to the replication standby remote Message VPN.
          format: int64
          type: integer
        replicationStandbyAckPropRxMsgCount:
          description: The number of propagated acknowledgement messages received
            by the Topic Endpoint from the replication active remote Message VPN.
          format: int64
          type: integer
        replicationStandbyAckedByAckPropMsgCount:
          description: The number of messages acknowledged in the Topic Endpoint by
            acknowledgement propagation from the replication active remote Message
            VPN.
          format: int64
          type: integer
        replicationStandbyRxMsgCount:
          description: The number of messages received by the Topic Endpoint from
            the replication active remote Message VPN.
          format: int64
          type: integer
        respectMsgPriorityEnabled:
          description: Indicates whether message priorities are respected. When enabled,
            messages contained in the Topic Endpoint are delivered in priority order,
            from 9 (highest) to 0 (lowest).
          type: boolean
        respectTtlEnabled:
          description: Indicates whether the time-to-live (TTL) for messages in the
            Topic Endpoint is respected. When enabled, expired messages are discarded
            or moved to the DMQ.
          type: boolean
        rxByteRate:
          description: The current message rate received by the Topic Endpoint, in
            bytes per second (B/sec).
          format: int32
          type: integer
        rxMsgRate:
          description: The current message rate received by the Topic Endpoint, in
            messages per second (msg/sec).
          format: int64
          type: integer
        rxSelector:
          description: Indicates whether the Topic Endpoint has a selector to filter
            received messages.
          type: boolean
        selector:
          description: The value of the receive selector for the Topic Endpoint.
          type: string
        selectorExaminedMsgCount:
          description: The number of guaranteed messages examined by the Topic Endpoint
            selector.
          format: int64
          type: integer
        selectorMatchedMsgCount:
          description: The number of guaranteed messages for which the Topic Endpoint
            selector matched.
          format: int64
          type: integer
        selectorNotMatchedMsgCount:
          description: The number of guaranteed messages for which the Topic Endpoint
            selector did not match.
          format: int64
          type: integer
        spooledByteCount:
          description: The amount of guaranteed messages that were spooled in the
            Topic Endpoint, in bytes (B).
          format: int64
          type: integer
        spooledMsgCount:
          description: The number of guaranteed messages that were spooled in the
            Topic Endpoint.
          format: int64
          type: integer
        topicEndpointName:
          description: The name of the Topic Endpoint.
          type: string
        transportRetransmitMsgCount:
          description: The number of guaranteed messages that were retransmitted by
            the Topic Endpoint at the transport layer as part of a single delivery
            attempt. Available since 2.18.
          format: int64
          type: integer
        txByteRate:
          description: The current message rate transmitted by the Topic Endpoint,
            in bytes per second (B/sec).
          format: int64
          type: integer
        txMsgRate:
          description: The current message rate transmitted by the Topic Endpoint,
            in messages per second (msg/sec).
          format: int64
          type: integer
        txUnackedMsgCount:
          description: The number of guaranteed messages in the Topic Endpoint that
            have been transmitted but not acknowledged by all consumers.
          format: int64
          type: integer
        virtualRouter:
          description: |
            The virtual router used by the Topic Endpoint. The allowed values and their meaning are:

            <pre>
            "primary" - The endpoint belongs to the primary virtual router.
            "backup" - The endpoint belongs to the backup virtual router.
            </pre>
          type: string
      type: object
    MsgVpnTopicEndpointCollections:
      example:
        msgs:
          count: 0
        priorities:
          count: 6
        txFlows:
          count: 1
      properties:
        msgs:
          $ref: '#/components/schemas/MsgVpnTopicEndpointCollectionsMsgs'
        priorities:
          $ref: '#/components/schemas/MsgVpnTopicEndpointCollectionsPriorities'
        txFlows:
          $ref: '#/components/schemas/MsgVpnTopicEndpointCollectionsTxflows'
      type: object
    MsgVpnTopicEndpointCollectionsMsgs:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the msgs collection.
          format: int64
          type: integer
      type: object
    MsgVpnTopicEndpointCollectionsPriorities:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the priorities collection.
          format: int64
          type: integer
      type: object
    MsgVpnTopicEndpointCollectionsTxflows:
      example:
        count: 1
      properties:
        count:
          description: The total number of objects in the txFlows collection.
          format: int64
          type: integer
      type: object
    MsgVpnTopicEndpointLinks:
      example:
        txFlowsUri: txFlowsUri
        prioritiesUri: prioritiesUri
        uri: uri
        msgsUri: msgsUri
      properties:
        msgsUri:
          description: The URI of this Topic Endpoint's collection of Topic Endpoint
            Message objects.
          type: string
        prioritiesUri:
          description: The URI of this Topic Endpoint's collection of Topic Endpoint
            Priority objects.
          type: string
        txFlowsUri:
          description: The URI of this Topic Endpoint's collection of Topic Endpoint
            Transmit Flow objects.
          type: string
        uri:
          description: The URI of this Topic Endpoint object.
          type: string
      type: object
    MsgVpnTopicEndpointMsg:
      example:
        replicationState: replicationState
        topicEndpointName: topicEndpointName
        msgId: 5
        undelivered: true
        priority: 5
        publisherId: 2
        attachmentSize: 0
        dmqEligible: true
        redeliveryCount: 7
        spooledTime: 3
        contentSize: 6
        expiryTime: 1
        msgVpnName: msgVpnName
        replicationGroupMsgId: replicationGroupMsgId
        replicatedMateMsgId: 9
      properties:
        attachmentSize:
          description: The size of the Message attachment, in bytes (B).
          format: int64
          type: integer
        contentSize:
          description: The size of the Message content, in bytes (B).
          format: int64
          type: integer
        dmqEligible:
          description: Indicates whether the Message is eligible for the Dead Message
            Queue (DMQ).
          type: boolean
        expiryTime:
          description: The timestamp of when the Message expires. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        msgId:
          description: The identifier (ID) of the Message.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        priority:
          description: The priority level of the Message, from 9 (highest) to 0 (lowest).
          format: int32
          type: integer
        publisherId:
          description: The identifier (ID) of the Message publisher.
          format: int64
          type: integer
        redeliveryCount:
          description: The number of times the Message has been redelivered.
          format: int32
          type: integer
        replicatedMateMsgId:
          description: The Message identifier (ID) on the replication mate. Applicable
            only to replicated messages.
          format: int64
          type: integer
        replicationGroupMsgId:
          description: An ID that uniquely identifies this Message within this replication
            group. Available since 2.21.
          type: string
        replicationState:
          description: |
            The replication state of the Message. The allowed values and their meaning are:

            <pre>
            "replicated" - The Message is replicated to the remote Message VPN.
            "not-replicated" - The Message is not being replicated to the remote Message VPN.
            "pending-replication" - The Message is queued for replication to the remote Message VPN.
            </pre>
          type: string
        spooledTime:
          description: The timestamp of when the Message was spooled in the Topic
            Endpoint. This value represents the number of seconds since 1970-01-01
            00:00:00 UTC (Unix time).
          format: int32
          type: integer
        topicEndpointName:
          description: The name of the Topic Endpoint.
          type: string
        undelivered:
          description: Indicates whether delivery of the Message has never been attempted.
          type: boolean
      type: object
    MsgVpnTopicEndpointMsgCollections:
      type: object
    MsgVpnTopicEndpointMsgLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic Endpoint Message object.
          type: string
      type: object
    MsgVpnTopicEndpointMsgResponse:
      example:
        data:
          replicationState: replicationState
          topicEndpointName: topicEndpointName
          msgId: 5
          undelivered: true
          priority: 5
          publisherId: 2
          attachmentSize: 0
          dmqEligible: true
          redeliveryCount: 7
          spooledTime: 3
          contentSize: 6
          expiryTime: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 9
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointMsg'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointMsgsResponse:
      example:
        data:
        - replicationState: replicationState
          topicEndpointName: topicEndpointName
          msgId: 5
          undelivered: true
          priority: 5
          publisherId: 2
          attachmentSize: 0
          dmqEligible: true
          redeliveryCount: 7
          spooledTime: 3
          contentSize: 6
          expiryTime: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 9
        - replicationState: replicationState
          topicEndpointName: topicEndpointName
          msgId: 5
          undelivered: true
          priority: 5
          publisherId: 2
          attachmentSize: 0
          dmqEligible: true
          redeliveryCount: 7
          spooledTime: 3
          contentSize: 6
          expiryTime: 1
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
          replicatedMateMsgId: 9
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointMsgCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointMsg'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointMsgLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointPrioritiesResponse:
      example:
        data:
        - topicEndpointName: topicEndpointName
          spooledMsgCount: 1
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        - topicEndpointName: topicEndpointName
          spooledMsgCount: 1
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointPriority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointPriority:
      example:
        topicEndpointName: topicEndpointName
        spooledMsgCount: 1
        spooledByteCount: 6
        msgVpnName: msgVpnName
        priority: 0
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        priority:
          description: The level of the Priority, from 9 (highest) to 0 (lowest).
          format: int64
          type: integer
        spooledByteCount:
          description: The amount of guaranteed messages at this Priority spooled
            by the Topic Endpoint, in bytes (B).
          format: int64
          type: integer
        spooledMsgCount:
          description: The number of guaranteed messages at this Priority spooled
            by the Topic Endpoint.
          format: int64
          type: integer
        topicEndpointName:
          description: The name of the Topic Endpoint.
          type: string
      type: object
    MsgVpnTopicEndpointPriorityCollections:
      type: object
    MsgVpnTopicEndpointPriorityLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic Endpoint Priority object.
          type: string
      type: object
    MsgVpnTopicEndpointPriorityResponse:
      example:
        data:
          topicEndpointName: topicEndpointName
          spooledMsgCount: 1
          spooledByteCount: 6
          msgVpnName: msgVpnName
          priority: 0
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointPriority'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointPriorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointResponse:
      example:
        data:
          averageRxByteRate: 5
          maxTtlExpiredDiscardedMsgCount: 8
          txMsgRate: 1
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 6
          selectorExaminedMsgCount: 4
          txUnackedMsgCount: 8
          maxMsgSize: 5
          rejectMsgToSenderOnDiscardBehavior: always
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayFailureCount: 6
          respectMsgPriorityEnabled: true
          bindSuccessCount: 2
          replicationStandbyRxMsgCount: 0
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 9
          lowestMsgId: 6
          egressEnabled: true
          respectTtlEnabled: true
          lastSelectorExaminedMsgId: 8
          lastReplayStartTime: 9
          msgSpoolUsage: 7
          lastReplayedMsgTxTime: 6
          rxByteRate: 7
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 6
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          maxRedeliveryExceededDiscardedMsgCount: 7
          rejectLowPriorityMsgLimit: 0
          eventSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          txByteRate: 2
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 4
          averageTxByteRate: 7
          maxBindCountExceededBindFailureCount: 2
          destinationGroupErrorDiscardedMsgCount: 1
          noLocalDeliveryDiscardedMsgCount: 5
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 9
          topicEndpointName: topicEndpointName
          maxTtl: 0
          spooledByteCount: 4
          averageRxMsgRate: 2
          maxTtlExpiredToDmqFailedMsgCount: 7
          redeliveredMsgCount: 4
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 3
          inProgressAckMsgCount: 1
          replicationActiveAckPropTxMsgCount: 9
          maxTtlExceededDiscardedMsgCount: 4
          selectorNotMatchedMsgCount: 8
          rxMsgRate: 5
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 9
          lastReplayFailureTime: 9
          bindRequestCount: 3
          replayedTxMsgCount: 7
          replayStartCount: 4
          clientProfileDeniedDiscardedMsgCount: 4
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 1
          replicationStandbyAckPropRxMsgCount: 0
          maxEffectiveBindCount: 6
          maxTtlExpiredToDmqMsgCount: 3
          maxRedeliveryExceededToDmqMsgCount: 7
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          otherBindFailureCount: 3
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 7
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 0
          lowestAckedMsgId: 3
          maxMsgSpoolUsageExceededDiscardedMsgCount: 3
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 5
          selector: selector
          maxBindCount: 1
          owner: owner
          maxSpoolUsage: 6
          replaySuccessCount: 1
          permission: no-access
          maxRedeliveryCount: 3
          msgSpoolPeakUsage: 3
          rxSelector: true
          deletedMsgCount: 7
          invalidSelectorBindFailureCount: 4
          destinationTopic: destinationTopic
          lowPriorityMsgCongestionDiscardedMsgCount: 6
          selectorMatchedMsgCount: 6
        collections:
          msgs:
            count: 0
          priorities:
            count: 6
          txFlows:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          txFlowsUri: txFlowsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTopicEndpointCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointTemplate:
      example:
        maxBindCount: 0
        eventMsgSpoolUsageThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        topicEndpointTemplateName: topicEndpointTemplateName
        redeliveryEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        rejectLowPriorityMsgLimit: 7
        maxRedeliveryCount: 5
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        respectMsgPriorityEnabled: true
        eventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 6
          setPercent: 9
          setValue: 6
          clearValue: 8
        topicEndpointNameFilter: topicEndpointNameFilter
        maxMsgSpoolUsage: 5
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
      properties:
        accessType:
          description: |
            The access type for delivering messages to consumer flows. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
          type: string
        consumerAckPropagationEnabled:
          description: Indicates whether the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN is enabled.
          type: boolean
        deadMsgQueue:
          description: The name of the Dead Message Queue (DMQ).
          type: string
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxBindCount:
          description: The maximum number of consumer flows that can bind.
          format: int64
          type: integer
        maxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow.
          format: int64
          type: integer
        maxMsgSize:
          description: The maximum message size allowed, in bytes (B).
          format: int32
          type: integer
        maxMsgSpoolUsage:
          description: The maximum message spool usage allowed, in megabytes (MB).
            A value of 0 only allows spooling of the last message received and disables
            quota checking.
          format: int64
          type: integer
        maxRedeliveryCount:
          description: The maximum number of message redelivery attempts that will
            occur prior to the message being discarded or moved to the DMQ. A value
            of 0 means to retry forever.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time in seconds a message can stay in the Topic
            Endpoint when `respectTtlEnabled` is `"true"`. A message expires when
            the lesser of the sender assigned time-to-live (TTL) in the message and
            the `maxTtl` configured for the Topic Endpoint, is exceeded. A value of
            0 disables expiry.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        permission:
          description: |
            The permission level for all consumers, excluding the owner. The allowed values and their meaning are:

            <pre>
            "no-access" - Disallows all access.
            "read-only" - Read-only access to the messages.
            "consume" - Consume (read and remove) messages.
            "modify-topic" - Consume messages or modify the topic/selector.
            "delete" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.
            </pre>
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
          type: string
        redeliveryEnabled:
          description: Enable or disable message redelivery. When enabled, the number
            of redelivery attempts is controlled by maxRedeliveryCount. When disabled,
            the message will never be delivered from the topic-endpoint more than
            once. Available since 2.18.
          type: boolean
        rejectLowPriorityMsgEnabled:
          description: Indicates whether the checking of low priority messages against
            the `rejectLowPriorityMsgLimit` is enabled.
          type: boolean
        rejectLowPriorityMsgLimit:
          description: The number of messages that are permitted before low priority
            messages are rejected.
          format: int64
          type: integer
        rejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-topic-endpoint-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Topic Endpoint is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-topic-endpoint-enabled
          - never
          type: string
        respectMsgPriorityEnabled:
          description: Indicates whether message priorities are respected. When enabled,
            messages are delivered in priority order, from 9 (highest) to 0 (lowest).
          type: boolean
        respectTtlEnabled:
          description: Indicates whether the time-to-live (TTL) for messages is respected.
            When enabled, expired messages are discarded or moved to the DMQ.
          type: boolean
        topicEndpointNameFilter:
          description: 'A wildcardable pattern used to determine which Topic Endpoints
            use settings from this Template. Two different wildcards are supported:
            * and >. Similar to topic filters or subscription patterns, a > matches
            anything (but only when used at the end), and a * matches zero or more
            characters but never a slash (/). A > is only a wildcard when used at
            the end, after a /. A * is only allowed at the end, after a slash (/).'
          type: string
        topicEndpointTemplateName:
          description: The name of the Topic Endpoint Template.
          type: string
      type: object
    MsgVpnTopicEndpointTemplateCollections:
      type: object
    MsgVpnTopicEndpointTemplateLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic Endpoint Template object.
          type: string
      type: object
    MsgVpnTopicEndpointTemplateResponse:
      example:
        data:
          maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointTemplatesResponse:
      example:
        data:
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointTxFlow:
      example:
        storeAndForwardAckedMsgCount: 4
        topicEndpointName: topicEndpointName
        ackedMsgCount: 0
        clientName: clientName
        lastAckedMsgId: 2
        sessionName: sessionName
        transportRetransmitMsgCount: 7
        highestAckPendingMsgId: 5
        redeliveredMsgCount: 3
        noLocalDelivery: true
        windowSize: 6
        windowClosedCount: 1
        usedWindowSize: 1
        bindTime: 6
        activityState: activityState
        deliveryState: deliveryState
        cutThroughAckedMsgCount: 1
        msgVpnName: msgVpnName
        unackedMsgCount: 1
        flowId: 5
        consumerRedeliveryRequestAllowed: true
        lowestAckPendingMsgId: 7
        maxUnackedMsgsExceededMsgCount: 9
        redeliveryRequestCount: 2
      properties:
        ackedMsgCount:
          description: The number of guaranteed messages delivered and acknowledged
            by the consumer.
          format: int64
          type: integer
        activityState:
          description: |
            The activity state of the Flow. The allowed values and their meaning are:

            <pre>
            "active-browser" - The Flow is active as a browser.
            "active-consumer" - The Flow is active as a consumer.
            "inactive" - The Flow is inactive.
            </pre>
          type: string
        bindTime:
          description: The timestamp of when the Flow bound to the Topic Endpoint.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        clientName:
          description: The name of the Client.
          type: string
        consumerRedeliveryRequestAllowed:
          description: Indicates whether redelivery requests can be received as negative
            acknowledgements (NACKs) from the consumer. Applicable only to REST consumers.
          type: boolean
        cutThroughAckedMsgCount:
          description: The number of guaranteed messages that used cut-through delivery
            and are acknowledged by the consumer.
          format: int64
          type: integer
        deliveryState:
          description: |
            The delivery state of the Flow. The allowed values and their meaning are:

            <pre>
            "closed" - The Flow is unbound.
            "opened" - The Flow is bound but inactive.
            "unbinding" - The Flow received an unbind request.
            "handshaking" - The Flow is handshaking to become active.
            "deliver-cut-through" - The Flow is streaming messages using direct+guaranteed delivery.
            "deliver-from-input-stream" - The Flow is streaming messages using guaranteed delivery.
            "deliver-from-memory" - The Flow throttled causing message delivery from memory (RAM).
            "deliver-from-spool" - The Flow stalled causing message delivery from spool (ADB or disk).
            </pre>
          type: string
        flowId:
          description: The identifier (ID) of the Flow.
          format: int64
          type: integer
        highestAckPendingMsgId:
          description: The highest identifier (ID) of message transmitted and waiting
            for acknowledgement.
          format: int64
          type: integer
        lastAckedMsgId:
          description: The identifier (ID) of the last message transmitted and acknowledged
            by the consumer.
          format: int64
          type: integer
        lowestAckPendingMsgId:
          description: The lowest identifier (ID) of message transmitted and waiting
            for acknowledgement.
          format: int64
          type: integer
        maxUnackedMsgsExceededMsgCount:
          description: The number of guaranteed messages that exceeded the maximum
            number of delivered unacknowledged messages.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        noLocalDelivery:
          description: Indicates whether not to deliver messages to a consumer that
            published them.
          type: boolean
        redeliveredMsgCount:
          description: The number of guaranteed messages that were redelivered.
          format: int64
          type: integer
        redeliveryRequestCount:
          description: The number of consumer requests via negative acknowledgements
            (NACKs) to redeliver guaranteed messages.
          format: int64
          type: integer
        sessionName:
          description: The name of the Transacted Session for the Flow.
          type: string
        storeAndForwardAckedMsgCount:
          description: The number of guaranteed messages that used store and forward
            delivery and are acknowledged by the consumer.
          format: int64
          type: integer
        topicEndpointName:
          description: The name of the Topic Endpoint.
          type: string
        transportRetransmitMsgCount:
          description: The number of guaranteed messages that were retransmitted at
            the transport layer as part of a single delivery attempt. Available since
            2.18.
          format: int64
          type: integer
        unackedMsgCount:
          description: The number of guaranteed messages delivered but not yet acknowledged
            by the consumer.
          format: int64
          type: integer
        usedWindowSize:
          description: The number of guaranteed messages using the available window
            size.
          format: int64
          type: integer
        windowClosedCount:
          description: The number of times the window for guaranteed messages was
            filled and closed before an acknowledgement was received.
          format: int64
          type: integer
        windowSize:
          description: The number of outstanding guaranteed messages that can be transmitted
            over the Flow before an acknowledgement is received.
          format: int64
          type: integer
      type: object
    MsgVpnTopicEndpointTxFlowCollections:
      type: object
    MsgVpnTopicEndpointTxFlowLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic Endpoint Transmit Flow object.
          type: string
      type: object
    MsgVpnTopicEndpointTxFlowResponse:
      example:
        data:
          storeAndForwardAckedMsgCount: 4
          topicEndpointName: topicEndpointName
          ackedMsgCount: 0
          clientName: clientName
          lastAckedMsgId: 2
          sessionName: sessionName
          transportRetransmitMsgCount: 7
          highestAckPendingMsgId: 5
          redeliveredMsgCount: 3
          noLocalDelivery: true
          windowSize: 6
          windowClosedCount: 1
          usedWindowSize: 1
          bindTime: 6
          activityState: activityState
          deliveryState: deliveryState
          cutThroughAckedMsgCount: 1
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          flowId: 5
          consumerRedeliveryRequestAllowed: true
          lowestAckPendingMsgId: 7
          maxUnackedMsgsExceededMsgCount: 9
          redeliveryRequestCount: 2
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlow'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointTxFlowsResponse:
      example:
        data:
        - storeAndForwardAckedMsgCount: 4
          topicEndpointName: topicEndpointName
          ackedMsgCount: 0
          clientName: clientName
          lastAckedMsgId: 2
          sessionName: sessionName
          transportRetransmitMsgCount: 7
          highestAckPendingMsgId: 5
          redeliveredMsgCount: 3
          noLocalDelivery: true
          windowSize: 6
          windowClosedCount: 1
          usedWindowSize: 1
          bindTime: 6
          activityState: activityState
          deliveryState: deliveryState
          cutThroughAckedMsgCount: 1
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          flowId: 5
          consumerRedeliveryRequestAllowed: true
          lowestAckPendingMsgId: 7
          maxUnackedMsgsExceededMsgCount: 9
          redeliveryRequestCount: 2
        - storeAndForwardAckedMsgCount: 4
          topicEndpointName: topicEndpointName
          ackedMsgCount: 0
          clientName: clientName
          lastAckedMsgId: 2
          sessionName: sessionName
          transportRetransmitMsgCount: 7
          highestAckPendingMsgId: 5
          redeliveredMsgCount: 3
          noLocalDelivery: true
          windowSize: 6
          windowClosedCount: 1
          usedWindowSize: 1
          bindTime: 6
          activityState: activityState
          deliveryState: deliveryState
          cutThroughAckedMsgCount: 1
          msgVpnName: msgVpnName
          unackedMsgCount: 1
          flowId: 5
          consumerRedeliveryRequestAllowed: true
          lowestAckPendingMsgId: 7
          maxUnackedMsgsExceededMsgCount: 9
          redeliveryRequestCount: 2
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlow'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTxFlowLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointsResponse:
      example:
        data:
        - averageRxByteRate: 5
          maxTtlExpiredDiscardedMsgCount: 8
          txMsgRate: 1
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 6
          selectorExaminedMsgCount: 4
          txUnackedMsgCount: 8
          maxMsgSize: 5
          rejectMsgToSenderOnDiscardBehavior: always
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayFailureCount: 6
          respectMsgPriorityEnabled: true
          bindSuccessCount: 2
          replicationStandbyRxMsgCount: 0
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 9
          lowestMsgId: 6
          egressEnabled: true
          respectTtlEnabled: true
          lastSelectorExaminedMsgId: 8
          lastReplayStartTime: 9
          msgSpoolUsage: 7
          lastReplayedMsgTxTime: 6
          rxByteRate: 7
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 6
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          maxRedeliveryExceededDiscardedMsgCount: 7
          rejectLowPriorityMsgLimit: 0
          eventSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          txByteRate: 2
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 4
          averageTxByteRate: 7
          maxBindCountExceededBindFailureCount: 2
          destinationGroupErrorDiscardedMsgCount: 1
          noLocalDeliveryDiscardedMsgCount: 5
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 9
          topicEndpointName: topicEndpointName
          maxTtl: 0
          spooledByteCount: 4
          averageRxMsgRate: 2
          maxTtlExpiredToDmqFailedMsgCount: 7
          redeliveredMsgCount: 4
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 3
          inProgressAckMsgCount: 1
          replicationActiveAckPropTxMsgCount: 9
          maxTtlExceededDiscardedMsgCount: 4
          selectorNotMatchedMsgCount: 8
          rxMsgRate: 5
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 9
          lastReplayFailureTime: 9
          bindRequestCount: 3
          replayedTxMsgCount: 7
          replayStartCount: 4
          clientProfileDeniedDiscardedMsgCount: 4
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 1
          replicationStandbyAckPropRxMsgCount: 0
          maxEffectiveBindCount: 6
          maxTtlExpiredToDmqMsgCount: 3
          maxRedeliveryExceededToDmqMsgCount: 7
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          otherBindFailureCount: 3
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 7
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 0
          lowestAckedMsgId: 3
          maxMsgSpoolUsageExceededDiscardedMsgCount: 3
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 5
          selector: selector
          maxBindCount: 1
          owner: owner
          maxSpoolUsage: 6
          replaySuccessCount: 1
          permission: no-access
          maxRedeliveryCount: 3
          msgSpoolPeakUsage: 3
          rxSelector: true
          deletedMsgCount: 7
          invalidSelectorBindFailureCount: 4
          destinationTopic: destinationTopic
          lowPriorityMsgCongestionDiscardedMsgCount: 6
          selectorMatchedMsgCount: 6
        - averageRxByteRate: 5
          maxTtlExpiredDiscardedMsgCount: 8
          txMsgRate: 1
          redeliveryEnabled: true
          maxMsgSizeExceededDiscardedMsgCount: 6
          selectorExaminedMsgCount: 4
          txUnackedMsgCount: 8
          maxMsgSize: 5
          rejectMsgToSenderOnDiscardBehavior: always
          eventBindCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replayFailureCount: 6
          respectMsgPriorityEnabled: true
          bindSuccessCount: 2
          replicationStandbyRxMsgCount: 0
          maxDeliveredUnackedMsgsPerFlow: 6
          lastSpooledMsgId: 9
          lowestMsgId: 6
          egressEnabled: true
          respectTtlEnabled: true
          lastSelectorExaminedMsgId: 8
          lastReplayStartTime: 9
          msgSpoolUsage: 7
          lastReplayedMsgTxTime: 6
          rxByteRate: 7
          alreadyBoundBindFailureCount: 5
          highestAckedMsgId: 6
          maxRedeliveryExceededToDmqFailedMsgCount: 0
          maxRedeliveryExceededDiscardedMsgCount: 7
          rejectLowPriorityMsgLimit: 0
          eventSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          txByteRate: 2
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          replayedAckedMsgCount: 4
          averageTxByteRate: 7
          maxBindCountExceededBindFailureCount: 2
          destinationGroupErrorDiscardedMsgCount: 1
          noLocalDeliveryDiscardedMsgCount: 5
          rejectLowPriorityMsgEnabled: true
          replicationStandbyAckedByAckPropMsgCount: 9
          topicEndpointName: topicEndpointName
          maxTtl: 0
          spooledByteCount: 4
          averageRxMsgRate: 2
          maxTtlExpiredToDmqFailedMsgCount: 7
          redeliveredMsgCount: 4
          virtualRouter: virtualRouter
          ingressEnabled: true
          spooledMsgCount: 3
          inProgressAckMsgCount: 1
          replicationActiveAckPropTxMsgCount: 9
          maxTtlExceededDiscardedMsgCount: 4
          selectorNotMatchedMsgCount: 8
          rxMsgRate: 5
          consumerAckPropagationEnabled: true
          networkTopic: networkTopic
          msgVpnName: msgVpnName
          averageTxMsgRate: 9
          lastReplayFailureTime: 9
          bindRequestCount: 3
          replayedTxMsgCount: 7
          replayStartCount: 4
          clientProfileDeniedDiscardedMsgCount: 4
          disabledBindFailureCount: 1
          createdByManagement: true
          disabledDiscardedMsgCount: 1
          replicationStandbyAckPropRxMsgCount: 0
          maxEffectiveBindCount: 6
          maxTtlExpiredToDmqMsgCount: 3
          maxRedeliveryExceededToDmqMsgCount: 7
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          otherBindFailureCount: 3
          lastReplayFailureReason: lastReplayFailureReason
          highestMsgId: 7
          lowPriorityMsgCongestionState: lowPriorityMsgCongestionState
          transportRetransmitMsgCount: 0
          lowestAckedMsgId: 3
          maxMsgSpoolUsageExceededDiscardedMsgCount: 3
          durable: true
          replayState: replayState
          bindTimeForwardingMode: bindTimeForwardingMode
          lastReplayCompleteTime: 5
          selector: selector
          maxBindCount: 1
          owner: owner
          maxSpoolUsage: 6
          replaySuccessCount: 1
          permission: no-access
          maxRedeliveryCount: 3
          msgSpoolPeakUsage: 3
          rxSelector: true
          deletedMsgCount: 7
          invalidSelectorBindFailureCount: 4
          destinationTopic: destinationTopic
          lowPriorityMsgCongestionDiscardedMsgCount: 6
          selectorMatchedMsgCount: 6
        collections:
        - msgs:
            count: 0
          priorities:
            count: 6
          txFlows:
            count: 1
        - msgs:
            count: 0
          priorities:
            count: 6
          txFlows:
            count: 1
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - txFlowsUri: txFlowsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
        - txFlowsUri: txFlowsUri
          prioritiesUri: prioritiesUri
          uri: uri
          msgsUri: msgsUri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpoint'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTransaction:
      example:
        timeInState: 5
        xid: xid
        clientId: 1
        clientName: clientName
        clientUsername: clientUsername
        idleTimeout: 5
        sessionName: sessionName
        msgVpnName: msgVpnName
        state: state
        type: type
        replicated: true
      properties:
        clientId:
          description: The identifier (ID) of the Client.
          format: int32
          type: integer
        clientName:
          description: The name of the Client.
          type: string
        clientUsername:
          description: The username of the Client.
          type: string
        idleTimeout:
          description: The number of seconds before an idle Transaction may be automatically
            rolled back and freed.
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        replicated:
          description: Indicates whether the Transaction is replicated.
          type: boolean
        sessionName:
          description: The name of the Transacted Session for the Transaction.
          type: string
        state:
          description: |
            The state of the Transaction. The allowed values and their meaning are:

            <pre>
            "active" - The Transaction was started.
            "suspended" - The Transaction was suspended.
            "idle" - The Transaction was ended.
            "prepared" - The Transaction was prepared.
            "complete" - The Transaction was committed or rolled back.
            </pre>
          type: string
        timeInState:
          description: The number of seconds the Transaction has remained in the current
            state.
          format: int32
          type: integer
        type:
          description: |
            The type of Transaction. The allowed values and their meaning are:

            <pre>
            "xa" - The Transaction is an XA Transaction.
            "local" - The Transaction is a local Transaction.
            </pre>
          type: string
        xid:
          description: The identifier (ID) of the Transaction.
          type: string
      type: object
    MsgVpnTransactionCollections:
      example:
        consumerMsgs:
          count: 0
        publisherMsgs:
          count: 6
      properties:
        consumerMsgs:
          $ref: '#/components/schemas/MsgVpnTransactionCollectionsConsumermsgs'
        publisherMsgs:
          $ref: '#/components/schemas/MsgVpnTransactionCollectionsPublishermsgs'
      type: object
    MsgVpnTransactionCollectionsConsumermsgs:
      example:
        count: 0
      properties:
        count:
          description: The total number of objects in the consumerMsgs collection.
          format: int64
          type: integer
      type: object
    MsgVpnTransactionCollectionsPublishermsgs:
      example:
        count: 6
      properties:
        count:
          description: The total number of objects in the publisherMsgs collection.
          format: int64
          type: integer
      type: object
    MsgVpnTransactionConsumerMsg:
      example:
        xid: xid
        endpointType: endpointType
        endpointName: endpointName
        msgId: 0
        msgVpnName: msgVpnName
        replicationGroupMsgId: replicationGroupMsgId
      properties:
        endpointName:
          description: The name of the Queue or Topic Endpoint source.
          type: string
        endpointType:
          description: |
            The type of endpoint source. The allowed values and their meaning are:

            <pre>
            "queue" - The Message is from a Queue.
            "topic-endpoint" - The Message is from a Topic Endpoint.
            </pre>
          type: string
        msgId:
          description: The identifier (ID) of the Message.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        replicationGroupMsgId:
          description: An ID that uniquely identifies this message within this replication
            group. Available since 2.21.
          type: string
        xid:
          description: The identifier (ID) of the Transaction.
          type: string
      type: object
    MsgVpnTransactionConsumerMsgCollections:
      type: object
    MsgVpnTransactionConsumerMsgLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Transaction Consumer Message object.
          type: string
      type: object
    MsgVpnTransactionConsumerMsgResponse:
      example:
        data:
          xid: xid
          endpointType: endpointType
          endpointName: endpointName
          msgId: 0
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnTransactionConsumerMsg'
        links:
          $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTransactionConsumerMsgsResponse:
      example:
        data:
        - xid: xid
          endpointType: endpointType
          endpointName: endpointName
          msgId: 0
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
        - xid: xid
          endpointType: endpointType
          endpointName: endpointName
          msgId: 0
          msgVpnName: msgVpnName
          replicationGroupMsgId: replicationGroupMsgId
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTransactionConsumerMsg'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTransactionConsumerMsgLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTransactionLinks:
      example:
        publisherMsgsUri: publisherMsgsUri
        consumerMsgsUri: consumerMsgsUri
        uri: uri
      properties:
        consumerMsgsUri:
          description: The URI of this Replicated Local Transaction or XA Transaction's
            collection of Transaction Consumer Message objects.
          type: string
        publisherMsgsUri:
          description: The URI of this Replicated Local Transaction or XA Transaction's
            collection of Transaction Publisher Message objects.
          type: string
        uri:
          description: The URI of this Replicated Local Transaction or XA Transaction
            object.
          type: string
      type: object
    MsgVpnTransactionPublisherMsg:
      example:
        xid: xid
        msgId: 0
        topic: topic
        msgVpnName: msgVpnName
      properties:
        msgId:
          description: The identifier (ID) of the Message.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        topic:
          description: The topic destination of the Message.
          type: string
        xid:
          description: The identifier (ID) of the Transaction.
          type: string
      type: object
    MsgVpnTransactionPublisherMsgCollections:
      type: object
    MsgVpnTransactionPublisherMsgLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Transaction Publisher Message object.
          type: string
      type: object
    MsgVpnTransactionPublisherMsgResponse:
      example:
        data:
          xid: xid
          msgId: 0
          topic: topic
          msgVpnName: msgVpnName
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/MsgVpnTransactionPublisherMsg'
        links:
          $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTransactionPublisherMsgsResponse:
      example:
        data:
        - xid: xid
          msgId: 0
          topic: topic
          msgVpnName: msgVpnName
        - xid: xid
          msgId: 0
          topic: topic
          msgVpnName: msgVpnName
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTransactionPublisherMsg'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTransactionPublisherMsgLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTransactionResponse:
      example:
        data:
          timeInState: 5
          xid: xid
          clientId: 1
          clientName: clientName
          clientUsername: clientUsername
          idleTimeout: 5
          sessionName: sessionName
          msgVpnName: msgVpnName
          state: state
          type: type
          replicated: true
        collections:
          consumerMsgs:
            count: 0
          publisherMsgs:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          publisherMsgsUri: publisherMsgsUri
          consumerMsgsUri: consumerMsgsUri
          uri: uri
      properties:
        collections:
          $ref: '#/components/schemas/MsgVpnTransactionCollections'
        data:
          $ref: '#/components/schemas/MsgVpnTransaction'
        links:
          $ref: '#/components/schemas/MsgVpnTransactionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTransactionsResponse:
      example:
        data:
        - timeInState: 5
          xid: xid
          clientId: 1
          clientName: clientName
          clientUsername: clientUsername
          idleTimeout: 5
          sessionName: sessionName
          msgVpnName: msgVpnName
          state: state
          type: type
          replicated: true
        - timeInState: 5
          xid: xid
          clientId: 1
          clientName: clientName
          clientUsername: clientUsername
          idleTimeout: 5
          sessionName: sessionName
          msgVpnName: msgVpnName
          state: state
          type: type
          replicated: true
        collections:
        - consumerMsgs:
            count: 0
          publisherMsgs:
            count: 6
        - consumerMsgs:
            count: 0
          publisherMsgs:
            count: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - publisherMsgsUri: publisherMsgsUri
          consumerMsgsUri: consumerMsgsUri
          uri: uri
        - publisherMsgsUri: publisherMsgsUri
          consumerMsgsUri: consumerMsgsUri
          uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnTransactionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTransaction'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTransactionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnsResponse:
      example:
        data:
        - replicationRemoteBridgeName: replicationRemoteBridgeName
          averageRxByteRate: 9
          txUncompressedByteRate: 3
          serviceRestIncomingPlainTextEnabled: true
          txCompressedByteRate: 4
          discardedRxMsgCount: 9
          replicationAckPropagationIntervalMsgCount: 9
          state: state
          serviceWebPlainTextUp: true
          replicationStandbyAckPropOutOfSeqRxMsgCount: 1
          restTlsServerCertValidateDateEnabled: true
          serviceWebTlsFailureReason: serviceWebTlsFailureReason
          replicationActivePromotedQueuedMsgCount: 9
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 6
          authenticationClientCertUsernameSource: certificate-thumbprint
          configSyncLocalRole: configSyncLocalRole
          authenticationClientCertMaxChainDepth: 8
          msgSpoolUsage: 5
          serviceMqttWebSocketEnabled: true
          serviceWebPlainTextFailureReason: serviceWebPlainTextFailureReason
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceMqttWebSocketFailureReason: serviceMqttWebSocketFailureReason
          authenticationClientCertEnabled: true
          averageRxCompressedByteRate: 6
          serviceSmfPlainTextFailureReason: serviceSmfPlainTextFailureReason
          serviceWebTlsUp: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          serviceRestIncomingPlainTextFailureReason: serviceRestIncomingPlainTextFailureReason
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          serviceMqttPlainTextCompressed: true
          eventPublishTopicFormatSmfEnabled: true
          maxEffectiveEndpointCount: 3
          authenticationBasicProfileName: authenticationBasicProfileName
          replicationBridgeBoundToQueue: true
          serviceRestIncomingMaxConnectionCount: 7
          serviceAmqpTlsListenPort: 2
          averageTxByteRate: 1
          eventServiceAmqpConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceRestMode: gateway
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          replicationBridgeName: replicationBridgeName
          maxSubscriptionCount: 3
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 9
          replicationBridgeUp: true
          controlTxMsgCount: 0
          serviceAmqpMaxConnectionCount: 4
          serviceMqttTlsUp: true
          maxEgressFlowCount: 4
          serviceMqttWebSocketListenPort: 0
          loginTxMsgCount: 8
          serviceWebTlsEnabled: true
          replicationStandbyTransactionRequestFailureCount: 7
          eventIngressMsgRateThreshold:
            setValue: 5
            clearValue: 7
          replicationStandbyTransactionRequestCount: 7
          eventPublishSubscriptionMode: "off"
          eventConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 4
          serviceRestIncomingTlsListenPort: 4
          dataRxByteCount: 4
          tlsAverageTxByteRate: 6
          rxCompressedByteRate: 2
          dataTxMsgCount: 0
          eventPublishMsgVpnEnabled: true
          dmrEnabled: true
          txCompressionRatio: txCompressionRatio
          msgVpnName: msgVpnName
          eventEndpointCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replicationStandbyTransactionRequestSuccessCount: 9
          sempOverMsgBusAdminEnabled: true
          eventServiceRestIncomingConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfMaxConnectionCount: 0
          tlsRxByteCount: 0
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          configSyncLocalState: configSyncLocalState
          replicationStandbyReconcileRequestTxMsgCount: 9
          rxByteCount: 4
          replicationQueueMaxMsgSpoolUsage: 3
          eventServiceMqttConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfPlainTextUp: true
          sempOverMsgBusAdminClientEnabled: true
          averageTxCompressedByteRate: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 0
          serviceSmfTlsUp: true
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          replicationActiveMateFlowNotCongestedPeakTime: 6
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          replicationActiveSyncIneligiblePeakTime: 3
          serviceAmqpPlainTextListenPort: 8
          systemManager: true
          authenticationClientCertValidateDateEnabled: true
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          serviceRestIncomingTlsFailureReason: serviceRestIncomingTlsFailureReason
          configSyncLocalTimeInState: 6
          eventLogTag: eventLogTag
          rate:
            tlsAverageTxByteRate: 0
            averageRxByteRate: 7
            txMsgRate: 2
            averageTxByteRate: 3
            tlsRxByteRate: 0
            tlsTxByteRate: 7
            averageRxMsgRate: 0
            tlsAverageRxByteRate: 4
            rxByteRate: 3
            rxMsgRate: 8
            averageTxMsgRate: 2
            txByteRate: 4
          distributedCacheManagementEnabled: true
          discardedTxMsgCount: 0
          maxEffectiveTxFlowCount: 6
          serviceRestIncomingTlsCompressed: true
          msgReplayInitializingCount: 8
          bridgingTlsServerCertValidateNameEnabled: true
          rxMsgCount: 9
          replicationActiveSyncQueuedMsgCount: 1
          subscriptionExportProgress: 9
          tlsRxByteRate: 4
          counter:
            loginRxMsgCount: 3
            msgSpoolRxMsgCount: 0
            controlTxMsgCount: 4
            tlsRxByteCount: 4
            controlRxByteCount: 7
            tlsTxByteCount: 1
            dataRxByteCount: 8
            dataRxMsgCount: 7
            controlRxMsgCount: 6
            loginTxMsgCount: 4
            controlTxByteCount: 0
            dataTxByteCount: 3
            msgSpoolTxMsgCount: 6
            dataTxMsgCount: 3
            discardedRxMsgCount: 7
            discardedTxMsgCount: 5
          serviceAmqpPlainTextFailureReason: serviceAmqpPlainTextFailureReason
          averageTxUncompressedByteRate: 6
          controlTxByteCount: 7
          rxUncompressedByteRate: 6
          mqttRetainMaxMemory: 0
          msgSpoolMsgCount: 3
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          msgReplayFailedCount: 5
          eventIngressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceMqttMaxConnectionCount: 6
          txMsgRate: 3
          authorizationProfileName: authorizationProfileName
          serviceMqttTlsFailureReason: serviceMqttTlsFailureReason
          replicationActiveReconcileRequestRxMsgCount: 1
          serviceAmqpPlainTextCompressed: true
          serviceMqttPlainTextFailureReason: serviceMqttPlainTextFailureReason
          serviceMqttWebSocketCompressed: true
          replicationActiveSyncQueuedAsAsyncMsgCount: 5
          replicationBridgeEgressFlowWindowSize: 5
          restTlsServerCertMaxChainDepth: 1
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          bridgingTlsServerCertValidateDateEnabled: true
          maxEffectiveSubscriptionCount: 2
          authorizationType: ldap
          replicationStandbyRxMsgCount: 7
          serviceMqttTlsWebSocketCompressed: true
          msgSpoolRxMsgCount: 3
          bridgingTlsServerCertMaxChainDepth: 5
          replicationBridgeCompressedDataEnabled: true
          rxCompressedByteCount: 8
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          averageRxUncompressedByteRate: 6
          eventTransactedSessionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          eventSubscriptionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceMqttPlainTextListenPort: 0
          serviceMqttWebSocketUp: true
          dataTxByteCount: 9
          failureReason: failureReason
          serviceRestIncomingAuthorizationHeaderHandling: drop
          txUncompressedByteCount: 5
          rxByteRate: 3
          loginRxMsgCount: 6
          serviceRestIncomingPlainTextCompressed: true
          replicationQueueBound: true
          controlRxMsgCount: 3
          serviceMqttTlsWebSocketUp: true
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationActiveMateFlowCongestedPeakTime: 4
          txByteRate: 6
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          sempOverMsgBusEnabled: true
          maxTransactionCount: 8
          serviceMqttTlsListenPort: 2
          rxUncompressedByteCount: 8
          serviceRestIncomingTlsEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          tlsAverageRxByteRate: 7
          authenticationOauthEnabled: true
          tlsTxByteCount: 0
          averageRxMsgRate: 3
          dataRxMsgCount: 7
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 8
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          serviceAmqpTlsUp: true
          configSyncLocalLastResult: configSyncLocalLastResult
          replicationActiveLocallyConsumedMsgCount: 6
          txByteCount: 1
          replicationActiveAsyncQueuedMsgCount: 2
          serviceMqttTlsEnabled: true
          maxEffectiveTransactionCount: 8
          serviceMqttPlainTextUp: true
          serviceMqttTlsWebSocketFailureReason: serviceMqttTlsWebSocketFailureReason
          serviceSmfTlsFailureReason: serviceSmfTlsFailureReason
          replicationActiveAckPropTxMsgCount: 0
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          rxMsgRate: 4
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          txMsgCount: 2
          averageTxMsgRate: 6
          eventEgressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceAmqpTlsCompressed: true
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replicationActiveTransitionToSyncIneligibleCount: 4
          configSyncLocalKey: configSyncLocalKey
          controlRxByteCount: 3
          jndiEnabled: true
          maxEffectiveTransactedSessionCount: 1
          eventPublishClientEnabled: true
          replicationSyncEligible: true
          replicationActiveSyncEligiblePeakTime: 1
          maxEffectiveRxFlowCount: 0
          tlsAllowDowngradeToPlainTextEnabled: true
          replicationStandbyAckPropRxMsgCount: 3
          maxConnectionCount: 4
          msgReplayActiveCount: 5
          eventServiceSmfConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsTxByteRate: 7
          serviceAmqpPlainTextUp: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 7
          replicationBridgeRetryDelay: 5
          txCompressedByteCount: 2
          serviceAmqpTlsFailureReason: serviceAmqpTlsFailureReason
          alias: alias
          serviceMqttTlsWebSocketListenPort: 5
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          rxCompressionRatio: rxCompressionRatio
          maxIngressFlowCount: 9
          serviceMqttTlsCompressed: true
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 9
          msgReplayPendingCompleteCount: 7
          serviceRestIncomingTlsUp: true
          serviceRestIncomingPlainTextUp: true
          msgSpoolTxMsgCount: 9
          replicationRemoteBridgeUp: true
          maxMsgSpoolUsage: 1
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
        - replicationRemoteBridgeName: replicationRemoteBridgeName
          averageRxByteRate: 9
          txUncompressedByteRate: 3
          serviceRestIncomingPlainTextEnabled: true
          txCompressedByteRate: 4
          discardedRxMsgCount: 9
          replicationAckPropagationIntervalMsgCount: 9
          state: state
          serviceWebPlainTextUp: true
          replicationStandbyAckPropOutOfSeqRxMsgCount: 1
          restTlsServerCertValidateDateEnabled: true
          serviceWebTlsFailureReason: serviceWebTlsFailureReason
          replicationActivePromotedQueuedMsgCount: 9
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 6
          authenticationClientCertUsernameSource: certificate-thumbprint
          configSyncLocalRole: configSyncLocalRole
          authenticationClientCertMaxChainDepth: 8
          msgSpoolUsage: 5
          serviceMqttWebSocketEnabled: true
          serviceWebPlainTextFailureReason: serviceWebPlainTextFailureReason
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceMqttWebSocketFailureReason: serviceMqttWebSocketFailureReason
          authenticationClientCertEnabled: true
          averageRxCompressedByteRate: 6
          serviceSmfPlainTextFailureReason: serviceSmfPlainTextFailureReason
          serviceWebTlsUp: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          serviceRestIncomingPlainTextFailureReason: serviceRestIncomingPlainTextFailureReason
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          serviceMqttPlainTextCompressed: true
          eventPublishTopicFormatSmfEnabled: true
          maxEffectiveEndpointCount: 3
          authenticationBasicProfileName: authenticationBasicProfileName
          replicationBridgeBoundToQueue: true
          serviceRestIncomingMaxConnectionCount: 7
          serviceAmqpTlsListenPort: 2
          averageTxByteRate: 1
          eventServiceAmqpConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceRestMode: gateway
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          replicationBridgeName: replicationBridgeName
          maxSubscriptionCount: 3
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 9
          replicationBridgeUp: true
          controlTxMsgCount: 0
          serviceAmqpMaxConnectionCount: 4
          serviceMqttTlsUp: true
          maxEgressFlowCount: 4
          serviceMqttWebSocketListenPort: 0
          loginTxMsgCount: 8
          serviceWebTlsEnabled: true
          replicationStandbyTransactionRequestFailureCount: 7
          eventIngressMsgRateThreshold:
            setValue: 5
            clearValue: 7
          replicationStandbyTransactionRequestCount: 7
          eventPublishSubscriptionMode: "off"
          eventConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 4
          serviceRestIncomingTlsListenPort: 4
          dataRxByteCount: 4
          tlsAverageTxByteRate: 6
          rxCompressedByteRate: 2
          dataTxMsgCount: 0
          eventPublishMsgVpnEnabled: true
          dmrEnabled: true
          txCompressionRatio: txCompressionRatio
          msgVpnName: msgVpnName
          eventEndpointCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replicationStandbyTransactionRequestSuccessCount: 9
          sempOverMsgBusAdminEnabled: true
          eventServiceRestIncomingConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfMaxConnectionCount: 0
          tlsRxByteCount: 0
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          configSyncLocalState: configSyncLocalState
          replicationStandbyReconcileRequestTxMsgCount: 9
          rxByteCount: 4
          replicationQueueMaxMsgSpoolUsage: 3
          eventServiceMqttConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceSmfPlainTextUp: true
          sempOverMsgBusAdminClientEnabled: true
          averageTxCompressedByteRate: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 0
          serviceSmfTlsUp: true
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          replicationActiveMateFlowNotCongestedPeakTime: 6
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          replicationActiveSyncIneligiblePeakTime: 3
          serviceAmqpPlainTextListenPort: 8
          systemManager: true
          authenticationClientCertValidateDateEnabled: true
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          serviceRestIncomingTlsFailureReason: serviceRestIncomingTlsFailureReason
          configSyncLocalTimeInState: 6
          eventLogTag: eventLogTag
          rate:
            tlsAverageTxByteRate: 0
            averageRxByteRate: 7
            txMsgRate: 2
            averageTxByteRate: 3
            tlsRxByteRate: 0
            tlsTxByteRate: 7
            averageRxMsgRate: 0
            tlsAverageRxByteRate: 4
            rxByteRate: 3
            rxMsgRate: 8
            averageTxMsgRate: 2
            txByteRate: 4
          distributedCacheManagementEnabled: true
          discardedTxMsgCount: 0
          maxEffectiveTxFlowCount: 6
          serviceRestIncomingTlsCompressed: true
          msgReplayInitializingCount: 8
          bridgingTlsServerCertValidateNameEnabled: true
          rxMsgCount: 9
          replicationActiveSyncQueuedMsgCount: 1
          subscriptionExportProgress: 9
          tlsRxByteRate: 4
          counter:
            loginRxMsgCount: 3
            msgSpoolRxMsgCount: 0
            controlTxMsgCount: 4
            tlsRxByteCount: 4
            controlRxByteCount: 7
            tlsTxByteCount: 1
            dataRxByteCount: 8
            dataRxMsgCount: 7
            controlRxMsgCount: 6
            loginTxMsgCount: 4
            controlTxByteCount: 0
            dataTxByteCount: 3
            msgSpoolTxMsgCount: 6
            dataTxMsgCount: 3
            discardedRxMsgCount: 7
            discardedTxMsgCount: 5
          serviceAmqpPlainTextFailureReason: serviceAmqpPlainTextFailureReason
          averageTxUncompressedByteRate: 6
          controlTxByteCount: 7
          rxUncompressedByteRate: 6
          mqttRetainMaxMemory: 0
          msgSpoolMsgCount: 3
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          msgReplayFailedCount: 5
          eventIngressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceMqttMaxConnectionCount: 6
          txMsgRate: 3
          authorizationProfileName: authorizationProfileName
          serviceMqttTlsFailureReason: serviceMqttTlsFailureReason
          replicationActiveReconcileRequestRxMsgCount: 1
          serviceAmqpPlainTextCompressed: true
          serviceMqttPlainTextFailureReason: serviceMqttPlainTextFailureReason
          serviceMqttWebSocketCompressed: true
          replicationActiveSyncQueuedAsAsyncMsgCount: 5
          replicationBridgeEgressFlowWindowSize: 5
          restTlsServerCertMaxChainDepth: 1
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          bridgingTlsServerCertValidateDateEnabled: true
          maxEffectiveSubscriptionCount: 2
          authorizationType: ldap
          replicationStandbyRxMsgCount: 7
          serviceMqttTlsWebSocketCompressed: true
          msgSpoolRxMsgCount: 3
          bridgingTlsServerCertMaxChainDepth: 5
          replicationBridgeCompressedDataEnabled: true
          rxCompressedByteCount: 8
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          averageRxUncompressedByteRate: 6
          eventTransactedSessionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          eventSubscriptionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceMqttPlainTextListenPort: 0
          serviceMqttWebSocketUp: true
          dataTxByteCount: 9
          failureReason: failureReason
          serviceRestIncomingAuthorizationHeaderHandling: drop
          txUncompressedByteCount: 5
          rxByteRate: 3
          loginRxMsgCount: 6
          serviceRestIncomingPlainTextCompressed: true
          replicationQueueBound: true
          controlRxMsgCount: 3
          serviceMqttTlsWebSocketUp: true
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationActiveMateFlowCongestedPeakTime: 4
          txByteRate: 6
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          sempOverMsgBusEnabled: true
          maxTransactionCount: 8
          serviceMqttTlsListenPort: 2
          rxUncompressedByteCount: 8
          serviceRestIncomingTlsEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          tlsAverageRxByteRate: 7
          authenticationOauthEnabled: true
          tlsTxByteCount: 0
          averageRxMsgRate: 3
          dataRxMsgCount: 7
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 8
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          serviceAmqpTlsUp: true
          configSyncLocalLastResult: configSyncLocalLastResult
          replicationActiveLocallyConsumedMsgCount: 6
          txByteCount: 1
          replicationActiveAsyncQueuedMsgCount: 2
          serviceMqttTlsEnabled: true
          maxEffectiveTransactionCount: 8
          serviceMqttPlainTextUp: true
          serviceMqttTlsWebSocketFailureReason: serviceMqttTlsWebSocketFailureReason
          serviceSmfTlsFailureReason: serviceSmfTlsFailureReason
          replicationActiveAckPropTxMsgCount: 0
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          rxMsgRate: 4
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          txMsgCount: 2
          averageTxMsgRate: 6
          eventEgressFlowCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          serviceAmqpTlsCompressed: true
          eventMsgSpoolUsageThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          replicationActiveTransitionToSyncIneligibleCount: 4
          configSyncLocalKey: configSyncLocalKey
          controlRxByteCount: 3
          jndiEnabled: true
          maxEffectiveTransactedSessionCount: 1
          eventPublishClientEnabled: true
          replicationSyncEligible: true
          replicationActiveSyncEligiblePeakTime: 1
          maxEffectiveRxFlowCount: 0
          tlsAllowDowngradeToPlainTextEnabled: true
          replicationStandbyAckPropRxMsgCount: 3
          maxConnectionCount: 4
          msgReplayActiveCount: 5
          eventServiceSmfConnectionCountThreshold:
            clearPercent: 6
            setPercent: 9
            setValue: 6
            clearValue: 8
          tlsTxByteRate: 7
          serviceAmqpPlainTextUp: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 7
          replicationBridgeRetryDelay: 5
          txCompressedByteCount: 2
          serviceAmqpTlsFailureReason: serviceAmqpTlsFailureReason
          alias: alias
          serviceMqttTlsWebSocketListenPort: 5
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          rxCompressionRatio: rxCompressionRatio
          maxIngressFlowCount: 9
          serviceMqttTlsCompressed: true
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 9
          msgReplayPendingCompleteCount: 7
          serviceRestIncomingTlsUp: true
          serviceRestIncomingPlainTextUp: true
          msgSpoolTxMsgCount: 9
          replicationRemoteBridgeUp: true
          maxMsgSpoolUsage: 1
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
        collections:
        - restDeliveryPoints:
            count: 5
          clients:
            count: 7
          jndiConnectionFactories:
            count: 4
          clientProfiles:
            count: 5
          topicEndpoints:
            count: 9
          configSyncRemoteNodes:
            count: 9
          jndiQueues:
            count: 7
          queueTemplates:
            count: 6
          distributedCaches:
            count: 3
          bridges:
            count: 5
          transactions:
            count: 6
          jndiTopics:
            count: 1
          dmrBridges:
            count: 2
          clientUsernames:
            count: 2
          queues:
            count: 7
          mqttRetainCaches:
            count: 1
          topicEndpointTemplates:
            count: 9
          authenticationOauthProviders:
            count: 6
          replicatedTopics:
            count: 4
          replayLogs:
            count: 1
          authorizationGroups:
            count: 1
          mqttSessions:
            count: 1
          aclProfiles:
            count: 0
        - restDeliveryPoints:
            count: 5
          clients:
            count: 7
          jndiConnectionFactories:
            count: 4
          clientProfiles:
            count: 5
          topicEndpoints:
            count: 9
          configSyncRemoteNodes:
            count: 9
          jndiQueues:
            count: 7
          queueTemplates:
            count: 6
          distributedCaches:
            count: 3
          bridges:
            count: 5
          transactions:
            count: 6
          jndiTopics:
            count: 1
          dmrBridges:
            count: 2
          clientUsernames:
            count: 2
          queues:
            count: 7
          mqttRetainCaches:
            count: 1
          topicEndpointTemplates:
            count: 9
          authenticationOauthProviders:
            count: 6
          replicatedTopics:
            count: 4
          replayLogs:
            count: 1
          authorizationGroups:
            count: 1
          mqttSessions:
            count: 1
          aclProfiles:
            count: 0
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - authenticationOauthProvidersUri: authenticationOauthProvidersUri
          transactionsUri: transactionsUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          configSyncRemoteNodesUri: configSyncRemoteNodesUri
          clientsUri: clientsUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
        - authenticationOauthProvidersUri: authenticationOauthProvidersUri
          transactionsUri: transactionsUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          configSyncRemoteNodesUri: configSyncRemoteNodesUri
          clientsUri: clientsUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/MsgVpnCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/MsgVpn'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    SempError:
      example:
        code: 8
        description: description
        status: status
      properties:
        code:
          description: The error code which uniquely identifies the error that has
            occurred.
          format: int32
          type: integer
        description:
          description: The verbose description of the problem.
          type: string
        status:
          description: The terse status string associated with `code`.
          type: string
      required:
      - code
      - description
      - status
      type: object
    SempMeta:
      example:
        request:
          method: method
          uri: uri
        count: 6
        paging:
          nextPageUri: nextPageUri
          cursorQuery: cursorQuery
        error:
          code: 8
          description: description
          status: status
        responseCode: 4
      properties:
        count:
          description: The total number of objects requested, irrespective of page
            size. This may be a count of all objects in a collection or a filtered
            subset. It represents a snapshot in time and may change when paging through
            results.
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/SempError'
        paging:
          $ref: '#/components/schemas/SempPaging'
        request:
          $ref: '#/components/schemas/SempRequest'
        responseCode:
          description: The HTTP response code, one of 200 (success), 4xx (client error),
            or 5xx (server error).
          format: int32
          type: integer
      required:
      - request
      - responseCode
      type: object
    SempMetaOnlyResponse:
      properties:
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    SempPaging:
      example:
        nextPageUri: nextPageUri
        cursorQuery: cursorQuery
      properties:
        cursorQuery:
          description: The cursor, or position, for the next page of objects. Use
            this as the `cursor` query parameter of the next request.
          type: string
        nextPageUri:
          description: The URI of the next page of objects. `cursorQuery` is already
            embedded within this URI.
          type: string
      required:
      - cursorQuery
      - nextPageUri
      type: object
    SempRequest:
      example:
        method: method
        uri: uri
      properties:
        method:
          description: The HTTP method of the request which resulted in this response.
          type: string
        uri:
          description: The URI of the request which resulted in this response.
          type: string
      required:
      - method
      - uri
      type: object
    Session:
      example:
        createTime: 0
        sessionUsername: sessionUsername
        sessionId: sessionId
        lastActivityTime: 6
      properties:
        createTime:
          description: The timestamp of when the session was created. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time).
          format: int32
          type: integer
        lastActivityTime:
          description: The timestamp of when the last activity on the session occurred.
            This value represents the number of seconds since 1970-01-01 00:00:00
            UTC (Unix time).
          format: int32
          type: integer
        sessionId:
          description: The unique identifier for the session.
          type: string
        sessionUsername:
          description: The username used for authorization.
          type: string
      type: object
    SessionCollections:
      type: object
    SessionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Session object.
          type: string
      type: object
    SessionResponse:
      example:
        data:
          createTime: 0
          sessionUsername: sessionUsername
          sessionId: sessionId
          lastActivityTime: 6
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/Session'
        links:
          $ref: '#/components/schemas/SessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    SessionsResponse:
      example:
        data:
        - createTime: 0
          sessionUsername: sessionUsername
          sessionId: sessionId
          lastActivityTime: 6
        - createTime: 0
          sessionUsername: sessionUsername
          sessionId: sessionId
          lastActivityTime: 6
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/SessionCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/Session'
          type: array
        links:
          items:
            $ref: '#/components/schemas/SessionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    StandardDomainCertAuthoritiesResponse:
      example:
        data:
        - certAuthorityName: certAuthorityName
          certContent: certContent
        - certAuthorityName: certAuthorityName
          certContent: certContent
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/StandardDomainCertAuthorityCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/StandardDomainCertAuthority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/StandardDomainCertAuthorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    StandardDomainCertAuthority:
      example:
        certAuthorityName: certAuthorityName
        certContent: certContent
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority.
          type: string
        certContent:
          description: The PEM formatted content for the trusted root certificate
            of a standard domain Certificate Authority.
          type: string
      type: object
    StandardDomainCertAuthorityCollections:
      type: object
    StandardDomainCertAuthorityLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Standard Domain Certificate Authority object.
          type: string
      type: object
    StandardDomainCertAuthorityResponse:
      example:
        data:
          certAuthorityName: certAuthorityName
          certContent: certContent
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/StandardDomainCertAuthority'
        links:
          $ref: '#/components/schemas/StandardDomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    VirtualHostname:
      example:
        virtualHostname: virtualHostname
        msgVpnName: msgVpnName
        enabled: true
      properties:
        enabled:
          description: Enable or disable Virtual Hostname to Message VPN mapping.
          type: boolean
        msgVpnName:
          description: The message VPN to which this virtual hostname is mapped.
          type: string
        virtualHostname:
          description: The virtual hostname.
          type: string
      type: object
    VirtualHostnameCollections:
      type: object
    VirtualHostnameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Virtual Hostname object.
          type: string
      type: object
    VirtualHostnameResponse:
      example:
        data:
          virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        collections: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
          uri: uri
      properties:
        collections:
          type: object
        data:
          $ref: '#/components/schemas/VirtualHostname'
        links:
          $ref: '#/components/schemas/VirtualHostnameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    VirtualHostnamesResponse:
      example:
        data:
        - virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        - virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        collections:
        - null
        - null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 8
            description: description
            status: status
          responseCode: 4
        links:
        - uri: uri
        - uri: uri
      properties:
        collections:
          items:
            $ref: '#/components/schemas/VirtualHostnameCollections'
          type: array
        data:
          items:
            $ref: '#/components/schemas/VirtualHostname'
          type: array
        links:
          items:
            $ref: '#/components/schemas/VirtualHostnameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
  securitySchemes:
    basicAuth:
      description: basic authentication
      scheme: basic
      type: http
x-original-swagger-version: "2.0"
