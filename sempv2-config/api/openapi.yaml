openapi: 3.0.1
info:
  contact:
    email: support@solace.com
    name: Solace
    url: http://www.solace.com
  description: |+
    SEMP (starting in `v2`, see note 1) is a RESTful API for configuring, monitoring, and administering a Solace PubSub+ broker.

    SEMP uses URIs to address manageable **resources** of the Solace PubSub+ broker. Resources are individual **objects**, **collections** of objects, or (exclusively in the action API) **actions**. This document applies to the following API:


    API|Base Path|Purpose|Comments
    :---|:---|:---|:---
    Configuration|/SEMP/v2/config|Reading and writing config state|See note 2



    The following APIs are also available:


    API|Base Path|Purpose|Comments
    :---|:---|:---|:---
    Action|/SEMP/v2/action|Performing actions|See note 2
    Monitoring|/SEMP/v2/monitor|Querying operational parameters|See note 2



    Resources are always nouns, with individual objects being singular and collections being plural.

    Objects within a collection are identified by an `obj-id`, which follows the collection name with the form `collection-name/obj-id`.

    Actions within an object are identified by an `action-id`, which follows the object name with the form `obj-id/action-id`.

    Some examples:

    ```
    /SEMP/v2/config/msgVpns                        ; MsgVpn collection
    /SEMP/v2/config/msgVpns/a                      ; MsgVpn object named "a"
    /SEMP/v2/config/msgVpns/a/queues               ; Queue collection in MsgVpn "a"
    /SEMP/v2/config/msgVpns/a/queues/b             ; Queue object named "b" in MsgVpn "a"
    /SEMP/v2/action/msgVpns/a/queues/b/startReplay ; Action that starts a replay on Queue "b" in MsgVpn "a"
    /SEMP/v2/monitor/msgVpns/a/clients             ; Client collection in MsgVpn "a"
    /SEMP/v2/monitor/msgVpns/a/clients/c           ; Client object named "c" in MsgVpn "a"
    ```

    ## Collection Resources

    Collections are unordered lists of objects (unless described as otherwise), and are described by JSON arrays. Each item in the array represents an object in the same manner as the individual object would normally be represented. In the configuration API, the creation of a new object is done through its collection resource.

    ## Object and Action Resources

    Objects are composed of attributes, actions, collections, and other objects. They are described by JSON objects as name/value pairs. The collections and actions of an object are not contained directly in the object's JSON content; rather the content includes an attribute containing a URI which points to the collections and actions. These contained resources must be managed through this URI. At a minimum, every object has one or more identifying attributes, and its own `uri` attribute which contains the URI pointing to itself.

    Actions are also composed of attributes, and are described by JSON objects as name/value pairs. Unlike objects, however, they are not members of a collection and cannot be retrieved, only performed. Actions only exist in the action API.

    Attributes in an object or action may have any combination of the following properties:


    Property|Meaning|Comments
    :---|:---|:---
    Identifying|Attribute is involved in unique identification of the object, and appears in its URI|
    Required|Attribute must be provided in the request|
    Read-Only|Attribute can only be read, not written.|See note 3
    Write-Only|Attribute can only be written, not read, unless the attribute is also opaque|See the documentation for the opaque property
    Requires-Disable|Attribute can only be changed when object is disabled|
    Deprecated|Attribute is deprecated, and will disappear in the next SEMP version|
    Opaque|Attribute can be set or retrieved in opaque form when the `opaquePassword` query parameter is present|See the `opaquePassword` query parameter documentation



    In some requests, certain attributes may only be provided in certain combinations with other attributes:


    Relationship|Meaning
    :---|:---
    Requires|Attribute may only be changed by a request if a particular attribute or combination of attributes is also provided in the request
    Conflicts|Attribute may only be provided in a request if a particular attribute or combination of attributes is not also provided in the request



    In the monitoring API, any non-identifying attribute may not be returned in a GET.

    ## HTTP Methods

    The following HTTP methods manipulate resources in accordance with these general principles. Note that some methods are only used in certain APIs:


    Method|Resource|Meaning|Request Body|Response Body|Missing Request Attributes
    :---|:---|:---|:---|:---|:---
    POST|Collection|Create object|Initial attribute values|Object attributes and metadata|Set to default
    PUT|Object|Create or replace object (see note 5)|New attribute values|Object attributes and metadata|Set to default, with certain exceptions (see note 4)
    PUT|Action|Performs action|Action arguments|Action metadata|N/A
    PATCH|Object|Update object|New attribute values|Object attributes and metadata|unchanged
    DELETE|Object|Delete object|Empty|Object metadata|N/A
    GET|Object|Get object|Empty|Object attributes and metadata|N/A
    GET|Collection|Get collection|Empty|Object attributes and collection metadata|N/A



    ## Common Query Parameters

    The following are some common query parameters that are supported by many method/URI combinations. Individual URIs may document additional parameters. Note that multiple query parameters can be used together in a single URI, separated by the ampersand character. For example:

    ```
    ; Request for the MsgVpns collection using two hypothetical query parameters
    ; "q1" and "q2" with values "val1" and "val2" respectively
    /SEMP/v2/config/msgVpns?q1=val1&q2=val2
    ```

    ### select

    Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. Use this query parameter to limit the size of the returned data for each returned object, return only those fields that are desired, or exclude fields that are not desired.

    The value of `select` is a comma-separated list of attribute names. If the list contains attribute names that are not prefaced by `-`, only those attributes are included in the response. If the list contains attribute names that are prefaced by `-`, those attributes are excluded from the response. If the list contains both types, then the difference of the first set of attributes and the second set of attributes is returned. If the list is empty (i.e. `select=`), no attributes are returned.

    All attributes that are prefaced by `-` must follow all attributes that are not prefaced by `-`. In addition, each attribute name in the list must match at least one attribute in the object.

    Names may include the `*` wildcard (zero or more characters). Nested attribute names are supported using periods (e.g. `parentName.childName`).

    Some examples:

    ```
    ; List of all MsgVpn names
    /SEMP/v2/config/msgVpns?select=msgVpnName
    ; List of all MsgVpn and their attributes except for their names
    /SEMP/v2/config/msgVpns?select=-msgVpnName
    ; Authentication attributes of MsgVpn "finance"
    /SEMP/v2/config/msgVpns/finance?select=authentication*
    ; All attributes of MsgVpn "finance" except for authentication attributes
    /SEMP/v2/config/msgVpns/finance?select=-authentication*
    ; Access related attributes of Queue "orderQ" of MsgVpn "finance"
    /SEMP/v2/config/msgVpns/finance/queues/orderQ?select=owner,permission
    ```

    ### where

    Include in the response only objects where certain conditions are true. Use this query parameter to limit which objects are returned to those whose attribute values meet the given conditions.

    The value of `where` is a comma-separated list of expressions. All expressions must be true for the object to be included in the response. Each expression takes the form:

    ```
    expression  = attribute-name OP value
    OP          = '==' | '!=' | '&lt;' | '&gt;' | '&lt;=' | '&gt;='
    ```

    `value` may be a number, string, `true`, or `false`, as appropriate for the type of `attribute-name`. Greater-than and less-than comparisons only work for numbers. A `*` in a string `value` is interpreted as a wildcard (zero or more characters). Some examples:

    ```
    ; Only enabled MsgVpns
    /SEMP/v2/config/msgVpns?where=enabled==true
    ; Only MsgVpns using basic non-LDAP authentication
    /SEMP/v2/config/msgVpns?where=authenticationBasicEnabled==true,authenticationBasicType!=ldap
    ; Only MsgVpns that allow more than 100 client connections
    /SEMP/v2/config/msgVpns?where=maxConnectionCount>100
    ; Only MsgVpns with msgVpnName starting with "B":
    /SEMP/v2/config/msgVpns?where=msgVpnName==B*
    ```

    ### count

    Limit the count of objects in the response. This can be useful to limit the size of the response for large collections. The minimum value for `count` is `1` and the default is `10`. There is also a per-collection maximum value to limit request handling time. For example:

    ```
    ; Up to 25 MsgVpns
    /SEMP/v2/config/msgVpns?count=25
    ```

    ### cursor

    The cursor, or position, for the next page of objects. Cursors are opaque data that should not be created or interpreted by SEMP clients, and should only be used as described below.

    When a request is made for a collection and there may be additional objects available for retrieval that are not included in the initial response, the response will include a `cursorQuery` field containing a cursor. The value of this field can be specified in the `cursor` query parameter of a subsequent request to retrieve the next page of objects. For convenience, an appropriate URI is constructed automatically by the broker and included in the `nextPageUri` field of the response. This URI can be used directly to retrieve the next page of objects.

    ### opaquePassword

    Attributes with the opaque property are also write-only and so cannot normally be retrieved in a GET. However, when a password is provided in the `opaquePassword` query parameter, attributes with the opaque property are retrieved in a GET in opaque form, encrypted with this password. The query parameter can also be used on a POST, PATCH, or PUT to set opaque attributes using opaque attribute values retrieved in a GET, so long as:

    1. the same password that was used to retrieve the opaque attribute values is provided; and

    2. the broker to which the request is being sent has the same major and minor SEMP version as the broker that produced the opaque attribute values.

    The password provided in the query parameter must be a minimum of 8 characters and a maximum of 128 characters.

    The query parameter can only be used in the configuration API, and only over HTTPS.

    ## Authentication

    When a client makes its first SEMPv2 request, it must supply a username and password using HTTP Basic authentication.

    If authentication is successful, the broker returns a cookie containing a session key. The client can omit the username and password from subsequent requests, because the broker now uses the session cookie for authentication instead. When the session expires or is deleted, the client must provide the username and password again, and the broker creates a new session.

    There are a limited number of session slots available on the broker. The broker returns 529 No SEMP Session Available if it is not able to allocate a session. For this reason, all clients that use SEMPv2 should support cookies.

    If certain attributes—such as a user's password—are changed, the broker automatically deletes the affected sessions. These attributes are documented below. However, changes in external user configuration data stored on a RADIUS or LDAP server do not trigger the broker to delete the associated session(s), therefore you must do this manually, if required.

    A client can retrieve its current session information using the /about/user endpoint, delete its own session using the /about/user/logout endpoint, and manage all sessions using the /sessions endpoint.

    ## Help

    Visit [our website](https://solace.com) to learn more about Solace.

    You can also download the SEMP API specifications by clicking [here](https://solace.com/downloads/).

    If you need additional support, please contact us at [support@solace.com](mailto:support@solace.com).

    ## Notes

    Note|Description
    :---:|:---
    1|This specification defines SEMP starting in "v2", and not the original SEMP "v1" interface. Request and response formats between "v1" and "v2" are entirely incompatible, although both protocols share a common port configuration on the Solace PubSub+ broker. They are differentiated by the initial portion of the URI path, one of either "/SEMP/" or "/SEMP/v2/"
    2|This API is partially implemented. Only a subset of all objects are available.
    3|Read-only attributes may appear in POST and PUT/PATCH requests. However, if a read-only attribute is not marked as identifying, it will be ignored during a PUT/PATCH.
    4|On a PUT, if the SEMP user is not authorized to modify the attribute, its value is left unchanged rather than set to default. In addition, the values of write-only attributes are not set to their defaults on a PUT, except in the following two cases: there is a mutual requires relationship with another non-write-only attribute, both attributes are absent from the request, and the non-write-only attribute is not currently set to its default value; or the attribute is also opaque and the `opaquePassword` query parameter is provided in the request.
    5|On a PUT, if the object does not exist, it is created first.

  title: SEMP (Solace Element Management Protocol)
  version: "2.21"
servers:
- url: http://www.solace.com/SEMP/v2/config
- url: https://www.solace.com/SEMP/v2/config
tags: []
paths:
  /:
    get:
      description: |-
        Get a Broker object.

        This object contains global configuration for the message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        tlsServerCertContent||x||x
        tlsServerCertPassword||x||



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:


        Attribute|Access Scope/Level
        :---|:---:
        guaranteedMsgingEnabled|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-only
        guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-only
        guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-only
        guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-only
        guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-only
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-only
        guaranteedMsgingMaxCacheUsage|global/read-only
        guaranteedMsgingMaxMsgSpoolUsage|global/read-only
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-only
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-only
        guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-only
        serviceAmqpEnabled|global/read-only
        serviceAmqpTlsListenPort|global/read-only
        serviceEventConnectionCountThreshold.clearPercent|global/read-only
        serviceEventConnectionCountThreshold.clearValue|global/read-only
        serviceEventConnectionCountThreshold.setPercent|global/read-only
        serviceEventConnectionCountThreshold.setValue|global/read-only
        serviceHealthCheckEnabled|global/read-only
        serviceHealthCheckListenPort|global/read-only
        serviceMateLinkEnabled|global/read-only
        serviceMateLinkListenPort|global/read-only
        serviceMqttEnabled|global/read-only
        serviceMsgBackboneEnabled|global/read-only
        serviceRedundancyEnabled|global/read-only
        serviceRedundancyFirstListenPort|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-only
        serviceRestIncomingEnabled|global/read-only
        serviceRestOutgoingEnabled|global/read-only
        serviceSempLegacyTimeoutEnabled|global/read-only
        serviceSempPlainTextEnabled|global/read-only
        serviceSempPlainTextListenPort|global/read-only
        serviceSempSessionIdleTimeout|global/read-only
        serviceSempSessionMaxLifetime|global/read-only
        serviceSempTlsEnabled|global/read-only
        serviceSempTlsListenPort|global/read-only
        serviceSmfCompressionListenPort|global/read-only
        serviceSmfEnabled|global/read-only
        serviceSmfEventConnectionCountThreshold.clearPercent|global/read-only
        serviceSmfEventConnectionCountThreshold.clearValue|global/read-only
        serviceSmfEventConnectionCountThreshold.setPercent|global/read-only
        serviceSmfEventConnectionCountThreshold.setValue|global/read-only
        serviceSmfPlainTextListenPort|global/read-only
        serviceSmfRoutingControlListenPort|global/read-only
        serviceSmfTlsListenPort|global/read-only
        serviceTlsEventConnectionCountThreshold.clearPercent|global/read-only
        serviceTlsEventConnectionCountThreshold.clearValue|global/read-only
        serviceTlsEventConnectionCountThreshold.setPercent|global/read-only
        serviceTlsEventConnectionCountThreshold.setValue|global/read-only
        serviceWebTransportEnabled|global/read-only
        serviceWebTransportPlainTextListenPort|global/read-only
        serviceWebTransportTlsListenPort|global/read-only
        serviceWebTransportWebUrlSuffix|global/read-only
        tlsBlockVersion11Enabled|global/read-only
        tlsCipherSuiteManagementList|global/read-only
        tlsCipherSuiteMsgBackboneList|global/read-only
        tlsCipherSuiteSecureShellList|global/read-only
        tlsCrimeExploitProtectionEnabled|global/read-only
        tlsServerCertContent|global/read-only
        tlsStandardDomainCertificateAuthoritiesEnabled|vpn/read-only
        tlsTicketLifetime|global/read-only



        This has been available since 2.13.
      operationId: getBroker
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResponse'
          description: The Broker object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Broker object.
      tags:
      - all
    patch:
      description: |-
        Update a Broker object. Any attribute missing from the request will be left unchanged.

        This object contains global configuration for the message broker.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        serviceAmqpTlsListenPort||||x||
        serviceHealthCheckListenPort||||x||
        serviceMateLinkListenPort||||x||
        serviceRedundancyFirstListenPort||||x||
        serviceSempPlainTextListenPort||||x||
        serviceSempTlsListenPort||||x||
        serviceSmfCompressionListenPort||||x||
        serviceSmfPlainTextListenPort||||x||
        serviceSmfRoutingControlListenPort||||x||
        serviceSmfTlsListenPort||||x||
        serviceWebTransportPlainTextListenPort||||x||
        serviceWebTransportTlsListenPort||||x||
        serviceWebTransportWebUrlSuffix||||x||
        tlsServerCertContent|||x|||x
        tlsServerCertPassword|||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        Broker|tlsServerCertPassword|tlsServerCertContent|
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent
        EventThresholdByPercent|clearPercent|setPercent|
        EventThresholdByPercent|setPercent|clearPercent|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:


        Attribute|Access Scope/Level
        :---|:---:
        authClientCertRevocationCheckMode|global/admin
        guaranteedMsgingEnabled|global/read-write
        guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-write
        guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-write
        guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-write
        guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-write
        guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-write
        guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-write
        guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-write
        guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-write
        guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-write
        guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-write
        guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-write
        guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-write
        guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-write
        guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-write
        guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-write
        guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-write
        guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-write
        guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-write
        guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-write
        guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-write
        guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-write
        guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-write
        guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-write
        guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-write
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-write
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-write
        guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-write
        guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-write
        guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-write
        guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-write
        guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-write
        guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-write
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-write
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-write
        guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-write
        guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-write
        guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-write
        guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-write
        guaranteedMsgingMaxCacheUsage|global/read-write
        guaranteedMsgingMaxMsgSpoolUsage|global/read-write
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-write
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-write
        guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-write
        serviceAmqpEnabled|global/read-write
        serviceAmqpTlsListenPort|global/read-write
        serviceEventConnectionCountThreshold.clearPercent|global/read-write
        serviceEventConnectionCountThreshold.clearValue|global/read-write
        serviceEventConnectionCountThreshold.setPercent|global/read-write
        serviceEventConnectionCountThreshold.setValue|global/read-write
        serviceHealthCheckEnabled|global/read-write
        serviceHealthCheckListenPort|global/read-write
        serviceMateLinkEnabled|global/read-write
        serviceMateLinkListenPort|global/read-write
        serviceMqttEnabled|global/read-write
        serviceMsgBackboneEnabled|global/read-write
        serviceRedundancyEnabled|global/read-write
        serviceRedundancyFirstListenPort|global/read-write
        serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-write
        serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-write
        serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-write
        serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-write
        serviceRestIncomingEnabled|global/read-write
        serviceRestOutgoingEnabled|global/read-write
        serviceSempLegacyTimeoutEnabled|global/read-write
        serviceSempPlainTextEnabled|global/read-write
        serviceSempPlainTextListenPort|global/read-write
        serviceSempSessionIdleTimeout|global/read-write
        serviceSempSessionMaxLifetime|global/read-write
        serviceSempTlsEnabled|global/read-write
        serviceSempTlsListenPort|global/read-write
        serviceSmfCompressionListenPort|global/read-write
        serviceSmfEnabled|global/read-write
        serviceSmfEventConnectionCountThreshold.clearPercent|global/read-write
        serviceSmfEventConnectionCountThreshold.clearValue|global/read-write
        serviceSmfEventConnectionCountThreshold.setPercent|global/read-write
        serviceSmfEventConnectionCountThreshold.setValue|global/read-write
        serviceSmfPlainTextListenPort|global/read-write
        serviceSmfRoutingControlListenPort|global/read-write
        serviceSmfTlsListenPort|global/read-write
        serviceTlsEventConnectionCountThreshold.clearPercent|global/read-write
        serviceTlsEventConnectionCountThreshold.clearValue|global/read-write
        serviceTlsEventConnectionCountThreshold.setPercent|global/read-write
        serviceTlsEventConnectionCountThreshold.setValue|global/read-write
        serviceWebTransportEnabled|global/read-write
        serviceWebTransportPlainTextListenPort|global/read-write
        serviceWebTransportTlsListenPort|global/read-write
        serviceWebTransportWebUrlSuffix|global/read-write
        tlsBlockVersion11Enabled|global/read-write
        tlsCipherSuiteManagementList|global/read-write
        tlsCipherSuiteMsgBackboneList|global/read-write
        tlsCipherSuiteSecureShellList|global/read-write
        tlsCrimeExploitProtectionEnabled|global/read-write
        tlsServerCertContent|global/read-write
        tlsServerCertPassword|global/read-write
        tlsStandardDomainCertificateAuthoritiesEnabled|global/read-write
        tlsTicketLifetime|global/read-write



        This has been available since 2.13.
      operationId: updateBroker
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker'
        description: The Broker object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResponse'
          description: The Broker object's attributes after being updated, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Broker object.
      tags:
      - all
      x-codegen-request-body-name: body
  /about:
    get:
      description: |-
        Get an About object.

        This provides metadata about the SEMP API, such as the version of the API supported by the broker.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.13.
      operationId: getAbout
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutResponse'
          description: The About object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an About object.
      tags:
      - all
      - about
  /about/api:
    get:
      description: |-
        Get an API Description object.

        The API Description object provides metadata about the SEMP API.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.2.
      operationId: getAboutApi
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutApiResponse'
          description: The API Description object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an API Description object.
      tags:
      - all
      - about
  /about/user:
    get:
      description: |-
        Get a User object.

        Session and access level information about the user accessing the SEMP API.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.2.
      operationId: getAboutUser
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserResponse'
          description: The User object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a User object.
      tags:
      - all
      - about
  /about/user/msgVpns:
    get:
      description: |-
        Get a list of User Message VPN objects.

        This provides information about the Message VPN access level for the username used to access the SEMP API.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.2.
      operationId: getAboutUserMsgVpns
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserMsgVpnsResponse'
          description: The list of User Message VPN objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of User Message VPN objects.
      tags:
      - all
      - about
  /about/user/msgVpns/{msgVpnName}:
    get:
      description: |-
        Get a User Message VPN object.

        This provides information about the Message VPN access level for the username used to access the SEMP API.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.2.
      operationId: getAboutUserMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserMsgVpnResponse'
          description: The User Message VPN object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a User Message VPN object.
      tags:
      - all
      - about
  /certAuthorities:
    get:
      deprecated: true
      description: |-
        Get a list of Certificate Authority objects.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x||x|
        certContent|||x|
        crlDayList|||x|
        crlTimeList|||x|
        crlUrl|||x|
        ocspNonResponderCertEnabled|||x|
        ocspOverrideUrl|||x|
        ocspTimeout|||x|
        revocationCheckEnabled|||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
      operationId: getCertAuthorities
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthoritiesResponse'
          description: The list of Certificate Authority objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Certificate Authority objects.
      tags:
      - all
      - certAuthority
    post:
      deprecated: true
      description: |-
        Create a Certificate Authority object. Any attribute missing from the request will be set to its default value.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x|||x|
        certContent|||||x|
        crlDayList|||||x|
        crlTimeList|||||x|
        crlUrl|||||x|
        ocspNonResponderCertEnabled|||||x|
        ocspOverrideUrl|||||x|
        ocspTimeout|||||x|
        revocationCheckEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        CertAuthority|crlDayList|crlTimeList|
        CertAuthority|crlTimeList|crlDayList|



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
      operationId: createCertAuthority
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertAuthority'
        description: The Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
          description: The Certificate Authority object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Certificate Authority object.
      tags:
      - all
      - certAuthority
      x-codegen-request-body-name: body
  /certAuthorities/{certAuthorityName}:
    delete:
      deprecated: true
      description: |-
        Delete a Certificate Authority object.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.

        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
      operationId: deleteCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Certificate Authority object.
      tags:
      - all
      - certAuthority
    get:
      deprecated: true
      description: |-
        Get a Certificate Authority object.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x||x|
        certContent|||x|
        crlDayList|||x|
        crlTimeList|||x|
        crlUrl|||x|
        ocspNonResponderCertEnabled|||x|
        ocspOverrideUrl|||x|
        ocspTimeout|||x|
        revocationCheckEnabled|||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
      operationId: getCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
          description: The Certificate Authority object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Certificate Authority object.
      tags:
      - all
      - certAuthority
    patch:
      deprecated: true
      description: |-
        Update a Certificate Authority object. Any attribute missing from the request will be left unchanged.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x|||x|
        certContent|||||x|
        crlDayList|||||x|
        crlTimeList|||||x|
        crlUrl||||x|x|
        ocspNonResponderCertEnabled|||||x|
        ocspOverrideUrl|||||x|
        ocspTimeout|||||x|
        revocationCheckEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        CertAuthority|crlDayList|crlTimeList|
        CertAuthority|crlTimeList|crlDayList|



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
      operationId: updateCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertAuthority'
        description: The Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
          description: The Certificate Authority object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Certificate Authority object.
      tags:
      - all
      - certAuthority
      x-codegen-request-body-name: body
    put:
      deprecated: true
      description: |-
        Replace a Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x|||x|
        certContent|||||x|
        crlDayList|||||x|
        crlTimeList|||||x|
        crlUrl||||x|x|
        ocspNonResponderCertEnabled|||||x|
        ocspOverrideUrl|||||x|
        ocspTimeout|||||x|
        revocationCheckEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        CertAuthority|crlDayList|crlTimeList|
        CertAuthority|crlTimeList|crlDayList|



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
      operationId: replaceCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertAuthority'
        description: The Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
          description: The Certificate Authority object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Certificate Authority object.
      tags:
      - all
      - certAuthority
      x-codegen-request-body-name: body
  /certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames:
    get:
      deprecated: true
      description: |-
        Get a list of OCSP Responder Trusted Common Name objects.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x||x|
        ocspTlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities.
      operationId: getCertAuthorityOcspTlsTrustedCommonNames
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNamesResponse'
          description: The list of OCSP Responder Trusted Common Name objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of OCSP Responder Trusted Common Name objects.
      tags:
      - all
      - certAuthority
    post:
      deprecated: true
      description: |-
        Create an OCSP Responder Trusted Common Name object. Any attribute missing from the request will be set to its default value.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x||x||x|
        ocspTlsTrustedCommonName|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities.
      operationId: createCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
        description: The OCSP Responder Trusted Common Name object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameResponse'
          description: The OCSP Responder Trusted Common Name object's attributes
            after being created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create an OCSP Responder Trusted Common Name object.
      tags:
      - all
      - certAuthority
      x-codegen-request-body-name: body
  /certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}:
    delete:
      deprecated: true
      description: |-
        Delete an OCSP Responder Trusted Common Name object.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.

        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities.
      operationId: deleteCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        in: path
        name: ocspTlsTrustedCommonName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete an OCSP Responder Trusted Common Name object.
      tags:
      - all
      - certAuthority
    get:
      deprecated: true
      description: |-
        Get an OCSP Responder Trusted Common Name object.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x||x|
        ocspTlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.19. Replaced by clientCertAuthorities.
      operationId: getCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        in: path
        name: ocspTlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameResponse'
          description: The OCSP Responder Trusted Common Name object's attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an OCSP Responder Trusted Common Name object.
      tags:
      - all
      - certAuthority
  /clientCertAuthorities:
    get:
      description: |-
        Get a list of Client Certificate Authority objects.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getClientCertAuthorities
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthoritiesResponse'
          description: The list of Client Certificate Authority objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Certificate Authority objects.
      tags:
      - all
      - clientCertAuthority
    post:
      description: |-
        Create a Client Certificate Authority object. Any attribute missing from the request will be set to its default value.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        ClientCertAuthority|crlDayList|crlTimeList|
        ClientCertAuthority|crlTimeList|crlDayList|



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: createClientCertAuthority
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertAuthority'
        description: The Client Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
          description: The Client Certificate Authority object's attributes after
            being created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Client Certificate Authority object.
      tags:
      - all
      - clientCertAuthority
      x-codegen-request-body-name: body
  /clientCertAuthorities/{certAuthorityName}:
    delete:
      description: |-
        Delete a Client Certificate Authority object.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.

        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: deleteClientCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Client Certificate Authority object.
      tags:
      - all
      - clientCertAuthority
    get:
      description: |-
        Get a Client Certificate Authority object.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getClientCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
          description: The Client Certificate Authority object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Certificate Authority object.
      tags:
      - all
      - clientCertAuthority
    patch:
      description: |-
        Update a Client Certificate Authority object. Any attribute missing from the request will be left unchanged.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x||||
        crlUrl||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        ClientCertAuthority|crlDayList|crlTimeList|
        ClientCertAuthority|crlTimeList|crlDayList|



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: updateClientCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertAuthority'
        description: The Client Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
          description: The Client Certificate Authority object's attributes after
            being updated, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Client Certificate Authority object.
      tags:
      - all
      - clientCertAuthority
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Client Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x||||
        crlUrl||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        ClientCertAuthority|crlDayList|crlTimeList|
        ClientCertAuthority|crlTimeList|crlDayList|



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: replaceClientCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertAuthority'
        description: The Client Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
          description: The Client Certificate Authority object's attributes after
            being replaced, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Client Certificate Authority object.
      tags:
      - all
      - clientCertAuthority
      x-codegen-request-body-name: body
  /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames:
    get:
      description: |-
        Get a list of OCSP Responder Trusted Common Name objects.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x|||
        ocspTlsTrustedCommonName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getClientCertAuthorityOcspTlsTrustedCommonNames
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNamesResponse'
          description: The list of OCSP Responder Trusted Common Name objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of OCSP Responder Trusted Common Name objects.
      tags:
      - all
      - clientCertAuthority
    post:
      description: |-
        Create an OCSP Responder Trusted Common Name object. Any attribute missing from the request will be set to its default value.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x||x|||
        ocspTlsTrustedCommonName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: createClientCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
        description: The OCSP Responder Trusted Common Name object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameResponse'
          description: The OCSP Responder Trusted Common Name object's attributes
            after being created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create an OCSP Responder Trusted Common Name object.
      tags:
      - all
      - clientCertAuthority
      x-codegen-request-body-name: body
  /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}:
    delete:
      description: |-
        Delete an OCSP Responder Trusted Common Name object.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.

        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: deleteClientCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        in: path
        name: ocspTlsTrustedCommonName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete an OCSP Responder Trusted Common Name object.
      tags:
      - all
      - clientCertAuthority
    get:
      description: |-
        Get an OCSP Responder Trusted Common Name object.

        When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x|||
        ocspTlsTrustedCommonName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getClientCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        in: path
        name: ocspTlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameResponse'
          description: The OCSP Responder Trusted Common Name object's attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an OCSP Responder Trusted Common Name object.
      tags:
      - all
      - clientCertAuthority
  /dmrClusters:
    get:
      description: |-
        Get a list of Cluster objects.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationBasicPassword||x||x
        authenticationClientCertContent||x||x
        authenticationClientCertPassword||x||
        dmrClusterName|x|||
        tlsServerCertEnforceTrustedCommonNameEnabled|||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusters
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClustersResponse'
          description: The list of Cluster objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Cluster objects.
      tags:
      - all
      - dmrCluster
    post:
      description: |-
        Create a Cluster object. Any attribute missing from the request will be set to its default value.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationBasicPassword||||x||x
        authenticationClientCertContent||||x||x
        authenticationClientCertPassword||||x||
        dmrClusterName|x|x||||
        nodeName|||x|||
        tlsServerCertEnforceTrustedCommonNameEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createDmrCluster
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrCluster'
        description: The Cluster object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
          description: The Cluster object's attributes after being created, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Cluster object.
      tags:
      - all
      - dmrCluster
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}:
    delete:
      description: |-
        Delete a Cluster object.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteDmrCluster
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Cluster object.
      tags:
      - all
      - dmrCluster
    get:
      description: |-
        Get a Cluster object.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationBasicPassword||x||x
        authenticationClientCertContent||x||x
        authenticationClientCertPassword||x||
        dmrClusterName|x|||
        tlsServerCertEnforceTrustedCommonNameEnabled|||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrCluster
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
          description: The Cluster object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Cluster object.
      tags:
      - all
      - dmrCluster
    patch:
      description: |-
        Update a Cluster object. Any attribute missing from the request will be left unchanged.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationBasicPassword|||x|x||x
        authenticationClientCertContent|||x|x||x
        authenticationClientCertPassword|||x|x||
        directOnlyEnabled||x||||
        dmrClusterName|x|x||||
        nodeName||x||||
        tlsServerCertEnforceTrustedCommonNameEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateDmrCluster
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrCluster'
        description: The Cluster object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
          description: The Cluster object's attributes after being updated, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Cluster object.
      tags:
      - all
      - dmrCluster
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Cluster object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationBasicPassword|||x|x||x
        authenticationClientCertContent|||x|x||x
        authenticationClientCertPassword|||x|x||
        directOnlyEnabled||x||||
        dmrClusterName|x|x||||
        nodeName||x||||
        tlsServerCertEnforceTrustedCommonNameEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: replaceDmrCluster
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrCluster'
        description: The Cluster object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
          description: The Cluster object's attributes after being replaced, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Cluster object.
      tags:
      - all
      - dmrCluster
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links:
    get:
      description: |-
        Get a list of Link objects.

        A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationBasicPassword||x||x
        dmrClusterName|x|||
        remoteNodeName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinks
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinksResponse'
          description: The list of Link objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Link objects.
      tags:
      - all
      - dmrCluster
    post:
      description: |-
        Create a Link object. Any attribute missing from the request will be set to its default value.

        A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationBasicPassword||||x||x
        dmrClusterName|x||x|||
        remoteNodeName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createDmrClusterLink
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLink'
        description: The Link object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
          description: The Link object's attributes after being created, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Link object.
      tags:
      - all
      - dmrCluster
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}:
    delete:
      description: |-
        Delete a Link object.

        A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteDmrClusterLink
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Link object.
      tags:
      - all
      - dmrCluster
    get:
      description: |-
        Get a Link object.

        A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationBasicPassword||x||x
        dmrClusterName|x|||
        remoteNodeName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLink
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
          description: The Link object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Link object.
      tags:
      - all
      - dmrCluster
    patch:
      description: |-
        Update a Link object. Any attribute missing from the request will be left unchanged.

        A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationBasicPassword|||x|x||x
        authenticationScheme||||x||
        dmrClusterName|x|x||||
        egressFlowWindowSize||||x||
        initiator||||x||
        remoteNodeName|x|x||||
        span||||x||
        transportCompressedEnabled||||x||
        transportTlsEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateDmrClusterLink
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLink'
        description: The Link object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
          description: The Link object's attributes after being updated, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Link object.
      tags:
      - all
      - dmrCluster
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Link object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationBasicPassword|||x|x||x
        authenticationScheme||||x||
        dmrClusterName|x|x||||
        egressFlowWindowSize||||x||
        initiator||||x||
        remoteNodeName|x|x||||
        span||||x||
        transportCompressedEnabled||||x||
        transportTlsEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: replaceDmrClusterLink
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLink'
        description: The Link object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
          description: The Link object's attributes after being replaced, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Link object.
      tags:
      - all
      - dmrCluster
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses:
    get:
      description: |-
        Get a list of Remote Address objects.

        Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        dmrClusterName|x|||
        remoteAddress|x|||
        remoteNodeName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinkRemoteAddresses
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressesResponse'
          description: The list of Remote Address objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Remote Address objects.
      tags:
      - all
      - dmrCluster
    post:
      description: |-
        Create a Remote Address object. Any attribute missing from the request will be set to its default value.

        Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        dmrClusterName|x||x|||
        remoteAddress|x|x||||
        remoteNodeName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createDmrClusterLinkRemoteAddress
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
        description: The Remote Address object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressResponse'
          description: The Remote Address object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Remote Address object.
      tags:
      - all
      - dmrCluster
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses/{remoteAddress}:
    delete:
      description: |-
        Delete a Remote Address object.

        Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteDmrClusterLinkRemoteAddress
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: 'The FQDN or IP address (and optional port) of the remote node.
          If a port is not provided, it will vary based on the transport encoding:
          55555 (plain-text), 55443 (encrypted), or 55003 (compressed).'
        in: path
        name: remoteAddress
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Remote Address object.
      tags:
      - all
      - dmrCluster
    get:
      description: |-
        Get a Remote Address object.

        Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        dmrClusterName|x|||
        remoteAddress|x|||
        remoteNodeName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusterLinkRemoteAddress
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: 'The FQDN or IP address (and optional port) of the remote node.
          If a port is not provided, it will vary based on the transport encoding:
          55555 (plain-text), 55443 (encrypted), or 55003 (compressed).'
        in: path
        name: remoteAddress
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressResponse'
          description: The Remote Address object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Remote Address object.
      tags:
      - all
      - dmrCluster
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames:
    get:
      deprecated: true
      description: |-
        Get a list of Trusted Common Name objects.

        The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        dmrClusterName|x||x|
        remoteNodeName|x||x|
        tlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getDmrClusterLinkTlsTrustedCommonNames
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNamesResponse'
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags:
      - all
      - dmrCluster
    post:
      deprecated: true
      description: |-
        Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value.

        The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        dmrClusterName|x||x||x|
        remoteNodeName|x||x||x|
        tlsTrustedCommonName|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: createDmrClusterLinkTlsTrustedCommonName
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
        description: The Trusted Common Name object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Trusted Common Name object.
      tags:
      - all
      - dmrCluster
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    delete:
      deprecated: true
      description: |-
        Delete a Trusted Common Name object.

        The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: deleteDmrClusterLinkTlsTrustedCommonName
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Trusted Common Name object.
      tags:
      - all
      - dmrCluster
    get:
      deprecated: true
      description: |-
        Get a Trusted Common Name object.

        The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        dmrClusterName|x||x|
        remoteNodeName|x||x|
        tlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getDmrClusterLinkTlsTrustedCommonName
      parameters:
      - description: The name of the Cluster.
        in: path
        name: dmrClusterName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the Link.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags:
      - all
      - dmrCluster
  /domainCertAuthorities:
    get:
      description: |-
        Get a list of Domain Certificate Authority objects.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getDomainCertAuthorities
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthoritiesResponse'
          description: The list of Domain Certificate Authority objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Domain Certificate Authority objects.
      tags:
      - all
      - domainCertAuthority
    post:
      description: |-
        Create a Domain Certificate Authority object. Any attribute missing from the request will be set to its default value.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: createDomainCertAuthority
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertAuthority'
        description: The Domain Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
          description: The Domain Certificate Authority object's attributes after
            being created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Domain Certificate Authority object.
      tags:
      - all
      - domainCertAuthority
      x-codegen-request-body-name: body
  /domainCertAuthorities/{certAuthorityName}:
    delete:
      description: |-
        Delete a Domain Certificate Authority object.

        Certificate Authorities trusted for domain verification.

        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: deleteDomainCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Domain Certificate Authority object.
      tags:
      - all
      - domainCertAuthority
    get:
      description: |-
        Get a Domain Certificate Authority object.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getDomainCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
          description: The Domain Certificate Authority object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Domain Certificate Authority object.
      tags:
      - all
      - domainCertAuthority
    patch:
      description: |-
        Update a Domain Certificate Authority object. Any attribute missing from the request will be left unchanged.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: updateDomainCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertAuthority'
        description: The Domain Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
          description: The Domain Certificate Authority object's attributes after
            being updated, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Domain Certificate Authority object.
      tags:
      - all
      - domainCertAuthority
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Domain Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: replaceDomainCertAuthority
      parameters:
      - description: The name of the Certificate Authority.
        in: path
        name: certAuthorityName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertAuthority'
        description: The Domain Certificate Authority object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
          description: The Domain Certificate Authority object's attributes after
            being replaced, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Domain Certificate Authority object.
      tags:
      - all
      - domainCertAuthority
      x-codegen-request-body-name: body
  /msgVpns:
    get:
      description: |-
        Get a list of Message VPN objects.

        Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||x|
        msgVpnName|x|||
        replicationBridgeAuthenticationBasicPassword||x||x
        replicationBridgeAuthenticationClientCertContent||x||x
        replicationBridgeAuthenticationClientCertPassword||x||
        replicationEnabledQueueBehavior||x||
        restTlsServerCertEnforceTrustedCommonNameEnabled|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpns
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnsResponse'
          description: The list of Message VPN objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Message VPN objects.
      tags:
      - all
      - msgVpn
    post:
      description: |-
        Create a Message VPN object. Any attribute missing from the request will be set to its default value.

        Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
        msgVpnName|x|x||||
        replicationBridgeAuthenticationBasicPassword||||x||x
        replicationBridgeAuthenticationClientCertContent||||x||x
        replicationBridgeAuthenticationClientCertPassword||||x||
        replicationEnabledQueueBehavior||||x||
        restTlsServerCertEnforceTrustedCommonNameEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent
        EventThresholdByValue|clearValue|setValue|
        EventThresholdByValue|setValue|clearValue|
        MsgVpn|authenticationBasicProfileName|authenticationBasicType|
        MsgVpn|authorizationProfileName|authorizationType|
        MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
        MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
        MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
        MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
        MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
        MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpn
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpn'
        description: The Message VPN object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
          description: The Message VPN object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Message VPN object.
      tags:
      - all
      - msgVpn
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}:
    delete:
      description: |-
        Delete a Message VPN object.

        Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Message VPN object.
      tags:
      - all
      - msgVpn
    get:
      description: |-
        Get a Message VPN object.

        Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||x|
        msgVpnName|x|||
        replicationBridgeAuthenticationBasicPassword||x||x
        replicationBridgeAuthenticationClientCertContent||x||x
        replicationBridgeAuthenticationClientCertPassword||x||
        replicationEnabledQueueBehavior||x||
        restTlsServerCertEnforceTrustedCommonNameEnabled|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
          description: The Message VPN object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Message VPN object.
      tags:
      - all
      - msgVpn
    patch:
      description: |-
        Update a Message VPN object. Any attribute missing from the request will be left unchanged.

        Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
        msgVpnName|x|x||||
        replicationBridgeAuthenticationBasicPassword|||x|||x
        replicationBridgeAuthenticationClientCertContent|||x|||x
        replicationBridgeAuthenticationClientCertPassword|||x|||
        replicationEnabledQueueBehavior|||x|||
        restTlsServerCertEnforceTrustedCommonNameEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent
        EventThresholdByValue|clearValue|setValue|
        EventThresholdByValue|setValue|clearValue|
        MsgVpn|authenticationBasicProfileName|authenticationBasicType|
        MsgVpn|authorizationProfileName|authorizationType|
        MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
        MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
        MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
        MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
        MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
        MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:


        Attribute|Access Scope/Level
        :---|:---:
        alias|global/read-write
        authenticationBasicEnabled|global/read-write
        authenticationBasicProfileName|global/read-write
        authenticationBasicRadiusDomain|global/read-write
        authenticationBasicType|global/read-write
        authenticationClientCertAllowApiProvidedUsernameEnabled|global/read-write
        authenticationClientCertEnabled|global/read-write
        authenticationClientCertMaxChainDepth|global/read-write
        authenticationClientCertRevocationCheckMode|global/read-write
        authenticationClientCertUsernameSource|global/read-write
        authenticationClientCertValidateDateEnabled|global/read-write
        authenticationKerberosAllowApiProvidedUsernameEnabled|global/read-write
        authenticationKerberosEnabled|global/read-write
        authenticationOauthEnabled|global/read-write
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
        bridgingTlsServerCertMaxChainDepth|global/read-write
        bridgingTlsServerCertValidateDateEnabled|global/read-write
        bridgingTlsServerCertValidateNameEnabled|global/read-write
        dmrEnabled|global/read-write
        exportSubscriptionsEnabled|global/read-write
        maxConnectionCount|global/read-write
        maxEgressFlowCount|global/read-write
        maxEndpointCount|global/read-write
        maxIngressFlowCount|global/read-write
        maxMsgSpoolUsage|global/read-write
        maxSubscriptionCount|global/read-write
        maxTransactedSessionCount|global/read-write
        maxTransactionCount|global/read-write
        mqttRetainMaxMemory|global/read-write
        replicationBridgeAuthenticationBasicClientUsername|global/read-write
        replicationBridgeAuthenticationBasicPassword|global/read-write
        replicationBridgeAuthenticationClientCertContent|global/read-write
        replicationBridgeAuthenticationClientCertPassword|global/read-write
        replicationBridgeAuthenticationScheme|global/read-write
        replicationBridgeCompressedDataEnabled|global/read-write
        replicationBridgeEgressFlowWindowSize|global/read-write
        replicationBridgeRetryDelay|global/read-write
        replicationBridgeTlsEnabled|global/read-write
        replicationBridgeUnidirectionalClientProfileName|global/read-write
        replicationEnabled|global/read-write
        replicationEnabledQueueBehavior|global/read-write
        replicationQueueMaxMsgSpoolUsage|global/read-write
        replicationRole|global/read-write
        restTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
        restTlsServerCertMaxChainDepth|global/read-write
        restTlsServerCertValidateDateEnabled|global/read-write
        restTlsServerCertValidateNameEnabled|global/read-write
        sempOverMsgBusAdminClientEnabled|global/read-write
        sempOverMsgBusAdminDistributedCacheEnabled|global/read-write
        sempOverMsgBusAdminEnabled|global/read-write
        sempOverMsgBusEnabled|global/read-write
        sempOverMsgBusShowEnabled|global/read-write
        serviceAmqpMaxConnectionCount|global/read-write
        serviceAmqpPlainTextListenPort|global/read-write
        serviceAmqpTlsListenPort|global/read-write
        serviceMqttMaxConnectionCount|global/read-write
        serviceMqttPlainTextListenPort|global/read-write
        serviceMqttTlsListenPort|global/read-write
        serviceMqttTlsWebSocketListenPort|global/read-write
        serviceMqttWebSocketListenPort|global/read-write
        serviceRestIncomingMaxConnectionCount|global/read-write
        serviceRestIncomingPlainTextListenPort|global/read-write
        serviceRestIncomingTlsListenPort|global/read-write
        serviceRestOutgoingMaxConnectionCount|global/read-write
        serviceSmfMaxConnectionCount|global/read-write
        serviceWebMaxConnectionCount|global/read-write



        This has been available since 2.0.
      operationId: updateMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpn'
        description: The Message VPN object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
          description: The Message VPN object's attributes after being updated, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Message VPN object.
      tags:
      - all
      - msgVpn
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Message VPN object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
        msgVpnName|x|x||||
        replicationBridgeAuthenticationBasicPassword|||x|||x
        replicationBridgeAuthenticationClientCertContent|||x|||x
        replicationBridgeAuthenticationClientCertPassword|||x|||
        replicationEnabledQueueBehavior|||x|||
        restTlsServerCertEnforceTrustedCommonNameEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent
        EventThresholdByValue|clearValue|setValue|
        EventThresholdByValue|setValue|clearValue|
        MsgVpn|authenticationBasicProfileName|authenticationBasicType|
        MsgVpn|authorizationProfileName|authorizationType|
        MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
        MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
        MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
        MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
        MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
        MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:


        Attribute|Access Scope/Level
        :---|:---:
        alias|global/read-write
        authenticationBasicEnabled|global/read-write
        authenticationBasicProfileName|global/read-write
        authenticationBasicRadiusDomain|global/read-write
        authenticationBasicType|global/read-write
        authenticationClientCertAllowApiProvidedUsernameEnabled|global/read-write
        authenticationClientCertEnabled|global/read-write
        authenticationClientCertMaxChainDepth|global/read-write
        authenticationClientCertRevocationCheckMode|global/read-write
        authenticationClientCertUsernameSource|global/read-write
        authenticationClientCertValidateDateEnabled|global/read-write
        authenticationKerberosAllowApiProvidedUsernameEnabled|global/read-write
        authenticationKerberosEnabled|global/read-write
        authenticationOauthEnabled|global/read-write
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
        bridgingTlsServerCertMaxChainDepth|global/read-write
        bridgingTlsServerCertValidateDateEnabled|global/read-write
        bridgingTlsServerCertValidateNameEnabled|global/read-write
        dmrEnabled|global/read-write
        exportSubscriptionsEnabled|global/read-write
        maxConnectionCount|global/read-write
        maxEgressFlowCount|global/read-write
        maxEndpointCount|global/read-write
        maxIngressFlowCount|global/read-write
        maxMsgSpoolUsage|global/read-write
        maxSubscriptionCount|global/read-write
        maxTransactedSessionCount|global/read-write
        maxTransactionCount|global/read-write
        mqttRetainMaxMemory|global/read-write
        replicationBridgeAuthenticationBasicClientUsername|global/read-write
        replicationBridgeAuthenticationBasicPassword|global/read-write
        replicationBridgeAuthenticationClientCertContent|global/read-write
        replicationBridgeAuthenticationClientCertPassword|global/read-write
        replicationBridgeAuthenticationScheme|global/read-write
        replicationBridgeCompressedDataEnabled|global/read-write
        replicationBridgeEgressFlowWindowSize|global/read-write
        replicationBridgeRetryDelay|global/read-write
        replicationBridgeTlsEnabled|global/read-write
        replicationBridgeUnidirectionalClientProfileName|global/read-write
        replicationEnabled|global/read-write
        replicationEnabledQueueBehavior|global/read-write
        replicationQueueMaxMsgSpoolUsage|global/read-write
        replicationRole|global/read-write
        restTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
        restTlsServerCertMaxChainDepth|global/read-write
        restTlsServerCertValidateDateEnabled|global/read-write
        restTlsServerCertValidateNameEnabled|global/read-write
        sempOverMsgBusAdminClientEnabled|global/read-write
        sempOverMsgBusAdminDistributedCacheEnabled|global/read-write
        sempOverMsgBusAdminEnabled|global/read-write
        sempOverMsgBusEnabled|global/read-write
        sempOverMsgBusShowEnabled|global/read-write
        serviceAmqpMaxConnectionCount|global/read-write
        serviceAmqpPlainTextListenPort|global/read-write
        serviceAmqpTlsListenPort|global/read-write
        serviceMqttMaxConnectionCount|global/read-write
        serviceMqttPlainTextListenPort|global/read-write
        serviceMqttTlsListenPort|global/read-write
        serviceMqttTlsWebSocketListenPort|global/read-write
        serviceMqttWebSocketListenPort|global/read-write
        serviceRestIncomingMaxConnectionCount|global/read-write
        serviceRestIncomingPlainTextListenPort|global/read-write
        serviceRestIncomingTlsListenPort|global/read-write
        serviceRestOutgoingMaxConnectionCount|global/read-write
        serviceSmfMaxConnectionCount|global/read-write
        serviceWebMaxConnectionCount|global/read-write



        This has been available since 2.0.
      operationId: replaceMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpn'
        description: The Message VPN object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
          description: The Message VPN object's attributes after being replaced, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Message VPN object.
      tags:
      - all
      - msgVpn
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles:
    get:
      description: |-
        Get a list of ACL Profile objects.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAclProfiles
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilesResponse'
          description: The list of ACL Profile objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of ACL Profile objects.
      tags:
      - all
      - msgVpn
      - aclProfile
    post:
      description: |-
        Create an ACL Profile object. Any attribute missing from the request will be set to its default value.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnAclProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfile'
        description: The ACL Profile object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
          description: The ACL Profile object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create an ACL Profile object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}:
    delete:
      description: |-
        Delete an ACL Profile object.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnAclProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete an ACL Profile object.
      tags:
      - all
      - msgVpn
      - aclProfile
    get:
      description: |-
        Get an ACL Profile object.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAclProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
          description: The ACL Profile object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an ACL Profile object.
      tags:
      - all
      - msgVpn
      - aclProfile
    patch:
      description: |-
        Update an ACL Profile object. Any attribute missing from the request will be left unchanged.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnAclProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfile'
        description: The ACL Profile object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
          description: The ACL Profile object's attributes after being updated, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update an ACL Profile object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace an ACL Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnAclProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfile'
        description: The ACL Profile object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
          description: The ACL Profile object's attributes after being replaced, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace an ACL Profile object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions:
    get:
      description: |-
        Get a list of Client Connect Exception objects.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        clientConnectExceptionAddress|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAclProfileClientConnectExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionsResponse'
          description: The list of Client Connect Exception objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Connect Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
    post:
      description: |-
        Create a Client Connect Exception object. Any attribute missing from the request will be set to its default value.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x|||
        clientConnectExceptionAddress|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnAclProfileClientConnectException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
        description: The Client Connect Exception object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionResponse'
          description: The Client Connect Exception object's attributes after being
            created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Client Connect Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}:
    delete:
      description: |-
        Delete a Client Connect Exception object.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnAclProfileClientConnectException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The IP address/netmask of the client connect exception in CIDR
          form.
        in: path
        name: clientConnectExceptionAddress
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Client Connect Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
    get:
      description: |-
        Get a Client Connect Exception object.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        clientConnectExceptionAddress|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAclProfileClientConnectException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The IP address/netmask of the client connect exception in CIDR
          form.
        in: path
        name: clientConnectExceptionAddress
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionResponse'
          description: The Client Connect Exception object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Connect Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions:
    get:
      deprecated: true
      description: |-
        Get a list of Publish Topic Exception objects.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x||x|
        msgVpnName|x||x|
        publishExceptionTopic|x||x|
        topicSyntax|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: getMsgVpnAclProfilePublishExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionsResponse'
          description: The list of Publish Topic Exception objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Publish Topic Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
    post:
      deprecated: true
      description: |-
        Create a Publish Topic Exception object. Any attribute missing from the request will be set to its default value.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x||x|
        msgVpnName|x||x||x|
        publishExceptionTopic|x|x|||x|
        topicSyntax|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: createMsgVpnAclProfilePublishException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
        description: The Publish Topic Exception object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionResponse'
          description: The Publish Topic Exception object's attributes after being
            created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Publish Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}:
    delete:
      deprecated: true
      description: |-
        Delete a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: deleteMsgVpnAclProfilePublishException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: topicSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: publishExceptionTopic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Publish Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
    get:
      deprecated: true
      description: |-
        Get a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x||x|
        msgVpnName|x||x|
        publishExceptionTopic|x||x|
        topicSyntax|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: getMsgVpnAclProfilePublishException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: topicSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: publishExceptionTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionResponse'
          description: The Publish Topic Exception object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Publish Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions:
    get:
      description: |-
        Get a list of Publish Topic Exception objects.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        publishTopicException|x|||
        publishTopicExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfilePublishTopicExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionsResponse'
          description: The list of Publish Topic Exception objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Publish Topic Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
    post:
      description: |-
        Create a Publish Topic Exception object. Any attribute missing from the request will be set to its default value.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x|||
        msgVpnName|x||x|||
        publishTopicException|x|x||||
        publishTopicExceptionSyntax|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: createMsgVpnAclProfilePublishTopicException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
        description: The Publish Topic Exception object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionResponse'
          description: The Publish Topic Exception object's attributes after being
            created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Publish Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions/{publishTopicExceptionSyntax},{publishTopicException}:
    delete:
      description: |-
        Delete a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnAclProfilePublishTopicException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: publishTopicExceptionSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: publishTopicException
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Publish Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
    get:
      description: |-
        Get a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        publishTopicException|x|||
        publishTopicExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfilePublishTopicException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: publishTopicExceptionSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: publishTopicException
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionResponse'
          description: The Publish Topic Exception object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Publish Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions:
    get:
      deprecated: true
      description: |-
        Get a list of Subscribe Topic Exception objects.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x||x|
        msgVpnName|x||x|
        subscribeExceptionTopic|x||x|
        topicSyntax|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: getMsgVpnAclProfileSubscribeExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionsResponse'
          description: The list of Subscribe Topic Exception objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Subscribe Topic Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
    post:
      deprecated: true
      description: |-
        Create a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x||x|
        msgVpnName|x||x||x|
        subscribeExceptionTopic|x|x|||x|
        topicSyntax|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: createMsgVpnAclProfileSubscribeException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
        description: The Subscribe Topic Exception object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionResponse'
          description: The Subscribe Topic Exception object's attributes after being
            created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Subscribe Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}:
    delete:
      deprecated: true
      description: |-
        Delete a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: deleteMsgVpnAclProfileSubscribeException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: topicSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: subscribeExceptionTopic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Subscribe Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
    get:
      deprecated: true
      description: |-
        Get a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x||x|
        msgVpnName|x||x|
        subscribeExceptionTopic|x||x|
        topicSyntax|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: getMsgVpnAclProfileSubscribeException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: topicSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: subscribeExceptionTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionResponse'
          description: The Subscribe Topic Exception object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Subscribe Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions:
    get:
      description: |-
        Get a list of Subscribe Share Name Exception objects.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        subscribeShareNameException|x|||
        subscribeShareNameExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeShareNameExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionsResponse'
          description: The list of Subscribe Share Name Exception objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Subscribe Share Name Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
    post:
      description: |-
        Create a Subscribe Share Name Exception object. Any attribute missing from the request will be set to its default value.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x|||
        msgVpnName|x||x|||
        subscribeShareNameException|x|x||||
        subscribeShareNameExceptionSyntax|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: createMsgVpnAclProfileSubscribeShareNameException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
        description: The Subscribe Share Name Exception object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionResponse'
          description: The Subscribe Share Name Exception object's attributes after
            being created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Subscribe Share Name Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions/{subscribeShareNameExceptionSyntax},{subscribeShareNameException}
  : delete:
      description: |-
        Delete a Subscribe Share Name Exception object.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnAclProfileSubscribeShareNameException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the subscribe share name for the exception to the
          default action taken.
        in: path
        name: subscribeShareNameExceptionSyntax
        required: true
        schema:
          type: string
      - description: The subscribe share name exception to the default action taken.
          May include wildcard characters.
        in: path
        name: subscribeShareNameException
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Subscribe Share Name Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
    get:
      description: |-
        Get a Subscribe Share Name Exception object.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        subscribeShareNameException|x|||
        subscribeShareNameExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeShareNameException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the subscribe share name for the exception to the
          default action taken.
        in: path
        name: subscribeShareNameExceptionSyntax
        required: true
        schema:
          type: string
      - description: The subscribe share name exception to the default action taken.
          May include wildcard characters.
        in: path
        name: subscribeShareNameException
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionResponse'
          description: The Subscribe Share Name Exception object's attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Subscribe Share Name Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions:
    get:
      description: |-
        Get a list of Subscribe Topic Exception objects.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        subscribeTopicException|x|||
        subscribeTopicExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeTopicExceptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionsResponse'
          description: The list of Subscribe Topic Exception objects' attributes,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Subscribe Topic Exception objects.
      tags:
      - all
      - msgVpn
      - aclProfile
    post:
      description: |-
        Create a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x|||
        msgVpnName|x||x|||
        subscribeTopicException|x|x||||
        subscribeTopicExceptionSyntax|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: createMsgVpnAclProfileSubscribeTopicException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
        description: The Subscribe Topic Exception object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionResponse'
          description: The Subscribe Topic Exception object's attributes after being
            created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Subscribe Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions/{subscribeTopicExceptionSyntax},{subscribeTopicException}
  : delete:
      description: |-
        Delete a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnAclProfileSubscribeTopicException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: subscribeTopicExceptionSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: subscribeTopicException
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Subscribe Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
    get:
      description: |-
        Get a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        subscribeTopicException|x|||
        subscribeTopicExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeTopicException
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the ACL Profile.
        in: path
        name: aclProfileName
        required: true
        schema:
          type: string
      - description: The syntax of the topic for the exception to the default action
          taken.
        in: path
        name: subscribeTopicExceptionSyntax
        required: true
        schema:
          type: string
      - description: The topic for the exception to the default action taken. May
          include wildcard characters.
        in: path
        name: subscribeTopicException
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionResponse'
          description: The Subscribe Topic Exception object's attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Subscribe Topic Exception object.
      tags:
      - all
      - msgVpn
      - aclProfile
  /msgVpns/{msgVpnName}/authenticationOauthProviders:
    get:
      description: |-
        Get a list of OAuth Provider objects.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        oauthProviderName|x|||
        tokenIntrospectionPassword||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.13.
      operationId: getMsgVpnAuthenticationOauthProviders
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvidersResponse'
          description: The list of OAuth Provider objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of OAuth Provider objects.
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
    post:
      description: |-
        Create an OAuth Provider object. Any attribute missing from the request will be set to its default value.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        oauthProviderName|x|x||||
        tokenIntrospectionPassword||||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.13.
      operationId: createMsgVpnAuthenticationOauthProvider
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        description: The OAuth Provider object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
          description: The OAuth Provider object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create an OAuth Provider object.
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/authenticationOauthProviders/{oauthProviderName}:
    delete:
      description: |-
        Delete an OAuth Provider object.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.13.
      operationId: deleteMsgVpnAuthenticationOauthProvider
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the OAuth Provider.
        in: path
        name: oauthProviderName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete an OAuth Provider object.
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
    get:
      description: |-
        Get an OAuth Provider object.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        oauthProviderName|x|||
        tokenIntrospectionPassword||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.13.
      operationId: getMsgVpnAuthenticationOauthProvider
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the OAuth Provider.
        in: path
        name: oauthProviderName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
          description: The OAuth Provider object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an OAuth Provider object.
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
    patch:
      description: |-
        Update an OAuth Provider object. Any attribute missing from the request will be left unchanged.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        oauthProviderName|x|x||||
        tokenIntrospectionPassword|||x|||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.13.
      operationId: updateMsgVpnAuthenticationOauthProvider
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the OAuth Provider.
        in: path
        name: oauthProviderName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        description: The OAuth Provider object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
          description: The OAuth Provider object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update an OAuth Provider object.
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace an OAuth Provider object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        oauthProviderName|x|x||||
        tokenIntrospectionPassword|||x|||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.13.
      operationId: replaceMsgVpnAuthenticationOauthProvider
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the OAuth Provider.
        in: path
        name: oauthProviderName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        description: The OAuth Provider object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
          description: The OAuth Provider object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace an OAuth Provider object.
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/authorizationGroups:
    get:
      description: |-
        Get a list of LDAP Authorization Group objects.

        To use client authorization groups configured on an external LDAP server to provide client authorizations, LDAP Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the LDAP server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authorizationGroupName|x|||
        msgVpnName|x|||
        orderAfterAuthorizationGroupName||x||
        orderBeforeAuthorizationGroupName||x||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAuthorizationGroups
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupsResponse'
          description: The list of LDAP Authorization Group objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of LDAP Authorization Group objects.
      tags:
      - all
      - msgVpn
      - authorizationGroup
    post:
      description: |-
        Create an LDAP Authorization Group object. Any attribute missing from the request will be set to its default value.

        To use client authorization groups configured on an external LDAP server to provide client authorizations, LDAP Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the LDAP server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authorizationGroupName|x|x||||
        msgVpnName|x||x|||
        orderAfterAuthorizationGroupName||||x||
        orderBeforeAuthorizationGroupName||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
        MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnAuthorizationGroup
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        description: The LDAP Authorization Group object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
          description: The LDAP Authorization Group object's attributes after being
            created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create an LDAP Authorization Group object.
      tags:
      - all
      - msgVpn
      - authorizationGroup
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}:
    delete:
      description: |-
        Delete an LDAP Authorization Group object.

        To use client authorization groups configured on an external LDAP server to provide client authorizations, LDAP Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the LDAP server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnAuthorizationGroup
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the LDAP Authorization Group. Special care is needed
          if the group name contains special characters such as '#', '+', ';', '='
          as the value of the group name returned from the LDAP server might prepend
          those characters with '\'. For example a group name called 'test#,lab,com'
          will be returned from the LDAP server as 'test\#,lab,com'.
        in: path
        name: authorizationGroupName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete an LDAP Authorization Group object.
      tags:
      - all
      - msgVpn
      - authorizationGroup
    get:
      description: |-
        Get an LDAP Authorization Group object.

        To use client authorization groups configured on an external LDAP server to provide client authorizations, LDAP Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the LDAP server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authorizationGroupName|x|||
        msgVpnName|x|||
        orderAfterAuthorizationGroupName||x||
        orderBeforeAuthorizationGroupName||x||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAuthorizationGroup
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the LDAP Authorization Group. Special care is needed
          if the group name contains special characters such as '#', '+', ';', '='
          as the value of the group name returned from the LDAP server might prepend
          those characters with '\'. For example a group name called 'test#,lab,com'
          will be returned from the LDAP server as 'test\#,lab,com'.
        in: path
        name: authorizationGroupName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
          description: The LDAP Authorization Group object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an LDAP Authorization Group object.
      tags:
      - all
      - msgVpn
      - authorizationGroup
    patch:
      description: |-
        Update an LDAP Authorization Group object. Any attribute missing from the request will be left unchanged.

        To use client authorization groups configured on an external LDAP server to provide client authorizations, LDAP Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the LDAP server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName||||x||
        authorizationGroupName|x|x||||
        clientProfileName||||x||
        msgVpnName|x|x||||
        orderAfterAuthorizationGroupName|||x|||
        orderBeforeAuthorizationGroupName|||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
        MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnAuthorizationGroup
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the LDAP Authorization Group. Special care is needed
          if the group name contains special characters such as '#', '+', ';', '='
          as the value of the group name returned from the LDAP server might prepend
          those characters with '\'. For example a group name called 'test#,lab,com'
          will be returned from the LDAP server as 'test\#,lab,com'.
        in: path
        name: authorizationGroupName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        description: The LDAP Authorization Group object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
          description: The LDAP Authorization Group object's attributes after being
            updated, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update an LDAP Authorization Group object.
      tags:
      - all
      - msgVpn
      - authorizationGroup
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace an LDAP Authorization Group object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        To use client authorization groups configured on an external LDAP server to provide client authorizations, LDAP Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the LDAP server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName||||x||
        authorizationGroupName|x|x||||
        clientProfileName||||x||
        msgVpnName|x|x||||
        orderAfterAuthorizationGroupName|||x|||
        orderBeforeAuthorizationGroupName|||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
        MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnAuthorizationGroup
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the LDAP Authorization Group. Special care is needed
          if the group name contains special characters such as '#', '+', ';', '='
          as the value of the group name returned from the LDAP server might prepend
          those characters with '\'. For example a group name called 'test#,lab,com'
          will be returned from the LDAP server as 'test\#,lab,com'.
        in: path
        name: authorizationGroupName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        description: The LDAP Authorization Group object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
          description: The LDAP Authorization Group object's attributes after being
            replaced, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace an LDAP Authorization Group object.
      tags:
      - all
      - msgVpn
      - authorizationGroup
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges:
    get:
      description: |-
        Get a list of Bridge objects.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        remoteAuthenticationBasicPassword||x||x
        remoteAuthenticationClientCertContent||x||x
        remoteAuthenticationClientCertPassword||x||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridges
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgesResponse'
          description: The list of Bridge objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Bridge objects.
      tags:
      - all
      - msgVpn
      - bridge
    post:
      description: |-
        Create a Bridge object. Any attribute missing from the request will be set to its default value.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x|x||||
        bridgeVirtualRouter|x|x||||
        msgVpnName|x||x|||
        remoteAuthenticationBasicPassword||||x||x
        remoteAuthenticationClientCertContent||||x||x
        remoteAuthenticationClientCertPassword||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
        MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
        MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridge'
        description: The Bridge object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
          description: The Bridge object's attributes after being created, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Bridge object.
      tags:
      - all
      - msgVpn
      - bridge
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}:
    delete:
      description: |-
        Delete a Bridge object.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Bridge object.
      tags:
      - all
      - msgVpn
      - bridge
    get:
      description: |-
        Get a Bridge object.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        remoteAuthenticationBasicPassword||x||x
        remoteAuthenticationClientCertContent||x||x
        remoteAuthenticationClientCertPassword||x||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
          description: The Bridge object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Bridge object.
      tags:
      - all
      - msgVpn
      - bridge
    patch:
      description: |-
        Update a Bridge object. Any attribute missing from the request will be left unchanged.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x|x||||
        bridgeVirtualRouter|x|x||||
        maxTtl||||x||
        msgVpnName|x|x||||
        remoteAuthenticationBasicClientUsername||||x||
        remoteAuthenticationBasicPassword|||x|x||x
        remoteAuthenticationClientCertContent|||x|x||x
        remoteAuthenticationClientCertPassword|||x|x||
        remoteAuthenticationScheme||||x||
        remoteDeliverToOnePriority||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
        MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
        MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridge'
        description: The Bridge object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
          description: The Bridge object's attributes after being updated, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Bridge object.
      tags:
      - all
      - msgVpn
      - bridge
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Bridge object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x|x||||
        bridgeVirtualRouter|x|x||||
        maxTtl||||x||
        msgVpnName|x|x||||
        remoteAuthenticationBasicClientUsername||||x||
        remoteAuthenticationBasicPassword|||x|x||x
        remoteAuthenticationClientCertContent|||x|x||x
        remoteAuthenticationClientCertPassword|||x|x||
        remoteAuthenticationScheme||||x||
        remoteDeliverToOnePriority||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
        MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
        MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridge'
        description: The Bridge object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
          description: The Bridge object's attributes after being replaced, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Bridge object.
      tags:
      - all
      - msgVpn
      - bridge
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns:
    get:
      description: |-
        Get a list of Remote Message VPN objects.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        password||x||x
        remoteMsgVpnInterface|x|||
        remoteMsgVpnLocation|x|||
        remoteMsgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridgeRemoteMsgVpns
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnsResponse'
          description: The list of Remote Message VPN objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Remote Message VPN objects.
      tags:
      - all
      - msgVpn
      - bridge
    post:
      description: |-
        Create a Remote Message VPN object. Any attribute missing from the request will be set to its default value.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x||x|||
        bridgeVirtualRouter|x||x|||
        msgVpnName|x||x|||
        password||||x||x
        remoteMsgVpnInterface|x|||||
        remoteMsgVpnLocation|x|x||||
        remoteMsgVpnName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
        MsgVpnBridgeRemoteMsgVpn|password|clientUsername|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnBridgeRemoteMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        description: The Remote Message VPN object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
          description: The Remote Message VPN object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Remote Message VPN object.
      tags:
      - all
      - msgVpn
      - bridge
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
  : delete:
      description: |-
        Delete a Remote Message VPN object.

        The Remote Message VPN is the Message VPN that the Bridge connects to.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnBridgeRemoteMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The name of the remote Message VPN.
        in: path
        name: remoteMsgVpnName
        required: true
        schema:
          type: string
      - description: The location of the remote Message VPN as either an FQDN with
          port, IP address with port, or virtual router name (starting with "v:").
        in: path
        name: remoteMsgVpnLocation
        required: true
        schema:
          type: string
      - description: The physical interface on the local Message VPN host for connecting
          to the remote Message VPN. By default, an interface is chosen automatically
          (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual
          router name.
        in: path
        name: remoteMsgVpnInterface
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Remote Message VPN object.
      tags:
      - all
      - msgVpn
      - bridge
    get:
      description: |-
        Get a Remote Message VPN object.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        password||x||x
        remoteMsgVpnInterface|x|||
        remoteMsgVpnLocation|x|||
        remoteMsgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridgeRemoteMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The name of the remote Message VPN.
        in: path
        name: remoteMsgVpnName
        required: true
        schema:
          type: string
      - description: The location of the remote Message VPN as either an FQDN with
          port, IP address with port, or virtual router name (starting with "v:").
        in: path
        name: remoteMsgVpnLocation
        required: true
        schema:
          type: string
      - description: The physical interface on the local Message VPN host for connecting
          to the remote Message VPN. By default, an interface is chosen automatically
          (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual
          router name.
        in: path
        name: remoteMsgVpnInterface
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
          description: The Remote Message VPN object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Remote Message VPN object.
      tags:
      - all
      - msgVpn
      - bridge
    patch:
      description: |-
        Update a Remote Message VPN object. Any attribute missing from the request will be left unchanged.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x|x||||
        bridgeVirtualRouter|x|x||||
        clientUsername||||x||
        compressedDataEnabled||||x||
        egressFlowWindowSize||||x||
        msgVpnName|x|x||||
        password|||x|x||x
        remoteMsgVpnInterface|x|x||||
        remoteMsgVpnLocation|x|x||||
        remoteMsgVpnName|x|x||||
        tlsEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
        MsgVpnBridgeRemoteMsgVpn|password|clientUsername|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnBridgeRemoteMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The name of the remote Message VPN.
        in: path
        name: remoteMsgVpnName
        required: true
        schema:
          type: string
      - description: The location of the remote Message VPN as either an FQDN with
          port, IP address with port, or virtual router name (starting with "v:").
        in: path
        name: remoteMsgVpnLocation
        required: true
        schema:
          type: string
      - description: The physical interface on the local Message VPN host for connecting
          to the remote Message VPN. By default, an interface is chosen automatically
          (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual
          router name.
        in: path
        name: remoteMsgVpnInterface
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        description: The Remote Message VPN object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
          description: The Remote Message VPN object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Remote Message VPN object.
      tags:
      - all
      - msgVpn
      - bridge
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Remote Message VPN object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x|x||||
        bridgeVirtualRouter|x|x||||
        clientUsername||||x||
        compressedDataEnabled||||x||
        egressFlowWindowSize||||x||
        msgVpnName|x|x||||
        password|||x|x||x
        remoteMsgVpnInterface|x|x||||
        remoteMsgVpnLocation|x|x||||
        remoteMsgVpnName|x|x||||
        tlsEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
        MsgVpnBridgeRemoteMsgVpn|password|clientUsername|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnBridgeRemoteMsgVpn
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The name of the remote Message VPN.
        in: path
        name: remoteMsgVpnName
        required: true
        schema:
          type: string
      - description: The location of the remote Message VPN as either an FQDN with
          port, IP address with port, or virtual router name (starting with "v:").
        in: path
        name: remoteMsgVpnLocation
        required: true
        schema:
          type: string
      - description: The physical interface on the local Message VPN host for connecting
          to the remote Message VPN. By default, an interface is chosen automatically
          (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual
          router name.
        in: path
        name: remoteMsgVpnInterface
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        description: The Remote Message VPN object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
          description: The Remote Message VPN object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Remote Message VPN object.
      tags:
      - all
      - msgVpn
      - bridge
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions:
    get:
      description: |-
        Get a list of Remote Subscription objects.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        remoteSubscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridgeRemoteSubscriptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionsResponse'
          description: The list of Remote Subscription objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Remote Subscription objects.
      tags:
      - all
      - msgVpn
      - bridge
    post:
      description: |-
        Create a Remote Subscription object. Any attribute missing from the request will be set to its default value.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x||x|||
        bridgeVirtualRouter|x||x|||
        deliverAlwaysEnabled||x||||
        msgVpnName|x||x|||
        remoteSubscriptionTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnBridgeRemoteSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
        description: The Remote Subscription object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionResponse'
          description: The Remote Subscription object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Remote Subscription object.
      tags:
      - all
      - msgVpn
      - bridge
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}:
    delete:
      description: |-
        Delete a Remote Subscription object.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnBridgeRemoteSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The topic of the Bridge remote subscription.
        in: path
        name: remoteSubscriptionTopic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Remote Subscription object.
      tags:
      - all
      - msgVpn
      - bridge
    get:
      description: |-
        Get a Remote Subscription object.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        remoteSubscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridgeRemoteSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The topic of the Bridge remote subscription.
        in: path
        name: remoteSubscriptionTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionResponse'
          description: The Remote Subscription object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Remote Subscription object.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames:
    get:
      deprecated: true
      description: |-
        Get a list of Trusted Common Name objects.

        The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x||x|
        bridgeVirtualRouter|x||x|
        msgVpnName|x||x|
        tlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnBridgeTlsTrustedCommonNames
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNamesResponse'
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags:
      - all
      - msgVpn
      - bridge
    post:
      deprecated: true
      description: |-
        Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value.

        The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x||x||x|
        bridgeVirtualRouter|x||x||x|
        msgVpnName|x||x||x|
        tlsTrustedCommonName|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: createMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
        description: The Trusted Common Name object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Trusted Common Name object.
      tags:
      - all
      - msgVpn
      - bridge
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    delete:
      deprecated: true
      description: |-
        Delete a Trusted Common Name object.

        The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: deleteMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Trusted Common Name object.
      tags:
      - all
      - msgVpn
      - bridge
    get:
      deprecated: true
      description: |-
        Get a Trusted Common Name object.

        The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x||x|
        bridgeVirtualRouter|x||x|
        msgVpnName|x||x|
        tlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Bridge.
        in: path
        name: bridgeName
        required: true
        schema:
          type: string
      - description: The virtual router of the Bridge.
        in: path
        name: bridgeVirtualRouter
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags:
      - all
      - msgVpn
      - bridge
  /msgVpns/{msgVpnName}/clientProfiles:
    get:
      description: |-
        Get a list of Client Profile objects.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        apiQueueManagementCopyFromOnCreateName|||x|
        apiTopicEndpointManagementCopyFromOnCreateName|||x|
        clientProfileName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnClientProfiles
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfilesResponse'
          description: The list of Client Profile objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Profile objects.
      tags:
      - all
      - msgVpn
      - clientProfile
    post:
      description: |-
        Create a Client Profile object. Any attribute missing from the request will be set to its default value.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        apiQueueManagementCopyFromOnCreateName|||||x|
        apiTopicEndpointManagementCopyFromOnCreateName|||||x|
        clientProfileName|x|x||||
        msgVpnName|x||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent
        EventThresholdByPercent|clearPercent|setPercent|
        EventThresholdByPercent|setPercent|clearPercent|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnClientProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientProfile'
        description: The Client Profile object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
          description: The Client Profile object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Client Profile object.
      tags:
      - all
      - msgVpn
      - clientProfile
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}:
    delete:
      description: |-
        Delete a Client Profile object.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnClientProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Profile.
        in: path
        name: clientProfileName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Client Profile object.
      tags:
      - all
      - msgVpn
      - clientProfile
    get:
      description: |-
        Get a Client Profile object.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        apiQueueManagementCopyFromOnCreateName|||x|
        apiTopicEndpointManagementCopyFromOnCreateName|||x|
        clientProfileName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnClientProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Profile.
        in: path
        name: clientProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
          description: The Client Profile object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Profile object.
      tags:
      - all
      - msgVpn
      - clientProfile
    patch:
      description: |-
        Update a Client Profile object. Any attribute missing from the request will be left unchanged.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        apiQueueManagementCopyFromOnCreateName|||||x|
        apiTopicEndpointManagementCopyFromOnCreateName|||||x|
        clientProfileName|x|x||||
        msgVpnName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent
        EventThresholdByPercent|clearPercent|setPercent|
        EventThresholdByPercent|setPercent|clearPercent|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnClientProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Profile.
        in: path
        name: clientProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientProfile'
        description: The Client Profile object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
          description: The Client Profile object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Client Profile object.
      tags:
      - all
      - msgVpn
      - clientProfile
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Client Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        apiQueueManagementCopyFromOnCreateName|||||x|
        apiTopicEndpointManagementCopyFromOnCreateName|||||x|
        clientProfileName|x|x||||
        msgVpnName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent
        EventThresholdByPercent|clearPercent|setPercent|
        EventThresholdByPercent|setPercent|clearPercent|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnClientProfile
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Profile.
        in: path
        name: clientProfileName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientProfile'
        description: The Client Profile object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
          description: The Client Profile object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Client Profile object.
      tags:
      - all
      - msgVpn
      - clientProfile
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/clientUsernames:
    get:
      description: |-
        Get a list of Client Username objects.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        clientUsername|x|||
        msgVpnName|x|||
        password||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnClientUsernames
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernamesResponse'
          description: The list of Client Username objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Client Username objects.
      tags:
      - all
      - msgVpn
      - clientUsername
    post:
      description: |-
        Create a Client Username object. Any attribute missing from the request will be set to its default value.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        clientUsername|x|x||||
        msgVpnName|x||x|||
        password||||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnClientUsername
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientUsername'
        description: The Client Username object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
          description: The Client Username object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Client Username object.
      tags:
      - all
      - msgVpn
      - clientUsername
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}:
    delete:
      description: |-
        Delete a Client Username object.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnClientUsername
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Username.
        in: path
        name: clientUsername
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Client Username object.
      tags:
      - all
      - msgVpn
      - clientUsername
    get:
      description: |-
        Get a Client Username object.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        clientUsername|x|||
        msgVpnName|x|||
        password||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnClientUsername
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Username.
        in: path
        name: clientUsername
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
          description: The Client Username object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Client Username object.
      tags:
      - all
      - msgVpn
      - clientUsername
    patch:
      description: |-
        Update a Client Username object. Any attribute missing from the request will be left unchanged.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName||||x||
        clientProfileName||||x||
        clientUsername|x|x||||
        msgVpnName|x|x||||
        password|||x|||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnClientUsername
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Username.
        in: path
        name: clientUsername
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientUsername'
        description: The Client Username object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
          description: The Client Username object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Client Username object.
      tags:
      - all
      - msgVpn
      - clientUsername
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Client Username object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName||||x||
        clientProfileName||||x||
        clientUsername|x|x||||
        msgVpnName|x|x||||
        password|||x|||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnClientUsername
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Client Username.
        in: path
        name: clientUsername
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientUsername'
        description: The Client Username object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
          description: The Client Username object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Client Username object.
      tags:
      - all
      - msgVpn
      - clientUsername
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches:
    get:
      description: |-
        Get a list of Distributed Cache objects.

        A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCaches
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCachesResponse'
          description: The list of Distributed Cache objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Distributed Cache objects.
      tags:
      - all
      - msgVpn
      - distributedCache
    post:
      description: |-
        Create a Distributed Cache object. Any attribute missing from the request will be set to its default value.

        A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        msgVpnName|x||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
        MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCache'
        description: The Distributed Cache object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
          description: The Distributed Cache object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Distributed Cache object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}:
    delete:
      description: |-
        Delete a Distributed Cache object.

        A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Distributed Cache object.
      tags:
      - all
      - msgVpn
      - distributedCache
    get:
      description: |-
        Get a Distributed Cache object.

        A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
          description: The Distributed Cache object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Distributed Cache object.
      tags:
      - all
      - msgVpn
      - distributedCache
    patch:
      description: |-
        Update a Distributed Cache object. Any attribute missing from the request will be left unchanged.

        A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        msgVpnName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
        MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateMsgVpnDistributedCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCache'
        description: The Distributed Cache object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
          description: The Distributed Cache object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Distributed Cache object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Distributed Cache object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        msgVpnName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
        MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: replaceMsgVpnDistributedCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCache'
        description: The Distributed Cache object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
          description: The Distributed Cache object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Distributed Cache object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters:
    get:
      description: |-
        Get a list of Cache Cluster objects.

        A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusters
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClustersResponse'
          description: The list of Cache Cluster objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Cache Cluster objects.
      tags:
      - all
      - msgVpn
      - distributedCache
    post:
      description: |-
        Create a Cache Cluster object. Any attribute missing from the request will be set to its default value.

        A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x|x||||
        msgVpnName|x||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThresholdByPercent|clearPercent|setPercent|
        EventThresholdByPercent|setPercent|clearPercent|
        EventThresholdByValue|clearValue|setValue|
        EventThresholdByValue|setValue|clearValue|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        description: The Cache Cluster object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
          description: The Cache Cluster object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}:
    delete:
      description: |-
        Delete a Cache Cluster object.

        A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
    get:
      description: |-
        Get a Cache Cluster object.

        A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
          description: The Cache Cluster object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
    patch:
      description: |-
        Update a Cache Cluster object. Any attribute missing from the request will be left unchanged.

        A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        clusterName|x|x||||
        msgVpnName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThresholdByPercent|clearPercent|setPercent|
        EventThresholdByPercent|setPercent|clearPercent|
        EventThresholdByValue|clearValue|setValue|
        EventThresholdByValue|setValue|clearValue|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateMsgVpnDistributedCacheCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        description: The Cache Cluster object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
          description: The Cache Cluster object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Cache Cluster object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        clusterName|x|x||||
        msgVpnName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThresholdByPercent|clearPercent|setPercent|
        EventThresholdByPercent|setPercent|clearPercent|
        EventThresholdByValue|clearValue|setValue|
        EventThresholdByValue|setValue|clearValue|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: replaceMsgVpnDistributedCacheCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        description: The Cache Cluster object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
          description: The Cache Cluster object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters:
    get:
      description: |-
        Get a list of Home Cache Cluster objects.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        homeClusterName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusters
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse'
          description: The list of Home Cache Cluster objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Home Cache Cluster objects.
      tags:
      - all
      - msgVpn
      - distributedCache
    post:
      description: |-
        Create a Home Cache Cluster object. Any attribute missing from the request will be set to its default value.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x||x|||
        homeClusterName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        description: The Home Cache Cluster object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse'
          description: The Home Cache Cluster object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Home Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}:
    delete:
      description: |-
        Delete a Home Cache Cluster object.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Home Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
    get:
      description: |-
        Get a Home Cache Cluster object.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        homeClusterName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse'
          description: The Home Cache Cluster object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Home Cache Cluster object.
      tags:
      - all
      - msgVpn
      - distributedCache
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes
  : get:
      description: |-
        Get a list of Topic Prefix objects.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        homeClusterName|x|||
        msgVpnName|x|||
        topicPrefix|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixes
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse'
          description: The list of Topic Prefix objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Prefix objects.
      tags:
      - all
      - msgVpn
      - distributedCache
    post:
      description: |-
        Create a Topic Prefix object. Any attribute missing from the request will be set to its default value.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x||x|||
        homeClusterName|x||x|||
        msgVpnName|x||x|||
        topicPrefix|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        description: The Topic Prefix object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse'
          description: The Topic Prefix object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Topic Prefix object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes/{topicPrefix}
  : delete:
      description: |-
        Delete a Topic Prefix object.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: A topic prefix for global topics available from the remote Home
          Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
        in: path
        name: topicPrefix
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Topic Prefix object.
      tags:
      - all
      - msgVpn
      - distributedCache
    get:
      description: |-
        Get a Topic Prefix object.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        homeClusterName|x|||
        msgVpnName|x|||
        topicPrefix|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the remote Home Cache Cluster.
        in: path
        name: homeClusterName
        required: true
        schema:
          type: string
      - description: A topic prefix for global topics available from the remote Home
          Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
        in: path
        name: topicPrefix
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse'
          description: The Topic Prefix object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Prefix object.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances:
    get:
      description: |-
        Get a list of Cache Instance objects.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        instanceName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstances
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstancesResponse'
          description: The list of Cache Instance objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Cache Instance objects.
      tags:
      - all
      - msgVpn
      - distributedCache
    post:
      description: |-
        Create a Cache Instance object. Any attribute missing from the request will be set to its default value.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x||x|||
        instanceName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheClusterInstance
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        description: The Cache Instance object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
          description: The Cache Instance object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Cache Instance object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}:
    delete:
      description: |-
        Delete a Cache Instance object.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheClusterInstance
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Cache Instance object.
      tags:
      - all
      - msgVpn
      - distributedCache
    get:
      description: |-
        Get a Cache Instance object.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        instanceName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstance
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
          description: The Cache Instance object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Cache Instance object.
      tags:
      - all
      - msgVpn
      - distributedCache
    patch:
      description: |-
        Update a Cache Instance object. Any attribute missing from the request will be left unchanged.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        clusterName|x|x||||
        instanceName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateMsgVpnDistributedCacheClusterInstance
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        description: The Cache Instance object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
          description: The Cache Instance object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Cache Instance object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Cache Instance object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        clusterName|x|x||||
        instanceName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: replaceMsgVpnDistributedCacheClusterInstance
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The name of the Cache Instance.
        in: path
        name: instanceName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        description: The Cache Instance object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
          description: The Cache Instance object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Cache Instance object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics:
    get:
      description: |-
        Get a list of Topic objects.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        msgVpnName|x|||
        topic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterTopics
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicsResponse'
          description: The list of Topic objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic objects.
      tags:
      - all
      - msgVpn
      - distributedCache
    post:
      description: |-
        Create a Topic object. Any attribute missing from the request will be set to its default value.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x||x|||
        msgVpnName|x||x|||
        topic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheClusterTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
        description: The Topic object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicResponse'
          description: The Topic object's attributes after being created, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Topic object.
      tags:
      - all
      - msgVpn
      - distributedCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics/{topic}:
    delete:
      description: |-
        Delete a Topic object.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheClusterTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The value of the Topic in the form a/b/c.
        in: path
        name: topic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Topic object.
      tags:
      - all
      - msgVpn
      - distributedCache
    get:
      description: |-
        Get a Topic object.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        msgVpnName|x|||
        topic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Distributed Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: The name of the Cache Cluster.
        in: path
        name: clusterName
        required: true
        schema:
          type: string
      - description: The value of the Topic in the form a/b/c.
        in: path
        name: topic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicResponse'
          description: The Topic object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic object.
      tags:
      - all
      - msgVpn
      - distributedCache
  /msgVpns/{msgVpnName}/dmrBridges:
    get:
      description: |-
        Get a list of DMR Bridge objects.

        A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        remoteNodeName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDmrBridges
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgesResponse'
          description: The list of DMR Bridge objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of DMR Bridge objects.
      tags:
      - all
      - msgVpn
      - dmrBridge
    post:
      description: |-
        Create a DMR Bridge object. Any attribute missing from the request will be set to its default value.

        A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        remoteNodeName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDmrBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDmrBridge'
        description: The DMR Bridge object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
          description: The DMR Bridge object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a DMR Bridge object.
      tags:
      - all
      - msgVpn
      - dmrBridge
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/dmrBridges/{remoteNodeName}:
    delete:
      description: |-
        Delete a DMR Bridge object.

        A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDmrBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the DMR Bridge.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a DMR Bridge object.
      tags:
      - all
      - msgVpn
      - dmrBridge
    get:
      description: |-
        Get a DMR Bridge object.

        A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        remoteNodeName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDmrBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the DMR Bridge.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
          description: The DMR Bridge object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a DMR Bridge object.
      tags:
      - all
      - msgVpn
      - dmrBridge
    patch:
      description: |-
        Update a DMR Bridge object. Any attribute missing from the request will be left unchanged.

        A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        remoteNodeName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateMsgVpnDmrBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the DMR Bridge.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDmrBridge'
        description: The DMR Bridge object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
          description: The DMR Bridge object's attributes after being updated, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a DMR Bridge object.
      tags:
      - all
      - msgVpn
      - dmrBridge
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a DMR Bridge object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        remoteNodeName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: replaceMsgVpnDmrBridge
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the node at the remote end of the DMR Bridge.
        in: path
        name: remoteNodeName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDmrBridge'
        description: The DMR Bridge object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
          description: The DMR Bridge object's attributes after being replaced, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a DMR Bridge object.
      tags:
      - all
      - msgVpn
      - dmrBridge
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiConnectionFactories:
    get:
      description: |-
        Get a list of JNDI Connection Factory objects.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        connectionFactoryName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiConnectionFactories
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoriesResponse'
          description: The list of JNDI Connection Factory objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of JNDI Connection Factory objects.
      tags:
      - all
      - msgVpn
      - jndi
    post:
      description: |-
        Create a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        connectionFactoryName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: createMsgVpnJndiConnectionFactory
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        description: The JNDI Connection Factory object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
          description: The JNDI Connection Factory object's attributes after being
            created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a JNDI Connection Factory object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}:
    delete:
      description: |-
        Delete a JNDI Connection Factory object.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: deleteMsgVpnJndiConnectionFactory
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the JMS Connection Factory.
        in: path
        name: connectionFactoryName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a JNDI Connection Factory object.
      tags:
      - all
      - msgVpn
      - jndi
    get:
      description: |-
        Get a JNDI Connection Factory object.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        connectionFactoryName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiConnectionFactory
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the JMS Connection Factory.
        in: path
        name: connectionFactoryName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
          description: The JNDI Connection Factory object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a JNDI Connection Factory object.
      tags:
      - all
      - msgVpn
      - jndi
    patch:
      description: |-
        Update a JNDI Connection Factory object. Any attribute missing from the request will be left unchanged.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        connectionFactoryName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: updateMsgVpnJndiConnectionFactory
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the JMS Connection Factory.
        in: path
        name: connectionFactoryName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        description: The JNDI Connection Factory object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
          description: The JNDI Connection Factory object's attributes after being
            updated, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a JNDI Connection Factory object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        connectionFactoryName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: replaceMsgVpnJndiConnectionFactory
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the JMS Connection Factory.
        in: path
        name: connectionFactoryName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        description: The JNDI Connection Factory object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
          description: The JNDI Connection Factory object's attributes after being
            replaced, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a JNDI Connection Factory object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiQueues:
    get:
      description: |-
        Get a list of JNDI Queue objects.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiQueues
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueuesResponse'
          description: The list of JNDI Queue objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of JNDI Queue objects.
      tags:
      - all
      - msgVpn
      - jndi
    post:
      description: |-
        Create a JNDI Queue object. Any attribute missing from the request will be set to its default value.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        queueName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: createMsgVpnJndiQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiQueue'
        description: The JNDI Queue object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
          description: The JNDI Queue object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a JNDI Queue object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiQueues/{queueName}:
    delete:
      description: |-
        Delete a JNDI Queue object.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: deleteMsgVpnJndiQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a JNDI Queue object.
      tags:
      - all
      - msgVpn
      - jndi
    get:
      description: |-
        Get a JNDI Queue object.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
          description: The JNDI Queue object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a JNDI Queue object.
      tags:
      - all
      - msgVpn
      - jndi
    patch:
      description: |-
        Update a JNDI Queue object. Any attribute missing from the request will be left unchanged.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        queueName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: updateMsgVpnJndiQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiQueue'
        description: The JNDI Queue object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
          description: The JNDI Queue object's attributes after being updated, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a JNDI Queue object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a JNDI Queue object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        queueName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: replaceMsgVpnJndiQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiQueue'
        description: The JNDI Queue object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
          description: The JNDI Queue object's attributes after being replaced, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a JNDI Queue object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiTopics:
    get:
      description: |-
        Get a list of JNDI Topic objects.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiTopics
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicsResponse'
          description: The list of JNDI Topic objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of JNDI Topic objects.
      tags:
      - all
      - msgVpn
      - jndi
    post:
      description: |-
        Create a JNDI Topic object. Any attribute missing from the request will be set to its default value.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        topicName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: createMsgVpnJndiTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiTopic'
        description: The JNDI Topic object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
          description: The JNDI Topic object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a JNDI Topic object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiTopics/{topicName}:
    delete:
      description: |-
        Delete a JNDI Topic object.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: deleteMsgVpnJndiTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Topic.
        in: path
        name: topicName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a JNDI Topic object.
      tags:
      - all
      - msgVpn
      - jndi
    get:
      description: |-
        Get a JNDI Topic object.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Topic.
        in: path
        name: topicName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
          description: The JNDI Topic object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a JNDI Topic object.
      tags:
      - all
      - msgVpn
      - jndi
    patch:
      description: |-
        Update a JNDI Topic object. Any attribute missing from the request will be left unchanged.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        topicName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: updateMsgVpnJndiTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Topic.
        in: path
        name: topicName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiTopic'
        description: The JNDI Topic object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
          description: The JNDI Topic object's attributes after being updated, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a JNDI Topic object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a JNDI Topic object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        topicName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: replaceMsgVpnJndiTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The JNDI name of the JMS Topic.
        in: path
        name: topicName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiTopic'
        description: The JNDI Topic object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
          description: The JNDI Topic object's attributes after being replaced, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a JNDI Topic object.
      tags:
      - all
      - msgVpn
      - jndi
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttRetainCaches:
    get:
      description: |-
        Get a list of MQTT Retain Cache objects.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttRetainCaches
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCachesResponse'
          description: The list of MQTT Retain Cache objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of MQTT Retain Cache objects.
      tags:
      - all
      - msgVpn
      - mqttRetainCache
    post:
      description: |-
        Create an MQTT Retain Cache object. Any attribute missing from the request will be set to its default value.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnMqttRetainCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        description: The MQTT Retain Cache object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
          description: The MQTT Retain Cache object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create an MQTT Retain Cache object.
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttRetainCaches/{cacheName}:
    delete:
      description: |-
        Delete an MQTT Retain Cache object.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnMqttRetainCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the MQTT Retain Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete an MQTT Retain Cache object.
      tags:
      - all
      - msgVpn
      - mqttRetainCache
    get:
      description: |-
        Get an MQTT Retain Cache object.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttRetainCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the MQTT Retain Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
          description: The MQTT Retain Cache object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an MQTT Retain Cache object.
      tags:
      - all
      - msgVpn
      - mqttRetainCache
    patch:
      description: |-
        Update an MQTT Retain Cache object. Any attribute missing from the request will be left unchanged.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateMsgVpnMqttRetainCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the MQTT Retain Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        description: The MQTT Retain Cache object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
          description: The MQTT Retain Cache object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update an MQTT Retain Cache object.
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace an MQTT Retain Cache object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: replaceMsgVpnMqttRetainCache
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the MQTT Retain Cache.
        in: path
        name: cacheName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        description: The MQTT Retain Cache object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
          description: The MQTT Retain Cache object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace an MQTT Retain Cache object.
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttSessions:
    get:
      description: |-
        Get a list of MQTT Session objects.

        An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|||
        mqttSessionVirtualRouter|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnMqttSessions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionsResponse'
          description: The list of MQTT Session objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of MQTT Session objects.
      tags:
      - all
      - msgVpn
      - mqttSession
    post:
      description: |-
        Create an MQTT Session object. Any attribute missing from the request will be set to its default value.

        An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|x||||
        mqttSessionVirtualRouter|x|x||||
        msgVpnName|x||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: createMsgVpnMqttSession
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSession'
        description: The MQTT Session object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
          description: The MQTT Session object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create an MQTT Session object.
      tags:
      - all
      - msgVpn
      - mqttSession
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}:
    delete:
      description: |-
        Delete an MQTT Session object.

        An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: deleteMsgVpnMqttSession
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete an MQTT Session object.
      tags:
      - all
      - msgVpn
      - mqttSession
    get:
      description: |-
        Get an MQTT Session object.

        An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|||
        mqttSessionVirtualRouter|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnMqttSession
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
          description: The MQTT Session object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get an MQTT Session object.
      tags:
      - all
      - msgVpn
      - mqttSession
    patch:
      description: |-
        Update an MQTT Session object. Any attribute missing from the request will be left unchanged.

        An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|x||||
        mqttSessionVirtualRouter|x|x||||
        msgVpnName|x|x||||
        owner||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: updateMsgVpnMqttSession
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSession'
        description: The MQTT Session object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
          description: The MQTT Session object's attributes after being updated, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update an MQTT Session object.
      tags:
      - all
      - msgVpn
      - mqttSession
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace an MQTT Session object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|x||||
        mqttSessionVirtualRouter|x|x||||
        msgVpnName|x|x||||
        owner||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: replaceMsgVpnMqttSession
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSession'
        description: The MQTT Session object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
          description: The MQTT Session object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace an MQTT Session object.
      tags:
      - all
      - msgVpn
      - mqttSession
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions:
    get:
      description: |-
        Get a list of Subscription objects.

        An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|||
        mqttSessionVirtualRouter|x|||
        msgVpnName|x|||
        subscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnMqttSessionSubscriptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionsResponse'
          description: The list of Subscription objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Subscription objects.
      tags:
      - all
      - msgVpn
      - mqttSession
    post:
      description: |-
        Create a Subscription object. Any attribute missing from the request will be set to its default value.

        An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        mqttSessionClientId|x||x|||
        mqttSessionVirtualRouter|x||x|||
        msgVpnName|x||x|||
        subscriptionTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: createMsgVpnMqttSessionSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        description: The Subscription object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
          description: The Subscription object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Subscription object.
      tags:
      - all
      - msgVpn
      - mqttSession
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}:
    delete:
      description: |-
        Delete a Subscription object.

        An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: deleteMsgVpnMqttSessionSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: The MQTT subscription topic.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Subscription object.
      tags:
      - all
      - msgVpn
      - mqttSession
    get:
      description: |-
        Get a Subscription object.

        An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|||
        mqttSessionVirtualRouter|x|||
        msgVpnName|x|||
        subscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnMqttSessionSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: The MQTT subscription topic.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
          description: The Subscription object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Subscription object.
      tags:
      - all
      - msgVpn
      - mqttSession
    patch:
      description: |-
        Update a Subscription object. Any attribute missing from the request will be left unchanged.

        An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|x||||
        mqttSessionVirtualRouter|x|x||||
        msgVpnName|x|x||||
        subscriptionTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: updateMsgVpnMqttSessionSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: The MQTT subscription topic.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        description: The Subscription object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
          description: The Subscription object's attributes after being updated, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Subscription object.
      tags:
      - all
      - msgVpn
      - mqttSession
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Subscription object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        mqttSessionClientId|x|x||||
        mqttSessionVirtualRouter|x|x||||
        msgVpnName|x|x||||
        subscriptionTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: replaceMsgVpnMqttSessionSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The Client ID of the MQTT Session, which corresponds to the ClientId
          provided in the MQTT CONNECT packet.
        in: path
        name: mqttSessionClientId
        required: true
        schema:
          type: string
      - description: The virtual router of the MQTT Session.
        in: path
        name: mqttSessionVirtualRouter
        required: true
        schema:
          type: string
      - description: The MQTT subscription topic.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        description: The Subscription object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
          description: The Subscription object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Subscription object.
      tags:
      - all
      - msgVpn
      - mqttSession
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queueTemplates:
    get:
      description: |-
        Get a list of Queue Template objects.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueTemplateName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnQueueTemplates
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplatesResponse'
          description: The list of Queue Template objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Template objects.
      tags:
      - all
      - msgVpn
      - queueTemplate
    post:
      description: |-
        Create a Queue Template object. Any attribute missing from the request will be set to its default value.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        queueTemplateName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: createMsgVpnQueueTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueueTemplate'
        description: The Queue Template object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
          description: The Queue Template object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Queue Template object.
      tags:
      - all
      - msgVpn
      - queueTemplate
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queueTemplates/{queueTemplateName}:
    delete:
      description: |-
        Delete a Queue Template object.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnQueueTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue Template.
        in: path
        name: queueTemplateName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Queue Template object.
      tags:
      - all
      - msgVpn
      - queueTemplate
    get:
      description: |-
        Get a Queue Template object.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueTemplateName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnQueueTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue Template.
        in: path
        name: queueTemplateName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
          description: The Queue Template object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Template object.
      tags:
      - all
      - msgVpn
      - queueTemplate
    patch:
      description: |-
        Update a Queue Template object. Any attribute missing from the request will be left unchanged.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        queueTemplateName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: updateMsgVpnQueueTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue Template.
        in: path
        name: queueTemplateName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueueTemplate'
        description: The Queue Template object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
          description: The Queue Template object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Queue Template object.
      tags:
      - all
      - msgVpn
      - queueTemplate
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Queue Template object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        queueTemplateName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: replaceMsgVpnQueueTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue Template.
        in: path
        name: queueTemplateName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueueTemplate'
        description: The Queue Template object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
          description: The Queue Template object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Queue Template object.
      tags:
      - all
      - msgVpn
      - queueTemplate
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queues:
    get:
      description: |-
        Get a list of Queue objects.

        A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnQueues
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueuesResponse'
          description: The list of Queue objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue objects.
      tags:
      - all
      - msgVpn
      - queue
    post:
      description: |-
        Create a Queue object. Any attribute missing from the request will be set to its default value.

        A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        queueName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueue'
        description: The Queue object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
          description: The Queue object's attributes after being created, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Queue object.
      tags:
      - all
      - msgVpn
      - queue
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queues/{queueName}:
    delete:
      description: |-
        Delete a Queue object.

        A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Queue object.
      tags:
      - all
      - msgVpn
      - queue
    get:
      description: |-
        Get a Queue object.

        A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
          description: The Queue object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue object.
      tags:
      - all
      - msgVpn
      - queue
    patch:
      description: |-
        Update a Queue object. Any attribute missing from the request will be left unchanged.

        A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        accessType||||x||
        msgVpnName|x|x||||
        owner||||x||
        permission||||x||
        queueName|x|x||||
        respectMsgPriorityEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueue'
        description: The Queue object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
          description: The Queue object's attributes after being updated, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Queue object.
      tags:
      - all
      - msgVpn
      - queue
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Queue object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        accessType||||x||
        msgVpnName|x|x||||
        owner||||x||
        permission||||x||
        queueName|x|x||||
        respectMsgPriorityEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnQueue
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueue'
        description: The Queue object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
          description: The Queue object's attributes after being replaced, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Queue object.
      tags:
      - all
      - msgVpn
      - queue
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions:
    get:
      description: |-
        Get a list of Queue Subscription objects.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||
        subscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnQueueSubscriptions
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionsResponse'
          description: The list of Queue Subscription objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Subscription objects.
      tags:
      - all
      - msgVpn
      - queue
    post:
      description: |-
        Create a Queue Subscription object. Any attribute missing from the request will be set to its default value.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        queueName|x||x|||
        subscriptionTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnQueueSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueueSubscription'
        description: The Queue Subscription object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionResponse'
          description: The Queue Subscription object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Queue Subscription object.
      tags:
      - all
      - msgVpn
      - queue
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}:
    delete:
      description: |-
        Delete a Queue Subscription object.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnQueueSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: The topic of the Subscription.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Queue Subscription object.
      tags:
      - all
      - msgVpn
      - queue
    get:
      description: |-
        Get a Queue Subscription object.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||
        subscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnQueueSubscription
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Queue.
        in: path
        name: queueName
        required: true
        schema:
          type: string
      - description: The topic of the Subscription.
        in: path
        name: subscriptionTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionResponse'
          description: The Queue Subscription object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Subscription object.
      tags:
      - all
      - msgVpn
      - queue
  /msgVpns/{msgVpnName}/replayLogs:
    get:
      description: |-
        Get a list of Replay Log objects.

        When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        replayLogName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.10.
      operationId: getMsgVpnReplayLogs
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogsResponse'
          description: The list of Replay Log objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Replay Log objects.
      tags:
      - all
      - msgVpn
      - replayLog
    post:
      description: |-
        Create a Replay Log object. Any attribute missing from the request will be set to its default value.

        When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        replayLogName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.10.
      operationId: createMsgVpnReplayLog
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplayLog'
        description: The Replay Log object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
          description: The Replay Log object's attributes after being created, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Replay Log object.
      tags:
      - all
      - msgVpn
      - replayLog
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}:
    delete:
      description: |-
        Delete a Replay Log object.

        When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.10.
      operationId: deleteMsgVpnReplayLog
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Replay Log.
        in: path
        name: replayLogName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Replay Log object.
      tags:
      - all
      - msgVpn
      - replayLog
    get:
      description: |-
        Get a Replay Log object.

        When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        replayLogName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.10.
      operationId: getMsgVpnReplayLog
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Replay Log.
        in: path
        name: replayLogName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
          description: The Replay Log object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Replay Log object.
      tags:
      - all
      - msgVpn
      - replayLog
    patch:
      description: |-
        Update a Replay Log object. Any attribute missing from the request will be left unchanged.

        When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        replayLogName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.10.
      operationId: updateMsgVpnReplayLog
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Replay Log.
        in: path
        name: replayLogName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplayLog'
        description: The Replay Log object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
          description: The Replay Log object's attributes after being updated, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Replay Log object.
      tags:
      - all
      - msgVpn
      - replayLog
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Replay Log object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        replayLogName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.10.
      operationId: replaceMsgVpnReplayLog
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Replay Log.
        in: path
        name: replayLogName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplayLog'
        description: The Replay Log object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
          description: The Replay Log object's attributes after being replaced, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Replay Log object.
      tags:
      - all
      - msgVpn
      - replayLog
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/replicatedTopics:
    get:
      description: |-
        Get a list of Replicated Topic objects.

        To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        replicatedTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnReplicatedTopics
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicsResponse'
          description: The list of Replicated Topic objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Replicated Topic objects.
      tags:
      - all
      - msgVpn
      - replicatedTopic
    post:
      description: |-
        Create a Replicated Topic object. Any attribute missing from the request will be set to its default value.

        To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        replicatedTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: createMsgVpnReplicatedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        description: The Replicated Topic object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
          description: The Replicated Topic object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Replicated Topic object.
      tags:
      - all
      - msgVpn
      - replicatedTopic
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}:
    delete:
      description: |-
        Delete a Replicated Topic object.

        To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: deleteMsgVpnReplicatedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        in: path
        name: replicatedTopic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Replicated Topic object.
      tags:
      - all
      - msgVpn
      - replicatedTopic
    get:
      description: |-
        Get a Replicated Topic object.

        To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        replicatedTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnReplicatedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        in: path
        name: replicatedTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
          description: The Replicated Topic object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Replicated Topic object.
      tags:
      - all
      - msgVpn
      - replicatedTopic
    patch:
      description: |-
        Update a Replicated Topic object. Any attribute missing from the request will be left unchanged.

        To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        replicatedTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: updateMsgVpnReplicatedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        in: path
        name: replicatedTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        description: The Replicated Topic object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
          description: The Replicated Topic object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Replicated Topic object.
      tags:
      - all
      - msgVpn
      - replicatedTopic
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Replicated Topic object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        replicatedTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: replaceMsgVpnReplicatedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        in: path
        name: replicatedTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        description: The Replicated Topic object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
          description: The Replicated Topic object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Replicated Topic object.
      tags:
      - all
      - msgVpn
      - replicatedTopic
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints:
    get:
      description: |-
        Get a list of REST Delivery Point objects.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPoints
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointsResponse'
          description: The list of REST Delivery Point objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of REST Delivery Point objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    post:
      description: |-
        Create a REST Delivery Point object. Any attribute missing from the request will be set to its default value.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        restDeliveryPointName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnRestDeliveryPoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        description: The REST Delivery Point object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
          description: The REST Delivery Point object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a REST Delivery Point object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}:
    delete:
      description: |-
        Delete a REST Delivery Point object.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnRestDeliveryPoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a REST Delivery Point object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    get:
      description: |-
        Get a REST Delivery Point object.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
          description: The REST Delivery Point object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a REST Delivery Point object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    patch:
      description: |-
        Update a REST Delivery Point object. Any attribute missing from the request will be left unchanged.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        clientProfileName||||x||
        msgVpnName|x|x||||
        restDeliveryPointName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnRestDeliveryPoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        description: The REST Delivery Point object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
          description: The REST Delivery Point object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a REST Delivery Point object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a REST Delivery Point object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        clientProfileName||||x||
        msgVpnName|x|x||||
        restDeliveryPointName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnRestDeliveryPoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        description: The REST Delivery Point object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
          description: The REST Delivery Point object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a REST Delivery Point object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings:
    get:
      description: |-
        Get a list of Queue Binding objects.

        A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueBindingName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPointQueueBindings
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingsResponse'
          description: The list of Queue Binding objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Queue Binding objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    post:
      description: |-
        Create a Queue Binding object. Any attribute missing from the request will be set to its default value.

        A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        queueBindingName|x|x||||
        restDeliveryPointName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        description: The Queue Binding object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
          description: The Queue Binding object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Queue Binding object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}:
    delete:
      description: |-
        Delete a Queue Binding object.

        A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of a queue in the Message VPN.
        in: path
        name: queueBindingName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Queue Binding object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    get:
      description: |-
        Get a Queue Binding object.

        A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueBindingName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of a queue in the Message VPN.
        in: path
        name: queueBindingName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
          description: The Queue Binding object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Queue Binding object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    patch:
      description: |-
        Update a Queue Binding object. Any attribute missing from the request will be left unchanged.

        A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        queueBindingName|x|x||||
        restDeliveryPointName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of a queue in the Message VPN.
        in: path
        name: queueBindingName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        description: The Queue Binding object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
          description: The Queue Binding object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Queue Binding object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Queue Binding object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        queueBindingName|x|x||||
        restDeliveryPointName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of a queue in the Message VPN.
        in: path
        name: queueBindingName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        description: The Queue Binding object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
          description: The Queue Binding object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Queue Binding object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers:
    get:
      description: |-
        Get a list of REST Consumer objects.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationClientCertContent||x||x
        authenticationClientCertPassword||x||
        authenticationHttpBasicPassword||x||x
        authenticationHttpHeaderValue||x||x
        authenticationOauthClientSecret||x||x
        authenticationOauthJwtSecretKey||x||x
        msgVpnName|x|||
        restConsumerName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPointRestConsumers
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumersResponse'
          description: The list of REST Consumer objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of REST Consumer objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    post:
      description: |-
        Create a REST Consumer object. Any attribute missing from the request will be set to its default value.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationClientCertContent||||x||x
        authenticationClientCertPassword||||x||
        authenticationHttpBasicPassword||||x||x
        authenticationHttpHeaderValue||||x||x
        authenticationOauthClientSecret||||x||x
        authenticationOauthJwtSecretKey||||x||x
        msgVpnName|x||x|||
        restConsumerName|x|x||||
        restDeliveryPointName|x||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
        MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
        MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        description: The REST Consumer object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
          description: The REST Consumer object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a REST Consumer object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}:
    delete:
      description: |-
        Delete a REST Consumer object.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a REST Consumer object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    get:
      description: |-
        Get a REST Consumer object.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationClientCertContent||x||x
        authenticationClientCertPassword||x||
        authenticationHttpBasicPassword||x||x
        authenticationHttpHeaderValue||x||x
        authenticationOauthClientSecret||x||x
        authenticationOauthJwtSecretKey||x||x
        msgVpnName|x|||
        restConsumerName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
          description: The REST Consumer object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a REST Consumer object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    patch:
      description: |-
        Update a REST Consumer object. Any attribute missing from the request will be left unchanged.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationClientCertContent|||x|x||x
        authenticationClientCertPassword|||x|x||
        authenticationHttpBasicPassword|||x|x||x
        authenticationHttpBasicUsername||||x||
        authenticationHttpHeaderValue|||x|||x
        authenticationOauthClientId||||x||
        authenticationOauthClientScope||||x||
        authenticationOauthClientSecret|||x|x||x
        authenticationOauthClientTokenEndpoint||||x||
        authenticationOauthJwtSecretKey|||x|x||x
        authenticationOauthJwtTokenEndpoint||||x||
        authenticationScheme||||x||
        msgVpnName|x|x||||
        outgoingConnectionCount||||x||
        remoteHost||||x||
        remotePort||||x||
        restConsumerName|x|x||||
        restDeliveryPointName|x|x||||
        tlsCipherSuiteList||||x||
        tlsEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
        MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
        MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        description: The REST Consumer object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
          description: The REST Consumer object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a REST Consumer object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a REST Consumer object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationClientCertContent|||x|x||x
        authenticationClientCertPassword|||x|x||
        authenticationHttpBasicPassword|||x|x||x
        authenticationHttpBasicUsername||||x||
        authenticationHttpHeaderValue|||x|||x
        authenticationOauthClientId||||x||
        authenticationOauthClientScope||||x||
        authenticationOauthClientSecret|||x|x||x
        authenticationOauthClientTokenEndpoint||||x||
        authenticationOauthJwtSecretKey|||x|x||x
        authenticationOauthJwtTokenEndpoint||||x||
        authenticationScheme||||x||
        msgVpnName|x|x||||
        outgoingConnectionCount||||x||
        remoteHost||||x||
        remotePort||||x||
        restConsumerName|x|x||||
        restDeliveryPointName|x|x||||
        tlsCipherSuiteList||||x||
        tlsEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
        MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
        MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: replaceMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        description: The REST Consumer object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
          description: The REST Consumer object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a REST Consumer object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims:
    get:
      description: |-
        Get a list of Claim objects.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        oauthJwtClaimName|x|||
        restConsumerName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaims
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse'
          description: The list of Claim objects' attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Claim objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    post:
      description: |-
        Create a Claim object. Any attribute missing from the request will be set to its default value.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        oauthJwtClaimName|x|x||||
        oauthJwtClaimValue||x||||
        restConsumerName|x||x|||
        restDeliveryPointName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.21.
      operationId: createMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
        description: The Claim object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse'
          description: The Claim object's attributes after being created, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Claim object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims/{oauthJwtClaimName}
  : delete:
      description: |-
        Delete a Claim object.

        A Claim is added to the JWT sent to the OAuth token request endpoint.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.21.
      operationId: deleteMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: The name of the additional claim. Cannot be "exp", "iat", or
          "jti".
        in: path
        name: oauthJwtClaimName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Claim object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    get:
      description: |-
        Get a Claim object.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        oauthJwtClaimName|x|||
        restConsumerName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: The name of the additional claim. Cannot be "exp", "iat", or
          "jti".
        in: path
        name: oauthJwtClaimName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse'
          description: The Claim object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Claim object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames:
    get:
      deprecated: true
      description: |-
        Get a list of Trusted Common Name objects.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x||x|
        restConsumerName|x||x|
        restDeliveryPointName|x||x|
        tlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse'
          description: The list of Trusted Common Name objects' attributes, and the
            request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Trusted Common Name objects.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    post:
      deprecated: true
      description: |-
        Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x||x|
        restConsumerName|x||x||x|
        restDeliveryPointName|x||x||x|
        tlsTrustedCommonName|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
      operationId: createMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        description: The Trusted Common Name object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Trusted Common Name object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}
  : delete:
      deprecated: true
      description: |-
        Delete a Trusted Common Name object.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
      operationId: deleteMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Trusted Common Name object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
    get:
      deprecated: true
      description: |-
        Get a Trusted Common Name object.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x||x|
        restConsumerName|x||x|
        restDeliveryPointName|x||x|
        tlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the REST Delivery Point.
        in: path
        name: restDeliveryPointName
        required: true
        schema:
          type: string
      - description: The name of the REST Consumer.
        in: path
        name: restConsumerName
        required: true
        schema:
          type: string
      - description: The expected trusted common name of the remote certificate.
        in: path
        name: tlsTrustedCommonName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse'
          description: The Trusted Common Name object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Trusted Common Name object.
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
  /msgVpns/{msgVpnName}/sequencedTopics:
    get:
      description: |-
        Get a list of Sequenced Topic objects.

        A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        sequencedTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnSequencedTopics
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnSequencedTopicsResponse'
          description: The list of Sequenced Topic objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Sequenced Topic objects.
      tags:
      - all
      - msgVpn
    post:
      description: |-
        Create a Sequenced Topic object. Any attribute missing from the request will be set to its default value.

        A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        sequencedTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnSequencedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnSequencedTopic'
        description: The Sequenced Topic object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnSequencedTopicResponse'
          description: The Sequenced Topic object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Sequenced Topic object.
      tags:
      - all
      - msgVpn
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/sequencedTopics/{sequencedTopic}:
    delete:
      description: |-
        Delete a Sequenced Topic object.

        A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnSequencedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Topic for applying sequence numbers.
        in: path
        name: sequencedTopic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Sequenced Topic object.
      tags:
      - all
      - msgVpn
    get:
      description: |-
        Get a Sequenced Topic object.

        A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        sequencedTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnSequencedTopic
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Topic for applying sequence numbers.
        in: path
        name: sequencedTopic
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnSequencedTopicResponse'
          description: The Sequenced Topic object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Sequenced Topic object.
      tags:
      - all
      - msgVpn
  /msgVpns/{msgVpnName}/topicEndpointTemplates:
    get:
      description: |-
        Get a list of Topic Endpoint Template objects.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicEndpointTemplateName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnTopicEndpointTemplates
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplatesResponse'
          description: The list of Topic Endpoint Template objects' attributes, and
            the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Endpoint Template objects.
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
    post:
      description: |-
        Create a Topic Endpoint Template object. Any attribute missing from the request will be set to its default value.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        topicEndpointTemplateName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: createMsgVpnTopicEndpointTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        description: The Topic Endpoint Template object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
          description: The Topic Endpoint Template object's attributes after being
            created, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Topic Endpoint Template object.
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/topicEndpointTemplates/{topicEndpointTemplateName}:
    delete:
      description: |-
        Delete a Topic Endpoint Template object.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnTopicEndpointTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint Template.
        in: path
        name: topicEndpointTemplateName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Topic Endpoint Template object.
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
    get:
      description: |-
        Get a Topic Endpoint Template object.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicEndpointTemplateName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnTopicEndpointTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint Template.
        in: path
        name: topicEndpointTemplateName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
          description: The Topic Endpoint Template object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Endpoint Template object.
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
    patch:
      description: |-
        Update a Topic Endpoint Template object. Any attribute missing from the request will be left unchanged.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        topicEndpointTemplateName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: updateMsgVpnTopicEndpointTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint Template.
        in: path
        name: topicEndpointTemplateName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        description: The Topic Endpoint Template object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
          description: The Topic Endpoint Template object's attributes after being
            updated, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Topic Endpoint Template object.
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Topic Endpoint Template object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        topicEndpointTemplateName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: replaceMsgVpnTopicEndpointTemplate
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint Template.
        in: path
        name: topicEndpointTemplateName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        description: The Topic Endpoint Template object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
          description: The Topic Endpoint Template object's attributes after being
            replaced, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Topic Endpoint Template object.
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/topicEndpoints:
    get:
      description: |-
        Get a list of Topic Endpoint objects.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicEndpointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnTopicEndpoints
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointsResponse'
          description: The list of Topic Endpoint objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Topic Endpoint objects.
      tags:
      - all
      - msgVpn
      - topicEndpoint
    post:
      description: |-
        Create a Topic Endpoint object. Any attribute missing from the request will be set to its default value.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        topicEndpointName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: createMsgVpnTopicEndpoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        description: The Topic Endpoint object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
          description: The Topic Endpoint object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Topic Endpoint object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}:
    delete:
      description: |-
        Delete a Topic Endpoint object.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: deleteMsgVpnTopicEndpoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Topic Endpoint object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
    get:
      description: |-
        Get a Topic Endpoint object.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicEndpointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnTopicEndpoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
          description: The Topic Endpoint object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Topic Endpoint object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
    patch:
      description: |-
        Update a Topic Endpoint object. Any attribute missing from the request will be left unchanged.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        accessType||||x||
        msgVpnName|x|x||||
        owner||||x||
        permission||||x||
        respectMsgPriorityEnabled||||x||
        topicEndpointName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: updateMsgVpnTopicEndpoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        description: The Topic Endpoint object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
          description: The Topic Endpoint object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Topic Endpoint object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Topic Endpoint object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        accessType||||x||
        msgVpnName|x|x||||
        owner||||x||
        permission||||x||
        respectMsgPriorityEnabled||||x||
        topicEndpointName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        EventThreshold|clearPercent|setPercent|clearValue, setValue
        EventThreshold|clearValue|setValue|clearPercent, setPercent
        EventThreshold|setPercent|clearPercent|clearValue, setValue
        EventThreshold|setValue|clearValue|clearPercent, setPercent



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: replaceMsgVpnTopicEndpoint
      parameters:
      - description: The name of the Message VPN.
        in: path
        name: msgVpnName
        required: true
        schema:
          type: string
      - description: The name of the Topic Endpoint.
        in: path
        name: topicEndpointName
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        description: The Topic Endpoint object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
          description: The Topic Endpoint object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Topic Endpoint object.
      tags:
      - all
      - msgVpn
      - topicEndpoint
      x-codegen-request-body-name: body
  /systemInformation:
    get:
      deprecated: true
      description: |-
        Get a System Information object.

        The System Information object provides metadata about the SEMP API.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        platform|||x|
        sempVersion|||x|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been deprecated since 2.2. /systemInformation was replaced by /about/api.
      operationId: getSystemInformation
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInformationResponse'
          description: The System Information object's attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a System Information object.
      tags:
      - all
      - systemInformation
  /virtualHostnames:
    get:
      description: |-
        Get a list of Virtual Hostname objects.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        virtualHostname|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.17.
      operationId: getVirtualHostnames
      parameters:
      - description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        in: query
        name: count
        schema:
          default: 10
          minimum: 1
          type: integer
      - description: The cursor, or position, for the next page of objects. See the
          documentation for the `cursor` parameter.
        in: query
        name: cursor
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        explode: false
        in: query
        name: where
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnamesResponse'
          description: The list of Virtual Hostname objects' attributes, and the request
            metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a list of Virtual Hostname objects.
      tags:
      - all
      - virtualHostname
    post:
      description: |-
        Create a Virtual Hostname object. Any attribute missing from the request will be set to its default value.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        virtualHostname|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.17.
      operationId: createVirtualHostname
      parameters:
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHostname'
        description: The Virtual Hostname object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
          description: The Virtual Hostname object's attributes after being created,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Create a Virtual Hostname object.
      tags:
      - all
      - virtualHostname
      x-codegen-request-body-name: body
  /virtualHostnames/{virtualHostname}:
    delete:
      description: |-
        Delete a Virtual Hostname object.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.17.
      operationId: deleteVirtualHostname
      parameters:
      - description: The virtual hostname.
        in: path
        name: virtualHostname
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Delete a Virtual Hostname object.
      tags:
      - all
      - virtualHostname
    get:
      description: |-
        Get a Virtual Hostname object.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        virtualHostname|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.17.
      operationId: getVirtualHostname
      parameters:
      - description: The virtual hostname.
        in: path
        name: virtualHostname
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
          description: The Virtual Hostname object's attributes, and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Get a Virtual Hostname object.
      tags:
      - all
      - virtualHostname
    patch:
      description: |-
        Update a Virtual Hostname object. Any attribute missing from the request will be left unchanged.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        virtualHostname|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.17.
      operationId: updateVirtualHostname
      parameters:
      - description: The virtual hostname.
        in: path
        name: virtualHostname
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHostname'
        description: The Virtual Hostname object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
          description: The Virtual Hostname object's attributes after being updated,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Update a Virtual Hostname object.
      tags:
      - all
      - virtualHostname
      x-codegen-request-body-name: body
    put:
      description: |-
        Replace a Virtual Hostname object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        virtualHostname|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.17.
      operationId: replaceVirtualHostname
      parameters:
      - description: The virtual hostname.
        in: path
        name: virtualHostname
        required: true
        schema:
          type: string
      - description: Accept opaque attributes in the request or return opaque attributes
          in the response, encrypted with the specified password. See that documentation
          for the `opaquePassword` parameter.
        in: query
        name: opaquePassword
        schema:
          type: string
      - description: Include in the response only selected attributes of the object,
          or exclude from the response selected attributes of the object. See the
          documentation for the `select` parameter.
        explode: false
        in: query
        name: select
        schema:
          items:
            type: string
          type: array
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHostname'
        description: The Virtual Hostname object's attributes.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
          description: The Virtual Hostname object's attributes after being replaced,
            and the request metadata.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
          description: The error response.
      security:
      - basicAuth: []
      summary: Replace a Virtual Hostname object.
      tags:
      - all
      - virtualHostname
      x-codegen-request-body-name: body
components:
  parameters:
    countQuery:
      description: Limit the count of objects in the response. See the documentation
        for the `count` parameter.
      in: query
      name: count
      schema:
        default: 10
        minimum: 1
        type: integer
    cursorQuery:
      description: The cursor, or position, for the next page of objects. See the
        documentation for the `cursor` parameter.
      in: query
      name: cursor
      schema:
        type: string
    opaquePasswordQuery:
      description: Accept opaque attributes in the request or return opaque attributes
        in the response, encrypted with the specified password. See that documentation
        for the `opaquePassword` parameter.
      in: query
      name: opaquePassword
      schema:
        type: string
    selectQuery:
      description: Include in the response only selected attributes of the object,
        or exclude from the response selected attributes of the object. See the documentation
        for the `select` parameter.
      explode: false
      in: query
      name: select
      schema:
        items:
          type: string
        type: array
      style: form
    whereQuery:
      description: Include in the response only objects where certain conditions are
        true. See the the documentation for the `where` parameter.
      explode: false
      in: query
      name: where
      schema:
        items:
          type: string
        type: array
      style: form
  schemas:
    About:
      type: object
    AboutApi:
      example:
        sempVersion: sempVersion
        platform: platform
      properties:
        platform:
          description: The platform running the SEMP API.
          type: string
        sempVersion:
          description: The version of the SEMP API.
          type: string
      type: object
    AboutApiLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this API Description object.
          type: string
      type: object
    AboutApiResponse:
      example:
        data:
          sempVersion: sempVersion
          platform: platform
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/AboutApi'
        links:
          $ref: '#/components/schemas/AboutApiLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    AboutLinks:
      example:
        apiUri: apiUri
        userUri: userUri
        uri: uri
      properties:
        apiUri:
          description: The URI of this About's API Description object. Available since
            2.2.
          type: string
        uri:
          description: The URI of this About object.
          type: string
        userUri:
          description: The URI of this About's User object. Available since 2.2.
          type: string
      type: object
    AboutResponse:
      example:
        data: '{}'
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          apiUri: apiUri
          userUri: userUri
          uri: uri
      properties:
        data:
          type: object
        links:
          $ref: '#/components/schemas/AboutLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    AboutUser:
      example:
        sessionCurrentTime: 6
        sessionIdleExpiryTime: 5
        sessionHardExpiryTime: 1
        sessionCreateTime: 0
        sessionId: sessionId
        globalAccessLevel: admin
        username: username
      properties:
        globalAccessLevel:
          description: |
            The global access level of the User. The allowed values and their meaning are:

            <pre>
            "admin" - Full administrative access.
            "none" - No access.
            "read-only" - Read only access.
            "read-write" - Read and write access.
            </pre>
          enum:
          - admin
          - none
          - read-only
          - read-write
          type: string
        sessionCreateTime:
          description: The timestamp of when the session was created. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available
            since 2.21.
          format: int32
          type: integer
        sessionCurrentTime:
          description: The current server timestamp. This is provided as a reference
            point for the other timestamps provided. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
          type: integer
        sessionHardExpiryTime:
          description: The hard expiry time for the session. After this time the session
            will be invalid, regardless of activity. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
          type: integer
        sessionId:
          description: An identifier for the session to differentiate this session
            from other sessions for the same user. This value is not guaranteed to
            be unique between active sessions for different users. Available since
            2.21.
          type: string
        sessionIdleExpiryTime:
          description: The session idle expiry time. After this time the session will
            be invalid if there has been no activity. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
          type: integer
        username:
          description: The username of the User. Available since 2.21.
          type: string
      type: object
    AboutUserLinks:
      example:
        msgVpnsUri: msgVpnsUri
        uri: uri
      properties:
        msgVpnsUri:
          description: The URI of this User's collection of User Message VPN objects.
          type: string
        uri:
          description: The URI of this User object.
          type: string
      type: object
    AboutUserMsgVpn:
      example:
        accessLevel: none
        msgVpnName: msgVpnName
      properties:
        accessLevel:
          description: |
            The Message VPN access level of the User. The allowed values and their meaning are:

            <pre>
            "none" - No access.
            "read-only" - Read only access.
            "read-write" - Read and write access.
            </pre>
          enum:
          - none
          - read-only
          - read-write
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    AboutUserMsgVpnLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this User Message VPN object.
          type: string
      type: object
    AboutUserMsgVpnResponse:
      example:
        data:
          accessLevel: none
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/AboutUserMsgVpn'
        links:
          $ref: '#/components/schemas/AboutUserMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    AboutUserMsgVpnsResponse:
      example:
        data:
        - accessLevel: none
          msgVpnName: msgVpnName
        - accessLevel: none
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/AboutUserMsgVpn'
          type: array
        links:
          items:
            $ref: '#/components/schemas/AboutUserMsgVpnLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    AboutUserResponse:
      example:
        data:
          sessionCurrentTime: 6
          sessionIdleExpiryTime: 5
          sessionHardExpiryTime: 1
          sessionCreateTime: 0
          sessionId: sessionId
          globalAccessLevel: admin
          username: username
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          msgVpnsUri: msgVpnsUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/AboutUser'
        links:
          $ref: '#/components/schemas/AboutUserLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    Broker:
      example:
        serviceSempPlainTextEnabled: true
        guaranteedMsgingEventDeliveredUnackedThreshold:
          clearPercent: 5
          setPercent: 2
        guaranteedMsgingEventTransactedSessionResourceCountThreshold:
          clearPercent: 5
          setPercent: 2
        serviceSmfEnabled: true
        guaranteedMsgingEventMsgSpoolFileCountThreshold:
          clearPercent: 5
          setPercent: 2
        tlsCipherSuiteManagementList: tlsCipherSuiteManagementList
        serviceMsgBackboneEnabled: true
        serviceSmfCompressionListenPort: 4
        guaranteedMsgingEventTransactionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceSmfPlainTextListenPort: 5
        serviceWebTransportWebUrlSuffix: serviceWebTransportWebUrlSuffix
        serviceSmfTlsListenPort: 9
        serviceMateLinkListenPort: 1
        serviceSempLegacyTimeoutEnabled: true
        serviceWebTransportPlainTextListenPort: 6
        serviceWebTransportTlsListenPort: 8
        tlsTicketLifetime: 9
        serviceSmfRoutingControlListenPort: 9
        tlsServerCertPassword: tlsServerCertPassword
        authClientCertRevocationCheckMode: none
        serviceRestIncomingEnabled: true
        serviceSempSessionIdleTimeout: 6
        serviceWebTransportEnabled: true
        tlsCipherSuiteSecureShellList: tlsCipherSuiteSecureShellList
        serviceAmqpEnabled: true
        guaranteedMsgingEventDiskUsageThreshold:
          clearPercent: 5
          setPercent: 2
        serviceSempTlsEnabled: true
        serviceEventConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceRedundancyFirstListenPort: 1
        guaranteedMsgingEventEgressFlowCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        guaranteedMsgingEventMsgCountThreshold:
          clearPercent: 5
          setPercent: 2
        serviceHealthCheckListenPort: 7
        serviceRestEventOutgoingConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        guaranteedMsgingEventEndpointCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceHealthCheckEnabled: true
        serviceMateLinkEnabled: true
        serviceSmfEventConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceRestOutgoingEnabled: true
        guaranteedMsgingMaxCacheUsage: 7
        serviceAmqpTlsListenPort: 4
        serviceSempTlsListenPort: 1
        tlsServerCertContent: tlsServerCertContent
        serviceSempSessionMaxLifetime: 7
        tlsCipherSuiteMsgBackboneList: tlsCipherSuiteMsgBackboneList
        guaranteedMsgingTransactionReplicationCompatibilityMode: legacy
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout: 3
        guaranteedMsgingEventIngressFlowCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout: 2
        guaranteedMsgingMaxMsgSpoolUsage: 9
        serviceRedundancyEnabled: true
        serviceMqttEnabled: true
        serviceTlsEventConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        tlsBlockVersion11Enabled: true
        tlsCrimeExploitProtectionEnabled: true
        serviceSempPlainTextListenPort: 1
        guaranteedMsgingEnabled: true
        guaranteedMsgingEventTransactedSessionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        tlsStandardDomainCertificateAuthoritiesEnabled: true
        guaranteedMsgingEventMsgSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        guaranteedMsgingEventCacheUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
      properties:
        authClientCertRevocationCheckMode:
          description: |
            The client certificate revocation checking mode used when a client authenticates with a client certificate. The default value is `"none"`. The allowed values and their meaning are:

            <pre>
            "none" - Do not perform any certificate revocation checking.
            "ocsp" - Use the Open Certificate Status Protcol (OCSP) for certificate revocation checking.
            "crl" - Use Certificate Revocation Lists (CRL) for certificate revocation checking.
            "ocsp-crl" - Use OCSP first, but if OCSP fails to return an unambiguous result, then check via CRL.
            </pre>
          enum:
          - none
          - ocsp
          - crl
          - ocsp-crl
          type: string
        guaranteedMsgingEnabled:
          description: Enable or disable Guaranteed Messaging. The default value is
            `false`. Available since 2.18.
          type: boolean
        guaranteedMsgingEventCacheUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventDeliveredUnackedThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventDiskUsageThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventEndpointCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventMsgCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventMsgSpoolFileCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventTransactedSessionResourceCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingMaxCacheUsage:
          description: Guaranteed messaging cache usage limit. Expressed as a maximum
            percentage of the NAB's egress queueing. resources that the guaranteed
            message cache is allowed to use. The default value is `10`. Available
            since 2.18.
          format: int32
          type: integer
        guaranteedMsgingMaxMsgSpoolUsage:
          description: 'The maximum total message spool usage allowed across all VPNs
            on this broker, in megabytes. Recommendation: the maximum value should
            be less than 90% of the disk space allocated for the guaranteed message
            spool. The default value is `60000`. Available since 2.18.'
          format: int64
          type: integer
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout:
          description: The maximum time, in milliseconds, that can be tolerated for
            remote acknowledgement of synchronization messages before which the remote
            system will be considered out of sync. The default value is `10000`. Available
            since 2.18.
          format: int64
          type: integer
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout:
          description: The maximum time, in milliseconds, that can be tolerated for
            remote disk writes before which the remote system will be considered out
            of sync. The default value is `10000`. Available since 2.18.
          format: int64
          type: integer
        guaranteedMsgingTransactionReplicationCompatibilityMode:
          description: |-
            The replication compatibility mode for the router. The default value is `"legacy"`. The allowed values and their meaning are:"legacy" - All transactions originated by clients are replicated to the standby site without using transactions."transacted" - All transactions originated by clients are replicated to the standby site using transactions. The default value is `"legacy"`. The allowed values and their meaning are:

            <pre>
            "legacy" - All transactions originated by clients are replicated to the standby site without using transactions.
            "transacted" - All transactions originated by clients are replicated to the standby site using transactions.
            </pre>
             Available since 2.18.
          enum:
          - legacy
          - transacted
          type: string
        serviceAmqpEnabled:
          description: Enable or disable the AMQP service. When disabled new AMQP
            Clients may not connect through the global or per-VPN AMQP listen-ports,
            and all currently connected AMQP Clients are immediately disconnected.
            The default value is `false`. Available since 2.17.
          type: boolean
        serviceAmqpTlsListenPort:
          description: TCP port number that AMQP clients can use to connect to the
            broker using raw TCP over TLS. The default value is `0`. Available since
            2.17.
          format: int64
          type: integer
        serviceEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceHealthCheckEnabled:
          description: Enable or disable the health-check service. The default value
            is `false`. Available since 2.17.
          type: boolean
        serviceHealthCheckListenPort:
          description: The port number for the health-check service. The port must
            be unique across the message backbone. The health-check service must be
            disabled to change the port. The default value is `5550`. Available since
            2.17.
          format: int64
          type: integer
        serviceMateLinkEnabled:
          description: Enable or disable the mate-link service. The default value
            is `true`. Available since 2.17.
          type: boolean
        serviceMateLinkListenPort:
          description: The port number for the mate-link service. The port must be
            unique across the message backbone. The mate-link service must be disabled
            to change the port. The default value is `8741`. Available since 2.17.
          format: int64
          type: integer
        serviceMqttEnabled:
          description: Enable or disable the MQTT service. When disabled new MQTT
            Clients may not connect through the per-VPN MQTT listen-ports, and all
            currently connected MQTT Clients are immediately disconnected. The default
            value is `false`. Available since 2.17.
          type: boolean
        serviceMsgBackboneEnabled:
          description: Enable or disable the msg-backbone service. When disabled new
            Clients may not connect through global or per-VPN listen-ports, and all
            currently connected Clients are immediately disconnected. The default
            value is `true`. Available since 2.17.
          type: boolean
        serviceRedundancyEnabled:
          description: Enable or disable the redundancy service. The default value
            is `true`. Available since 2.17.
          type: boolean
        serviceRedundancyFirstListenPort:
          description: The first listen-port used for the redundancy service. Redundancy
            uses this port and the subsequent 2 ports. These port must be unique across
            the message backbone. The redundancy service must be disabled to change
            this port. The default value is `8300`. Available since 2.17.
          format: int64
          type: integer
        serviceRestEventOutgoingConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceRestIncomingEnabled:
          description: Enable or disable the REST service incoming connections on
            the router. The default value is `false`. Available since 2.17.
          type: boolean
        serviceRestOutgoingEnabled:
          description: Enable or disable the REST service outgoing connections on
            the router. The default value is `false`. Available since 2.17.
          type: boolean
        serviceSempLegacyTimeoutEnabled:
          description: Enable or disable extended SEMP timeouts for paged GETs. When
            a request times out, it returns the current page of content, even if the
            page is not full.  When enabled, the timeout is 60 seconds. When disabled,
            the timeout is 5 seconds.  The recommended setting is disabled (no legacy-timeout).  This
            parameter is intended as a temporary workaround to be used until SEMP
            clients can handle short pages.  This setting will be removed in a future
            release. The default value is `false`. Available since 2.18.
          type: boolean
        serviceSempPlainTextEnabled:
          description: Enable or disable plain-text SEMP service. The default value
            is `true`. Available since 2.17.
          type: boolean
        serviceSempPlainTextListenPort:
          description: The TCP port for plain-text SEMP client connections. The default
            value is `80`. Available since 2.17.
          format: int64
          type: integer
        serviceSempSessionIdleTimeout:
          description: The session idle timeout, in minutes. Sessions will be invalidated
            if there is no activity in this period of time. The default value is `15`.
            Available since 2.21.
          format: int32
          type: integer
        serviceSempSessionMaxLifetime:
          description: The maximum lifetime of a session, in minutes. Sessions will
            be invalidated after this period of time, regardless of activity. The
            default value is `43200`. Available since 2.21.
          format: int32
          type: integer
        serviceSempTlsEnabled:
          description: Enable or disable TLS SEMP service. The default value is `true`.
            Available since 2.17.
          type: boolean
        serviceSempTlsListenPort:
          description: The TCP port for TLS SEMP client connections. The default value
            is `1943`. Available since 2.17.
          format: int64
          type: integer
        serviceSmfCompressionListenPort:
          description: TCP port number that SMF clients can use to connect to the
            broker using raw compression TCP. The default value is `55003`. Available
            since 2.17.
          format: int64
          type: integer
        serviceSmfEnabled:
          description: Enable or disable the SMF service. When disabled new SMF Clients
            may not connect through the global listen-ports, and all currently connected
            SMF Clients are immediately disconnected. The default value is `true`.
            Available since 2.17.
          type: boolean
        serviceSmfEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceSmfPlainTextListenPort:
          description: TCP port number that SMF clients can use to connect to the
            broker using raw TCP. The default value is `55555`. Available since 2.17.
          format: int64
          type: integer
        serviceSmfRoutingControlListenPort:
          description: TCP port number that SMF clients can use to connect to the
            broker using raw routing control TCP. The default value is `55556`. Available
            since 2.17.
          format: int64
          type: integer
        serviceSmfTlsListenPort:
          description: TCP port number that SMF clients can use to connect to the
            broker using raw TCP over TLS. The default value is `55443`. Available
            since 2.17.
          format: int64
          type: integer
        serviceTlsEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceWebTransportEnabled:
          description: Enable or disable the web-transport service. When disabled
            new web-transport Clients may not connect through the global listen-ports,
            and all currently connected web-transport Clients are immediately disconnected.
            The default value is `false`. Available since 2.17.
          type: boolean
        serviceWebTransportPlainTextListenPort:
          description: The TCP port for plain-text WEB client connections. The default
            value is `8008`. Available since 2.17.
          format: int64
          type: integer
        serviceWebTransportTlsListenPort:
          description: The TCP port for TLS WEB client connections. The default value
            is `1443`. Available since 2.17.
          format: int64
          type: integer
        serviceWebTransportWebUrlSuffix:
          description: Used to specify the Web URL suffix that will be used by Web
            clients when communicating with the broker. The default value is `""`.
            Available since 2.17.
          type: string
        tlsBlockVersion11Enabled:
          description: Enable or disable the blocking of TLS version 1.1 connections.
            When blocked, all existing incoming and outgoing TLS 1.1 connections with
            Clients, SEMP users, and LDAP servers remain connected while new connections
            are blocked. Note that support for TLS 1.1 will eventually be discontinued,
            at which time TLS 1.1 connections will be blocked regardless of this setting.
            The default value is `false`.
          type: boolean
        tlsCipherSuiteManagementList:
          description: The colon-separated list of cipher suites used for TLS management
            connections (e.g. SEMP, LDAP). The value "default" implies all supported
            suites ordered from most secure to least secure. The default value is
            `"default"`.
          type: string
        tlsCipherSuiteMsgBackboneList:
          description: The colon-separated list of cipher suites used for TLS data
            connections (e.g. client pub/sub). The value "default" implies all supported
            suites ordered from most secure to least secure. The default value is
            `"default"`.
          type: string
        tlsCipherSuiteSecureShellList:
          description: The colon-separated list of cipher suites used for TLS secure
            shell connections (e.g. SSH, SFTP, SCP). The value "default" implies all
            supported suites ordered from most secure to least secure. The default
            value is `"default"`.
          type: string
        tlsCrimeExploitProtectionEnabled:
          description: Enable or disable protection against the CRIME exploit. When
            enabled, TLS+compressed messaging performance is degraded. This protection
            should only be disabled if sufficient ACL and authentication features
            are being employed such that a potential attacker does not have sufficient
            access to trigger the exploit. The default value is `true`.
          type: boolean
        tlsServerCertContent:
          description: The PEM formatted content for the server certificate used for
            TLS connections. It must consist of a private key and between one and
            three certificates comprising the certificate trust chain. This attribute
            is absent from a GET and not updated when absent in a PUT, subject to
            the exceptions in note 4. Changing this attribute requires an HTTPS connection.
            The default value is `""`.
          type: string
          x-requires-https: true
        tlsServerCertPassword:
          description: The password for the server certificate used for TLS connections.
            This attribute is absent from a GET and not updated when absent in a PUT,
            subject to the exceptions in note 4. Changing this attribute requires
            an HTTPS connection. The default value is `""`.
          type: string
          x-requires-https: true
        tlsStandardDomainCertificateAuthoritiesEnabled:
          description: Enable or disable the standard domain certificate authority
            list. The default value is `true`. Available since 2.19.
          type: boolean
        tlsTicketLifetime:
          description: The TLS ticket lifetime in seconds. When a client connects
            with TLS, a session with a session ticket is created using the TLS ticket
            lifetime which determines how long the client has to resume the session.
            The default value is `86400`.
          format: int32
          type: integer
      type: object
    BrokerLinks:
      example:
        virtualHostnamesUri: virtualHostnamesUri
        certAuthoritiesUri: certAuthoritiesUri
        systemInformationUri: systemInformationUri
        aboutUri: aboutUri
        msgVpnsUri: msgVpnsUri
        domainCertAuthoritiesUri: domainCertAuthoritiesUri
        clientCertAuthoritiesUri: clientCertAuthoritiesUri
        uri: uri
        dmrClustersUri: dmrClustersUri
      properties:
        aboutUri:
          description: The URI of this Broker's About object.
          type: string
        certAuthoritiesUri:
          description: The URI of this Broker's collection of Certificate Authority
            objects. Deprecated since 2.19. Replaced by clientCertAuthorities and
            domainCertAuthorities.
          type: string
        clientCertAuthoritiesUri:
          description: The URI of this Broker's collection of Client Certificate Authority
            objects. Available since 2.19.
          type: string
        dmrClustersUri:
          description: The URI of this Broker's collection of Cluster objects. Available
            since 2.11.
          type: string
        domainCertAuthoritiesUri:
          description: The URI of this Broker's collection of Domain Certificate Authority
            objects. Available since 2.19.
          type: string
        msgVpnsUri:
          description: The URI of this Broker's collection of Message VPN objects.
            Available since 2.0.
          type: string
        systemInformationUri:
          description: The URI of this Broker's System Information object. Deprecated
            since 2.2. /systemInformation was replaced by /about/api.
          type: string
        uri:
          description: The URI of this Broker object.
          type: string
        virtualHostnamesUri:
          description: The URI of this Broker's collection of Virtual Hostname objects.
            Available since 2.17.
          type: string
      type: object
    BrokerResponse:
      example:
        data:
          serviceSempPlainTextEnabled: true
          guaranteedMsgingEventDeliveredUnackedThreshold:
            clearPercent: 5
            setPercent: 2
          guaranteedMsgingEventTransactedSessionResourceCountThreshold:
            clearPercent: 5
            setPercent: 2
          serviceSmfEnabled: true
          guaranteedMsgingEventMsgSpoolFileCountThreshold:
            clearPercent: 5
            setPercent: 2
          tlsCipherSuiteManagementList: tlsCipherSuiteManagementList
          serviceMsgBackboneEnabled: true
          serviceSmfCompressionListenPort: 4
          guaranteedMsgingEventTransactionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfPlainTextListenPort: 5
          serviceWebTransportWebUrlSuffix: serviceWebTransportWebUrlSuffix
          serviceSmfTlsListenPort: 9
          serviceMateLinkListenPort: 1
          serviceSempLegacyTimeoutEnabled: true
          serviceWebTransportPlainTextListenPort: 6
          serviceWebTransportTlsListenPort: 8
          tlsTicketLifetime: 9
          serviceSmfRoutingControlListenPort: 9
          tlsServerCertPassword: tlsServerCertPassword
          authClientCertRevocationCheckMode: none
          serviceRestIncomingEnabled: true
          serviceSempSessionIdleTimeout: 6
          serviceWebTransportEnabled: true
          tlsCipherSuiteSecureShellList: tlsCipherSuiteSecureShellList
          serviceAmqpEnabled: true
          guaranteedMsgingEventDiskUsageThreshold:
            clearPercent: 5
            setPercent: 2
          serviceSempTlsEnabled: true
          serviceEventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceRedundancyFirstListenPort: 1
          guaranteedMsgingEventEgressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          guaranteedMsgingEventMsgCountThreshold:
            clearPercent: 5
            setPercent: 2
          serviceHealthCheckListenPort: 7
          serviceRestEventOutgoingConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          guaranteedMsgingEventEndpointCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceHealthCheckEnabled: true
          serviceMateLinkEnabled: true
          serviceSmfEventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceRestOutgoingEnabled: true
          guaranteedMsgingMaxCacheUsage: 7
          serviceAmqpTlsListenPort: 4
          serviceSempTlsListenPort: 1
          tlsServerCertContent: tlsServerCertContent
          serviceSempSessionMaxLifetime: 7
          tlsCipherSuiteMsgBackboneList: tlsCipherSuiteMsgBackboneList
          guaranteedMsgingTransactionReplicationCompatibilityMode: legacy
          guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout: 3
          guaranteedMsgingEventIngressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout: 2
          guaranteedMsgingMaxMsgSpoolUsage: 9
          serviceRedundancyEnabled: true
          serviceMqttEnabled: true
          serviceTlsEventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tlsBlockVersion11Enabled: true
          tlsCrimeExploitProtectionEnabled: true
          serviceSempPlainTextListenPort: 1
          guaranteedMsgingEnabled: true
          guaranteedMsgingEventTransactedSessionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tlsStandardDomainCertificateAuthoritiesEnabled: true
          guaranteedMsgingEventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          guaranteedMsgingEventCacheUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          virtualHostnamesUri: virtualHostnamesUri
          certAuthoritiesUri: certAuthoritiesUri
          systemInformationUri: systemInformationUri
          aboutUri: aboutUri
          msgVpnsUri: msgVpnsUri
          domainCertAuthoritiesUri: domainCertAuthoritiesUri
          clientCertAuthoritiesUri: clientCertAuthoritiesUri
          uri: uri
          dmrClustersUri: dmrClustersUri
      properties:
        data:
          $ref: '#/components/schemas/Broker'
        links:
          $ref: '#/components/schemas/BrokerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    CertAuthoritiesResponse:
      example:
        data:
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/CertAuthority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/CertAuthorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    CertAuthority:
      example:
        crlTimeList: crlTimeList
        ocspOverrideUrl: ocspOverrideUrl
        certAuthorityName: certAuthorityName
        ocspNonResponderCertEnabled: true
        revocationCheckEnabled: true
        crlDayList: crlDayList
        certContent: certContent
        ocspTimeout: 0
        crlUrl: crlUrl
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority. Deprecated since 2.19.
            Replaced by clientCertAuthorities and domainCertAuthorities.
          type: string
        certContent:
          description: The PEM formatted content for the trusted root certificate
            of a Certificate Authority. The default value is `""`. Deprecated since
            2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          type: string
        crlDayList:
          description: The scheduled CRL refresh day(s), specified as "daily" or a
            comma-separated list of days. Days must be specified as "Sun", "Mon",
            "Tue", "Wed", "Thu", "Fri", or "Sat", with no spaces, and in sorted order
            from Sunday to Saturday. The default value is `"daily"`. Deprecated since
            2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
          type: string
        crlTimeList:
          description: The scheduled CRL refresh time(s), specified as "hourly" or
            a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There
            must be no spaces, and times must be in sorted order from 0:00 to 23:59.
            The default value is `"3:00"`. Deprecated since 2.19. certAuthorities
            replaced by clientCertAuthorities and domainCertAuthorities.
          type: string
        crlUrl:
          description: The URL for the CRL source. This is a required attribute for
            CRL to be operational and the URL must be complete with http:// included.
            The default value is `""`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
          type: string
        ocspNonResponderCertEnabled:
          description: Enable or disable allowing a non-responder certificate to sign
            an OCSP response. Typically used with an OCSP override URL in cases where
            a single certificate is used to sign client certificates and OCSP responses.
            The default value is `false`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
          type: boolean
        ocspOverrideUrl:
          description: The OCSP responder URL to use for overriding the one supplied
            in the client certificate. The URL must be complete with http:// included.
            The default value is `""`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
          type: string
        ocspTimeout:
          description: The timeout in seconds to receive a response from the OCSP
            responder after sending a request or making the initial connection attempt.
            The default value is `5`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
          format: int64
          type: integer
        revocationCheckEnabled:
          description: Enable or disable Certificate Authority revocation checking.
            The default value is `false`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
          type: boolean
      type: object
    CertAuthorityLinks:
      example:
        ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
        uri: uri
      properties:
        ocspTlsTrustedCommonNamesUri:
          description: The URI of this Certificate Authority's collection of OCSP
            Responder Trusted Common Name objects. Deprecated since 2.19. Replaced
            by clientCertAuthorities.
          type: string
        uri:
          description: The URI of this Certificate Authority object.
          type: string
      type: object
    CertAuthorityOcspTlsTrustedCommonName:
      example:
        certAuthorityName: certAuthorityName
        ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority. Deprecated since 2.19.
            Replaced by clientCertAuthorities.
          type: string
        ocspTlsTrustedCommonName:
          description: The expected Trusted Common Name of the OCSP responder remote
            certificate. Deprecated since 2.19. Replaced by clientCertAuthorities.
          type: string
      type: object
    CertAuthorityOcspTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this OCSP Responder Trusted Common Name object.
          type: string
      type: object
    CertAuthorityOcspTlsTrustedCommonNameResponse:
      example:
        data:
          certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    CertAuthorityOcspTlsTrustedCommonNamesResponse:
      example:
        data:
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    CertAuthorityResponse:
      example:
        data:
          crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/CertAuthority'
        links:
          $ref: '#/components/schemas/CertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    ClientCertAuthoritiesResponse:
      example:
        data:
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/ClientCertAuthority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/ClientCertAuthorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    ClientCertAuthority:
      example:
        crlTimeList: crlTimeList
        ocspOverrideUrl: ocspOverrideUrl
        certAuthorityName: certAuthorityName
        ocspNonResponderCertEnabled: true
        revocationCheckEnabled: true
        crlDayList: crlDayList
        certContent: certContent
        ocspTimeout: 0
        crlUrl: crlUrl
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority.
          type: string
        certContent:
          description: The PEM formatted content for the trusted root certificate
            of a client Certificate Authority. The default value is `""`.
          type: string
        crlDayList:
          description: The scheduled CRL refresh day(s), specified as "daily" or a
            comma-separated list of days. Days must be specified as "Sun", "Mon",
            "Tue", "Wed", "Thu", "Fri", or "Sat", with no spaces, and in sorted order
            from Sunday to Saturday. The default value is `"daily"`.
          type: string
        crlTimeList:
          description: The scheduled CRL refresh time(s), specified as "hourly" or
            a comma-separated list of 24-hour times in the form hh:mm, or h:mm. There
            must be no spaces, and times must be in sorted order from 0:00 to 23:59.
            The default value is `"3:00"`.
          type: string
        crlUrl:
          description: The URL for the CRL source. This is a required attribute for
            CRL to be operational and the URL must be complete with http:// included.
            The default value is `""`.
          type: string
        ocspNonResponderCertEnabled:
          description: Enable or disable allowing a non-responder certificate to sign
            an OCSP response. Typically used with an OCSP override URL in cases where
            a single certificate is used to sign client certificates and OCSP responses.
            The default value is `false`.
          type: boolean
        ocspOverrideUrl:
          description: The OCSP responder URL to use for overriding the one supplied
            in the client certificate. The URL must be complete with http:// included.
            The default value is `""`.
          type: string
        ocspTimeout:
          description: The timeout in seconds to receive a response from the OCSP
            responder after sending a request or making the initial connection attempt.
            The default value is `5`.
          format: int64
          type: integer
        revocationCheckEnabled:
          description: Enable or disable Certificate Authority revocation checking.
            The default value is `false`.
          type: boolean
      type: object
    ClientCertAuthorityLinks:
      example:
        ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
        uri: uri
      properties:
        ocspTlsTrustedCommonNamesUri:
          description: The URI of this Client Certificate Authority's collection of
            OCSP Responder Trusted Common Name objects.
          type: string
        uri:
          description: The URI of this Client Certificate Authority object.
          type: string
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonName:
      example:
        certAuthorityName: certAuthorityName
        ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority.
          type: string
        ocspTlsTrustedCommonName:
          description: The expected Trusted Common Name of the OCSP responder remote
            certificate.
          type: string
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this OCSP Responder Trusted Common Name object.
          type: string
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonNameResponse:
      example:
        data:
          certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    ClientCertAuthorityOcspTlsTrustedCommonNamesResponse:
      example:
        data:
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    ClientCertAuthorityResponse:
      example:
        data:
          crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/ClientCertAuthority'
        links:
          $ref: '#/components/schemas/ClientCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrCluster:
      example:
        nodeName: nodeName
        directOnlyEnabled: true
        authenticationBasicPassword: authenticationBasicPassword
        enabled: true
        authenticationClientCertPassword: authenticationClientCertPassword
        tlsServerCertValidateNameEnabled: true
        tlsServerCertMaxChainDepth: 0
        authenticationClientCertEnabled: true
        dmrClusterName: dmrClusterName
        tlsServerCertValidateDateEnabled: true
        authenticationBasicEnabled: true
        authenticationClientCertContent: authenticationClientCertContent
        authenticationBasicType: internal
        tlsServerCertEnforceTrustedCommonNameEnabled: true
      properties:
        authenticationBasicEnabled:
          description: Enable or disable basic authentication for Cluster Links. The
            default value is `true`.
          type: boolean
        authenticationBasicPassword:
          description: The password used to authenticate incoming Cluster Links when
            using basic internal authentication. The same password is also used by
            outgoing Cluster Links if a per-Link password is not configured. This
            attribute is absent from a GET and not updated when absent in a PUT, subject
            to the exceptions in note 4. The default value is `""`.
          type: string
        authenticationBasicType:
          description: |
            The type of basic authentication to use for Cluster Links. The default value is `"internal"`. The allowed values and their meaning are:

            <pre>
            "internal" - Use locally configured password.
            "none" - No authentication.
            </pre>
          enum:
          - internal
          - none
          type: string
        authenticationClientCertContent:
          description: The PEM formatted content for the client certificate used to
            login to the remote node. It must consist of a private key and between
            one and three certificates comprising the certificate trust chain. This
            attribute is absent from a GET and not updated when absent in a PUT, subject
            to the exceptions in note 4. Changing this attribute requires an HTTPS
            connection. The default value is `""`.
          type: string
          x-requires-https: true
        authenticationClientCertEnabled:
          description: Enable or disable client certificate authentication for Cluster
            Links. The default value is `true`.
          type: boolean
        authenticationClientCertPassword:
          description: The password for the client certificate. This attribute is
            absent from a GET and not updated when absent in a PUT, subject to the
            exceptions in note 4. Changing this attribute requires an HTTPS connection.
            The default value is `""`.
          type: string
          x-requires-https: true
        directOnlyEnabled:
          description: Enable or disable direct messaging only. Guaranteed messages
            will not be transmitted through the cluster. The default value is `false`.
          type: boolean
        dmrClusterName:
          description: The name of the Cluster.
          type: string
        enabled:
          description: Enable or disable the Cluster. The default value is `false`.
          type: boolean
        nodeName:
          description: The name of this node in the Cluster. This is the name that
            this broker (or redundant group of brokers) is know by to other nodes
            in the Cluster. The name is chosen automatically to be either this broker's
            Router Name or Mate Router Name, depending on which Active Standby Role
            (primary or backup) this broker plays in its redundancy group.
          type: string
        tlsServerCertEnforceTrustedCommonNameEnabled:
          description: Enable or disable the enforcing of the common name provided
            by the remote broker against the list of trusted common names configured
            for the Link. If enabled, the certificate's common name must match one
            of the trusted common names for the Link to be accepted. Common Name validation
            is not performed if Server Certificate Name Validation is enabled, even
            if Common Name validation is enabled. The default value is `true`. Deprecated
            since 2.18. Common Name validation has been replaced by Server Certificate
            Name validation.
          type: boolean
        tlsServerCertMaxChainDepth:
          description: The maximum allowed depth of a certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
            The default value is `3`.
          format: int64
          type: integer
        tlsServerCertValidateDateEnabled:
          description: Enable or disable the validation of the "Not Before" and "Not
            After" validity dates in the certificate. When disabled, the certificate
            is accepted even if the certificate is not valid based on these dates.
            The default value is `true`.
          type: boolean
        tlsServerCertValidateNameEnabled:
          description: Enable or disable the standard TLS authentication mechanism
            of verifying the name used to connect to the bridge. If enabled, the name
            used to connect to the bridge is checked against the names specified in
            the certificate returned by the remote router. Legacy Common Name validation
            is not performed if Server Certificate Name Validation is enabled, even
            if Common Name validation is also enabled. The default value is `true`.
            Available since 2.18.
          type: boolean
      type: object
    DmrClusterLink:
      example:
        transportCompressedEnabled: true
        remoteNodeName: remoteNodeName
        clientProfileQueueDirect2MaxDepth: 5
        clientProfileQueueDirect1MaxDepth: 1
        clientProfileQueueDirect3MinMsgBurst: 9
        initiator: lexical
        queueMaxDeliveredUnackedMsgsPerFlow: 1
        clientProfileQueueDirect3MaxDepth: 7
        queueMaxRedeliveryCount: 5
        transportTlsEnabled: true
        enabled: true
        queueDeadMsgQueue: queueDeadMsgQueue
        authenticationScheme: basic
        clientProfileQueueControl1MaxDepth: 0
        clientProfileQueueDirect2MinMsgBurst: 2
        queueEventSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        clientProfileQueueControl1MinMsgBurst: 6
        queueMaxMsgSpoolUsage: 4
        clientProfileTcpKeepaliveInterval: 1
        egressFlowWindowSize: 7
        clientProfileTcpCongestionWindowSize: 4
        clientProfileQueueDirect1MinMsgBurst: 5
        queueRespectTtlEnabled: true
        clientProfileTcpMaxWindowSize: 6
        authenticationBasicPassword: authenticationBasicPassword
        clientProfileTcpKeepaliveCount: 7
        queueMaxTtl: 9
        clientProfileTcpKeepaliveIdleTime: 1
        queueRejectMsgToSenderOnDiscardBehavior: always
        dmrClusterName: dmrClusterName
        clientProfileTcpMaxSegmentSize: 1
        clientProfileQueueGuaranteed1MaxDepth: 3
        clientProfileQueueGuaranteed1MinMsgBurst: 2
        span: internal
      properties:
        authenticationBasicPassword:
          description: The password used to authenticate with the remote node when
            using basic internal authentication. If this per-Link password is not
            configured, the Cluster's password is used instead. This attribute is
            absent from a GET and not updated when absent in a PUT, subject to the
            exceptions in note 4. The default value is `""`.
          type: string
        authenticationScheme:
          description: |
            The authentication scheme to be used by the Link which initiates connections to the remote node. The default value is `"basic"`. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
          type: string
        clientProfileQueueControl1MaxDepth:
          description: The maximum depth of the "Control 1" (C-1) priority queue,
            in work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        clientProfileQueueControl1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Control 1" (C-1) priority queue, regardless of the `clientProfileQueueControl1MaxDepth`
            value. The default value is `4`.
          format: int32
          type: integer
        clientProfileQueueDirect1MaxDepth:
          description: The maximum depth of the "Direct 1" (D-1) priority queue, in
            work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        clientProfileQueueDirect1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 1" (D-1) priority queue, regardless of the `clientProfileQueueDirect1MaxDepth`
            value. The default value is `4`.
          format: int32
          type: integer
        clientProfileQueueDirect2MaxDepth:
          description: The maximum depth of the "Direct 2" (D-2) priority queue, in
            work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        clientProfileQueueDirect2MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 2" (D-2) priority queue, regardless of the `clientProfileQueueDirect2MaxDepth`
            value. The default value is `4`.
          format: int32
          type: integer
        clientProfileQueueDirect3MaxDepth:
          description: The maximum depth of the "Direct 3" (D-3) priority queue, in
            work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        clientProfileQueueDirect3MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 3" (D-3) priority queue, regardless of the `clientProfileQueueDirect3MaxDepth`
            value. The default value is `4`.
          format: int32
          type: integer
        clientProfileQueueGuaranteed1MaxDepth:
          description: The maximum depth of the "Guaranteed 1" (G-1) priority queue,
            in work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        clientProfileQueueGuaranteed1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Guaranteed 1" (G-3) priority queue, regardless of the `clientProfileQueueGuaranteed1MaxDepth`
            value. The default value is `255`.
          format: int32
          type: integer
        clientProfileTcpCongestionWindowSize:
          description: The TCP initial congestion window size, in multiples of the
            TCP Maximum Segment Size (MSS). Changing the value from its default of
            2 results in non-compliance with RFC 2581. Contact Solace Support before
            changing this value. The default value is `2`.
          format: int64
          type: integer
        clientProfileTcpKeepaliveCount:
          description: The number of TCP keepalive retransmissions to be carried out
            before declaring that the remote end is not available. The default value
            is `5`.
          format: int64
          type: integer
        clientProfileTcpKeepaliveIdleTime:
          description: The amount of time a connection must remain idle before TCP
            begins sending keepalive probes, in seconds. The default value is `3`.
          format: int64
          type: integer
        clientProfileTcpKeepaliveInterval:
          description: The amount of time between TCP keepalive retransmissions when
            no acknowledgement is received, in seconds. The default value is `1`.
          format: int64
          type: integer
        clientProfileTcpMaxSegmentSize:
          description: The TCP maximum segment size, in bytes. Changes are applied
            to all existing connections. The default value is `1460`.
          format: int64
          type: integer
        clientProfileTcpMaxWindowSize:
          description: The TCP maximum window size, in kilobytes. Changes are applied
            to all existing connections. The default value is `256`.
          format: int64
          type: integer
        dmrClusterName:
          description: The name of the Cluster.
          type: string
        egressFlowWindowSize:
          description: The number of outstanding guaranteed messages that can be sent
            over the Link before acknowledgement is received by the sender. The default
            value is `255`.
          format: int64
          type: integer
        enabled:
          description: Enable or disable the Link. When disabled, subscription sets
            of this and the remote node are not kept up-to-date, and messages are
            not exchanged with the remote node. Published guaranteed messages will
            be queued up for future delivery based on current subscription sets. The
            default value is `false`.
          type: boolean
        initiator:
          description: |
            The initiator of the Link's TCP connections. The default value is `"lexical"`. The allowed values and their meaning are:

            <pre>
            "lexical" - The "higher" node-name initiates.
            "local" - The local node initiates.
            "remote" - The remote node initiates.
            </pre>
          enum:
          - lexical
          - local
          - remote
          type: string
        queueDeadMsgQueue:
          description: The name of the Dead Message Queue (DMQ) used by the Queue
            for discarded messages. The default value is `"#DEAD_MSG_QUEUE"`.
          type: string
        queueEventSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Queue. The default value is `1000000`.
          format: int64
          type: integer
        queueMaxMsgSpoolUsage:
          description: The maximum message spool usage by the Queue (quota), in megabytes
            (MB). The default varies by platform.
          format: int64
          type: integer
        queueMaxRedeliveryCount:
          description: The maximum number of times the Queue will attempt redelivery
            of a message prior to it being discarded or moved to the DMQ. A value
            of 0 means to retry forever. The default value is `0`.
          format: int64
          type: integer
        queueMaxTtl:
          description: The maximum time in seconds a message can stay in the Queue
            when `queueRespectTtlEnabled` is `true`. A message expires when the lesser
            of the sender assigned time-to-live (TTL) in the message and the `queueMaxTtl`
            configured for the Queue, is exceeded. A value of 0 disables expiry. The
            default value is `0`.
          format: int64
          type: integer
        queueRejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"always"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
          type: string
        queueRespectTtlEnabled:
          description: Enable or disable the respecting of the time-to-live (TTL)
            for messages in the Queue. When enabled, expired messages are discarded
            or moved to the DMQ. The default value is `false`.
          type: boolean
        remoteNodeName:
          description: The name of the node at the remote end of the Link.
          type: string
        span:
          description: |
            The span of the Link, either internal or external. Internal Links connect nodes within the same Cluster. External Links connect nodes within different Clusters. The default value is `"external"`. The allowed values and their meaning are:

            <pre>
            "internal" - Link to same cluster.
            "external" - Link to other cluster.
            </pre>
          enum:
          - internal
          - external
          type: string
        transportCompressedEnabled:
          description: Enable or disable compression on the Link. The default value
            is `false`.
          type: boolean
        transportTlsEnabled:
          description: Enable or disable encryption (TLS) on the Link. The default
            value is `false`.
          type: boolean
      type: object
    DmrClusterLinkLinks:
      example:
        remoteAddressesUri: remoteAddressesUri
        uri: uri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        remoteAddressesUri:
          description: The URI of this Link's collection of Remote Address objects.
          type: string
        tlsTrustedCommonNamesUri:
          description: The URI of this Link's collection of Trusted Common Name objects.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
        uri:
          description: The URI of this Link object.
          type: string
      type: object
    DmrClusterLinkRemoteAddress:
      example:
        remoteNodeName: remoteNodeName
        dmrClusterName: dmrClusterName
        remoteAddress: remoteAddress
      properties:
        dmrClusterName:
          description: The name of the Cluster.
          type: string
        remoteAddress:
          description: 'The FQDN or IP address (and optional port) of the remote node.
            If a port is not provided, it will vary based on the transport encoding:
            55555 (plain-text), 55443 (encrypted), or 55003 (compressed).'
          type: string
        remoteNodeName:
          description: The name of the node at the remote end of the Link.
          type: string
      type: object
    DmrClusterLinkRemoteAddressLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Remote Address object.
          type: string
      type: object
    DmrClusterLinkRemoteAddressResponse:
      example:
        data:
          remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
        links:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddressLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkRemoteAddressesResponse:
      example:
        data:
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddressLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkResponse:
      example:
        data:
          transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 5
          clientProfileQueueDirect1MaxDepth: 1
          clientProfileQueueDirect3MinMsgBurst: 9
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          clientProfileQueueDirect3MaxDepth: 7
          queueMaxRedeliveryCount: 5
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 0
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          clientProfileQueueControl1MinMsgBurst: 6
          queueMaxMsgSpoolUsage: 4
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 7
          clientProfileTcpCongestionWindowSize: 4
          clientProfileQueueDirect1MinMsgBurst: 5
          queueRespectTtlEnabled: true
          clientProfileTcpMaxWindowSize: 6
          authenticationBasicPassword: authenticationBasicPassword
          clientProfileTcpKeepaliveCount: 7
          queueMaxTtl: 9
          clientProfileTcpKeepaliveIdleTime: 1
          queueRejectMsgToSenderOnDiscardBehavior: always
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 3
          clientProfileQueueGuaranteed1MinMsgBurst: 2
          span: internal
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        data:
          $ref: '#/components/schemas/DmrClusterLink'
        links:
          $ref: '#/components/schemas/DmrClusterLinkLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkTlsTrustedCommonName:
      example:
        remoteNodeName: remoteNodeName
        dmrClusterName: dmrClusterName
        tlsTrustedCommonName: tlsTrustedCommonName
      properties:
        dmrClusterName:
          description: The name of the Cluster. Deprecated since 2.18. Common Name
            validation has been replaced by Server Certificate Name validation.
          type: string
        remoteNodeName:
          description: The name of the node at the remote end of the Link. Deprecated
            since 2.18. Common Name validation has been replaced by Server Certificate
            Name validation.
          type: string
        tlsTrustedCommonName:
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
      type: object
    DmrClusterLinkTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Trusted Common Name object.
          type: string
      type: object
    DmrClusterLinkTlsTrustedCommonNameResponse:
      example:
        data:
          remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinkTlsTrustedCommonNamesResponse:
      example:
        data:
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterLinks:
      example:
        linksUri: linksUri
        uri: uri
      properties:
        linksUri:
          description: The URI of this Cluster's collection of Link objects.
          type: string
        uri:
          description: The URI of this Cluster object.
          type: string
      type: object
    DmrClusterLinksResponse:
      example:
        data:
        - transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 5
          clientProfileQueueDirect1MaxDepth: 1
          clientProfileQueueDirect3MinMsgBurst: 9
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          clientProfileQueueDirect3MaxDepth: 7
          queueMaxRedeliveryCount: 5
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 0
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          clientProfileQueueControl1MinMsgBurst: 6
          queueMaxMsgSpoolUsage: 4
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 7
          clientProfileTcpCongestionWindowSize: 4
          clientProfileQueueDirect1MinMsgBurst: 5
          queueRespectTtlEnabled: true
          clientProfileTcpMaxWindowSize: 6
          authenticationBasicPassword: authenticationBasicPassword
          clientProfileTcpKeepaliveCount: 7
          queueMaxTtl: 9
          clientProfileTcpKeepaliveIdleTime: 1
          queueRejectMsgToSenderOnDiscardBehavior: always
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 3
          clientProfileQueueGuaranteed1MinMsgBurst: 2
          span: internal
        - transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 5
          clientProfileQueueDirect1MaxDepth: 1
          clientProfileQueueDirect3MinMsgBurst: 9
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          clientProfileQueueDirect3MaxDepth: 7
          queueMaxRedeliveryCount: 5
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 0
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          clientProfileQueueControl1MinMsgBurst: 6
          queueMaxMsgSpoolUsage: 4
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 7
          clientProfileTcpCongestionWindowSize: 4
          clientProfileQueueDirect1MinMsgBurst: 5
          queueRespectTtlEnabled: true
          clientProfileTcpMaxWindowSize: 6
          authenticationBasicPassword: authenticationBasicPassword
          clientProfileTcpKeepaliveCount: 7
          queueMaxTtl: 9
          clientProfileTcpKeepaliveIdleTime: 1
          queueRejectMsgToSenderOnDiscardBehavior: always
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 3
          clientProfileQueueGuaranteed1MinMsgBurst: 2
          span: internal
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        data:
          items:
            $ref: '#/components/schemas/DmrClusterLink'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinkLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClusterResponse:
      example:
        data:
          nodeName: nodeName
          directOnlyEnabled: true
          authenticationBasicPassword: authenticationBasicPassword
          enabled: true
          authenticationClientCertPassword: authenticationClientCertPassword
          tlsServerCertValidateNameEnabled: true
          tlsServerCertMaxChainDepth: 0
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          authenticationClientCertContent: authenticationClientCertContent
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          linksUri: linksUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/DmrCluster'
        links:
          $ref: '#/components/schemas/DmrClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DmrClustersResponse:
      example:
        data:
        - nodeName: nodeName
          directOnlyEnabled: true
          authenticationBasicPassword: authenticationBasicPassword
          enabled: true
          authenticationClientCertPassword: authenticationClientCertPassword
          tlsServerCertValidateNameEnabled: true
          tlsServerCertMaxChainDepth: 0
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          authenticationClientCertContent: authenticationClientCertContent
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        - nodeName: nodeName
          directOnlyEnabled: true
          authenticationBasicPassword: authenticationBasicPassword
          enabled: true
          authenticationClientCertPassword: authenticationClientCertPassword
          tlsServerCertValidateNameEnabled: true
          tlsServerCertMaxChainDepth: 0
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          authenticationClientCertContent: authenticationClientCertContent
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - linksUri: linksUri
          uri: uri
        - linksUri: linksUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/DmrCluster'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DmrClusterLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DomainCertAuthoritiesResponse:
      example:
        data:
        - certAuthorityName: certAuthorityName
          certContent: certContent
        - certAuthorityName: certAuthorityName
          certContent: certContent
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/DomainCertAuthority'
          type: array
        links:
          items:
            $ref: '#/components/schemas/DomainCertAuthorityLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    DomainCertAuthority:
      example:
        certAuthorityName: certAuthorityName
        certContent: certContent
      properties:
        certAuthorityName:
          description: The name of the Certificate Authority.
          type: string
        certContent:
          description: The PEM formatted content for the trusted root certificate
            of a domain Certificate Authority. The default value is `""`.
          type: string
      type: object
    DomainCertAuthorityLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Domain Certificate Authority object.
          type: string
      type: object
    DomainCertAuthorityResponse:
      example:
        data:
          certAuthorityName: certAuthorityName
          certContent: certContent
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/DomainCertAuthority'
        links:
          $ref: '#/components/schemas/DomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    EventThreshold:
      example:
        clearPercent: 0
        setPercent: 1
        setValue: 5
        clearValue: 6
      properties:
        clearPercent:
          description: The clear threshold for the value of this counter as a percentage
            of its maximum value. Falling below this value will trigger a corresponding
            event. This attribute may not be returned in a GET.
          format: int64
          type: integer
        clearValue:
          description: The clear threshold for the absolute value of this counter.
            Falling below this value will trigger a corresponding event. This attribute
            may not be returned in a GET.
          format: int64
          type: integer
        setPercent:
          description: The set threshold for the value of this counter as a percentage
            of its maximum value. Exceeding this value will trigger a corresponding
            event. This attribute may not be returned in a GET.
          format: int64
          type: integer
        setValue:
          description: The set threshold for the absolute value of this counter. Exceeding
            this value will trigger a corresponding event. This attribute may not
            be returned in a GET.
          format: int64
          type: integer
      type: object
    EventThresholdByPercent:
      example:
        clearPercent: 5
        setPercent: 2
      properties:
        clearPercent:
          description: The clear threshold for the value of this counter as a percentage
            of its maximum value. Falling below this value will trigger a corresponding
            event.
          format: int64
          type: integer
        setPercent:
          description: The set threshold for the value of this counter as a percentage
            of its maximum value. Exceeding this value will trigger a corresponding
            event.
          format: int64
          type: integer
      type: object
    EventThresholdByValue:
      example:
        setValue: 5
        clearValue: 1
      properties:
        clearValue:
          description: The clear threshold for the absolute value of this counter
            or rate. Falling below this value will trigger a corresponding event.
          format: int64
          type: integer
        setValue:
          description: The set threshold for the absolute value of this counter or
            rate. Exceeding this value will trigger a corresponding event.
          format: int64
          type: integer
      type: object
    MsgVpn:
      example:
        serviceMqttMaxConnectionCount: 6
        authorizationProfileName: authorizationProfileName
        replicationBridgeAuthenticationClientCertPassword: replicationBridgeAuthenticationClientCertPassword
        replicationBridgeEgressFlowWindowSize: 6
        restTlsServerCertMaxChainDepth: 4
        serviceRestIncomingPlainTextEnabled: true
        replicationEnabled: true
        eventServiceWebConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        bridgingTlsServerCertValidateDateEnabled: true
        authorizationType: ldap
        replicationAckPropagationIntervalMsgCount: 1
        bridgingTlsServerCertMaxChainDepth: 6
        replicationBridgeCompressedDataEnabled: true
        serviceAmqpPlainTextEnabled: true
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
        restTlsServerCertValidateDateEnabled: true
        eventTransactedSessionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        authenticationKerberosEnabled: true
        authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
        serviceRestIncomingPlainTextListenPort: 1
        authenticationClientCertUsernameSource: certificate-thumbprint
        replicationBridgeAuthenticationClientCertContent: replicationBridgeAuthenticationClientCertContent
        eventSubscriptionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceMqttPlainTextListenPort: 8
        authenticationClientCertMaxChainDepth: 0
        serviceMqttWebSocketEnabled: true
        authorizationLdapTrimClientUsernameDomainEnabled: true
        serviceRestIncomingAuthorizationHeaderHandling: drop
        authenticationClientCertEnabled: true
        restTlsServerCertEnforceTrustedCommonNameEnabled: true
        replicationRejectMsgWhenSyncIneligibleEnabled: true
        eventPublishTopicFormatSmfEnabled: true
        authenticationBasicProfileName: authenticationBasicProfileName
        enabled: true
        replicationBridgeAuthenticationScheme: basic
        serviceRestIncomingAuthenticationClientCertRequest: always
        replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
        serviceRestIncomingMaxConnectionCount: 6
        sempOverMsgBusEnabled: true
        maxTransactionCount: 1
        serviceAmqpTlsListenPort: 9
        serviceMqttTlsListenPort: 9
        eventServiceAmqpConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceRestMode: gateway
        serviceRestIncomingTlsEnabled: true
        authenticationKerberosAllowApiProvidedUsernameEnabled: true
        sempOverMsgBusAdminDistributedCacheEnabled: true
        maxSubscriptionCount: 4
        authenticationOauthEnabled: true
        authenticationBasicType: internal
        serviceWebMaxConnectionCount: 5
        serviceAmqpMaxConnectionCount: 5
        maxEgressFlowCount: 7
        serviceMqttWebSocketListenPort: 3
        serviceSmfPlainTextEnabled: true
        maxEndpointCount: 9
        serviceWebTlsEnabled: true
        serviceMqttTlsWebSocketEnabled: true
        exportSubscriptionsEnabled: true
        eventIngressMsgRateThreshold:
          setValue: 5
          clearValue: 1
        eventPublishSubscriptionMode: "off"
        serviceMqttTlsEnabled: true
        eventConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceSmfTlsEnabled: true
        eventLargeMsgThreshold: 5
        serviceRestIncomingTlsListenPort: 2
        replicationQueueRejectMsgToSenderOnDiscardEnabled: true
        eventTransactionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        eventPublishMsgVpnEnabled: true
        sempOverMsgBusShowEnabled: true
        serviceWebPlainTextEnabled: true
        dmrEnabled: true
        msgVpnName: msgVpnName
        eventEndpointCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        sempOverMsgBusAdminEnabled: true
        eventEgressFlowCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        eventServiceRestIncomingConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        eventMsgSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceSmfMaxConnectionCount: 6
        jndiEnabled: true
        restTlsServerCertValidateNameEnabled: true
        serviceMqttPlainTextEnabled: true
        eventPublishClientEnabled: true
        replicationQueueMaxMsgSpoolUsage: 1
        eventServiceMqttConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        sempOverMsgBusAdminClientEnabled: true
        tlsAllowDowngradeToPlainTextEnabled: true
        maxConnectionCount: 2
        serviceWebAuthenticationClientCertRequest: always
        serviceRestOutgoingMaxConnectionCount: 6
        replicationBridgeTlsEnabled: true
        authenticationClientCertRevocationCheckMode: allow-all
        authenticationClientCertAllowApiProvidedUsernameEnabled: true
        eventServiceSmfConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceAmqpPlainTextListenPort: 9
        authenticationClientCertValidateDateEnabled: true
        serviceAmqpTlsEnabled: true
        eventEgressMsgRateThreshold:
          setValue: 5
          clearValue: 1
        replicationTransactionMode: sync
        replicationRole: active
        authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
        replicationEnabledQueueBehavior: fail-on-existing-queue
        replicationBridgeRetryDelay: 7
        eventLogTag: eventLogTag
        distributedCacheManagementEnabled: true
        alias: alias
        serviceMqttTlsWebSocketListenPort: 6
        replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
        bridgingTlsServerCertValidateNameEnabled: true
        replicationBridgeAuthenticationBasicPassword: replicationBridgeAuthenticationBasicPassword
        maxIngressFlowCount: 3
        serviceMqttAuthenticationClientCertRequest: always
        maxTransactedSessionCount: 7
        mqttRetainMaxMemory: 1
        eventPublishTopicFormatMqttEnabled: true
        authenticationBasicEnabled: true
        maxMsgSpoolUsage: 2
        authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
        eventIngressFlowCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
      properties:
        alias:
          description: |-
            The name of another Message VPN which this Message VPN is an alias for. When this Message VPN is enabled, the alias has no effect. When this Message VPN is disabled, Clients (but not Bridges and routing Links) logging into this Message VPN are automatically logged in to the other Message VPN, and authentication and authorization take place in the context of the other Message VPN.

            Aliases may form a non-circular chain, cascading one to the next. The default value is `""`. Available since 2.14.
          type: string
        authenticationBasicEnabled:
          description: Enable or disable basic authentication for clients connecting
            to the Message VPN. Basic authentication is authentication that involves
            the use of a username and password to prove identity. If a user provides
            credentials for a different authentication scheme, this setting is not
            applicable. The default value is `true`.
          type: boolean
        authenticationBasicProfileName:
          description: The name of the RADIUS or LDAP Profile to use for basic authentication.
            The default value is `"default"`.
          type: string
        authenticationBasicRadiusDomain:
          description: The RADIUS domain to use for basic authentication. The default
            value is `""`.
          type: string
        authenticationBasicType:
          description: |
            The type of basic authentication to use for clients connecting to the Message VPN. The default value is `"radius"`. The allowed values and their meaning are:

            <pre>
            "internal" - Internal database. Authentication is against Client Usernames.
            "ldap" - LDAP authentication. An LDAP profile name must be provided.
            "radius" - RADIUS authentication. A RADIUS profile name must be provided.
            "none" - No authentication. Anonymous login allowed.
            </pre>
          enum:
          - internal
          - ldap
          - radius
          - none
          type: string
        authenticationClientCertAllowApiProvidedUsernameEnabled:
          description: Enable or disable allowing a client to specify a Client Username
            via the API connect method. When disabled, the certificate CN (Common
            Name) is always used. The default value is `false`.
          type: boolean
        authenticationClientCertEnabled:
          description: Enable or disable client certificate authentication in the
            Message VPN. The default value is `false`.
          type: boolean
        authenticationClientCertMaxChainDepth:
          description: The maximum depth for a client certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
            The default value is `3`.
          format: int64
          type: integer
        authenticationClientCertRevocationCheckMode:
          description: |-
            The desired behavior for client certificate revocation checking. The default value is `"allow-valid"`. The allowed values and their meaning are:

            <pre>
            "allow-all" - Allow the client to authenticate, the result of client certificate revocation check is ignored.
            "allow-unknown" - Allow the client to authenticate even if the revocation status of his certificate cannot be determined.
            "allow-valid" - Allow the client to authenticate only when the revocation check returned an explicit positive response.
            </pre>
             Available since 2.6.
          enum:
          - allow-all
          - allow-unknown
          - allow-valid
          type: string
        authenticationClientCertUsernameSource:
          description: |-
            The field from the client certificate to use as the client username. The default value is `"common-name"`. The allowed values and their meaning are:

            <pre>
            "certificate-thumbprint" - The username is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.
            "common-name" - The username is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.
            "common-name-last" - The username is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.
            "subject-alternate-name-msupn" - The username is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.
            "uid" - The username is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.
            "uid-last" - The username is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.
            </pre>
             Available since 2.6.
          enum:
          - certificate-thumbprint
          - common-name
          - common-name-last
          - subject-alternate-name-msupn
          - uid
          - uid-last
          type: string
        authenticationClientCertValidateDateEnabled:
          description: Enable or disable validation of the "Not Before" and "Not After"
            validity dates in the client certificate. The default value is `true`.
          type: boolean
        authenticationKerberosAllowApiProvidedUsernameEnabled:
          description: Enable or disable allowing a client to specify a Client Username
            via the API connect method. When disabled, the Kerberos Principal name
            is always used. The default value is `false`.
          type: boolean
        authenticationKerberosEnabled:
          description: Enable or disable Kerberos authentication in the Message VPN.
            The default value is `false`.
          type: boolean
        authenticationOauthDefaultProviderName:
          description: The name of the provider to use when the client does not supply
            a provider name. The default value is `""`. Available since 2.13.
          type: string
        authenticationOauthEnabled:
          description: Enable or disable OAuth authentication. The default value is
            `false`. Available since 2.13.
          type: boolean
        authorizationLdapGroupMembershipAttributeName:
          description: The name of the attribute that is retrieved from the LDAP server
            as part of the LDAP search when authorizing a client connecting to the
            Message VPN. The default value is `"memberOf"`.
          type: string
        authorizationLdapTrimClientUsernameDomainEnabled:
          description: Enable or disable client-username domain trimming for LDAP
            lookups of client connections. When enabled, the value of $CLIENT_USERNAME
            (when used for searching) will be truncated at the first occurance of
            the @ character. For example, if the client-username is in the form of
            an email address, then the domain portion will be removed. The default
            value is `false`. Available since 2.13.
          type: boolean
        authorizationProfileName:
          description: The name of the LDAP Profile to use for client authorization.
            The default value is `""`.
          type: string
        authorizationType:
          description: |
            The type of authorization to use for clients connecting to the Message VPN. The default value is `"internal"`. The allowed values and their meaning are:

            <pre>
            "ldap" - LDAP authorization.
            "internal" - Internal authorization.
            </pre>
          enum:
          - ldap
          - internal
          type: string
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled:
          description: Enable or disable validation of the Common Name (CN) in the
            server certificate from the remote broker. If enabled, the Common Name
            is checked against the list of Trusted Common Names configured for the
            Bridge. Common Name validation is not performed if Server Certificate
            Name Validation is enabled, even if Common Name validation is enabled.
            The default value is `true`. Deprecated since 2.18. Common Name validation
            has been replaced by Server Certificate Name validation.
          type: boolean
        bridgingTlsServerCertMaxChainDepth:
          description: The maximum depth for a server certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
            The default value is `3`.
          format: int64
          type: integer
        bridgingTlsServerCertValidateDateEnabled:
          description: Enable or disable validation of the "Not Before" and "Not After"
            validity dates in the server certificate. When disabled, a certificate
            will be accepted even if the certificate is not valid based on these dates.
            The default value is `true`.
          type: boolean
        bridgingTlsServerCertValidateNameEnabled:
          description: Enable or disable the standard TLS authentication mechanism
            of verifying the name used to connect to the bridge. If enabled, the name
            used to connect to the bridge is checked against the names specified in
            the certificate returned by the remote router. Legacy Common Name validation
            is not performed if Server Certificate Name Validation is enabled, even
            if Common Name validation is also enabled. The default value is `true`.
            Available since 2.18.
          type: boolean
        distributedCacheManagementEnabled:
          description: Enable or disable managing of cache instances over the message
            bus. The default value is `true`.
          type: boolean
        dmrEnabled:
          description: Enable or disable Dynamic Message Routing (DMR) for the Message
            VPN. The default value is `false`. Available since 2.11.
          type: boolean
        enabled:
          description: Enable or disable the Message VPN. The default value is `false`.
          type: boolean
        eventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventEndpointCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventLargeMsgThreshold:
          description: The threshold, in kilobytes, after which a message is considered
            to be large for the Message VPN. The default value is `1024`.
          format: int64
          type: integer
        eventLogTag:
          description: A prefix applied to all published Events in the Message VPN.
            The default value is `""`.
          type: string
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventPublishClientEnabled:
          description: Enable or disable Client level Event message publishing. The
            default value is `false`.
          type: boolean
        eventPublishMsgVpnEnabled:
          description: Enable or disable Message VPN level Event message publishing.
            The default value is `false`.
          type: boolean
        eventPublishSubscriptionMode:
          description: |
            Subscription level Event message publishing mode. The default value is `"off"`. The allowed values and their meaning are:

            <pre>
            "off" - Disable client level event message publishing.
            "on-with-format-v1" - Enable client level event message publishing with format v1.
            "on-with-no-unsubscribe-events-on-disconnect-format-v1" - As "on-with-format-v1", but unsubscribe events are not generated when a client disconnects. Unsubscribe events are still raised when a client explicitly unsubscribes from its subscriptions.
            "on-with-format-v2" - Enable client level event message publishing with format v2.
            "on-with-no-unsubscribe-events-on-disconnect-format-v2" - As "on-with-format-v2", but unsubscribe events are not generated when a client disconnects. Unsubscribe events are still raised when a client explicitly unsubscribes from its subscriptions.
            </pre>
          enum:
          - "off"
          - on-with-format-v1
          - on-with-no-unsubscribe-events-on-disconnect-format-v1
          - on-with-format-v2
          - on-with-no-unsubscribe-events-on-disconnect-format-v2
          type: string
        eventPublishTopicFormatMqttEnabled:
          description: Enable or disable Event publish topics in MQTT format. The
            default value is `false`.
          type: boolean
        eventPublishTopicFormatSmfEnabled:
          description: Enable or disable Event publish topics in SMF format. The default
            value is `true`.
          type: boolean
        eventServiceAmqpConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceMqttConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceRestIncomingConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceSmfConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceWebConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSubscriptionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        exportSubscriptionsEnabled:
          description: Enable or disable the export of subscriptions in the Message
            VPN to other routers in the network over Neighbor links. The default value
            is `false`.
          type: boolean
        jndiEnabled:
          description: Enable or disable JNDI access for clients in the Message VPN.
            The default value is `false`. Available since 2.2.
          type: boolean
        maxConnectionCount:
          description: The maximum number of client connections to the Message VPN.
            The default is the maximum value supported by the platform.
          format: int64
          type: integer
        maxEgressFlowCount:
          description: The maximum number of transmit flows that can be created in
            the Message VPN. The default value is `1000`.
          format: int64
          type: integer
        maxEndpointCount:
          description: The maximum number of Queues and Topic Endpoints that can be
            created in the Message VPN. The default value is `1000`.
          format: int64
          type: integer
        maxIngressFlowCount:
          description: The maximum number of receive flows that can be created in
            the Message VPN. The default value is `1000`.
          format: int64
          type: integer
        maxMsgSpoolUsage:
          description: The maximum message spool usage by the Message VPN, in megabytes.
            The default value is `0`.
          format: int64
          type: integer
        maxSubscriptionCount:
          description: The maximum number of local client subscriptions that can be
            added to the Message VPN. This limit is not enforced when a subscription
            is added using a management interface, such as CLI or SEMP. The default
            varies by platform.
          format: int64
          type: integer
        maxTransactedSessionCount:
          description: The maximum number of transacted sessions that can be created
            in the Message VPN. The default varies by platform.
          format: int64
          type: integer
        maxTransactionCount:
          description: The maximum number of transactions that can be created in the
            Message VPN. The default varies by platform.
          format: int64
          type: integer
        mqttRetainMaxMemory:
          description: The maximum total memory usage of the MQTT Retain feature for
            this Message VPN, in MB. If the maximum memory is reached, any arriving
            retain messages that require more memory are discarded. A value of -1
            indicates that the memory is bounded only by the global max memory limit.
            A value of 0 prevents MQTT Retain from becoming operational. The default
            value is `-1`. Available since 2.11.
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        replicationAckPropagationIntervalMsgCount:
          description: The acknowledgement (ACK) propagation interval for the replication
            Bridge, in number of replicated messages. The default value is `20`.
          format: int64
          type: integer
        replicationBridgeAuthenticationBasicClientUsername:
          description: The Client Username the replication Bridge uses to login to
            the remote Message VPN. The default value is `""`.
          type: string
        replicationBridgeAuthenticationBasicPassword:
          description: The password for the Client Username. This attribute is absent
            from a GET and not updated when absent in a PUT, subject to the exceptions
            in note 4. The default value is `""`.
          type: string
        replicationBridgeAuthenticationClientCertContent:
          description: The PEM formatted content for the client certificate used by
            this bridge to login to the Remote Message VPN. It must consist of a private
            key and between one and three certificates comprising the certificate
            trust chain. This attribute is absent from a GET and not updated when
            absent in a PUT, subject to the exceptions in note 4. Changing this attribute
            requires an HTTPS connection. The default value is `""`. Available since
            2.9.
          type: string
          x-requires-https: true
        replicationBridgeAuthenticationClientCertPassword:
          description: The password for the client certificate. This attribute is
            absent from a GET and not updated when absent in a PUT, subject to the
            exceptions in note 4. Changing this attribute requires an HTTPS connection.
            The default value is `""`. Available since 2.9.
          type: string
          x-requires-https: true
        replicationBridgeAuthenticationScheme:
          description: |
            The authentication scheme for the replication Bridge in the Message VPN. The default value is `"basic"`. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
          type: string
        replicationBridgeCompressedDataEnabled:
          description: Enable or disable use of compression for the replication Bridge.
            The default value is `false`.
          type: boolean
        replicationBridgeEgressFlowWindowSize:
          description: The size of the window used for guaranteed messages published
            to the replication Bridge, in messages. The default value is `255`.
          format: int64
          type: integer
        replicationBridgeRetryDelay:
          description: The number of seconds that must pass before retrying the replication
            Bridge connection. The default value is `3`.
          format: int64
          type: integer
        replicationBridgeTlsEnabled:
          description: Enable or disable use of encryption (TLS) for the replication
            Bridge connection. The default value is `false`.
          type: boolean
        replicationBridgeUnidirectionalClientProfileName:
          description: The Client Profile for the unidirectional replication Bridge
            in the Message VPN. It is used only for the TCP parameters. The default
            value is `"#client-profile"`.
          type: string
        replicationEnabled:
          description: Enable or disable replication for the Message VPN. The default
            value is `false`.
          type: boolean
        replicationEnabledQueueBehavior:
          description: |
            The behavior to take when enabling replication for the Message VPN, depending on the existence of the replication Queue. This attribute is absent from a GET and not updated when absent in a PUT, subject to the exceptions in note 4. The default value is `"fail-on-existing-queue"`. The allowed values and their meaning are:

            <pre>
            "fail-on-existing-queue" - The data replication queue must not already exist.
            "force-use-existing-queue" - The data replication queue must already exist. Any data messages on the Queue will be forwarded to interested applications. IMPORTANT: Before using this mode be certain that the messages are not stale or otherwise unsuitable to be forwarded. This mode can only be specified when the existing queue is configured the same as is currently specified under replication configuration otherwise the enabling of replication will fail.
            "force-recreate-queue" - The data replication queue must already exist. Any data messages on the Queue will be discarded. IMPORTANT: Before using this mode be certain that the messages on the existing data replication queue are not needed by interested applications.
            </pre>
          enum:
          - fail-on-existing-queue
          - force-use-existing-queue
          - force-recreate-queue
          type: string
        replicationQueueMaxMsgSpoolUsage:
          description: The maximum message spool usage by the replication Bridge local
            Queue (quota), in megabytes. The default value is `60000`.
          format: int64
          type: integer
        replicationQueueRejectMsgToSenderOnDiscardEnabled:
          description: Enable or disable whether messages discarded on the replication
            Bridge local Queue are rejected back to the sender. The default value
            is `true`.
          type: boolean
        replicationRejectMsgWhenSyncIneligibleEnabled:
          description: Enable or disable whether guaranteed messages published to
            synchronously replicated Topics are rejected back to the sender when synchronous
            replication becomes ineligible. The default value is `false`.
          type: boolean
        replicationRole:
          description: |
            The replication role for the Message VPN. The default value is `"standby"`. The allowed values and their meaning are:

            <pre>
            "active" - Assume the Active role in replication for the Message VPN.
            "standby" - Assume the Standby role in replication for the Message VPN.
            </pre>
          enum:
          - active
          - standby
          type: string
        replicationTransactionMode:
          description: |
            The transaction replication mode for all transactions within the Message VPN. Changing this value during operation will not affect existing transactions; it is only used upon starting a transaction. The default value is `"async"`. The allowed values and their meaning are:

            <pre>
            "sync" - Messages are acknowledged when replicated (spooled remotely).
            "async" - Messages are acknowledged when pending replication (spooled locally).
            </pre>
          enum:
          - sync
          - async
          type: string
        restTlsServerCertEnforceTrustedCommonNameEnabled:
          description: Enable or disable validation of the Common Name (CN) in the
            server certificate from the remote REST Consumer. If enabled, the Common
            Name is checked against the list of Trusted Common Names configured for
            the REST Consumer. Common Name validation is not performed if Server Certificate
            Name Validation is enabled, even if Common Name validation is enabled.
            The default value is `true`. Deprecated since 2.17. Common Name validation
            has been replaced by Server Certificate Name validation.
          type: boolean
        restTlsServerCertMaxChainDepth:
          description: The maximum depth for a REST Consumer server certificate chain.
            The depth of a chain is defined as the number of signing CA certificates
            that are present in the chain back to a trusted self-signed root CA certificate.
            The default value is `3`.
          format: int64
          type: integer
        restTlsServerCertValidateDateEnabled:
          description: Enable or disable validation of the "Not Before" and "Not After"
            validity dates in the REST Consumer server certificate. The default value
            is `true`.
          type: boolean
        restTlsServerCertValidateNameEnabled:
          description: Enable or disable the standard TLS authentication mechanism
            of verifying the name used to connect to the remote REST Consumer. If
            enabled, the name used to connect to the remote REST Consumer is checked
            against the names specified in the certificate returned by the remote
            router. Legacy Common Name validation is not performed if Server Certificate
            Name Validation is enabled, even if Common Name validation is also enabled.
            The default value is `true`. Available since 2.17.
          type: boolean
        sempOverMsgBusAdminClientEnabled:
          description: Enable or disable "admin client" SEMP over the message bus
            commands for the current Message VPN. The default value is `false`.
          type: boolean
        sempOverMsgBusAdminDistributedCacheEnabled:
          description: Enable or disable "admin distributed-cache" SEMP over the message
            bus commands for the current Message VPN. The default value is `false`.
          type: boolean
        sempOverMsgBusAdminEnabled:
          description: Enable or disable "admin" SEMP over the message bus commands
            for the current Message VPN. The default value is `false`.
          type: boolean
        sempOverMsgBusEnabled:
          description: Enable or disable SEMP over the message bus for the current
            Message VPN. The default value is `true`.
          type: boolean
        sempOverMsgBusShowEnabled:
          description: Enable or disable "show" SEMP over the message bus commands
            for the current Message VPN. The default value is `false`.
          type: boolean
        serviceAmqpMaxConnectionCount:
          description: The maximum number of AMQP client connections that can be simultaneously
            connected to the Message VPN. This value may be higher than supported
            by the platform. The default is the maximum value supported by the platform.
            Available since 2.7.
          format: int64
          type: integer
        serviceAmqpPlainTextEnabled:
          description: Enable or disable the plain-text AMQP service in the Message
            VPN. Disabling causes clients connected to the corresponding listen-port
            to be disconnected. The default value is `false`. Available since 2.7.
          type: boolean
        serviceAmqpPlainTextListenPort:
          description: The port number for plain-text AMQP clients that connect to
            the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
            The default value is `0`. Available since 2.7.
          format: int64
          type: integer
        serviceAmqpTlsEnabled:
          description: Enable or disable the use of encryption (TLS) for the AMQP
            service in the Message VPN. Disabling causes clients currently connected
            over TLS to be disconnected. The default value is `false`. Available since
            2.7.
          type: boolean
        serviceAmqpTlsListenPort:
          description: The port number for AMQP clients that connect to the Message
            VPN over TLS. The port must be unique across the message backbone. A value
            of 0 means that the listen-port is unassigned and cannot be enabled. The
            default value is `0`. Available since 2.7.
          format: int64
          type: integer
        serviceMqttAuthenticationClientCertRequest:
          description: |-
            Determines when to request a client certificate from an incoming MQTT client connecting via a TLS port. The default value is `"when-enabled-in-message-vpn"`. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
          type: string
        serviceMqttMaxConnectionCount:
          description: The maximum number of MQTT client connections that can be simultaneously
            connected to the Message VPN. The default is the maximum value supported
            by the platform. Available since 2.1.
          format: int64
          type: integer
        serviceMqttPlainTextEnabled:
          description: Enable or disable the plain-text MQTT service in the Message
            VPN. Disabling causes clients currently connected to be disconnected.
            The default value is `false`. Available since 2.1.
          type: boolean
        serviceMqttPlainTextListenPort:
          description: The port number for plain-text MQTT clients that connect to
            the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
            The default value is `0`. Available since 2.1.
          format: int64
          type: integer
        serviceMqttTlsEnabled:
          description: Enable or disable the use of encryption (TLS) for the MQTT
            service in the Message VPN. Disabling causes clients currently connected
            over TLS to be disconnected. The default value is `false`. Available since
            2.1.
          type: boolean
        serviceMqttTlsListenPort:
          description: The port number for MQTT clients that connect to the Message
            VPN over TLS. The port must be unique across the message backbone. A value
            of 0 means that the listen-port is unassigned and cannot be enabled. The
            default value is `0`. Available since 2.1.
          format: int64
          type: integer
        serviceMqttTlsWebSocketEnabled:
          description: Enable or disable the use of encrypted WebSocket (WebSocket
            over TLS) for the MQTT service in the Message VPN. Disabling causes clients
            currently connected by encrypted WebSocket to be disconnected. The default
            value is `false`. Available since 2.1.
          type: boolean
        serviceMqttTlsWebSocketListenPort:
          description: The port number for MQTT clients that connect to the Message
            VPN using WebSocket over TLS. The port must be unique across the message
            backbone. A value of 0 means that the listen-port is unassigned and cannot
            be enabled. The default value is `0`. Available since 2.1.
          format: int64
          type: integer
        serviceMqttWebSocketEnabled:
          description: Enable or disable the use of WebSocket for the MQTT service
            in the Message VPN. Disabling causes clients currently connected by WebSocket
            to be disconnected. The default value is `false`. Available since 2.1.
          type: boolean
        serviceMqttWebSocketListenPort:
          description: The port number for plain-text MQTT clients that connect to
            the Message VPN using WebSocket. The port must be unique across the message
            backbone. A value of 0 means that the listen-port is unassigned and cannot
            be enabled. The default value is `0`. Available since 2.1.
          format: int64
          type: integer
        serviceRestIncomingAuthenticationClientCertRequest:
          description: |-
            Determines when to request a client certificate from an incoming REST Producer connecting via a TLS port. The default value is `"when-enabled-in-message-vpn"`. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
          type: string
        serviceRestIncomingAuthorizationHeaderHandling:
          description: |-
            The handling of Authorization headers for incoming REST connections. The default value is `"drop"`. The allowed values and their meaning are:

            <pre>
            "drop" - Do not attach the Authorization header to the message as a user property. This configuration is most secure.
            "forward" - Forward the Authorization header, attaching it to the message as a user property in the same way as other headers. For best security, use the drop setting.
            "legacy" - If the Authorization header was used for authentication to the broker, do not attach it to the message. If the Authorization header was not used for authentication to the broker, attach it to the message as a user property in the same way as other headers. For best security, use the drop setting.
            </pre>
             Available since 2.19.
          enum:
          - drop
          - forward
          - legacy
          type: string
        serviceRestIncomingMaxConnectionCount:
          description: The maximum number of REST incoming client connections that
            can be simultaneously connected to the Message VPN. This value may be
            higher than supported by the platform. The default is the maximum value
            supported by the platform.
          format: int64
          type: integer
        serviceRestIncomingPlainTextEnabled:
          description: Enable or disable the plain-text REST service for incoming
            clients in the Message VPN. Disabling causes clients currently connected
            to be disconnected. The default value is `false`.
          type: boolean
        serviceRestIncomingPlainTextListenPort:
          description: The port number for incoming plain-text REST clients that connect
            to the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
            The default value is `0`.
          format: int64
          type: integer
        serviceRestIncomingTlsEnabled:
          description: Enable or disable the use of encryption (TLS) for the REST
            service for incoming clients in the Message VPN. Disabling causes clients
            currently connected over TLS to be disconnected. The default value is
            `false`.
          type: boolean
        serviceRestIncomingTlsListenPort:
          description: The port number for incoming REST clients that connect to the
            Message VPN over TLS. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
            The default value is `0`.
          format: int64
          type: integer
        serviceRestMode:
          description: |-
            The REST service mode for incoming REST clients that connect to the Message VPN. The default value is `"messaging"`. The allowed values and their meaning are:

            <pre>
            "gateway" - Act as a message gateway through which REST messages are propagated.
            "messaging" - Act as a message broker on which REST messages are queued.
            </pre>
             Available since 2.6.
          enum:
          - gateway
          - messaging
          type: string
        serviceRestOutgoingMaxConnectionCount:
          description: The maximum number of REST Consumer (outgoing) client connections
            that can be simultaneously connected to the Message VPN. The default varies
            by platform.
          format: int64
          type: integer
        serviceSmfMaxConnectionCount:
          description: The maximum number of SMF client connections that can be simultaneously
            connected to the Message VPN. This value may be higher than supported
            by the platform. The default varies by platform.
          format: int64
          type: integer
        serviceSmfPlainTextEnabled:
          description: Enable or disable the plain-text SMF service in the Message
            VPN. Disabling causes clients currently connected to be disconnected.
            The default value is `true`.
          type: boolean
        serviceSmfTlsEnabled:
          description: Enable or disable the use of encryption (TLS) for the SMF service
            in the Message VPN. Disabling causes clients currently connected over
            TLS to be disconnected. The default value is `true`.
          type: boolean
        serviceWebAuthenticationClientCertRequest:
          description: |-
            Determines when to request a client certificate from a Web Transport client connecting via a TLS port. The default value is `"when-enabled-in-message-vpn"`. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
          type: string
        serviceWebMaxConnectionCount:
          description: The maximum number of Web Transport client connections that
            can be simultaneously connected to the Message VPN. This value may be
            higher than supported by the platform. The default is the maximum value
            supported by the platform.
          format: int64
          type: integer
        serviceWebPlainTextEnabled:
          description: Enable or disable the plain-text Web Transport service in the
            Message VPN. Disabling causes clients currently connected to be disconnected.
            The default value is `true`.
          type: boolean
        serviceWebTlsEnabled:
          description: Enable or disable the use of TLS for the Web Transport service
            in the Message VPN. Disabling causes clients currently connected over
            TLS to be disconnected. The default value is `true`.
          type: boolean
        tlsAllowDowngradeToPlainTextEnabled:
          description: Enable or disable the allowing of TLS SMF clients to downgrade
            their connections to plain-text connections. Changing this will not affect
            existing connections. The default value is `false`.
          type: boolean
      type: object
    MsgVpnAclProfile:
      example:
        clientConnectDefaultAction: allow
        publishTopicDefaultAction: allow
        subscribeTopicDefaultAction: allow
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        subscribeShareNameDefaultAction: allow
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        clientConnectDefaultAction:
          description: |
            The default action to take when a client using the ACL Profile connects to the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:

            <pre>
            "allow" - Allow client connection unless an exception is found for it.
            "disallow" - Disallow client connection unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        publishTopicDefaultAction:
          description: |
            The default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
          type: string
        subscribeShareNameDefaultAction:
          description: |-
            The default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. The default value is `"allow"`. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
             Available since 2.14.
          enum:
          - allow
          - disallow
          type: string
        subscribeTopicDefaultAction:
          description: |
            The default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
          type: string
      type: object
    MsgVpnAclProfileClientConnectException:
      example:
        clientConnectExceptionAddress: clientConnectExceptionAddress
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        clientConnectExceptionAddress:
          description: The IP address/netmask of the client connect exception in CIDR
            form.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnAclProfileClientConnectExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Connect Exception object.
          type: string
      type: object
    MsgVpnAclProfileClientConnectExceptionResponse:
      example:
        data:
          clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileClientConnectExceptionsResponse:
      example:
        data:
        - clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        - clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileLinks:
      example:
        clientConnectExceptionsUri: clientConnectExceptionsUri
        subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
        subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
        publishExceptionsUri: publishExceptionsUri
        uri: uri
        publishTopicExceptionsUri: publishTopicExceptionsUri
        subscribeExceptionsUri: subscribeExceptionsUri
      properties:
        clientConnectExceptionsUri:
          description: The URI of this ACL Profile's collection of Client Connect
            Exception objects.
          type: string
        publishExceptionsUri:
          description: The URI of this ACL Profile's collection of Publish Topic Exception
            objects. Deprecated since 2.14. Replaced by publishTopicExceptions.
          type: string
        publishTopicExceptionsUri:
          description: The URI of this ACL Profile's collection of Publish Topic Exception
            objects. Available since 2.14.
          type: string
        subscribeExceptionsUri:
          description: The URI of this ACL Profile's collection of Subscribe Topic
            Exception objects. Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          type: string
        subscribeShareNameExceptionsUri:
          description: The URI of this ACL Profile's collection of Subscribe Share
            Name Exception objects. Available since 2.14.
          type: string
        subscribeTopicExceptionsUri:
          description: The URI of this ACL Profile's collection of Subscribe Topic
            Exception objects. Available since 2.14.
          type: string
        uri:
          description: The URI of this ACL Profile object.
          type: string
      type: object
    MsgVpnAclProfilePublishException:
      example:
        publishExceptionTopic: publishExceptionTopic
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        topicSyntax: smf
      properties:
        aclProfileName:
          description: The name of the ACL Profile. Deprecated since 2.14. Replaced
            by publishTopicExceptions.
          type: string
        msgVpnName:
          description: The name of the Message VPN. Deprecated since 2.14. Replaced
            by publishTopicExceptions.
          type: string
        publishExceptionTopic:
          description: The topic for the exception to the default action taken. May
            include wildcard characters. Deprecated since 2.14. Replaced by publishTopicExceptions.
          type: string
        topicSyntax:
          description: |-
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
             Deprecated since 2.14. Replaced by publishTopicExceptions.
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfilePublishExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Publish Topic Exception object.
          type: string
      type: object
    MsgVpnAclProfilePublishExceptionResponse:
      example:
        data:
          publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfilePublishExceptionsResponse:
      example:
        data:
        - publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        - publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfilePublishTopicException:
      example:
        publishTopicExceptionSyntax: smf
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        publishTopicException: publishTopicException
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        publishTopicException:
          description: The topic for the exception to the default action taken. May
            include wildcard characters.
          type: string
        publishTopicExceptionSyntax:
          description: |
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfilePublishTopicExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Publish Topic Exception object.
          type: string
      type: object
    MsgVpnAclProfilePublishTopicExceptionResponse:
      example:
        data:
          publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfilePublishTopicExceptionsResponse:
      example:
        data:
        - publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        - publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileResponse:
      example:
        data:
          clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfile'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeException:
      example:
        msgVpnName: msgVpnName
        subscribeExceptionTopic: subscribeExceptionTopic
        aclProfileName: aclProfileName
        topicSyntax: smf
      properties:
        aclProfileName:
          description: The name of the ACL Profile. Deprecated since 2.14. Replaced
            by subscribeTopicExceptions.
          type: string
        msgVpnName:
          description: The name of the Message VPN. Deprecated since 2.14. Replaced
            by subscribeTopicExceptions.
          type: string
        subscribeExceptionTopic:
          description: The topic for the exception to the default action taken. May
            include wildcard characters. Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          type: string
        topicSyntax:
          description: |-
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
             Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfileSubscribeExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Subscribe Topic Exception object.
          type: string
      type: object
    MsgVpnAclProfileSubscribeExceptionResponse:
      example:
        data:
          msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeExceptionsResponse:
      example:
        data:
        - msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        - msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeShareNameException:
      example:
        subscribeShareNameExceptionSyntax: smf
        msgVpnName: msgVpnName
        subscribeShareNameException: subscribeShareNameException
        aclProfileName: aclProfileName
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        subscribeShareNameException:
          description: The subscribe share name exception to the default action taken.
            May include wildcard characters.
          type: string
        subscribeShareNameExceptionSyntax:
          description: |
            The syntax of the subscribe share name for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfileSubscribeShareNameExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Subscribe Share Name Exception object.
          type: string
      type: object
    MsgVpnAclProfileSubscribeShareNameExceptionResponse:
      example:
        data:
          subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeShareNameExceptionsResponse:
      example:
        data:
        - subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        - subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeTopicException:
      example:
        subscribeTopicException: subscribeTopicException
        subscribeTopicExceptionSyntax: smf
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
      properties:
        aclProfileName:
          description: The name of the ACL Profile.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        subscribeTopicException:
          description: The topic for the exception to the default action taken. May
            include wildcard characters.
          type: string
        subscribeTopicExceptionSyntax:
          description: |
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
          type: string
      type: object
    MsgVpnAclProfileSubscribeTopicExceptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Subscribe Topic Exception object.
          type: string
      type: object
    MsgVpnAclProfileSubscribeTopicExceptionResponse:
      example:
        data:
          subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfileSubscribeTopicExceptionsResponse:
      example:
        data:
        - subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        - subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAclProfilesResponse:
      example:
        data:
        - clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        - clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
        - clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfile'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAuthenticationOauthProvider:
      example:
        audienceValidationEnabled: true
        audienceClaimValue: audienceClaimValue
        usernameValidateEnabled: true
        oauthProviderName: oauthProviderName
        tokenIntrospectionPassword: tokenIntrospectionPassword
        jwksUri: jwksUri
        tokenIntrospectionTimeout: 6
        tokenIntrospectionUsername: tokenIntrospectionUsername
        enabled: true
        authorizationGroupClaimSource: access-token
        usernameClaimSource: access-token
        jwksRefreshInterval: 0
        authorizationGroupEnabled: true
        tokenIgnoreTimeLimitsEnabled: true
        audienceClaimSource: access-token
        authorizationGroupClaimName: authorizationGroupClaimName
        tokenIntrospectionUri: tokenIntrospectionUri
        disconnectOnTokenExpirationEnabled: true
        msgVpnName: msgVpnName
        usernameClaimName: usernameClaimName
        audienceClaimName: audienceClaimName
        tokenIntrospectionParameterName: tokenIntrospectionParameterName
      properties:
        audienceClaimName:
          description: The audience claim name, indicating which part of the object
            to use for determining the audience. The default value is `"aud"`.
          type: string
        audienceClaimSource:
          description: |
            The audience claim source, indicating where to search for the audience value. The default value is `"id-token"`. The allowed values and their meaning are:

            <pre>
            "access-token" - The OAuth v2 access_token.
            "id-token" - The OpenID Connect id_token.
            "introspection" - The result of introspecting the OAuth v2 access_token.
            </pre>
          enum:
          - access-token
          - id-token
          - introspection
          type: string
        audienceClaimValue:
          description: The required audience value for a token to be considered valid.
            The default value is `""`.
          type: string
        audienceValidationEnabled:
          description: Enable or disable audience validation. The default value is
            `false`.
          type: boolean
        authorizationGroupClaimName:
          description: The authorization group claim name, indicating which part of
            the object to use for determining the authorization group. The default
            value is `"scope"`.
          type: string
        authorizationGroupClaimSource:
          description: |
            The authorization group claim source, indicating where to search for the authorization group name. The default value is `"id-token"`. The allowed values and their meaning are:

            <pre>
            "access-token" - The OAuth v2 access_token.
            "id-token" - The OpenID Connect id_token.
            "introspection" - The result of introspecting the OAuth v2 access_token.
            </pre>
          enum:
          - access-token
          - id-token
          - introspection
          type: string
        authorizationGroupEnabled:
          description: Enable or disable OAuth based authorization. When enabled,
            the configured authorization type for OAuth clients is overridden. The
            default value is `false`.
          type: boolean
        disconnectOnTokenExpirationEnabled:
          description: Enable or disable the disconnection of clients when their tokens
            expire. Changing this value does not affect existing clients, only new
            client connections. The default value is `true`.
          type: boolean
        enabled:
          description: Enable or disable OAuth Provider client authentication. The
            default value is `false`.
          type: boolean
        jwksRefreshInterval:
          description: The number of seconds between forced JWKS public key refreshing.
            The default value is `86400`.
          format: int32
          type: integer
        jwksUri:
          description: The URI where the OAuth provider publishes its JWKS public
            keys. The default value is `""`.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        oauthProviderName:
          description: The name of the OAuth Provider.
          type: string
        tokenIgnoreTimeLimitsEnabled:
          description: Enable or disable whether to ignore time limits and accept
            tokens that are not yet valid or are no longer valid. The default value
            is `false`.
          type: boolean
        tokenIntrospectionParameterName:
          description: The parameter name used to identify the token during access
            token introspection. A standards compliant OAuth introspection server
            expects "token". The default value is `"token"`.
          type: string
        tokenIntrospectionPassword:
          description: The password to use when logging into the token introspection
            URI. This attribute is absent from a GET and not updated when absent in
            a PUT, subject to the exceptions in note 4. The default value is `""`.
          type: string
        tokenIntrospectionTimeout:
          description: The maximum time in seconds a token introspection is allowed
            to take. The default value is `1`.
          format: int32
          type: integer
        tokenIntrospectionUri:
          description: The token introspection URI of the OAuth authentication server.
            The default value is `""`.
          type: string
        tokenIntrospectionUsername:
          description: The username to use when logging into the token introspection
            URI. The default value is `""`.
          type: string
        usernameClaimName:
          description: The username claim name, indicating which part of the object
            to use for determining the username. The default value is `"sub"`.
          type: string
        usernameClaimSource:
          description: |
            The username claim source, indicating where to search for the username value. The default value is `"id-token"`. The allowed values and their meaning are:

            <pre>
            "access-token" - The OAuth v2 access_token.
            "id-token" - The OpenID Connect id_token.
            "introspection" - The result of introspecting the OAuth v2 access_token.
            </pre>
          enum:
          - access-token
          - id-token
          - introspection
          type: string
        usernameValidateEnabled:
          description: Enable or disable whether the API provided username will be
            validated against the username calculated from the token(s); the connection
            attempt is rejected if they differ. The default value is `false`.
          type: boolean
      type: object
    MsgVpnAuthenticationOauthProviderLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this OAuth Provider object.
          type: string
      type: object
    MsgVpnAuthenticationOauthProviderResponse:
      example:
        data:
          audienceValidationEnabled: true
          audienceClaimValue: audienceClaimValue
          usernameValidateEnabled: true
          oauthProviderName: oauthProviderName
          tokenIntrospectionPassword: tokenIntrospectionPassword
          jwksUri: jwksUri
          tokenIntrospectionTimeout: 6
          tokenIntrospectionUsername: tokenIntrospectionUsername
          enabled: true
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksRefreshInterval: 0
          authorizationGroupEnabled: true
          tokenIgnoreTimeLimitsEnabled: true
          audienceClaimSource: access-token
          authorizationGroupClaimName: authorizationGroupClaimName
          tokenIntrospectionUri: tokenIntrospectionUri
          disconnectOnTokenExpirationEnabled: true
          msgVpnName: msgVpnName
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        links:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAuthenticationOauthProvidersResponse:
      example:
        data:
        - audienceValidationEnabled: true
          audienceClaimValue: audienceClaimValue
          usernameValidateEnabled: true
          oauthProviderName: oauthProviderName
          tokenIntrospectionPassword: tokenIntrospectionPassword
          jwksUri: jwksUri
          tokenIntrospectionTimeout: 6
          tokenIntrospectionUsername: tokenIntrospectionUsername
          enabled: true
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksRefreshInterval: 0
          authorizationGroupEnabled: true
          tokenIgnoreTimeLimitsEnabled: true
          audienceClaimSource: access-token
          authorizationGroupClaimName: authorizationGroupClaimName
          tokenIntrospectionUri: tokenIntrospectionUri
          disconnectOnTokenExpirationEnabled: true
          msgVpnName: msgVpnName
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
        - audienceValidationEnabled: true
          audienceClaimValue: audienceClaimValue
          usernameValidateEnabled: true
          oauthProviderName: oauthProviderName
          tokenIntrospectionPassword: tokenIntrospectionPassword
          jwksUri: jwksUri
          tokenIntrospectionTimeout: 6
          tokenIntrospectionUsername: tokenIntrospectionUsername
          enabled: true
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksRefreshInterval: 0
          authorizationGroupEnabled: true
          tokenIgnoreTimeLimitsEnabled: true
          audienceClaimSource: access-token
          authorizationGroupClaimName: authorizationGroupClaimName
          tokenIntrospectionUri: tokenIntrospectionUri
          disconnectOnTokenExpirationEnabled: true
          msgVpnName: msgVpnName
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAuthorizationGroup:
      example:
        orderBeforeAuthorizationGroupName: orderBeforeAuthorizationGroupName
        authorizationGroupName: authorizationGroupName
        clientProfileName: clientProfileName
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        enabled: true
        orderAfterAuthorizationGroupName: orderAfterAuthorizationGroupName
      properties:
        aclProfileName:
          description: The ACL Profile of the LDAP Authorization Group. The default
            value is `"default"`.
          type: string
        authorizationGroupName:
          description: The name of the LDAP Authorization Group. Special care is needed
            if the group name contains special characters such as '#', '+', ';', '='
            as the value of the group name returned from the LDAP server might prepend
            those characters with '\'. For example a group name called 'test#,lab,com'
            will be returned from the LDAP server as 'test\#,lab,com'.
          type: string
        clientProfileName:
          description: The Client Profile of the LDAP Authorization Group. The default
            value is `"default"`.
          type: string
        enabled:
          description: Enable or disable the LDAP Authorization Group in the Message
            VPN. The default value is `false`.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        orderAfterAuthorizationGroupName:
          description: Lower the priority to be less than this group. This attribute
            is absent from a GET and not updated when absent in a PUT, subject to
            the exceptions in note 4. The default is not applicable.
          type: string
        orderBeforeAuthorizationGroupName:
          description: Raise the priority to be greater than this group. This attribute
            is absent from a GET and not updated when absent in a PUT, subject to
            the exceptions in note 4. The default is not applicable.
          type: string
      type: object
    MsgVpnAuthorizationGroupLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this LDAP Authorization Group object.
          type: string
      type: object
    MsgVpnAuthorizationGroupResponse:
      example:
        data:
          orderBeforeAuthorizationGroupName: orderBeforeAuthorizationGroupName
          authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
          orderAfterAuthorizationGroupName: orderAfterAuthorizationGroupName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        links:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroupLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnAuthorizationGroupsResponse:
      example:
        data:
        - orderBeforeAuthorizationGroupName: orderBeforeAuthorizationGroupName
          authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
          orderAfterAuthorizationGroupName: orderAfterAuthorizationGroupName
        - orderBeforeAuthorizationGroupName: orderBeforeAuthorizationGroupName
          authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
          orderAfterAuthorizationGroupName: orderAfterAuthorizationGroupName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroupLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridge:
      example:
        remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
        remoteAuthenticationClientCertPassword: remoteAuthenticationClientCertPassword
        maxTtl: 0
        remoteDeliverToOnePriority: p1
        bridgeName: bridgeName
        enabled: true
        remoteAuthenticationBasicPassword: remoteAuthenticationBasicPassword
        bridgeVirtualRouter: primary
        remoteAuthenticationClientCertContent: remoteAuthenticationClientCertContent
        remoteConnectionRetryCount: 6
        remoteConnectionRetryDelay: 1
        tlsCipherSuiteList: tlsCipherSuiteList
        msgVpnName: msgVpnName
        remoteAuthenticationScheme: basic
      properties:
        bridgeName:
          description: The name of the Bridge.
          type: string
        bridgeVirtualRouter:
          description: |
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
          enum:
          - primary
          - backup
          - auto
          type: string
        enabled:
          description: Enable or disable the Bridge. The default value is `false`.
          type: boolean
        maxTtl:
          description: The maximum time-to-live (TTL) in hops. Messages are discarded
            if their TTL exceeds this value. The default value is `8`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        remoteAuthenticationBasicClientUsername:
          description: The Client Username the Bridge uses to login to the remote
            Message VPN. The default value is `""`.
          type: string
        remoteAuthenticationBasicPassword:
          description: The password for the Client Username. This attribute is absent
            from a GET and not updated when absent in a PUT, subject to the exceptions
            in note 4. The default value is `""`.
          type: string
        remoteAuthenticationClientCertContent:
          description: The PEM formatted content for the client certificate used by
            the Bridge to login to the remote Message VPN. It must consist of a private
            key and between one and three certificates comprising the certificate
            trust chain. This attribute is absent from a GET and not updated when
            absent in a PUT, subject to the exceptions in note 4. Changing this attribute
            requires an HTTPS connection. The default value is `""`. Available since
            2.9.
          type: string
          x-requires-https: true
        remoteAuthenticationClientCertPassword:
          description: The password for the client certificate. This attribute is
            absent from a GET and not updated when absent in a PUT, subject to the
            exceptions in note 4. Changing this attribute requires an HTTPS connection.
            The default value is `""`. Available since 2.9.
          type: string
          x-requires-https: true
        remoteAuthenticationScheme:
          description: |
            The authentication scheme for the remote Message VPN. The default value is `"basic"`. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
          type: string
        remoteConnectionRetryCount:
          description: The maximum number of retry attempts to establish a connection
            to the remote Message VPN. A value of 0 means to retry forever. The default
            value is `0`.
          format: int64
          type: integer
        remoteConnectionRetryDelay:
          description: The number of seconds the broker waits for the bridge connection
            to be established before attempting a new connection. The default value
            is `3`.
          format: int64
          type: integer
        remoteDeliverToOnePriority:
          description: |
            The priority for deliver-to-one (DTO) messages transmitted from the remote Message VPN. The default value is `"p1"`. The allowed values and their meaning are:

            <pre>
            "p1" - The 1st or highest priority.
            "p2" - The 2nd highest priority.
            "p3" - The 3rd highest priority.
            "p4" - The 4th highest priority.
            "da" - Ignore priority and deliver always.
            </pre>
          enum:
          - p1
          - p2
          - p3
          - p4
          - da
          type: string
        tlsCipherSuiteList:
          description: The colon-separated list of cipher suites supported for TLS
            connections to the remote Message VPN. The value "default" implies all
            supported suites ordered from most secure to least secure. The default
            value is `"default"`.
          type: string
      type: object
    MsgVpnBridgeLinks:
      example:
        remoteMsgVpnsUri: remoteMsgVpnsUri
        uri: uri
        remoteSubscriptionsUri: remoteSubscriptionsUri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        remoteMsgVpnsUri:
          description: The URI of this Bridge's collection of Remote Message VPN objects.
          type: string
        remoteSubscriptionsUri:
          description: The URI of this Bridge's collection of Remote Subscription
            objects.
          type: string
        tlsTrustedCommonNamesUri:
          description: The URI of this Bridge's collection of Trusted Common Name
            objects. Deprecated since 2.18. Common Name validation has been replaced
            by Server Certificate Name validation.
          type: string
        uri:
          description: The URI of this Bridge object.
          type: string
      type: object
    MsgVpnBridgeRemoteMsgVpn:
      example:
        egressFlowWindowSize: 6
        remoteMsgVpnLocation: remoteMsgVpnLocation
        bridgeName: bridgeName
        compressedDataEnabled: true
        enabled: true
        remoteMsgVpnName: remoteMsgVpnName
        bridgeVirtualRouter: primary
        password: password
        remoteMsgVpnInterface: remoteMsgVpnInterface
        tlsEnabled: true
        clientUsername: clientUsername
        connectOrder: 0
        queueBinding: queueBinding
        msgVpnName: msgVpnName
        unidirectionalClientProfile: unidirectionalClientProfile
      properties:
        bridgeName:
          description: The name of the Bridge.
          type: string
        bridgeVirtualRouter:
          description: |
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
          enum:
          - primary
          - backup
          - auto
          type: string
        clientUsername:
          description: The Client Username the Bridge uses to login to the remote
            Message VPN. This per remote Message VPN value overrides the value provided
            for the Bridge overall. The default value is `""`.
          type: string
        compressedDataEnabled:
          description: Enable or disable data compression for the remote Message VPN
            connection. The default value is `false`.
          type: boolean
        connectOrder:
          description: The preference given to incoming connections from remote Message
            VPN hosts, from 1 (highest priority) to 4 (lowest priority). The default
            value is `4`.
          format: int32
          type: integer
        egressFlowWindowSize:
          description: The number of outstanding guaranteed messages that can be transmitted
            over the remote Message VPN connection before an acknowledgement is received.
            The default value is `255`.
          format: int64
          type: integer
        enabled:
          description: Enable or disable the remote Message VPN. The default value
            is `false`.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        password:
          description: The password for the Client Username. This attribute is absent
            from a GET and not updated when absent in a PUT, subject to the exceptions
            in note 4. The default value is `""`.
          type: string
        queueBinding:
          description: The queue binding of the Bridge in the remote Message VPN.
            The default value is `""`.
          type: string
        remoteMsgVpnInterface:
          description: The physical interface on the local Message VPN host for connecting
            to the remote Message VPN. By default, an interface is chosen automatically
            (recommended), but if specified, `remoteMsgVpnLocation` must not be a
            virtual router name.
          type: string
        remoteMsgVpnLocation:
          description: The location of the remote Message VPN as either an FQDN with
            port, IP address with port, or virtual router name (starting with "v:").
          type: string
        remoteMsgVpnName:
          description: The name of the remote Message VPN.
          type: string
        tlsEnabled:
          description: Enable or disable encryption (TLS) for the remote Message VPN
            connection. The default value is `false`.
          type: boolean
        unidirectionalClientProfile:
          description: The Client Profile for the unidirectional Bridge of the remote
            Message VPN. The Client Profile must exist in the local Message VPN, and
            it is used only for the TCP parameters. Note that the default client profile
            has a TCP maximum window size of 2MB. The default value is `"#client-profile"`.
          type: string
      type: object
    MsgVpnBridgeRemoteMsgVpnLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Remote Message VPN object.
          type: string
      type: object
    MsgVpnBridgeRemoteMsgVpnResponse:
      example:
        data:
          egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          password: password
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          unidirectionalClientProfile: unidirectionalClientProfile
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeRemoteMsgVpnsResponse:
      example:
        data:
        - egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          password: password
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          unidirectionalClientProfile: unidirectionalClientProfile
        - egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          password: password
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          unidirectionalClientProfile: unidirectionalClientProfile
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeRemoteSubscription:
      example:
        bridgeVirtualRouter: primary
        deliverAlwaysEnabled: true
        remoteSubscriptionTopic: remoteSubscriptionTopic
        msgVpnName: msgVpnName
        bridgeName: bridgeName
      properties:
        bridgeName:
          description: The name of the Bridge.
          type: string
        bridgeVirtualRouter:
          description: |
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
          enum:
          - primary
          - backup
          - auto
          type: string
        deliverAlwaysEnabled:
          description: Enable or disable deliver-always for the Bridge remote subscription
            topic instead of a deliver-to-one remote priority. A given topic for the
            Bridge may be deliver-to-one or deliver-always but not both.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        remoteSubscriptionTopic:
          description: The topic of the Bridge remote subscription.
          type: string
      type: object
    MsgVpnBridgeRemoteSubscriptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Remote Subscription object.
          type: string
      type: object
    MsgVpnBridgeRemoteSubscriptionResponse:
      example:
        data:
          bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeRemoteSubscriptionsResponse:
      example:
        data:
        - bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        - bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeResponse:
      example:
        data:
          remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          remoteAuthenticationClientCertPassword: remoteAuthenticationClientCertPassword
          maxTtl: 0
          remoteDeliverToOnePriority: p1
          bridgeName: bridgeName
          enabled: true
          remoteAuthenticationBasicPassword: remoteAuthenticationBasicPassword
          bridgeVirtualRouter: primary
          remoteAuthenticationClientCertContent: remoteAuthenticationClientCertContent
          remoteConnectionRetryCount: 6
          remoteConnectionRetryDelay: 1
          tlsCipherSuiteList: tlsCipherSuiteList
          msgVpnName: msgVpnName
          remoteAuthenticationScheme: basic
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          remoteMsgVpnsUri: remoteMsgVpnsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnBridge'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeTlsTrustedCommonName:
      example:
        bridgeVirtualRouter: primary
        msgVpnName: msgVpnName
        bridgeName: bridgeName
        tlsTrustedCommonName: tlsTrustedCommonName
      properties:
        bridgeName:
          description: The name of the Bridge. Deprecated since 2.18. Common Name
            validation has been replaced by Server Certificate Name validation.
          type: string
        bridgeVirtualRouter:
          description: |-
            The virtual router of the Bridge. The allowed values and their meaning are:

            <pre>
            "primary" - The Bridge is used for the primary virtual router.
            "backup" - The Bridge is used for the backup virtual router.
            "auto" - The Bridge is automatically assigned a virtual router at creation, depending on the broker's active-standby role.
            </pre>
             Deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
          enum:
          - primary
          - backup
          - auto
          type: string
        msgVpnName:
          description: The name of the Message VPN. Deprecated since 2.18. Common
            Name validation has been replaced by Server Certificate Name validation.
          type: string
        tlsTrustedCommonName:
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
      type: object
    MsgVpnBridgeTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Trusted Common Name object.
          type: string
      type: object
    MsgVpnBridgeTlsTrustedCommonNameResponse:
      example:
        data:
          bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgeTlsTrustedCommonNamesResponse:
      example:
        data:
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnBridgesResponse:
      example:
        data:
        - remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          remoteAuthenticationClientCertPassword: remoteAuthenticationClientCertPassword
          maxTtl: 0
          remoteDeliverToOnePriority: p1
          bridgeName: bridgeName
          enabled: true
          remoteAuthenticationBasicPassword: remoteAuthenticationBasicPassword
          bridgeVirtualRouter: primary
          remoteAuthenticationClientCertContent: remoteAuthenticationClientCertContent
          remoteConnectionRetryCount: 6
          remoteConnectionRetryDelay: 1
          tlsCipherSuiteList: tlsCipherSuiteList
          msgVpnName: msgVpnName
          remoteAuthenticationScheme: basic
        - remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          remoteAuthenticationClientCertPassword: remoteAuthenticationClientCertPassword
          maxTtl: 0
          remoteDeliverToOnePriority: p1
          bridgeName: bridgeName
          enabled: true
          remoteAuthenticationBasicPassword: remoteAuthenticationBasicPassword
          bridgeVirtualRouter: primary
          remoteAuthenticationClientCertContent: remoteAuthenticationClientCertContent
          remoteConnectionRetryCount: 6
          remoteConnectionRetryDelay: 1
          tlsCipherSuiteList: tlsCipherSuiteList
          msgVpnName: msgVpnName
          remoteAuthenticationScheme: basic
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - remoteMsgVpnsUri: remoteMsgVpnsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - remoteMsgVpnsUri: remoteMsgVpnsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnBridge'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientProfile:
      example:
        apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
        compressionEnabled: true
        tcpMaxWindowSize: 6
        allowGuaranteedEndpointCreateDurability: all
        clientProfileName: clientProfileName
        eventTransactionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        tcpMaxSegmentSize: 2
        queueDirect2MaxDepth: 1
        serviceSmfMinKeepaliveEnabled: true
        msgVpnName: msgVpnName
        allowSharedSubscriptionsEnabled: true
        eventClientProvisionedEndpointSpoolUsageThreshold:
          clearPercent: 5
          setPercent: 2
        eventEgressFlowCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueDirect3MinMsgBurst: 1
        elidingDelay: 0
        eventServiceWebConnectionCountPerClientUsernameThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueControl1MinMsgBurst: 7
        serviceWebMaxPayload: 9
        serviceMinKeepaliveTimeout: 9
        eventTransactedSessionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
        eventSubscriptionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        tlsAllowDowngradeToPlainTextEnabled: true
        tcpKeepaliveIdleTime: 6
        maxEndpointCountPerClientUsername: 5
        queueDirect2MinMsgBurst: 6
        queueGuaranteed1MinMsgBurst: 5
        queueDirect1MaxDepth: 1
        eventServiceSmfConnectionCountPerClientUsernameThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        tcpCongestionWindowSize: 6
        eventEndpointCountPerClientUsernameThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueDirect3MaxDepth: 7
        allowBridgeConnectionsEnabled: true
        allowTransactedSessionsEnabled: true
        serviceSmfMaxConnectionCountPerClientUsername: 9
        allowGuaranteedMsgSendEnabled: true
        queueDirect1MinMsgBurst: 1
        queueGuaranteed1MaxDepth: 4
        serviceWebInactiveTimeout: 6
        allowGuaranteedMsgReceiveEnabled: true
        tcpKeepaliveCount: 3
        maxTransactionCount: 2
        apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
        maxSubscriptionCount: 9
        eventConnectionCountPerClientUsernameThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        elidingMaxTopicCount: 6
        maxMsgsPerTransaction: 7
        queueControl1MaxDepth: 4
        tcpKeepaliveInterval: 1
        elidingEnabled: true
        maxIngressFlowCount: 2
        replicationAllowClientConnectWhenStandbyEnabled: true
        maxEgressFlowCount: 5
        maxTransactedSessionCount: 3
        rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
        serviceWebMaxConnectionCountPerClientUsername: 8
        allowGuaranteedEndpointCreateEnabled: true
        allowCutThroughForwardingEnabled: true
        apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
        maxConnectionCountPerClientUsername: 1
        eventIngressFlowCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
      properties:
        allowBridgeConnectionsEnabled:
          description: Enable or disable allowing Bridge clients using the Client
            Profile to connect. Changing this setting does not affect existing Bridge
            client connections. The default value is `false`.
          type: boolean
        allowCutThroughForwardingEnabled:
          description: Enable or disable allowing clients using the Client Profile
            to bind to endpoints with the cut-through forwarding delivery mode. Changing
            this value does not affect existing client connections. The default value
            is `false`.
          type: boolean
        allowGuaranteedEndpointCreateDurability:
          description: |-
            The types of Queues and Topic Endpoints that clients using the client-profile can create. Changing this value does not affect existing client connections. The default value is `"all"`. The allowed values and their meaning are:

            <pre>
            "all" - Client can create any type of endpoint.
            "durable" - Client can create only durable endpoints.
            "non-durable" - Client can create only non-durable endpoints.
            </pre>
             Available since 2.14.
          enum:
          - all
          - durable
          - non-durable
          type: string
        allowGuaranteedEndpointCreateEnabled:
          description: Enable or disable allowing clients using the Client Profile
            to create topic endponts or queues. Changing this value does not affect
            existing client connections. The default value is `false`.
          type: boolean
        allowGuaranteedMsgReceiveEnabled:
          description: Enable or disable allowing clients using the Client Profile
            to receive guaranteed messages. Changing this setting does not affect
            existing client connections. The default value is `false`.
          type: boolean
        allowGuaranteedMsgSendEnabled:
          description: Enable or disable allowing clients using the Client Profile
            to send guaranteed messages. Changing this setting does not affect existing
            client connections. The default value is `false`.
          type: boolean
        allowSharedSubscriptionsEnabled:
          description: Enable or disable allowing shared subscriptions. Changing this
            setting does not affect existing subscriptions. The default value is `false`.
            Available since 2.11.
          type: boolean
        allowTransactedSessionsEnabled:
          description: Enable or disable allowing clients using the Client Profile
            to establish transacted sessions. Changing this setting does not affect
            existing client connections. The default value is `false`.
          type: boolean
        apiQueueManagementCopyFromOnCreateName:
          description: The name of a queue to copy settings from when a new queue
            is created by a client using the Client Profile. The referenced queue
            must exist in the Message VPN. The default value is `""`. Deprecated since
            2.14. This attribute has been replaced with `apiQueueManagementCopyFromOnCreateTemplateName`.
          type: string
        apiQueueManagementCopyFromOnCreateTemplateName:
          description: The name of a queue template to copy settings from when a new
            queue is created by a client using the Client Profile. If the referenced
            queue template does not exist, queue creation will fail when it tries
            to resolve this template. The default value is `""`. Available since 2.14.
          type: string
        apiTopicEndpointManagementCopyFromOnCreateName:
          description: The name of a topic endpoint to copy settings from when a new
            topic endpoint is created by a client using the Client Profile. The referenced
            topic endpoint must exist in the Message VPN. The default value is `""`.
            Deprecated since 2.14. This attribute has been replaced with `apiTopicEndpointManagementCopyFromOnCreateTemplateName`.
          type: string
        apiTopicEndpointManagementCopyFromOnCreateTemplateName:
          description: The name of a topic endpoint template to copy settings from
            when a new topic endpoint is created by a client using the Client Profile.
            If the referenced topic endpoint template does not exist, topic endpoint
            creation will fail when it tries to resolve this template. The default
            value is `""`. Available since 2.14.
          type: string
        clientProfileName:
          description: The name of the Client Profile.
          type: string
        compressionEnabled:
          description: Enable or disable allowing clients using the Client Profile
            to use compression. The default value is `true`. Available since 2.10.
          type: boolean
        elidingDelay:
          description: The amount of time to delay the delivery of messages to clients
            using the Client Profile after the initial message has been delivered
            (the eliding delay interval), in milliseconds. A value of 0 means there
            is no delay in delivering messages to clients. The default value is `0`.
          format: int64
          type: integer
        elidingEnabled:
          description: Enable or disable message eliding for clients using the Client
            Profile. The default value is `false`.
          type: boolean
        elidingMaxTopicCount:
          description: The maximum number of topics tracked for message eliding per
            client connection using the Client Profile. The default value is `256`.
          format: int64
          type: integer
        eventClientProvisionedEndpointSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEndpointCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceSmfConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceWebConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSubscriptionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxConnectionCountPerClientUsername:
          description: The maximum number of client connections per Client Username
            using the Client Profile. The default is the maximum value supported by
            the platform.
          format: int64
          type: integer
        maxEgressFlowCount:
          description: The maximum number of transmit flows that can be created by
            one client using the Client Profile. The default value is `1000`.
          format: int64
          type: integer
        maxEndpointCountPerClientUsername:
          description: The maximum number of queues and topic endpoints that can be
            created by clients with the same Client Username using the Client Profile.
            The default value is `1000`.
          format: int64
          type: integer
        maxIngressFlowCount:
          description: The maximum number of receive flows that can be created by
            one client using the Client Profile. The default value is `1000`.
          format: int64
          type: integer
        maxMsgsPerTransaction:
          description: The maximum number of publisher and consumer messages combined
            that is allowed within a transaction for each client associated with this
            client-profile. Exceeding this limit will result in a transaction prepare
            or commit failure. Changing this value during operation will not affect
            existing sessions. It is only validated at transaction creation time.
            Large transactions consume more resources and are more likely to require
            retrieving messages from the ADB or from disk to process the transaction
            prepare or commit requests. The transaction processing rate may diminish
            if a large number of messages must be retrieved from the ADB or from disk.
            Care should be taken to not use excessively large transactions needlessly
            to avoid exceeding resource limits and to avoid reducing the overall broker
            performance. The default value is `256`. Available since 2.20.
          format: int32
          type: integer
        maxSubscriptionCount:
          description: The maximum number of subscriptions per client using the Client
            Profile. This limit is not enforced when a client adds a subscription
            to an endpoint, except for MQTT QoS 1 subscriptions. In addition, this
            limit is not enforced when a subscription is added using a management
            interface, such as CLI or SEMP. The default varies by platform.
          format: int64
          type: integer
        maxTransactedSessionCount:
          description: The maximum number of transacted sessions that can be created
            by one client using the Client Profile. The default value is `10`.
          format: int64
          type: integer
        maxTransactionCount:
          description: The maximum number of transactions that can be created by one
            client using the Client Profile. The default varies by platform.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        queueControl1MaxDepth:
          description: The maximum depth of the "Control 1" (C-1) priority queue,
            in work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        queueControl1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Control 1" (C-1) priority queue, regardless of the `queueControl1MaxDepth`
            value. The default value is `4`.
          format: int32
          type: integer
        queueDirect1MaxDepth:
          description: The maximum depth of the "Direct 1" (D-1) priority queue, in
            work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        queueDirect1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 1" (D-1) priority queue, regardless of the `queueDirect1MaxDepth`
            value. The default value is `4`.
          format: int32
          type: integer
        queueDirect2MaxDepth:
          description: The maximum depth of the "Direct 2" (D-2) priority queue, in
            work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        queueDirect2MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 2" (D-2) priority queue, regardless of the `queueDirect2MaxDepth`
            value. The default value is `4`.
          format: int32
          type: integer
        queueDirect3MaxDepth:
          description: The maximum depth of the "Direct 3" (D-3) priority queue, in
            work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        queueDirect3MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Direct 3" (D-3) priority queue, regardless of the `queueDirect3MaxDepth`
            value. The default value is `4`.
          format: int32
          type: integer
        queueGuaranteed1MaxDepth:
          description: The maximum depth of the "Guaranteed 1" (G-1) priority queue,
            in work units. Each work unit is 2048 bytes of message data. The default
            value is `20000`.
          format: int32
          type: integer
        queueGuaranteed1MinMsgBurst:
          description: The number of messages that are always allowed entry into the
            "Guaranteed 1" (G-3) priority queue, regardless of the `queueGuaranteed1MaxDepth`
            value. The default value is `255`.
          format: int32
          type: integer
        rejectMsgToSenderOnNoSubscriptionMatchEnabled:
          description: Enable or disable the sending of a negative acknowledgement
            (NACK) to a client using the Client Profile when discarding a guaranteed
            message due to no matching subscription found. The default value is `false`.
            Available since 2.2.
          type: boolean
        replicationAllowClientConnectWhenStandbyEnabled:
          description: Enable or disable allowing clients using the Client Profile
            to connect to the Message VPN when its replication state is standby. The
            default value is `false`.
          type: boolean
        serviceMinKeepaliveTimeout:
          description: The minimum client keepalive timeout which will be enforced
            for client connections. The default value is `30`. Available since 2.19.
          format: int32
          type: integer
        serviceSmfMaxConnectionCountPerClientUsername:
          description: The maximum number of SMF client connections per Client Username
            using the Client Profile. The default is the maximum value supported by
            the platform.
          format: int64
          type: integer
        serviceSmfMinKeepaliveEnabled:
          description: Enable or disable the enforcement of a minimum keepalive timeout
            for SMF clients. The default value is `false`. Available since 2.19.
          type: boolean
        serviceWebInactiveTimeout:
          description: The timeout for inactive Web Transport client sessions using
            the Client Profile, in seconds. The default value is `30`.
          format: int64
          type: integer
        serviceWebMaxConnectionCountPerClientUsername:
          description: The maximum number of Web Transport client connections per
            Client Username using the Client Profile. The default is the maximum value
            supported by the platform.
          format: int64
          type: integer
        serviceWebMaxPayload:
          description: The maximum Web Transport payload size before fragmentation
            occurs for clients using the Client Profile, in bytes. The size of the
            header is not included. The default value is `1000000`.
          format: int64
          type: integer
        tcpCongestionWindowSize:
          description: The TCP initial congestion window size for clients using the
            Client Profile, in multiples of the TCP Maximum Segment Size (MSS). Changing
            the value from its default of 2 results in non-compliance with RFC 2581.
            Contact Solace Support before changing this value. The default value is
            `2`.
          format: int64
          type: integer
        tcpKeepaliveCount:
          description: The number of TCP keepalive retransmissions to a client using
            the Client Profile before declaring that it is not available. The default
            value is `5`.
          format: int64
          type: integer
        tcpKeepaliveIdleTime:
          description: The amount of time a client connection using the Client Profile
            must remain idle before TCP begins sending keepalive probes, in seconds.
            The default value is `3`.
          format: int64
          type: integer
        tcpKeepaliveInterval:
          description: The amount of time between TCP keepalive retransmissions to
            a client using the Client Profile when no acknowledgement is received,
            in seconds. The default value is `1`.
          format: int64
          type: integer
        tcpMaxSegmentSize:
          description: The TCP maximum segment size for clients using the Client Profile,
            in bytes. Changes are applied to all existing connections. The default
            value is `1460`.
          format: int64
          type: integer
        tcpMaxWindowSize:
          description: The TCP maximum window size for clients using the Client Profile,
            in kilobytes. Changes are applied to all existing connections. The default
            value is `256`.
          format: int64
          type: integer
        tlsAllowDowngradeToPlainTextEnabled:
          description: Enable or disable allowing a client using the Client Profile
            to downgrade an encrypted connection to plain text. The default value
            is `true`. Available since 2.8.
          type: boolean
      type: object
    MsgVpnClientProfileLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Profile object.
          type: string
      type: object
    MsgVpnClientProfileResponse:
      example:
        data:
          apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 6
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tcpMaxSegmentSize: 2
          queueDirect2MaxDepth: 1
          serviceSmfMinKeepaliveEnabled: true
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 5
            setPercent: 2
          eventEgressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueDirect3MinMsgBurst: 1
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueControl1MinMsgBurst: 7
          serviceWebMaxPayload: 9
          serviceMinKeepaliveTimeout: 9
          eventTransactedSessionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          eventSubscriptionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 5
          queueDirect2MinMsgBurst: 6
          queueGuaranteed1MinMsgBurst: 5
          queueDirect1MaxDepth: 1
          eventServiceSmfConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueDirect3MaxDepth: 7
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          serviceSmfMaxConnectionCountPerClientUsername: 9
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 1
          queueGuaranteed1MaxDepth: 4
          serviceWebInactiveTimeout: 6
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 3
          maxTransactionCount: 2
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 9
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 7
          queueControl1MaxDepth: 4
          tcpKeepaliveInterval: 1
          elidingEnabled: true
          maxIngressFlowCount: 2
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 5
          maxTransactedSessionCount: 3
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 8
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnClientProfile'
        links:
          $ref: '#/components/schemas/MsgVpnClientProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientProfilesResponse:
      example:
        data:
        - apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 6
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tcpMaxSegmentSize: 2
          queueDirect2MaxDepth: 1
          serviceSmfMinKeepaliveEnabled: true
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 5
            setPercent: 2
          eventEgressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueDirect3MinMsgBurst: 1
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueControl1MinMsgBurst: 7
          serviceWebMaxPayload: 9
          serviceMinKeepaliveTimeout: 9
          eventTransactedSessionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          eventSubscriptionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 5
          queueDirect2MinMsgBurst: 6
          queueGuaranteed1MinMsgBurst: 5
          queueDirect1MaxDepth: 1
          eventServiceSmfConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueDirect3MaxDepth: 7
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          serviceSmfMaxConnectionCountPerClientUsername: 9
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 1
          queueGuaranteed1MaxDepth: 4
          serviceWebInactiveTimeout: 6
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 3
          maxTransactionCount: 2
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 9
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 7
          queueControl1MaxDepth: 4
          tcpKeepaliveInterval: 1
          elidingEnabled: true
          maxIngressFlowCount: 2
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 5
          maxTransactedSessionCount: 3
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 8
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        - apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 6
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tcpMaxSegmentSize: 2
          queueDirect2MaxDepth: 1
          serviceSmfMinKeepaliveEnabled: true
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 5
            setPercent: 2
          eventEgressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueDirect3MinMsgBurst: 1
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueControl1MinMsgBurst: 7
          serviceWebMaxPayload: 9
          serviceMinKeepaliveTimeout: 9
          eventTransactedSessionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          eventSubscriptionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 5
          queueDirect2MinMsgBurst: 6
          queueGuaranteed1MinMsgBurst: 5
          queueDirect1MaxDepth: 1
          eventServiceSmfConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueDirect3MaxDepth: 7
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          serviceSmfMaxConnectionCountPerClientUsername: 9
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 1
          queueGuaranteed1MaxDepth: 4
          serviceWebInactiveTimeout: 6
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 3
          maxTransactionCount: 2
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 9
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 7
          queueControl1MaxDepth: 4
          tcpKeepaliveInterval: 1
          elidingEnabled: true
          maxIngressFlowCount: 2
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 5
          maxTransactedSessionCount: 3
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 8
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientProfile'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientProfileLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientUsername:
      example:
        password: password
        subscriptionManagerEnabled: true
        clientUsername: clientUsername
        clientProfileName: clientProfileName
        msgVpnName: msgVpnName
        guaranteedEndpointPermissionOverrideEnabled: true
        aclProfileName: aclProfileName
        enabled: true
      properties:
        aclProfileName:
          description: The ACL Profile of the Client Username. The default value is
            `"default"`.
          type: string
        clientProfileName:
          description: The Client Profile of the Client Username. The default value
            is `"default"`.
          type: string
        clientUsername:
          description: The name of the Client Username.
          type: string
        enabled:
          description: Enable or disable the Client Username. When disabled, all clients
            currently connected as the Client Username are disconnected. The default
            value is `false`.
          type: boolean
        guaranteedEndpointPermissionOverrideEnabled:
          description: Enable or disable guaranteed endpoint permission override for
            the Client Username. When enabled all guaranteed endpoints may be accessed,
            modified or deleted with the same permission as the owner. The default
            value is `false`.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        password:
          description: The password for the Client Username. This attribute is absent
            from a GET and not updated when absent in a PUT, subject to the exceptions
            in note 4. The default value is `""`.
          type: string
        subscriptionManagerEnabled:
          description: Enable or disable the subscription management capability of
            the Client Username. This is the ability to manage subscriptions on behalf
            of other Client Usernames. The default value is `false`.
          type: boolean
      type: object
    MsgVpnClientUsernameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Client Username object.
          type: string
      type: object
    MsgVpnClientUsernameResponse:
      example:
        data:
          password: password
          subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnClientUsername'
        links:
          $ref: '#/components/schemas/MsgVpnClientUsernameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnClientUsernamesResponse:
      example:
        data:
        - password: password
          subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        - password: password
          subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnClientUsername'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCache:
      example:
        cacheName: cacheName
        heartbeat: 0
        scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
        msgVpnName: msgVpnName
        scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
        enabled: true
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        enabled:
          description: Enable or disable the Distributed Cache. The default value
            is `false`.
          type: boolean
        heartbeat:
          description: The heartbeat interval, in seconds, used by the Cache Instances
            to monitor connectivity with the message broker. The default value is
            `10`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        scheduledDeleteMsgDayList:
          description: The scheduled delete message day(s), specified as "daily" or
            a comma-separated list of days. Days must be specified as "Sun", "Mon",
            "Tue", "Wed", "Thu", "Fri", or "Sat", with no spaces, and in sorted order
            from Sunday to Saturday. The default value is `""`.
          type: string
        scheduledDeleteMsgTimeList:
          description: The scheduled delete message time(s), specified as "hourly"
            or a comma-separated list of 24-hour times in the form hh:mm, or h:mm.
            There must be no spaces, and times must be in sorted order from 0:00 to
            23:59. The default value is `""`.
          type: string
      type: object
    MsgVpnDistributedCacheCluster:
      example:
        eventRequestQueueDepthThreshold:
          clearPercent: 5
          setPercent: 2
        eventResponseRateThreshold:
          setValue: 5
          clearValue: 1
        msgLifetime: 7
        eventDataByteRateThreshold:
          setValue: 5
          clearValue: 1
        eventDataMsgRateThreshold:
          setValue: 5
          clearValue: 1
        maxMemory: 1
        maxMsgsPerTopic: 5
        deliverToOneOverrideEnabled: true
        enabled: true
        eventRequestRateThreshold:
          setValue: 5
          clearValue: 1
        cacheName: cacheName
        globalCachingEnabled: true
        globalCachingHeartbeat: 0
        clusterName: clusterName
        newTopicAdvertisementEnabled: true
        eventMaxTopicsThreshold:
          clearPercent: 5
          setPercent: 2
        msgVpnName: msgVpnName
        eventMaxMemoryThreshold:
          clearPercent: 5
          setPercent: 2
        maxTopicCount: 2
        globalCachingTopicLifetime: 6
        maxRequestQueueDepth: 5
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        deliverToOneOverrideEnabled:
          description: Enable or disable deliver-to-one override for the Cache Cluster.
            The default value is `true`.
          type: boolean
        enabled:
          description: Enable or disable the Cache Cluster. The default value is `false`.
          type: boolean
        eventDataByteRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventDataMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventMaxMemoryThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventMaxTopicsThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventRequestQueueDepthThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventRequestRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventResponseRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        globalCachingEnabled:
          description: Enable or disable global caching for the Cache Cluster. When
            enabled, the Cache Instances will fetch topics from remote Home Cache
            Clusters when requested, and subscribe to those topics to cache them locally.
            When disabled, the Cache Instances will remove all subscriptions and cached
            messages for topics from remote Home Cache Clusters. The default value
            is `false`.
          type: boolean
        globalCachingHeartbeat:
          description: The heartbeat interval, in seconds, used by the Cache Instances
            to monitor connectivity with the remote Home Cache Clusters. The default
            value is `3`.
          format: int64
          type: integer
        globalCachingTopicLifetime:
          description: The topic lifetime, in seconds. If no client requests are received
            for a given global topic over the duration of the topic lifetime, then
            the Cache Instance will remove the subscription and cached messages for
            that topic. A value of 0 disables aging. The default value is `3600`.
          format: int64
          type: integer
        maxMemory:
          description: The maximum memory usage, in megabytes (MB), for each Cache
            Instance in the Cache Cluster. The default value is `2048`.
          format: int64
          type: integer
        maxMsgsPerTopic:
          description: The maximum number of messages per topic for each Cache Instance
            in the Cache Cluster. When at the maximum, old messages are removed as
            new messages arrive. The default value is `1`.
          format: int64
          type: integer
        maxRequestQueueDepth:
          description: The maximum queue depth for cache requests received by the
            Cache Cluster. The default value is `100000`.
          format: int64
          type: integer
        maxTopicCount:
          description: The maximum number of topics for each Cache Instance in the
            Cache Cluster. The default value is `2000000`.
          format: int64
          type: integer
        msgLifetime:
          description: The message lifetime, in seconds. If a message remains cached
            for the duration of its lifetime, the Cache Instance will remove the message.
            A lifetime of 0 results in the message being retained indefinitely. The
            default value is `0`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        newTopicAdvertisementEnabled:
          description: Enable or disable the advertising, onto the message bus, of
            new topics learned by each Cache Instance in the Cache Cluster. The default
            value is `false`.
          type: boolean
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeCluster:
      example:
        cacheName: cacheName
        clusterName: clusterName
        msgVpnName: msgVpnName
        homeClusterName: homeClusterName
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        homeClusterName:
          description: The name of the remote Home Cache Cluster.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks:
      example:
        topicPrefixesUri: topicPrefixesUri
        uri: uri
      properties:
        topicPrefixesUri:
          description: The URI of this Home Cache Cluster's collection of Topic Prefix
            objects.
          type: string
        uri:
          description: The URI of this Home Cache Cluster object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse:
      example:
        data:
          cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          topicPrefixesUri: topicPrefixesUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix:
      example:
        cacheName: cacheName
        topicPrefix: topicPrefix
        clusterName: clusterName
        msgVpnName: msgVpnName
        homeClusterName: homeClusterName
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        homeClusterName:
          description: The name of the remote Home Cache Cluster.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        topicPrefix:
          description: A topic prefix for global topics available from the remote
            Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
          type: string
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic Prefix object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse:
      example:
        data:
          cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse:
      example:
        data:
        - cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        - cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse:
      example:
        data:
        - cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        - cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - topicPrefixesUri: topicPrefixesUri
          uri: uri
        - topicPrefixesUri: topicPrefixesUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterInstance:
      example:
        cacheName: cacheName
        instanceName: instanceName
        stopOnLostMsgEnabled: true
        clusterName: clusterName
        msgVpnName: msgVpnName
        autoStartEnabled: true
        enabled: true
      properties:
        autoStartEnabled:
          description: Enable or disable auto-start for the Cache Instance. When enabled,
            the Cache Instance will automatically attempt to transition from the Stopped
            operational state to Up whenever it restarts or reconnects to the message
            broker. The default value is `false`.
          type: boolean
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        enabled:
          description: Enable or disable the Cache Instance. The default value is
            `false`.
          type: boolean
        instanceName:
          description: The name of the Cache Instance.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        stopOnLostMsgEnabled:
          description: Enable or disable stop-on-lost-message for the Cache Instance.
            When enabled, the Cache Instance will transition to the stopped operational
            state upon losing a message. When stopped, it cannot accept or respond
            to cache requests, but continues to cache messages. The default value
            is `true`.
          type: boolean
      type: object
    MsgVpnDistributedCacheClusterInstanceLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Cache Instance object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterInstanceResponse:
      example:
        data:
          cacheName: cacheName
          instanceName: instanceName
          stopOnLostMsgEnabled: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          autoStartEnabled: true
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterInstancesResponse:
      example:
        data:
        - cacheName: cacheName
          instanceName: instanceName
          stopOnLostMsgEnabled: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          autoStartEnabled: true
          enabled: true
        - cacheName: cacheName
          instanceName: instanceName
          stopOnLostMsgEnabled: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          autoStartEnabled: true
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterLinks:
      example:
        globalCachingHomeClustersUri: globalCachingHomeClustersUri
        instancesUri: instancesUri
        topicsUri: topicsUri
        uri: uri
      properties:
        globalCachingHomeClustersUri:
          description: The URI of this Cache Cluster's collection of Home Cache Cluster
            objects.
          type: string
        instancesUri:
          description: The URI of this Cache Cluster's collection of Cache Instance
            objects.
          type: string
        topicsUri:
          description: The URI of this Cache Cluster's collection of Topic objects.
          type: string
        uri:
          description: The URI of this Cache Cluster object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterResponse:
      example:
        data:
          eventRequestQueueDepthThreshold:
            clearPercent: 5
            setPercent: 2
          eventResponseRateThreshold:
            setValue: 5
            clearValue: 1
          msgLifetime: 7
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 1
          eventDataMsgRateThreshold:
            setValue: 5
            clearValue: 1
          maxMemory: 1
          maxMsgsPerTopic: 5
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold:
            setValue: 5
            clearValue: 1
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 0
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold:
            clearPercent: 5
            setPercent: 2
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 5
            setPercent: 2
          maxTopicCount: 2
          globalCachingTopicLifetime: 6
          maxRequestQueueDepth: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterTopic:
      example:
        cacheName: cacheName
        clusterName: clusterName
        topic: topic
        msgVpnName: msgVpnName
      properties:
        cacheName:
          description: The name of the Distributed Cache.
          type: string
        clusterName:
          description: The name of the Cache Cluster.
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        topic:
          description: The value of the Topic in the form a/b/c.
          type: string
      type: object
    MsgVpnDistributedCacheClusterTopicLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic object.
          type: string
      type: object
    MsgVpnDistributedCacheClusterTopicResponse:
      example:
        data:
          cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClusterTopicsResponse:
      example:
        data:
        - cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        - cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheClustersResponse:
      example:
        data:
        - eventRequestQueueDepthThreshold:
            clearPercent: 5
            setPercent: 2
          eventResponseRateThreshold:
            setValue: 5
            clearValue: 1
          msgLifetime: 7
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 1
          eventDataMsgRateThreshold:
            setValue: 5
            clearValue: 1
          maxMemory: 1
          maxMsgsPerTopic: 5
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold:
            setValue: 5
            clearValue: 1
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 0
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold:
            clearPercent: 5
            setPercent: 2
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 5
            setPercent: 2
          maxTopicCount: 2
          globalCachingTopicLifetime: 6
          maxRequestQueueDepth: 5
        - eventRequestQueueDepthThreshold:
            clearPercent: 5
            setPercent: 2
          eventResponseRateThreshold:
            setValue: 5
            clearValue: 1
          msgLifetime: 7
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 1
          eventDataMsgRateThreshold:
            setValue: 5
            clearValue: 1
          maxMemory: 1
          maxMsgsPerTopic: 5
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold:
            setValue: 5
            clearValue: 1
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 0
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold:
            clearPercent: 5
            setPercent: 2
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 5
            setPercent: 2
          maxTopicCount: 2
          globalCachingTopicLifetime: 6
          maxRequestQueueDepth: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
        - globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCacheLinks:
      example:
        clustersUri: clustersUri
        uri: uri
      properties:
        clustersUri:
          description: The URI of this Distributed Cache's collection of Cache Cluster
            objects.
          type: string
        uri:
          description: The URI of this Distributed Cache object.
          type: string
      type: object
    MsgVpnDistributedCacheResponse:
      example:
        data:
          cacheName: cacheName
          heartbeat: 0
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          clustersUri: clustersUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCache'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDistributedCachesResponse:
      example:
        data:
        - cacheName: cacheName
          heartbeat: 0
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
        - cacheName: cacheName
          heartbeat: 0
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - clustersUri: clustersUri
          uri: uri
        - clustersUri: clustersUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCache'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDmrBridge:
      example:
        remoteMsgVpnName: remoteMsgVpnName
        remoteNodeName: remoteNodeName
        msgVpnName: msgVpnName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        remoteMsgVpnName:
          description: The remote Message VPN of the DMR Bridge. The default value
            is `""`.
          type: string
        remoteNodeName:
          description: The name of the node at the remote end of the DMR Bridge.
          type: string
      type: object
    MsgVpnDmrBridgeLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this DMR Bridge object.
          type: string
      type: object
    MsgVpnDmrBridgeResponse:
      example:
        data:
          remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDmrBridge'
        links:
          $ref: '#/components/schemas/MsgVpnDmrBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnDmrBridgesResponse:
      example:
        data:
        - remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          msgVpnName: msgVpnName
        - remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridge'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridgeLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiConnectionFactoriesResponse:
      example:
        data:
        - messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        - messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiConnectionFactory:
      example:
        messagingDefaultDeliveryMode: persistent
        connectionFactoryName: connectionFactoryName
        guaranteedReceiveAckTimeout: 1
        transportReadTimeout: 7
        transportReconnectRetryCount: 4
        dtoReceiveSubscriberNetworkPriority: 6
        messagingDefaultElidingEligibleEnabled: true
        transportDirectTransportEnabled: true
        transportReconnectRetryWait: 5
        clientDescription: clientDescription
        guaranteedReceiveWindowSize: 2
        dtoReceiveSubscriberLocalPriority: 0
        transportCompressionLevel: 2
        transportConnectRetryPerHostCount: 7
        guaranteedSendAckTimeout: 9
        transportReceiveBufferSize: 1
        msgVpnName: msgVpnName
        transportKeepaliveEnabled: true
        allowDuplicateClientIdEnabled: true
        transportPort: 6
        guaranteedReceiveReconnectRetryCount: 5
        transportConnectRetryCount: 4
        transportConnectTimeout: 1
        dynamicEndpointCreateDurableEnabled: true
        clientId: clientId
        messagingJmsxUserIdEnabled: true
        guaranteedReceiveWindowSizeAckThreshold: 7
        dynamicEndpointRespectTtlEnabled: true
        messagingTextInXmlPayloadEnabled: true
        guaranteedSendWindowSize: 3
        transportKeepaliveInterval: 1
        transportOptimizeDirectEnabled: true
        transportTcpNoDelayEnabled: true
        guaranteedReceiveReconnectRetryWait: 5
        transportSendBufferSize: 9
        transportKeepaliveCount: 1
        xaEnabled: true
        dtoSendEnabled: true
        messagingDefaultDmqEligibleEnabled: true
        dtoReceiveOverrideEnabled: true
        transportMsgCallbackOnIoThreadEnabled: true
      properties:
        allowDuplicateClientIdEnabled:
          description: Enable or disable whether new JMS connections can use the same
            Client identifier (ID) as an existing connection. The default value is
            `false`. Available since 2.3.
          type: boolean
        clientDescription:
          description: The description of the Client. The default value is `""`.
          type: string
        clientId:
          description: The Client identifier (ID). If not specified, a unique value
            for it will be generated. The default value is `""`.
          type: string
        connectionFactoryName:
          description: The name of the JMS Connection Factory.
          type: string
        dtoReceiveOverrideEnabled:
          description: Enable or disable overriding by the Subscriber (Consumer) of
            the deliver-to-one (DTO) property on messages. When enabled, the Subscriber
            can receive all DTO tagged messages. The default value is `true`.
          type: boolean
        dtoReceiveSubscriberLocalPriority:
          description: The priority for receiving deliver-to-one (DTO) messages by
            the Subscriber (Consumer) if the messages are published on the local broker
            that the Subscriber is directly connected to. The default value is `1`.
          format: int32
          type: integer
        dtoReceiveSubscriberNetworkPriority:
          description: The priority for receiving deliver-to-one (DTO) messages by
            the Subscriber (Consumer) if the messages are published on a remote broker.
            The default value is `1`.
          format: int32
          type: integer
        dtoSendEnabled:
          description: Enable or disable the deliver-to-one (DTO) property on messages
            sent by the Publisher (Producer). The default value is `false`.
          type: boolean
        dynamicEndpointCreateDurableEnabled:
          description: Enable or disable whether a durable endpoint will be dynamically
            created on the broker when the client calls "Session.createDurableSubscriber()"
            or "Session.createQueue()". The created endpoint respects the message
            time-to-live (TTL) according to the "dynamicEndpointRespectTtlEnabled"
            property. The default value is `false`.
          type: boolean
        dynamicEndpointRespectTtlEnabled:
          description: Enable or disable whether dynamically created durable and non-durable
            endpoints respect the message time-to-live (TTL) property. The default
            value is `true`.
          type: boolean
        guaranteedReceiveAckTimeout:
          description: The timeout for sending the acknowledgement (ACK) for guaranteed
            messages received by the Subscriber (Consumer), in milliseconds. The default
            value is `1000`.
          format: int32
          type: integer
        guaranteedReceiveReconnectRetryCount:
          description: The maximum number of attempts to reconnect to the host or
            list of hosts after the guaranteed  messaging connection has been lost.
            The value "-1" means to retry forever. The default value is `-1`. Available
            since 2.14.
          format: int32
          type: integer
        guaranteedReceiveReconnectRetryWait:
          description: The amount of time to wait before making another attempt to
            connect or reconnect to the host after the guaranteed messaging connection
            has been lost, in milliseconds. The default value is `3000`. Available
            since 2.14.
          format: int32
          type: integer
        guaranteedReceiveWindowSize:
          description: The size of the window for guaranteed messages received by
            the Subscriber (Consumer), in messages. The default value is `18`.
          format: int32
          type: integer
        guaranteedReceiveWindowSizeAckThreshold:
          description: The threshold for sending the acknowledgement (ACK) for guaranteed
            messages received by the Subscriber (Consumer) as a percentage of `guaranteedReceiveWindowSize`.
            The default value is `60`.
          format: int32
          type: integer
        guaranteedSendAckTimeout:
          description: The timeout for receiving the acknowledgement (ACK) for guaranteed
            messages sent by the Publisher (Producer), in milliseconds. The default
            value is `2000`.
          format: int32
          type: integer
        guaranteedSendWindowSize:
          description: The size of the window for non-persistent guaranteed messages
            sent by the Publisher (Producer), in messages. For persistent messages
            the window size is fixed at 1. The default value is `255`.
          format: int32
          type: integer
        messagingDefaultDeliveryMode:
          description: |
            The default delivery mode for messages sent by the Publisher (Producer). The default value is `"persistent"`. The allowed values and their meaning are:

            <pre>
            "persistent" - The broker spools messages (persists in the Message Spool) as part of the send operation.
            "non-persistent" - The broker does not spool messages (does not persist in the Message Spool) as part of the send operation.
            </pre>
          enum:
          - persistent
          - non-persistent
          type: string
        messagingDefaultDmqEligibleEnabled:
          description: Enable or disable whether messages sent by the Publisher (Producer)
            are Dead Message Queue (DMQ) eligible by default. The default value is
            `false`.
          type: boolean
        messagingDefaultElidingEligibleEnabled:
          description: Enable or disable whether messages sent by the Publisher (Producer)
            are Eliding eligible by default. The default value is `false`.
          type: boolean
        messagingJmsxUserIdEnabled:
          description: Enable or disable inclusion (adding or replacing) of the JMSXUserID
            property in messages sent by the Publisher (Producer). The default value
            is `false`.
          type: boolean
        messagingTextInXmlPayloadEnabled:
          description: Enable or disable encoding of JMS text messages in Publisher
            (Producer) messages as XML payload. When disabled, JMS text messages are
            encoded as a binary attachment. The default value is `true`.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        transportCompressionLevel:
          description: The ZLIB compression level for the connection to the broker.
            The value "0" means no compression, and the value "-1" means the compression
            level is specified in the JNDI Properties file. The default value is `-1`.
          format: int32
          type: integer
        transportConnectRetryCount:
          description: The maximum number of retry attempts to establish an initial
            connection to the host or list of hosts. The value "0" means a single
            attempt (no retries), and the value "-1" means to retry forever. The default
            value is `0`.
          format: int32
          type: integer
        transportConnectRetryPerHostCount:
          description: The maximum number of retry attempts to establish an initial
            connection to each host on the list of hosts. The value "0" means a single
            attempt (no retries), and the value "-1" means to retry forever. The default
            value is `0`.
          format: int32
          type: integer
        transportConnectTimeout:
          description: The timeout for establishing an initial connection to the broker,
            in milliseconds. The default value is `30000`.
          format: int32
          type: integer
        transportDirectTransportEnabled:
          description: Enable or disable usage of the Direct Transport mode for sending
            non-persistent messages. When disabled, the Guaranteed Transport mode
            is used. The default value is `true`.
          type: boolean
        transportKeepaliveCount:
          description: The maximum number of consecutive application-level keepalive
            messages sent without the broker response before the connection to the
            broker is closed. The default value is `3`.
          format: int32
          type: integer
        transportKeepaliveEnabled:
          description: Enable or disable usage of application-level keepalive messages
            to maintain a connection with the broker. The default value is `true`.
          type: boolean
        transportKeepaliveInterval:
          description: The interval between application-level keepalive messages,
            in milliseconds. The default value is `3000`.
          format: int32
          type: integer
        transportMsgCallbackOnIoThreadEnabled:
          description: Enable or disable delivery of asynchronous messages directly
            from the I/O thread. Contact Solace Support before enabling this property.
            The default value is `false`.
          type: boolean
        transportOptimizeDirectEnabled:
          description: Enable or disable optimization for the Direct Transport delivery
            mode. If enabled, the client application is limited to one Publisher (Producer)
            and one non-durable Subscriber (Consumer). The default value is `false`.
          type: boolean
        transportPort:
          description: The connection port number on the broker for SMF clients. The
            value "-1" means the port is specified in the JNDI Properties file. The
            default value is `-1`.
          format: int32
          type: integer
        transportReadTimeout:
          description: The timeout for reading a reply from the broker, in milliseconds.
            The default value is `10000`.
          format: int32
          type: integer
        transportReceiveBufferSize:
          description: The size of the receive socket buffer, in bytes. It corresponds
            to the SO_RCVBUF socket option. The default value is `65536`.
          format: int32
          type: integer
        transportReconnectRetryCount:
          description: The maximum number of attempts to reconnect to the host or
            list of hosts after the connection has been lost. The value "-1" means
            to retry forever. The default value is `3`.
          format: int32
          type: integer
        transportReconnectRetryWait:
          description: The amount of time before making another attempt to connect
            or reconnect to the host after the connection has been lost, in milliseconds.
            The default value is `3000`.
          format: int32
          type: integer
        transportSendBufferSize:
          description: The size of the send socket buffer, in bytes. It corresponds
            to the SO_SNDBUF socket option. The default value is `65536`.
          format: int32
          type: integer
        transportTcpNoDelayEnabled:
          description: Enable or disable the TCP_NODELAY option. When enabled, Nagle's
            algorithm for TCP/IP congestion control (RFC 896) is disabled. The default
            value is `true`.
          type: boolean
        xaEnabled:
          description: Enable or disable this as an XA Connection Factory. When enabled,
            the Connection Factory can be cast to "XAConnectionFactory", "XAQueueConnectionFactory"
            or "XATopicConnectionFactory". The default value is `false`.
          type: boolean
      type: object
    MsgVpnJndiConnectionFactoryLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this JNDI Connection Factory object.
          type: string
      type: object
    MsgVpnJndiConnectionFactoryResponse:
      example:
        data:
          messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        links:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiQueue:
      example:
        queueName: queueName
        physicalName: physicalName
        msgVpnName: msgVpnName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        physicalName:
          description: The physical name of the JMS Queue. The default value is `""`.
          type: string
        queueName:
          description: The JNDI name of the JMS Queue.
          type: string
      type: object
    MsgVpnJndiQueueLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this JNDI Queue object.
          type: string
      type: object
    MsgVpnJndiQueueResponse:
      example:
        data:
          queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnJndiQueue'
        links:
          $ref: '#/components/schemas/MsgVpnJndiQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiQueuesResponse:
      example:
        data:
        - queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        - queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueue'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueueLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiTopic:
      example:
        physicalName: physicalName
        topicName: topicName
        msgVpnName: msgVpnName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        physicalName:
          description: The physical name of the JMS Topic. The default value is `""`.
          type: string
        topicName:
          description: The JNDI name of the JMS Topic.
          type: string
      type: object
    MsgVpnJndiTopicLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this JNDI Topic object.
          type: string
      type: object
    MsgVpnJndiTopicResponse:
      example:
        data:
          physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnJndiTopic'
        links:
          $ref: '#/components/schemas/MsgVpnJndiTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnJndiTopicsResponse:
      example:
        data:
        - physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        - physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopic'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopicLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnLinks:
      example:
        authenticationOauthProvidersUri: authenticationOauthProvidersUri
        clientProfilesUri: clientProfilesUri
        topicEndpointsUri: topicEndpointsUri
        jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
        mqttRetainCachesUri: mqttRetainCachesUri
        clientUsernamesUri: clientUsernamesUri
        bridgesUri: bridgesUri
        replicatedTopicsUri: replicatedTopicsUri
        topicEndpointTemplatesUri: topicEndpointTemplatesUri
        aclProfilesUri: aclProfilesUri
        sequencedTopicsUri: sequencedTopicsUri
        uri: uri
        jndiTopicsUri: jndiTopicsUri
        dmrBridgesUri: dmrBridgesUri
        replayLogsUri: replayLogsUri
        queueTemplatesUri: queueTemplatesUri
        queuesUri: queuesUri
        restDeliveryPointsUri: restDeliveryPointsUri
        distributedCachesUri: distributedCachesUri
        mqttSessionsUri: mqttSessionsUri
        authorizationGroupsUri: authorizationGroupsUri
        jndiQueuesUri: jndiQueuesUri
      properties:
        aclProfilesUri:
          description: The URI of this Message VPN's collection of ACL Profile objects.
          type: string
        authenticationOauthProvidersUri:
          description: The URI of this Message VPN's collection of OAuth Provider
            objects. Available since 2.13.
          type: string
        authorizationGroupsUri:
          description: The URI of this Message VPN's collection of LDAP Authorization
            Group objects.
          type: string
        bridgesUri:
          description: The URI of this Message VPN's collection of Bridge objects.
          type: string
        clientProfilesUri:
          description: The URI of this Message VPN's collection of Client Profile
            objects.
          type: string
        clientUsernamesUri:
          description: The URI of this Message VPN's collection of Client Username
            objects.
          type: string
        distributedCachesUri:
          description: The URI of this Message VPN's collection of Distributed Cache
            objects. Available since 2.11.
          type: string
        dmrBridgesUri:
          description: The URI of this Message VPN's collection of DMR Bridge objects.
            Available since 2.11.
          type: string
        jndiConnectionFactoriesUri:
          description: The URI of this Message VPN's collection of JNDI Connection
            Factory objects. Available since 2.2.
          type: string
        jndiQueuesUri:
          description: The URI of this Message VPN's collection of JNDI Queue objects.
            Available since 2.2.
          type: string
        jndiTopicsUri:
          description: The URI of this Message VPN's collection of JNDI Topic objects.
            Available since 2.2.
          type: string
        mqttRetainCachesUri:
          description: The URI of this Message VPN's collection of MQTT Retain Cache
            objects. Available since 2.11.
          type: string
        mqttSessionsUri:
          description: The URI of this Message VPN's collection of MQTT Session objects.
            Available since 2.1.
          type: string
        queueTemplatesUri:
          description: The URI of this Message VPN's collection of Queue Template
            objects. Available since 2.14.
          type: string
        queuesUri:
          description: The URI of this Message VPN's collection of Queue objects.
          type: string
        replayLogsUri:
          description: The URI of this Message VPN's collection of Replay Log objects.
            Available since 2.10.
          type: string
        replicatedTopicsUri:
          description: The URI of this Message VPN's collection of Replicated Topic
            objects. Available since 2.1.
          type: string
        restDeliveryPointsUri:
          description: The URI of this Message VPN's collection of REST Delivery Point
            objects.
          type: string
        sequencedTopicsUri:
          description: The URI of this Message VPN's collection of Sequenced Topic
            objects.
          type: string
        topicEndpointTemplatesUri:
          description: The URI of this Message VPN's collection of Topic Endpoint
            Template objects. Available since 2.14.
          type: string
        topicEndpointsUri:
          description: The URI of this Message VPN's collection of Topic Endpoint
            objects. Available since 2.1.
          type: string
        uri:
          description: The URI of this Message VPN object.
          type: string
      type: object
    MsgVpnMqttRetainCache:
      example:
        cacheName: cacheName
        msgLifetime: 0
        msgVpnName: msgVpnName
        enabled: true
      properties:
        cacheName:
          description: The name of the MQTT Retain Cache.
          type: string
        enabled:
          description: Enable or disable this MQTT Retain Cache. When the cache is
            disabled, neither retain messages nor retain requests will be delivered
            by the cache. However, live retain messages will continue to be delivered
            to currently connected MQTT clients. The default value is `false`.
          type: boolean
        msgLifetime:
          description: The message lifetime, in seconds. If a message remains cached
            for the duration of its lifetime, the cache will remove the message. A
            lifetime of 0 results in the message being retained indefinitely. The
            default value is `0`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
      type: object
    MsgVpnMqttRetainCacheLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this MQTT Retain Cache object.
          type: string
      type: object
    MsgVpnMqttRetainCacheResponse:
      example:
        data:
          cacheName: cacheName
          msgLifetime: 0
          msgVpnName: msgVpnName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        links:
          $ref: '#/components/schemas/MsgVpnMqttRetainCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttRetainCachesResponse:
      example:
        data:
        - cacheName: cacheName
          msgLifetime: 0
          msgVpnName: msgVpnName
          enabled: true
        - cacheName: cacheName
          msgLifetime: 0
          msgVpnName: msgVpnName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCache'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCacheLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttSession:
      example:
        owner: owner
        queueMaxBindCount: 0
        mqttSessionClientId: mqttSessionClientId
        queueRejectLowPriorityMsgEnabled: true
        queueRespectTtlEnabled: true
        queueMaxDeliveredUnackedMsgsPerFlow: 6
        queueMaxRedeliveryCount: 5
        enabled: true
        queueMaxTtl: 2
        queueRejectLowPriorityMsgLimit: 7
        queueDeadMsgQueue: queueDeadMsgQueue
        queueEventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueRejectMsgToSenderOnDiscardBehavior: always
        queueEventMsgSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueMaxMsgSize: 1
        msgVpnName: msgVpnName
        queueEventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueMaxMsgSpoolUsage: 5
        mqttSessionVirtualRouter: primary
        queueConsumerAckPropagationEnabled: true
      properties:
        enabled:
          description: Enable or disable the MQTT Session. When disabled, the client
            is disconnected, new messages matching QoS 0 subscriptions are discarded,
            and new messages matching QoS 1 subscriptions are stored for future delivery.
            The default value is `false`.
          type: boolean
        mqttSessionClientId:
          description: The Client ID of the MQTT Session, which corresponds to the
            ClientId provided in the MQTT CONNECT packet.
          type: string
        mqttSessionVirtualRouter:
          description: |
            The virtual router of the MQTT Session. The allowed values and their meaning are:

            <pre>
            "primary" - The MQTT Session belongs to the primary virtual router.
            "backup" - The MQTT Session belongs to the backup virtual router.
            </pre>
          enum:
          - primary
          - backup
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        owner:
          description: The owner of the MQTT Session. For externally-created sessions
            this defaults to the Client Username of the connecting client. For management-created
            sessions this defaults to empty. The default value is `""`.
          type: string
        queueConsumerAckPropagationEnabled:
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`. Available since 2.14.
          type: boolean
        queueDeadMsgQueue:
          description: The name of the Dead Message Queue (DMQ) used by the MQTT Session
            Queue. The default value is `"#DEAD_MSG_QUEUE"`. Available since 2.14.
          type: string
        queueEventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxBindCount:
          description: The maximum number of consumer flows that can bind to the MQTT
            Session Queue. The default value is `1000`. Available since 2.14.
          format: int64
          type: integer
        queueMaxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow for the MQTT Session Queue. The default value is `10000`. Available
            since 2.14.
          format: int64
          type: integer
        queueMaxMsgSize:
          description: The maximum message size allowed in the MQTT Session Queue,
            in bytes (B). The default value is `10000000`. Available since 2.14.
          format: int32
          type: integer
        queueMaxMsgSpoolUsage:
          description: The maximum message spool usage allowed by the MQTT Session
            Queue, in megabytes (MB). A value of 0 only allows spooling of the last
            message received and disables quota checking. The default value is `5000`.
            Available since 2.14.
          format: int64
          type: integer
        queueMaxRedeliveryCount:
          description: The maximum number of times the MQTT Session Queue will attempt
            redelivery of a message prior to it being discarded or moved to the DMQ.
            A value of 0 means to retry forever. The default value is `0`. Available
            since 2.14.
          format: int64
          type: integer
        queueMaxTtl:
          description: The maximum time in seconds a message can stay in the MQTT
            Session Queue when `queueRespectTtlEnabled` is `"true"`. A message expires
            when the lesser of the sender assigned time-to-live (TTL) in the message
            and the `queueMaxTtl` configured for the MQTT Session Queue, is exceeded.
            A value of 0 disables expiry. The default value is `0`. Available since
            2.14.
          format: int64
          type: integer
        queueRejectLowPriorityMsgEnabled:
          description: Enable or disable the checking of low priority messages against
            the `queueRejectLowPriorityMsgLimit`. This may only be enabled if `queueRejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`. Available
            since 2.14.
          type: boolean
        queueRejectLowPriorityMsgLimit:
          description: The number of messages of any priority in the MQTT Session
            Queue above which low priority messages are not admitted but higher priority
            messages are allowed. The default value is `0`. Available since 2.14.
          format: int64
          type: integer
        queueRejectMsgToSenderOnDiscardBehavior:
          description: |-
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"when-queue-enabled"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
             Available since 2.14.
          enum:
          - always
          - when-queue-enabled
          - never
          type: string
        queueRespectTtlEnabled:
          description: Enable or disable the respecting of the time-to-live (TTL)
            for messages in the MQTT Session Queue. When enabled, expired messages
            are discarded or moved to the DMQ. The default value is `false`. Available
            since 2.14.
          type: boolean
      type: object
    MsgVpnMqttSessionLinks:
      example:
        subscriptionsUri: subscriptionsUri
        uri: uri
      properties:
        subscriptionsUri:
          description: The URI of this MQTT Session's collection of Subscription objects.
          type: string
        uri:
          description: The URI of this MQTT Session object.
          type: string
      type: object
    MsgVpnMqttSessionResponse:
      example:
        data:
          owner: owner
          queueMaxBindCount: 0
          mqttSessionClientId: mqttSessionClientId
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          queueMaxDeliveredUnackedMsgsPerFlow: 6
          queueMaxRedeliveryCount: 5
          enabled: true
          queueMaxTtl: 2
          queueRejectLowPriorityMsgLimit: 7
          queueDeadMsgQueue: queueDeadMsgQueue
          queueEventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueEventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueMaxMsgSize: 1
          msgVpnName: msgVpnName
          queueEventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueMaxMsgSpoolUsage: 5
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          subscriptionsUri: subscriptionsUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnMqttSession'
        links:
          $ref: '#/components/schemas/MsgVpnMqttSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttSessionSubscription:
      example:
        mqttSessionClientId: mqttSessionClientId
        subscriptionQos: 0
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
        mqttSessionVirtualRouter: primary
      properties:
        mqttSessionClientId:
          description: The Client ID of the MQTT Session, which corresponds to the
            ClientId provided in the MQTT CONNECT packet.
          type: string
        mqttSessionVirtualRouter:
          description: |
            The virtual router of the MQTT Session. The allowed values and their meaning are:

            <pre>
            "primary" - The MQTT Session belongs to the primary virtual router.
            "backup" - The MQTT Session belongs to the backup virtual router.
            </pre>
          enum:
          - primary
          - backup
          type: string
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        subscriptionQos:
          description: The quality of service (QoS) for the subscription as either
            0 (deliver at most once) or 1 (deliver at least once). QoS 2 is not supported,
            but QoS 2 messages attracted by QoS 0 or QoS 1 subscriptions are accepted
            and delivered accordingly. The default value is `0`.
          format: int64
          type: integer
        subscriptionTopic:
          description: The MQTT subscription topic.
          type: string
      type: object
    MsgVpnMqttSessionSubscriptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Subscription object.
          type: string
      type: object
    MsgVpnMqttSessionSubscriptionResponse:
      example:
        data:
          mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttSessionSubscriptionsResponse:
      example:
        data:
        - mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        - mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnMqttSessionsResponse:
      example:
        data:
        - owner: owner
          queueMaxBindCount: 0
          mqttSessionClientId: mqttSessionClientId
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          queueMaxDeliveredUnackedMsgsPerFlow: 6
          queueMaxRedeliveryCount: 5
          enabled: true
          queueMaxTtl: 2
          queueRejectLowPriorityMsgLimit: 7
          queueDeadMsgQueue: queueDeadMsgQueue
          queueEventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueEventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueMaxMsgSize: 1
          msgVpnName: msgVpnName
          queueEventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueMaxMsgSpoolUsage: 5
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        - owner: owner
          queueMaxBindCount: 0
          mqttSessionClientId: mqttSessionClientId
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          queueMaxDeliveredUnackedMsgsPerFlow: 6
          queueMaxRedeliveryCount: 5
          enabled: true
          queueMaxTtl: 2
          queueRejectLowPriorityMsgLimit: 7
          queueDeadMsgQueue: queueDeadMsgQueue
          queueEventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueEventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueMaxMsgSize: 1
          msgVpnName: msgVpnName
          queueEventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueMaxMsgSpoolUsage: 5
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - subscriptionsUri: subscriptionsUri
          uri: uri
        - subscriptionsUri: subscriptionsUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSession'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueue:
      example:
        redeliveryEnabled: true
        rejectLowPriorityMsgLimit: 7
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        deliveryCountEnabled: true
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        respectMsgPriorityEnabled: true
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
        maxBindCount: 0
        owner: owner
        eventMsgSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        egressEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        maxRedeliveryCount: 5
        ingressEnabled: true
        queueName: queueName
        eventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        maxMsgSpoolUsage: 5
      properties:
        accessType:
          description: |
            The access type for delivering messages to consumer flows bound to the Queue. The default value is `"exclusive"`. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
          type: string
        consumerAckPropagationEnabled:
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`.
          type: boolean
        deadMsgQueue:
          description: The name of the Dead Message Queue (DMQ) used by the Queue.
            The default value is `"#DEAD_MSG_QUEUE"`. Available since 2.2.
          type: string
        deliveryCountEnabled:
          description: Enable or disable the ability for client applications to query
            the message delivery count of messages received from the Queue. This is
            a controlled availability feature. Please contact Solace to find out if
            this feature is supported for your use case. The default value is `false`.
            Available since 2.19.
          type: boolean
        egressEnabled:
          description: Enable or disable the transmission of messages from the Queue.
            The default value is `false`.
          type: boolean
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        ingressEnabled:
          description: Enable or disable the reception of messages to the Queue. The
            default value is `false`.
          type: boolean
        maxBindCount:
          description: The maximum number of consumer flows that can bind to the Queue.
            The default value is `1000`.
          format: int64
          type: integer
        maxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Queue. The default value is `10000`.
          format: int64
          type: integer
        maxMsgSize:
          description: The maximum message size allowed in the Queue, in bytes (B).
            The default value is `10000000`.
          format: int32
          type: integer
        maxMsgSpoolUsage:
          description: The maximum message spool usage allowed by the Queue, in megabytes
            (MB). A value of 0 only allows spooling of the last message received and
            disables quota checking. The default value is `5000`.
          format: int64
          type: integer
        maxRedeliveryCount:
          description: The maximum number of times the Queue will attempt redelivery
            of a message prior to it being discarded or moved to the DMQ. A value
            of 0 means to retry forever. The default value is `0`.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time in seconds a message can stay in the Queue
            when `respectTtlEnabled` is `"true"`. A message expires when the lesser
            of the sender assigned time-to-live (TTL) in the message and the `maxTtl`
            configured for the Queue, is exceeded. A value of 0 disables expiry. The
            default value is `0`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        owner:
          description: The Client Username that owns the Queue and has permission
            equivalent to `"delete"`. The default value is `""`.
          type: string
        permission:
          description: |
            The permission level for all consumers of the Queue, excluding the owner. The default value is `"no-access"`. The allowed values and their meaning are:

            <pre>
            "no-access" - Disallows all access.
            "read-only" - Read-only access to the messages.
            "consume" - Consume (read and remove) messages.
            "modify-topic" - Consume messages or modify the topic/selector.
            "delete" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.
            </pre>
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
          type: string
        queueName:
          description: The name of the Queue.
          type: string
        redeliveryEnabled:
          description: Enable or disable message redelivery. When enabled, the number
            of redelivery attempts is controlled by maxRedeliveryCount. When disabled,
            the message will never be delivered from the queue more than once. The
            default value is `true`. Available since 2.18.
          type: boolean
        rejectLowPriorityMsgEnabled:
          description: Enable or disable the checking of low priority messages against
            the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`.
          type: boolean
        rejectLowPriorityMsgLimit:
          description: The number of messages of any priority in the Queue above which
            low priority messages are not admitted but higher priority messages are
            allowed. The default value is `0`.
          format: int64
          type: integer
        rejectMsgToSenderOnDiscardBehavior:
          description: |-
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"when-queue-enabled"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
             Available since 2.1.
          enum:
          - always
          - when-queue-enabled
          - never
          type: string
        respectMsgPriorityEnabled:
          description: Enable or disable the respecting of message priority. When
            enabled, messages contained in the Queue are delivered in priority order,
            from 9 (highest) to 0 (lowest). MQTT queues do not support enabling message
            priority. The default value is `false`. Available since 2.8.
          type: boolean
        respectTtlEnabled:
          description: Enable or disable the respecting of the time-to-live (TTL)
            for messages in the Queue. When enabled, expired messages are discarded
            or moved to the DMQ. The default value is `false`.
          type: boolean
      type: object
    MsgVpnQueueLinks:
      example:
        subscriptionsUri: subscriptionsUri
        uri: uri
      properties:
        subscriptionsUri:
          description: The URI of this Queue's collection of Queue Subscription objects.
          type: string
        uri:
          description: The URI of this Queue object.
          type: string
      type: object
    MsgVpnQueueResponse:
      example:
        data:
          redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          queueName: queueName
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSpoolUsage: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          subscriptionsUri: subscriptionsUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnQueue'
        links:
          $ref: '#/components/schemas/MsgVpnQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueSubscription:
      example:
        queueName: queueName
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        queueName:
          description: The name of the Queue.
          type: string
        subscriptionTopic:
          description: The topic of the Subscription.
          type: string
      type: object
    MsgVpnQueueSubscriptionLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Subscription object.
          type: string
      type: object
    MsgVpnQueueSubscriptionResponse:
      example:
        data:
          queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnQueueSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnQueueSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueSubscriptionsResponse:
      example:
        data:
        - queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
        - queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscription'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscriptionLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueTemplate:
      example:
        maxBindCount: 0
        eventMsgSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        redeliveryEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        rejectLowPriorityMsgLimit: 7
        maxRedeliveryCount: 5
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        queueNameFilter: queueNameFilter
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueTemplateName: queueTemplateName
        respectMsgPriorityEnabled: true
        durabilityOverride: none
        eventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        maxMsgSpoolUsage: 5
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
      properties:
        accessType:
          description: |
            The access type for delivering messages to consumer flows. The default value is `"exclusive"`. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
          type: string
        consumerAckPropagationEnabled:
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`.
          type: boolean
        deadMsgQueue:
          description: The name of the Dead Message Queue (DMQ). The default value
            is `"#DEAD_MSG_QUEUE"`.
          type: string
        durabilityOverride:
          description: |
            Controls the durability of queues created from this template. If non-durable, the created queue will be non-durable, regardless of the specified durability. If none, the created queue will have the requested durability. The default value is `"none"`. The allowed values and their meaning are:

            <pre>
            "none" - The durability of the endpoint will be as requested on create.
            "non-durable" - The durability of the created queue will be non-durable, regardless of what was requested.
            </pre>
          enum:
          - none
          - non-durable
          type: string
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxBindCount:
          description: The maximum number of consumer flows that can bind. The default
            value is `1000`.
          format: int64
          type: integer
        maxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow. The default value is `10000`.
          format: int64
          type: integer
        maxMsgSize:
          description: The maximum message size allowed, in bytes (B). The default
            value is `10000000`.
          format: int32
          type: integer
        maxMsgSpoolUsage:
          description: The maximum message spool usage allowed, in megabytes (MB).
            A value of 0 only allows spooling of the last message received and disables
            quota checking. The default value is `5000`.
          format: int64
          type: integer
        maxRedeliveryCount:
          description: The maximum number of message redelivery attempts that will
            occur prior to the message being discarded or moved to the DMQ. A value
            of 0 means to retry forever. The default value is `0`.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time in seconds a message can stay in a Queue when
            `respectTtlEnabled` is `"true"`. A message expires when the lesser of
            the sender assigned time-to-live (TTL) in the message and the `maxTtl`
            configured for the Queue, is exceeded. A value of 0 disables expiry. The
            default value is `0`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        permission:
          description: |
            The permission level for all consumers, excluding the owner. The default value is `"no-access"`. The allowed values and their meaning are:

            <pre>
            "no-access" - Disallows all access.
            "read-only" - Read-only access to the messages.
            "consume" - Consume (read and remove) messages.
            "modify-topic" - Consume messages or modify the topic/selector.
            "delete" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.
            </pre>
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
          type: string
        queueNameFilter:
          description: 'A wildcardable pattern used to determine which Queues use
            settings from this Template. Two different wildcards are supported: *
            and >. Similar to topic filters or subscription patterns, a > matches
            anything (but only when used at the end), and a * matches zero or more
            characters but never a slash (/). A > is only a wildcard when used at
            the end, after a /. A * is only allowed at the end, after a slash (/).
            The default value is `""`.'
          type: string
        queueTemplateName:
          description: The name of the Queue Template.
          type: string
        redeliveryEnabled:
          description: Enable or disable message redelivery. When enabled, the number
            of redelivery attempts is controlled by maxRedeliveryCount. When disabled,
            the message will never be delivered from the queue more than once. The
            default value is `true`. Available since 2.18.
          type: boolean
        rejectLowPriorityMsgEnabled:
          description: Enable or disable the checking of low priority messages against
            the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`.
          type: boolean
        rejectLowPriorityMsgLimit:
          description: The number of messages of any priority above which low priority
            messages are not admitted but higher priority messages are allowed. The
            default value is `0`.
          format: int64
          type: integer
        rejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs prevent the message from being delivered to any destination and Transacted Session commits to fail. The default value is `"when-queue-enabled"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
          type: string
        respectMsgPriorityEnabled:
          description: Enable or disable the respecting of message priority. When
            enabled, messages are delivered in priority order, from 9 (highest) to
            0 (lowest). The default value is `false`.
          type: boolean
        respectTtlEnabled:
          description: Enable or disable the respecting of the time-to-live (TTL)
            for messages. When enabled, expired messages are discarded or moved to
            the DMQ. The default value is `false`.
          type: boolean
      type: object
    MsgVpnQueueTemplateLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Template object.
          type: string
      type: object
    MsgVpnQueueTemplateResponse:
      example:
        data:
          maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnQueueTemplate'
        links:
          $ref: '#/components/schemas/MsgVpnQueueTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueueTemplatesResponse:
      example:
        data:
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplate'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplateLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnQueuesResponse:
      example:
        data:
        - redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          queueName: queueName
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSpoolUsage: 5
        - redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          queueName: queueName
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSpoolUsage: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - subscriptionsUri: subscriptionsUri
          uri: uri
        - subscriptionsUri: subscriptionsUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnQueue'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnQueueLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplayLog:
      example:
        ingressEnabled: true
        replayLogName: replayLogName
        maxSpoolUsage: 0
        egressEnabled: true
        msgVpnName: msgVpnName
      properties:
        egressEnabled:
          description: Enable or disable the transmission of messages from the Replay
            Log. The default value is `false`.
          type: boolean
        ingressEnabled:
          description: Enable or disable the reception of messages to the Replay Log.
            The default value is `false`.
          type: boolean
        maxSpoolUsage:
          description: The maximum spool usage allowed by the Replay Log, in megabytes
            (MB). If this limit is exceeded, old messages will be trimmed. The default
            value is `0`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        replayLogName:
          description: The name of the Replay Log.
          type: string
      type: object
    MsgVpnReplayLogLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Replay Log object.
          type: string
      type: object
    MsgVpnReplayLogResponse:
      example:
        data:
          ingressEnabled: true
          replayLogName: replayLogName
          maxSpoolUsage: 0
          egressEnabled: true
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnReplayLog'
        links:
          $ref: '#/components/schemas/MsgVpnReplayLogLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplayLogsResponse:
      example:
        data:
        - ingressEnabled: true
          replayLogName: replayLogName
          maxSpoolUsage: 0
          egressEnabled: true
          msgVpnName: msgVpnName
        - ingressEnabled: true
          replayLogName: replayLogName
          maxSpoolUsage: 0
          egressEnabled: true
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnReplayLog'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplicatedTopic:
      example:
        replicationMode: sync
        replicatedTopic: replicatedTopic
        msgVpnName: msgVpnName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        replicatedTopic:
          description: The topic for applying replication. Published messages matching
            this topic will be replicated to the standby site.
          type: string
        replicationMode:
          description: |
            The replication mode for the Replicated Topic. The default value is `"async"`. The allowed values and their meaning are:

            <pre>
            "sync" - Messages are acknowledged when replicated (spooled remotely).
            "async" - Messages are acknowledged when pending replication (spooled locally).
            </pre>
          enum:
          - sync
          - async
          type: string
      type: object
    MsgVpnReplicatedTopicLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Replicated Topic object.
          type: string
      type: object
    MsgVpnReplicatedTopicResponse:
      example:
        data:
          replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        links:
          $ref: '#/components/schemas/MsgVpnReplicatedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnReplicatedTopicsResponse:
      example:
        data:
        - replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        - replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopic'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopicLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnResponse:
      example:
        data:
          serviceMqttMaxConnectionCount: 6
          authorizationProfileName: authorizationProfileName
          replicationBridgeAuthenticationClientCertPassword: replicationBridgeAuthenticationClientCertPassword
          replicationBridgeEgressFlowWindowSize: 6
          restTlsServerCertMaxChainDepth: 4
          serviceRestIncomingPlainTextEnabled: true
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          bridgingTlsServerCertValidateDateEnabled: true
          authorizationType: ldap
          replicationAckPropagationIntervalMsgCount: 1
          bridgingTlsServerCertMaxChainDepth: 6
          replicationBridgeCompressedDataEnabled: true
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          restTlsServerCertValidateDateEnabled: true
          eventTransactedSessionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 1
          authenticationClientCertUsernameSource: certificate-thumbprint
          replicationBridgeAuthenticationClientCertContent: replicationBridgeAuthenticationClientCertContent
          eventSubscriptionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceMqttPlainTextListenPort: 8
          authenticationClientCertMaxChainDepth: 0
          serviceMqttWebSocketEnabled: true
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceRestIncomingAuthorizationHeaderHandling: drop
          authenticationClientCertEnabled: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          eventPublishTopicFormatSmfEnabled: true
          authenticationBasicProfileName: authenticationBasicProfileName
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          serviceRestIncomingMaxConnectionCount: 6
          sempOverMsgBusEnabled: true
          maxTransactionCount: 1
          serviceAmqpTlsListenPort: 9
          serviceMqttTlsListenPort: 9
          eventServiceAmqpConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceRestMode: gateway
          serviceRestIncomingTlsEnabled: true
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          maxSubscriptionCount: 4
          authenticationOauthEnabled: true
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 5
          serviceAmqpMaxConnectionCount: 5
          maxEgressFlowCount: 7
          serviceMqttWebSocketListenPort: 3
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 9
          serviceWebTlsEnabled: true
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          eventIngressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          eventPublishSubscriptionMode: "off"
          serviceMqttTlsEnabled: true
          eventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 5
          serviceRestIncomingTlsListenPort: 2
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventPublishMsgVpnEnabled: true
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          dmrEnabled: true
          msgVpnName: msgVpnName
          eventEndpointCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          sempOverMsgBusAdminEnabled: true
          eventEgressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventServiceRestIncomingConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfMaxConnectionCount: 6
          jndiEnabled: true
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          eventPublishClientEnabled: true
          replicationQueueMaxMsgSpoolUsage: 1
          eventServiceMqttConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          sempOverMsgBusAdminClientEnabled: true
          tlsAllowDowngradeToPlainTextEnabled: true
          maxConnectionCount: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          eventServiceSmfConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceAmqpPlainTextListenPort: 9
          authenticationClientCertValidateDateEnabled: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          replicationEnabledQueueBehavior: fail-on-existing-queue
          replicationBridgeRetryDelay: 7
          eventLogTag: eventLogTag
          distributedCacheManagementEnabled: true
          alias: alias
          serviceMqttTlsWebSocketListenPort: 6
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          bridgingTlsServerCertValidateNameEnabled: true
          replicationBridgeAuthenticationBasicPassword: replicationBridgeAuthenticationBasicPassword
          maxIngressFlowCount: 3
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 7
          mqttRetainMaxMemory: 1
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          maxMsgSpoolUsage: 2
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
          eventIngressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          authenticationOauthProvidersUri: authenticationOauthProvidersUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          sequencedTopicsUri: sequencedTopicsUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpn'
        links:
          $ref: '#/components/schemas/MsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPoint:
      example:
        service: service
        vendor: vendor
        clientProfileName: clientProfileName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        enabled: true
      properties:
        clientProfileName:
          description: The Client Profile of the REST Delivery Point. It must exist
            in the local Message VPN. Its TCP parameters are used for all REST Consumers
            in this RDP. Its queue properties are used by the RDP client. The Client
            Profile is used inside the auto-generated Client Username for this RDP.
            The default value is `"default"`.
          type: string
        enabled:
          description: Enable or disable the REST Delivery Point. When disabled, no
            connections are initiated or messages delivered to any of the contained
            REST Consumers. The default value is `false`.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point.
          type: string
        service:
          description: The name of the service that this REST Delivery Point connects
            to. Internally the broker does not use this value; it is informational
            only. The default value is `""`. Available since 2.19.
          type: string
        vendor:
          description: The name of the vendor that this REST Delivery Point connects
            to. Internally the broker does not use this value; it is informational
            only. The default value is `""`. Available since 2.19.
          type: string
      type: object
    MsgVpnRestDeliveryPointLinks:
      example:
        restConsumersUri: restConsumersUri
        queueBindingsUri: queueBindingsUri
        uri: uri
      properties:
        queueBindingsUri:
          description: The URI of this REST Delivery Point's collection of Queue Binding
            objects.
          type: string
        restConsumersUri:
          description: The URI of this REST Delivery Point's collection of REST Consumer
            objects.
          type: string
        uri:
          description: The URI of this REST Delivery Point object.
          type: string
      type: object
    MsgVpnRestDeliveryPointQueueBinding:
      example:
        gatewayReplaceTargetAuthorityEnabled: true
        queueBindingName: queueBindingName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        postRequestTarget: postRequestTarget
      properties:
        gatewayReplaceTargetAuthorityEnabled:
          description: Enable or disable whether the authority for the request-target
            is replaced with that configured for the REST Consumer remote. When enabled,
            the broker sends HTTP requests in absolute-form, with the request-target's
            authority taken from the REST Consumer's remote host and port configuration.
            When disabled, the broker sends HTTP requests whose request-target matches
            that of the original request message, including whether to use absolute-form
            or origin-form. This configuration is applicable only when the Message
            VPN is in REST gateway mode. The default value is `false`. Available since
            2.6.
          type: boolean
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        postRequestTarget:
          description: The request-target string to use when sending requests. It
            identifies the target resource on the far-end REST Consumer upon which
            to apply the request. There are generally two common forms for the request-target.
            The origin-form is most often used in practice and contains the path and
            query components of the target URI. If the path component is empty then
            the client must generally send a "/" as the path. When making a request
            to a proxy, most often the absolute-form is required. This configuration
            is only applicable when the Message VPN is in REST messaging mode. The
            default value is `""`.
          type: string
        queueBindingName:
          description: The name of a queue in the Message VPN.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point.
          type: string
      type: object
    MsgVpnRestDeliveryPointQueueBindingLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Queue Binding object.
          type: string
      type: object
    MsgVpnRestDeliveryPointQueueBindingResponse:
      example:
        data:
          gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          postRequestTarget: postRequestTarget
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointQueueBindingsResponse:
      example:
        data:
        - gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          postRequestTarget: postRequestTarget
        - gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          postRequestTarget: postRequestTarget
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointResponse:
      example:
        data:
          service: service
          vendor: vendor
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumer:
      example:
        authenticationOauthClientSecret: authenticationOauthClientSecret
        remoteHost: remoteHost
        httpMethod: post
        enabled: true
        localInterface: localInterface
        outgoingConnectionCount: 6
        retryDelay: 5
        tlsEnabled: true
        authenticationScheme: none
        authenticationClientCertContent: authenticationClientCertContent
        msgVpnName: msgVpnName
        authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
        authenticationOauthJwtSecretKey: authenticationOauthJwtSecretKey
        authenticationHttpBasicUsername: authenticationHttpBasicUsername
        authenticationHttpHeaderValue: authenticationHttpHeaderValue
        maxPostWaitTime: 0
        authenticationOauthClientId: authenticationOauthClientId
        restConsumerName: restConsumerName
        remotePort: 1
        authenticationClientCertPassword: authenticationClientCertPassword
        authenticationHttpHeaderName: authenticationHttpHeaderName
        authenticationHttpBasicPassword: authenticationHttpBasicPassword
        authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
        tlsCipherSuiteList: tlsCipherSuiteList
        authenticationOauthClientScope: authenticationOauthClientScope
        restDeliveryPointName: restDeliveryPointName
      properties:
        authenticationClientCertContent:
          description: The PEM formatted content for the client certificate that the
            REST Consumer will present to the REST host. It must consist of a private
            key and between one and three certificates comprising the certificate
            trust chain. This attribute is absent from a GET and not updated when
            absent in a PUT, subject to the exceptions in note 4. Changing this attribute
            requires an HTTPS connection. The default value is `""`. Available since
            2.9.
          type: string
          x-requires-https: true
        authenticationClientCertPassword:
          description: The password for the client certificate. This attribute is
            absent from a GET and not updated when absent in a PUT, subject to the
            exceptions in note 4. Changing this attribute requires an HTTPS connection.
            The default value is `""`. Available since 2.9.
          type: string
          x-requires-https: true
        authenticationHttpBasicPassword:
          description: The password for the username. This attribute is absent from
            a GET and not updated when absent in a PUT, subject to the exceptions
            in note 4. The default value is `""`.
          type: string
        authenticationHttpBasicUsername:
          description: The username that the REST Consumer will use to login to the
            REST host. Normally a username is only configured when basic authentication
            is selected for the REST Consumer. The default value is `""`.
          type: string
        authenticationHttpHeaderName:
          description: The authentication header name. The default value is `""`.
            Available since 2.15.
          type: string
        authenticationHttpHeaderValue:
          description: The authentication header value. This attribute is absent from
            a GET and not updated when absent in a PUT, subject to the exceptions
            in note 4. The default value is `""`. Available since 2.15.
          type: string
        authenticationOauthClientId:
          description: The OAuth client ID. The default value is `""`. Available since
            2.19.
          type: string
        authenticationOauthClientScope:
          description: The OAuth scope. The default value is `""`. Available since
            2.19.
          type: string
        authenticationOauthClientSecret:
          description: The OAuth client secret. This attribute is absent from a GET
            and not updated when absent in a PUT, subject to the exceptions in note
            4. The default value is `""`. Available since 2.19.
          type: string
        authenticationOauthClientTokenEndpoint:
          description: The OAuth token endpoint URL that the REST Consumer will use
            to request a token for login to the REST host. Must begin with "https".
            The default value is `""`. Available since 2.19.
          type: string
        authenticationOauthJwtSecretKey:
          description: The OAuth secret key used to sign the token request JWT. This
            attribute is absent from a GET and not updated when absent in a PUT, subject
            to the exceptions in note 4. The default value is `""`. Available since
            2.21.
          type: string
        authenticationOauthJwtTokenEndpoint:
          description: The OAuth token endpoint URL that the REST Consumer will use
            to request a token for login to the REST host. The default value is `""`.
            Available since 2.21.
          type: string
        authenticationScheme:
          description: |
            The authentication scheme used by the REST Consumer to login to the REST host. The default value is `"none"`. The allowed values and their meaning are:

            <pre>
            "none" - Login with no authentication. This may be useful for anonymous connections or when a REST Consumer does not require authentication.
            "http-basic" - Login with a username and optional password according to HTTP Basic authentication as per RFC2616.
            "client-certificate" - Login with a client TLS certificate as per RFC5246. Client certificate authentication is only available on TLS connections.
            "http-header" - Login with a specified HTTP header.
            "oauth-client" - Login with OAuth 2.0 client credentials.
            "oauth-jwt" - Login with OAuth (RFC 7523 JWT Profile).
            "transparent" - Login using the Authorization header from the message properties, if present. Transparent authentication passes along existing Authorization header metadata instead of discarding it. Note that if the message is coming from a REST producer, the REST service must be configured to forward the Authorization header.
            </pre>
          enum:
          - none
          - http-basic
          - client-certificate
          - http-header
          - oauth-client
          - oauth-jwt
          - transparent
          type: string
        enabled:
          description: Enable or disable the REST Consumer. When disabled, no connections
            are initiated or messages delivered to this particular REST Consumer.
            The default value is `false`.
          type: boolean
        httpMethod:
          description: |-
            The HTTP method to use (POST or PUT). This is used only when operating in the REST service "messaging" mode and is ignored in "gateway" mode. The default value is `"post"`. The allowed values and their meaning are:

            <pre>
            "post" - Use the POST HTTP method.
            "put" - Use the PUT HTTP method.
            </pre>
             Available since 2.17.
          enum:
          - post
          - put
          type: string
        localInterface:
          description: The interface that will be used for all outgoing connections
            associated with the REST Consumer. When unspecified, an interface is automatically
            chosen. The default value is `""`.
          type: string
        maxPostWaitTime:
          description: The maximum amount of time (in seconds) to wait for an HTTP
            POST response from the REST Consumer. Once this time is exceeded, the
            TCP connection is reset. The default value is `30`.
          format: int32
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        outgoingConnectionCount:
          description: The number of concurrent TCP connections open to the REST Consumer.
            The default value is `3`.
          format: int32
          type: integer
        remoteHost:
          description: The IP address or DNS name to which the broker is to connect
            to deliver messages for the REST Consumer. A host value must be configured
            for the REST Consumer to be operationally up. The default value is `""`.
          type: string
        remotePort:
          description: The port associated with the host of the REST Consumer. The
            default value is `8080`.
          format: int64
          type: integer
        restConsumerName:
          description: The name of the REST Consumer.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point.
          type: string
        retryDelay:
          description: The number of seconds that must pass before retrying the remote
            REST Consumer connection. The default value is `3`.
          format: int32
          type: integer
        tlsCipherSuiteList:
          description: The colon-separated list of cipher suites the REST Consumer
            uses in its encrypted connection. The value `"default"` implies all supported
            suites ordered from most secure to least secure. The list of default cipher
            suites is available in the `tlsCipherSuiteMsgBackboneDefaultList` attribute
            of the Broker object in the Monitoring API. The REST Consumer should choose
            the first suite from this list that it supports. The default value is
            `"default"`.
          type: string
        tlsEnabled:
          description: Enable or disable encryption (TLS) for the REST Consumer. The
            default value is `false`.
          type: boolean
      type: object
    MsgVpnRestDeliveryPointRestConsumerLinks:
      example:
        oauthJwtClaimsUri: oauthJwtClaimsUri
        uri: uri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        oauthJwtClaimsUri:
          description: The URI of this REST Consumer's collection of Claim objects.
            Available since 2.21.
          type: string
        tlsTrustedCommonNamesUri:
          description: The URI of this REST Consumer's collection of Trusted Common
            Name objects. Deprecated since (will be deprecated in next SEMP version).
            Common Name validation has been replaced by Server Certificate Name validation.
          type: string
        uri:
          description: The URI of this REST Consumer object.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim:
      example:
        oauthJwtClaimValue: oauthJwtClaimValue
        oauthJwtClaimName: oauthJwtClaimName
        restConsumerName: restConsumerName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        oauthJwtClaimName:
          description: The name of the additional claim. Cannot be "exp", "iat", or
            "jti".
          type: string
        oauthJwtClaimValue:
          description: The value of the additional claim.
          type: string
        restConsumerName:
          description: The name of the REST Consumer.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Claim object.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse:
      example:
        data:
          oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse:
      example:
        data:
        - oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        - oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumerResponse:
      example:
        data:
          authenticationOauthClientSecret: authenticationOauthClientSecret
          remoteHost: remoteHost
          httpMethod: post
          enabled: true
          localInterface: localInterface
          outgoingConnectionCount: 6
          retryDelay: 5
          tlsEnabled: true
          authenticationScheme: none
          authenticationClientCertContent: authenticationClientCertContent
          msgVpnName: msgVpnName
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthJwtSecretKey: authenticationOauthJwtSecretKey
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          authenticationHttpHeaderValue: authenticationHttpHeaderValue
          maxPostWaitTime: 0
          authenticationOauthClientId: authenticationOauthClientId
          restConsumerName: restConsumerName
          remotePort: 1
          authenticationClientCertPassword: authenticationClientCertPassword
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationHttpBasicPassword: authenticationHttpBasicPassword
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName:
      example:
        restConsumerName: restConsumerName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        tlsTrustedCommonName: tlsTrustedCommonName
      properties:
        msgVpnName:
          description: The name of the Message VPN. Deprecated since (will be deprecated
            in next SEMP version). Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
        restConsumerName:
          description: The name of the REST Consumer. Deprecated since (will be deprecated
            in next SEMP version). Common Name validation has been replaced by Server
            Certificate Name validation.
          type: string
        restDeliveryPointName:
          description: The name of the REST Delivery Point. Deprecated since (will
            be deprecated in next SEMP version). Common Name validation has been replaced
            by Server Certificate Name validation.
          type: string
        tlsTrustedCommonName:
          description: The expected trusted common name of the remote certificate.
            Deprecated since (will be deprecated in next SEMP version). Common Name
            validation has been replaced by Server Certificate Name validation.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Trusted Common Name object.
          type: string
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse:
      example:
        data:
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse:
      example:
        data:
        - restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        - restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointRestConsumersResponse:
      example:
        data:
        - authenticationOauthClientSecret: authenticationOauthClientSecret
          remoteHost: remoteHost
          httpMethod: post
          enabled: true
          localInterface: localInterface
          outgoingConnectionCount: 6
          retryDelay: 5
          tlsEnabled: true
          authenticationScheme: none
          authenticationClientCertContent: authenticationClientCertContent
          msgVpnName: msgVpnName
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthJwtSecretKey: authenticationOauthJwtSecretKey
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          authenticationHttpHeaderValue: authenticationHttpHeaderValue
          maxPostWaitTime: 0
          authenticationOauthClientId: authenticationOauthClientId
          restConsumerName: restConsumerName
          remotePort: 1
          authenticationClientCertPassword: authenticationClientCertPassword
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationHttpBasicPassword: authenticationHttpBasicPassword
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
        - authenticationOauthClientSecret: authenticationOauthClientSecret
          remoteHost: remoteHost
          httpMethod: post
          enabled: true
          localInterface: localInterface
          outgoingConnectionCount: 6
          retryDelay: 5
          tlsEnabled: true
          authenticationScheme: none
          authenticationClientCertContent: authenticationClientCertContent
          msgVpnName: msgVpnName
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthJwtSecretKey: authenticationOauthJwtSecretKey
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          authenticationHttpHeaderValue: authenticationHttpHeaderValue
          maxPostWaitTime: 0
          authenticationOauthClientId: authenticationOauthClientId
          restConsumerName: restConsumerName
          remotePort: 1
          authenticationClientCertPassword: authenticationClientCertPassword
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationHttpBasicPassword: authenticationHttpBasicPassword
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnRestDeliveryPointsResponse:
      example:
        data:
        - service: service
          vendor: vendor
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          enabled: true
        - service: service
          vendor: vendor
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
        - restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnSequencedTopic:
      example:
        sequencedTopic: sequencedTopic
        msgVpnName: msgVpnName
      properties:
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        sequencedTopic:
          description: Topic for applying sequence numbers.
          type: string
      type: object
    MsgVpnSequencedTopicLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Sequenced Topic object.
          type: string
      type: object
    MsgVpnSequencedTopicResponse:
      example:
        data:
          sequencedTopic: sequencedTopic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnSequencedTopic'
        links:
          $ref: '#/components/schemas/MsgVpnSequencedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnSequencedTopicsResponse:
      example:
        data:
        - sequencedTopic: sequencedTopic
          msgVpnName: msgVpnName
        - sequencedTopic: sequencedTopic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnSequencedTopic'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnSequencedTopicLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpoint:
      example:
        redeliveryEnabled: true
        rejectLowPriorityMsgLimit: 7
        eventSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        deliveryCountEnabled: true
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        respectMsgPriorityEnabled: true
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
        maxBindCount: 0
        owner: owner
        topicEndpointName: topicEndpointName
        maxSpoolUsage: 5
        egressEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        maxRedeliveryCount: 5
        ingressEnabled: true
        eventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
      properties:
        accessType:
          description: |-
            The access type for delivering messages to consumer flows bound to the Topic Endpoint. The default value is `"exclusive"`. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
             Available since 2.4.
          enum:
          - exclusive
          - non-exclusive
          type: string
        consumerAckPropagationEnabled:
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`.
          type: boolean
        deadMsgQueue:
          description: The name of the Dead Message Queue (DMQ) used by the Topic
            Endpoint. The default value is `"#DEAD_MSG_QUEUE"`. Available since 2.2.
          type: string
        deliveryCountEnabled:
          description: Enable or disable the ability for client applications to query
            the message delivery count of messages received from the Topic Endpoint.
            This is a controlled availability feature. Please contact Solace to find
            out if this feature is supported for your use case. The default value
            is `false`. Available since 2.19.
          type: boolean
        egressEnabled:
          description: Enable or disable the transmission of messages from the Topic
            Endpoint. The default value is `false`.
          type: boolean
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        ingressEnabled:
          description: Enable or disable the reception of messages to the Topic Endpoint.
            The default value is `false`.
          type: boolean
        maxBindCount:
          description: The maximum number of consumer flows that can bind to the Topic
            Endpoint. The default value is `1`. Available since 2.4.
          format: int64
          type: integer
        maxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Topic Endpoint. The default value is `10000`.
          format: int64
          type: integer
        maxMsgSize:
          description: The maximum message size allowed in the Topic Endpoint, in
            bytes (B). The default value is `10000000`.
          format: int32
          type: integer
        maxRedeliveryCount:
          description: The maximum number of times the Topic Endpoint will attempt
            redelivery of a message prior to it being discarded or moved to the DMQ.
            A value of 0 means to retry forever. The default value is `0`.
          format: int64
          type: integer
        maxSpoolUsage:
          description: The maximum message spool usage allowed by the Topic Endpoint,
            in megabytes (MB). A value of 0 only allows spooling of the last message
            received and disables quota checking. The default value is `5000`.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time in seconds a message can stay in the Topic
            Endpoint when `respectTtlEnabled` is `"true"`. A message expires when
            the lesser of the sender assigned time-to-live (TTL) in the message and
            the `maxTtl` configured for the Topic Endpoint, is exceeded. A value of
            0 disables expiry. The default value is `0`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        owner:
          description: The Client Username that owns the Topic Endpoint and has permission
            equivalent to `"delete"`. The default value is `""`.
          type: string
        permission:
          description: |
            The permission level for all consumers of the Topic Endpoint, excluding the owner. The default value is `"no-access"`. The allowed values and their meaning are:

            <pre>
            "no-access" - Disallows all access.
            "read-only" - Read-only access to the messages.
            "consume" - Consume (read and remove) messages.
            "modify-topic" - Consume messages or modify the topic/selector.
            "delete" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.
            </pre>
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
          type: string
        redeliveryEnabled:
          description: Enable or disable message redelivery. When enabled, the number
            of redelivery attempts is controlled by maxRedeliveryCount. When disabled,
            the message will never be delivered from the topic-endpoint more than
            once. The default value is `true`. Available since 2.18.
          type: boolean
        rejectLowPriorityMsgEnabled:
          description: Enable or disable the checking of low priority messages against
            the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`.
          type: boolean
        rejectLowPriorityMsgLimit:
          description: The number of messages of any priority in the Topic Endpoint
            above which low priority messages are not admitted but higher priority
            messages are allowed. The default value is `0`.
          format: int64
          type: integer
        rejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"never"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-topic-endpoint-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Topic Endpoint is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-topic-endpoint-enabled
          - never
          type: string
        respectMsgPriorityEnabled:
          description: Enable or disable the respecting of message priority. When
            enabled, messages contained in the Topic Endpoint are delivered in priority
            order, from 9 (highest) to 0 (lowest). The default value is `false`. Available
            since 2.8.
          type: boolean
        respectTtlEnabled:
          description: Enable or disable the respecting of the time-to-live (TTL)
            for messages in the Topic Endpoint. When enabled, expired messages are
            discarded or moved to the DMQ. The default value is `false`.
          type: boolean
        topicEndpointName:
          description: The name of the Topic Endpoint.
          type: string
      type: object
    MsgVpnTopicEndpointLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic Endpoint object.
          type: string
      type: object
    MsgVpnTopicEndpointResponse:
      example:
        data:
          redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          eventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          topicEndpointName: topicEndpointName
          maxSpoolUsage: 5
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointTemplate:
      example:
        maxBindCount: 0
        eventMsgSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        topicEndpointTemplateName: topicEndpointTemplateName
        redeliveryEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        rejectLowPriorityMsgLimit: 7
        maxRedeliveryCount: 5
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        respectMsgPriorityEnabled: true
        eventRejectLowPriorityMsgLimitThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        topicEndpointNameFilter: topicEndpointNameFilter
        maxMsgSpoolUsage: 5
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
      properties:
        accessType:
          description: |
            The access type for delivering messages to consumer flows. The default value is `"exclusive"`. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
          type: string
        consumerAckPropagationEnabled:
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`.
          type: boolean
        deadMsgQueue:
          description: The name of the Dead Message Queue (DMQ). The default value
            is `"#DEAD_MSG_QUEUE"`.
          type: string
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxBindCount:
          description: The maximum number of consumer flows that can bind. The default
            value is `1`.
          format: int64
          type: integer
        maxDeliveredUnackedMsgsPerFlow:
          description: The maximum number of messages delivered but not acknowledged
            per flow. The default value is `10000`.
          format: int64
          type: integer
        maxMsgSize:
          description: The maximum message size allowed, in bytes (B). The default
            value is `10000000`.
          format: int32
          type: integer
        maxMsgSpoolUsage:
          description: The maximum message spool usage allowed, in megabytes (MB).
            A value of 0 only allows spooling of the last message received and disables
            quota checking. The default value is `5000`.
          format: int64
          type: integer
        maxRedeliveryCount:
          description: The maximum number of message redelivery attempts that will
            occur prior to the message being discarded or moved to the DMQ. A value
            of 0 means to retry forever. The default value is `0`.
          format: int64
          type: integer
        maxTtl:
          description: The maximum time in seconds a message can stay in the Topic
            Endpoint when `respectTtlEnabled` is `"true"`. A message expires when
            the lesser of the sender assigned time-to-live (TTL) in the message and
            the `maxTtl` configured for the Topic Endpoint, is exceeded. A value of
            0 disables expiry. The default value is `0`.
          format: int64
          type: integer
        msgVpnName:
          description: The name of the Message VPN.
          type: string
        permission:
          description: |
            The permission level for all consumers, excluding the owner. The default value is `"no-access"`. The allowed values and their meaning are:

            <pre>
            "no-access" - Disallows all access.
            "read-only" - Read-only access to the messages.
            "consume" - Consume (read and remove) messages.
            "modify-topic" - Consume messages or modify the topic/selector.
            "delete" - Consume messages, modify the topic/selector or delete the Client created endpoint altogether.
            </pre>
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
          type: string
        redeliveryEnabled:
          description: Enable or disable message redelivery. When enabled, the number
            of redelivery attempts is controlled by maxRedeliveryCount. When disabled,
            the message will never be delivered from the topic-endpoint more than
            once. The default value is `true`. Available since 2.18.
          type: boolean
        rejectLowPriorityMsgEnabled:
          description: Enable or disable the checking of low priority messages against
            the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`.
          type: boolean
        rejectLowPriorityMsgLimit:
          description: The number of messages that are permitted before low priority
            messages are rejected. The default value is `0`.
          format: int64
          type: integer
        rejectMsgToSenderOnDiscardBehavior:
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"never"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-topic-endpoint-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Topic Endpoint is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-topic-endpoint-enabled
          - never
          type: string
        respectMsgPriorityEnabled:
          description: Enable or disable the respecting of message priority. When
            enabled, messages are delivered in priority order, from 9 (highest) to
            0 (lowest). The default value is `false`.
          type: boolean
        respectTtlEnabled:
          description: Enable or disable the respecting of the time-to-live (TTL)
            for messages. When enabled, expired messages are discarded or moved to
            the DMQ. The default value is `false`.
          type: boolean
        topicEndpointNameFilter:
          description: 'A wildcardable pattern used to determine which Topic Endpoints
            use settings from this Template. Two different wildcards are supported:
            * and >. Similar to topic filters or subscription patterns, a > matches
            anything (but only when used at the end), and a * matches zero or more
            characters but never a slash (/). A > is only a wildcard when used at
            the end, after a /. A * is only allowed at the end, after a slash (/).
            The default value is `""`.'
          type: string
        topicEndpointTemplateName:
          description: The name of the Topic Endpoint Template.
          type: string
      type: object
    MsgVpnTopicEndpointTemplateLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Topic Endpoint Template object.
          type: string
      type: object
    MsgVpnTopicEndpointTemplateResponse:
      example:
        data:
          maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointTemplatesResponse:
      example:
        data:
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnTopicEndpointsResponse:
      example:
        data:
        - redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          eventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          topicEndpointName: topicEndpointName
          maxSpoolUsage: 5
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        - redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          eventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          topicEndpointName: topicEndpointName
          maxSpoolUsage: 5
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          eventRejectLowPriorityMsgLimitThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpoint'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    MsgVpnsResponse:
      example:
        data:
        - serviceMqttMaxConnectionCount: 6
          authorizationProfileName: authorizationProfileName
          replicationBridgeAuthenticationClientCertPassword: replicationBridgeAuthenticationClientCertPassword
          replicationBridgeEgressFlowWindowSize: 6
          restTlsServerCertMaxChainDepth: 4
          serviceRestIncomingPlainTextEnabled: true
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          bridgingTlsServerCertValidateDateEnabled: true
          authorizationType: ldap
          replicationAckPropagationIntervalMsgCount: 1
          bridgingTlsServerCertMaxChainDepth: 6
          replicationBridgeCompressedDataEnabled: true
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          restTlsServerCertValidateDateEnabled: true
          eventTransactedSessionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 1
          authenticationClientCertUsernameSource: certificate-thumbprint
          replicationBridgeAuthenticationClientCertContent: replicationBridgeAuthenticationClientCertContent
          eventSubscriptionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceMqttPlainTextListenPort: 8
          authenticationClientCertMaxChainDepth: 0
          serviceMqttWebSocketEnabled: true
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceRestIncomingAuthorizationHeaderHandling: drop
          authenticationClientCertEnabled: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          eventPublishTopicFormatSmfEnabled: true
          authenticationBasicProfileName: authenticationBasicProfileName
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          serviceRestIncomingMaxConnectionCount: 6
          sempOverMsgBusEnabled: true
          maxTransactionCount: 1
          serviceAmqpTlsListenPort: 9
          serviceMqttTlsListenPort: 9
          eventServiceAmqpConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceRestMode: gateway
          serviceRestIncomingTlsEnabled: true
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          maxSubscriptionCount: 4
          authenticationOauthEnabled: true
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 5
          serviceAmqpMaxConnectionCount: 5
          maxEgressFlowCount: 7
          serviceMqttWebSocketListenPort: 3
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 9
          serviceWebTlsEnabled: true
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          eventIngressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          eventPublishSubscriptionMode: "off"
          serviceMqttTlsEnabled: true
          eventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 5
          serviceRestIncomingTlsListenPort: 2
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventPublishMsgVpnEnabled: true
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          dmrEnabled: true
          msgVpnName: msgVpnName
          eventEndpointCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          sempOverMsgBusAdminEnabled: true
          eventEgressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventServiceRestIncomingConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfMaxConnectionCount: 6
          jndiEnabled: true
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          eventPublishClientEnabled: true
          replicationQueueMaxMsgSpoolUsage: 1
          eventServiceMqttConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          sempOverMsgBusAdminClientEnabled: true
          tlsAllowDowngradeToPlainTextEnabled: true
          maxConnectionCount: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          eventServiceSmfConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceAmqpPlainTextListenPort: 9
          authenticationClientCertValidateDateEnabled: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          replicationEnabledQueueBehavior: fail-on-existing-queue
          replicationBridgeRetryDelay: 7
          eventLogTag: eventLogTag
          distributedCacheManagementEnabled: true
          alias: alias
          serviceMqttTlsWebSocketListenPort: 6
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          bridgingTlsServerCertValidateNameEnabled: true
          replicationBridgeAuthenticationBasicPassword: replicationBridgeAuthenticationBasicPassword
          maxIngressFlowCount: 3
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 7
          mqttRetainMaxMemory: 1
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          maxMsgSpoolUsage: 2
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
          eventIngressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        - serviceMqttMaxConnectionCount: 6
          authorizationProfileName: authorizationProfileName
          replicationBridgeAuthenticationClientCertPassword: replicationBridgeAuthenticationClientCertPassword
          replicationBridgeEgressFlowWindowSize: 6
          restTlsServerCertMaxChainDepth: 4
          serviceRestIncomingPlainTextEnabled: true
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          bridgingTlsServerCertValidateDateEnabled: true
          authorizationType: ldap
          replicationAckPropagationIntervalMsgCount: 1
          bridgingTlsServerCertMaxChainDepth: 6
          replicationBridgeCompressedDataEnabled: true
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          restTlsServerCertValidateDateEnabled: true
          eventTransactedSessionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 1
          authenticationClientCertUsernameSource: certificate-thumbprint
          replicationBridgeAuthenticationClientCertContent: replicationBridgeAuthenticationClientCertContent
          eventSubscriptionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceMqttPlainTextListenPort: 8
          authenticationClientCertMaxChainDepth: 0
          serviceMqttWebSocketEnabled: true
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceRestIncomingAuthorizationHeaderHandling: drop
          authenticationClientCertEnabled: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          eventPublishTopicFormatSmfEnabled: true
          authenticationBasicProfileName: authenticationBasicProfileName
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          serviceRestIncomingMaxConnectionCount: 6
          sempOverMsgBusEnabled: true
          maxTransactionCount: 1
          serviceAmqpTlsListenPort: 9
          serviceMqttTlsListenPort: 9
          eventServiceAmqpConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceRestMode: gateway
          serviceRestIncomingTlsEnabled: true
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          maxSubscriptionCount: 4
          authenticationOauthEnabled: true
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 5
          serviceAmqpMaxConnectionCount: 5
          maxEgressFlowCount: 7
          serviceMqttWebSocketListenPort: 3
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 9
          serviceWebTlsEnabled: true
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          eventIngressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          eventPublishSubscriptionMode: "off"
          serviceMqttTlsEnabled: true
          eventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 5
          serviceRestIncomingTlsListenPort: 2
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventPublishMsgVpnEnabled: true
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          dmrEnabled: true
          msgVpnName: msgVpnName
          eventEndpointCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          sempOverMsgBusAdminEnabled: true
          eventEgressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventServiceRestIncomingConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          eventMsgSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfMaxConnectionCount: 6
          jndiEnabled: true
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          eventPublishClientEnabled: true
          replicationQueueMaxMsgSpoolUsage: 1
          eventServiceMqttConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          sempOverMsgBusAdminClientEnabled: true
          tlsAllowDowngradeToPlainTextEnabled: true
          maxConnectionCount: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          eventServiceSmfConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceAmqpPlainTextListenPort: 9
          authenticationClientCertValidateDateEnabled: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          replicationEnabledQueueBehavior: fail-on-existing-queue
          replicationBridgeRetryDelay: 7
          eventLogTag: eventLogTag
          distributedCacheManagementEnabled: true
          alias: alias
          serviceMqttTlsWebSocketListenPort: 6
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          bridgingTlsServerCertValidateNameEnabled: true
          replicationBridgeAuthenticationBasicPassword: replicationBridgeAuthenticationBasicPassword
          maxIngressFlowCount: 3
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 7
          mqttRetainMaxMemory: 1
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          maxMsgSpoolUsage: 2
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
          eventIngressFlowCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - authenticationOauthProvidersUri: authenticationOauthProvidersUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          sequencedTopicsUri: sequencedTopicsUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
        - authenticationOauthProvidersUri: authenticationOauthProvidersUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          sequencedTopicsUri: sequencedTopicsUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
      properties:
        data:
          items:
            $ref: '#/components/schemas/MsgVpn'
          type: array
        links:
          items:
            $ref: '#/components/schemas/MsgVpnLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    SempError:
      example:
        code: 3
        description: description
        status: status
      properties:
        code:
          description: The error code which uniquely identifies the error that has
            occurred.
          format: int32
          type: integer
        description:
          description: The verbose description of the problem.
          type: string
        status:
          description: The terse status string associated with `code`.
          type: string
      required:
      - code
      - description
      - status
      type: object
    SempMeta:
      example:
        request:
          method: method
          uri: uri
        count: 6
        paging:
          nextPageUri: nextPageUri
          cursorQuery: cursorQuery
        error:
          code: 3
          description: description
          status: status
        responseCode: 6
      properties:
        count:
          description: The total number of objects requested, irrespective of page
            size. This may be a count of all objects in a collection or a filtered
            subset. It represents a snapshot in time and may change when paging through
            results.
          format: int64
          type: integer
        error:
          $ref: '#/components/schemas/SempError'
        paging:
          $ref: '#/components/schemas/SempPaging'
        request:
          $ref: '#/components/schemas/SempRequest'
        responseCode:
          description: The HTTP response code, one of 200 (success), 4xx (client error),
            or 5xx (server error).
          format: int32
          type: integer
      required:
      - request
      - responseCode
      type: object
    SempMetaOnlyResponse:
      example:
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
      properties:
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    SempPaging:
      example:
        nextPageUri: nextPageUri
        cursorQuery: cursorQuery
      properties:
        cursorQuery:
          description: The cursor, or position, for the next page of objects. Use
            this as the `cursor` query parameter of the next request.
          type: string
        nextPageUri:
          description: The URI of the next page of objects. `cursorQuery` is already
            embedded within this URI.
          type: string
      required:
      - cursorQuery
      - nextPageUri
      type: object
    SempRequest:
      example:
        method: method
        uri: uri
      properties:
        method:
          description: The HTTP method of the request which resulted in this response.
          type: string
        uri:
          description: The URI of the request which resulted in this response.
          type: string
      required:
      - method
      - uri
      type: object
    SystemInformation:
      example:
        sempVersion: sempVersion
        platform: platform
      properties:
        platform:
          description: The platform running the SEMP API. Deprecated since 2.2. /systemInformation
            was replaced by /about/api.
          type: string
        sempVersion:
          description: The version of the SEMP API. Deprecated since 2.2. /systemInformation
            was replaced by /about/api.
          type: string
      type: object
    SystemInformationLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this System Information object.
          type: string
      type: object
    SystemInformationResponse:
      example:
        data:
          sempVersion: sempVersion
          platform: platform
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/SystemInformation'
        links:
          $ref: '#/components/schemas/SystemInformationLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    VirtualHostname:
      example:
        virtualHostname: virtualHostname
        msgVpnName: msgVpnName
        enabled: true
      properties:
        enabled:
          description: Enable or disable Virtual Hostname to Message VPN mapping.
            The default value is `false`.
          type: boolean
        msgVpnName:
          description: The message VPN to which this virtual hostname is mapped. The
            default value is `""`.
          type: string
        virtualHostname:
          description: The virtual hostname.
          type: string
      type: object
    VirtualHostnameLinks:
      example:
        uri: uri
      properties:
        uri:
          description: The URI of this Virtual Hostname object.
          type: string
      type: object
    VirtualHostnameResponse:
      example:
        data:
          virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
      properties:
        data:
          $ref: '#/components/schemas/VirtualHostname'
        links:
          $ref: '#/components/schemas/VirtualHostnameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
    VirtualHostnamesResponse:
      example:
        data:
        - virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        - virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
      properties:
        data:
          items:
            $ref: '#/components/schemas/VirtualHostname'
          type: array
        links:
          items:
            $ref: '#/components/schemas/VirtualHostnameLinks'
          type: array
        meta:
          $ref: '#/components/schemas/SempMeta'
      required:
      - meta
      type: object
  securitySchemes:
    basicAuth:
      description: basic authentication
      scheme: basic
      type: http
x-original-swagger-version: "2.0"
