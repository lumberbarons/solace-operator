openapi: 3.0.1
info:
  title: SEMP (Solace Element Management Protocol)
  description: "SEMP (starting in `v2`, see note 1) is a RESTful API for configuring,\
    \ monitoring, and administering a Solace PubSub+ broker.\n\nSEMP uses URIs to\
    \ address manageable **resources** of the Solace PubSub+ broker. Resources are\
    \ individual **objects**, **collections** of objects, or (exclusively in the action\
    \ API) **actions**. This document applies to the following API:\n\n\nAPI|Base\
    \ Path|Purpose|Comments\n:---|:---|:---|:---\nConfiguration|/SEMP/v2/config|Reading\
    \ and writing config state|See note 2\n\n\n\nThe following APIs are also available:\n\
    \n\nAPI|Base Path|Purpose|Comments\n:---|:---|:---|:---\nAction|/SEMP/v2/action|Performing\
    \ actions|See note 2\nMonitoring|/SEMP/v2/monitor|Querying operational parameters|See\
    \ note 2\n\n\n\nResources are always nouns, with individual objects being singular\
    \ and collections being plural.\n\nObjects within a collection are identified\
    \ by an `obj-id`, which follows the collection name with the form `collection-name/obj-id`.\n\
    \nActions within an object are identified by an `action-id`, which follows the\
    \ object name with the form `obj-id/action-id`.\n\nSome examples:\n\n```\n/SEMP/v2/config/msgVpns\
    \                        ; MsgVpn collection\n/SEMP/v2/config/msgVpns/a      \
    \                ; MsgVpn object named \"a\"\n/SEMP/v2/config/msgVpns/a/queues\
    \               ; Queue collection in MsgVpn \"a\"\n/SEMP/v2/config/msgVpns/a/queues/b\
    \             ; Queue object named \"b\" in MsgVpn \"a\"\n/SEMP/v2/action/msgVpns/a/queues/b/startReplay\
    \ ; Action that starts a replay on Queue \"b\" in MsgVpn \"a\"\n/SEMP/v2/monitor/msgVpns/a/clients\
    \             ; Client collection in MsgVpn \"a\"\n/SEMP/v2/monitor/msgVpns/a/clients/c\
    \           ; Client object named \"c\" in MsgVpn \"a\"\n```\n\n## Collection\
    \ Resources\n\nCollections are unordered lists of objects (unless described as\
    \ otherwise), and are described by JSON arrays. Each item in the array represents\
    \ an object in the same manner as the individual object would normally be represented.\
    \ In the configuration API, the creation of a new object is done through its collection\
    \ resource.\n\n## Object and Action Resources\n\nObjects are composed of attributes,\
    \ actions, collections, and other objects. They are described by JSON objects\
    \ as name/value pairs. The collections and actions of an object are not contained\
    \ directly in the object's JSON content; rather the content includes an attribute\
    \ containing a URI which points to the collections and actions. These contained\
    \ resources must be managed through this URI. At a minimum, every object has one\
    \ or more identifying attributes, and its own `uri` attribute which contains the\
    \ URI pointing to itself.\n\nActions are also composed of attributes, and are\
    \ described by JSON objects as name/value pairs. Unlike objects, however, they\
    \ are not members of a collection and cannot be retrieved, only performed. Actions\
    \ only exist in the action API.\n\nAttributes in an object or action may have\
    \ any combination of the following properties:\n\n\nProperty|Meaning|Comments\n\
    :---|:---|:---\nIdentifying|Attribute is involved in unique identification of\
    \ the object, and appears in its URI|\nRequired|Attribute must be provided in\
    \ the request|\nRead-Only|Attribute can only be read, not written.|See note 3\n\
    Write-Only|Attribute can only be written, not read, unless the attribute is also\
    \ opaque|See the documentation for the opaque property\nRequires-Disable|Attribute\
    \ can only be changed when object is disabled|\nDeprecated|Attribute is deprecated,\
    \ and will disappear in the next SEMP version|\nOpaque|Attribute can be set or\
    \ retrieved in opaque form when the `opaquePassword` query parameter is present|See\
    \ the `opaquePassword` query parameter documentation\n\n\n\nIn some requests,\
    \ certain attributes may only be provided in certain combinations with other attributes:\n\
    \n\nRelationship|Meaning\n:---|:---\nRequires|Attribute may only be changed by\
    \ a request if a particular attribute or combination of attributes is also provided\
    \ in the request\nConflicts|Attribute may only be provided in a request if a particular\
    \ attribute or combination of attributes is not also provided in the request\n\
    \n\n\nIn the monitoring API, any non-identifying attribute may not be returned\
    \ in a GET.\n\n## HTTP Methods\n\nThe following HTTP methods manipulate resources\
    \ in accordance with these general principles. Note that some methods are only\
    \ used in certain APIs:\n\n\nMethod|Resource|Meaning|Request Body|Response Body|Missing\
    \ Request Attributes\n:---|:---|:---|:---|:---|:---\nPOST|Collection|Create object|Initial\
    \ attribute values|Object attributes and metadata|Set to default\nPUT|Object|Create\
    \ or replace object (see note 5)|New attribute values|Object attributes and metadata|Set\
    \ to default, with certain exceptions (see note 4)\nPUT|Action|Performs action|Action\
    \ arguments|Action metadata|N/A\nPATCH|Object|Update object|New attribute values|Object\
    \ attributes and metadata|unchanged\nDELETE|Object|Delete object|Empty|Object\
    \ metadata|N/A\nGET|Object|Get object|Empty|Object attributes and metadata|N/A\n\
    GET|Collection|Get collection|Empty|Object attributes and collection metadata|N/A\n\
    \n\n\n## Common Query Parameters\n\nThe following are some common query parameters\
    \ that are supported by many method/URI combinations. Individual URIs may document\
    \ additional parameters. Note that multiple query parameters can be used together\
    \ in a single URI, separated by the ampersand character. For example:\n\n```\n\
    ; Request for the MsgVpns collection using two hypothetical query parameters\n\
    ; \"q1\" and \"q2\" with values \"val1\" and \"val2\" respectively\n/SEMP/v2/config/msgVpns?q1=val1&q2=val2\n\
    ```\n\n### select\n\nInclude in the response only selected attributes of the object,\
    \ or exclude from the response selected attributes of the object. Use this query\
    \ parameter to limit the size of the returned data for each returned object, return\
    \ only those fields that are desired, or exclude fields that are not desired.\n\
    \nThe value of `select` is a comma-separated list of attribute names. If the list\
    \ contains attribute names that are not prefaced by `-`, only those attributes\
    \ are included in the response. If the list contains attribute names that are\
    \ prefaced by `-`, those attributes are excluded from the response. If the list\
    \ contains both types, then the difference of the first set of attributes and\
    \ the second set of attributes is returned. If the list is empty (i.e. `select=`),\
    \ no attributes are returned.\n\nAll attributes that are prefaced by `-` must\
    \ follow all attributes that are not prefaced by `-`. In addition, each attribute\
    \ name in the list must match at least one attribute in the object.\n\nNames may\
    \ include the `*` wildcard (zero or more characters). Nested attribute names are\
    \ supported using periods (e.g. `parentName.childName`).\n\nSome examples:\n\n\
    ```\n; List of all MsgVpn names\n/SEMP/v2/config/msgVpns?select=msgVpnName\n;\
    \ List of all MsgVpn and their attributes except for their names\n/SEMP/v2/config/msgVpns?select=-msgVpnName\n\
    ; Authentication attributes of MsgVpn \"finance\"\n/SEMP/v2/config/msgVpns/finance?select=authentication*\n\
    ; All attributes of MsgVpn \"finance\" except for authentication attributes\n\
    /SEMP/v2/config/msgVpns/finance?select=-authentication*\n; Access related attributes\
    \ of Queue \"orderQ\" of MsgVpn \"finance\"\n/SEMP/v2/config/msgVpns/finance/queues/orderQ?select=owner,permission\n\
    ```\n\n### where\n\nInclude in the response only objects where certain conditions\
    \ are true. Use this query parameter to limit which objects are returned to those\
    \ whose attribute values meet the given conditions.\n\nThe value of `where` is\
    \ a comma-separated list of expressions. All expressions must be true for the\
    \ object to be included in the response. Each expression takes the form:\n\n```\n\
    expression  = attribute-name OP value\nOP          = '==' | '!=' | '&lt;' | '&gt;'\
    \ | '&lt;=' | '&gt;='\n```\n\n`value` may be a number, string, `true`, or `false`,\
    \ as appropriate for the type of `attribute-name`. Greater-than and less-than\
    \ comparisons only work for numbers. A `*` in a string `value` is interpreted\
    \ as a wildcard (zero or more characters). Some examples:\n\n```\n; Only enabled\
    \ MsgVpns\n/SEMP/v2/config/msgVpns?where=enabled==true\n; Only MsgVpns using basic\
    \ non-LDAP authentication\n/SEMP/v2/config/msgVpns?where=authenticationBasicEnabled==true,authenticationBasicType!=ldap\n\
    ; Only MsgVpns that allow more than 100 client connections\n/SEMP/v2/config/msgVpns?where=maxConnectionCount>100\n\
    ; Only MsgVpns with msgVpnName starting with \"B\":\n/SEMP/v2/config/msgVpns?where=msgVpnName==B*\n\
    ```\n\n### count\n\nLimit the count of objects in the response. This can be useful\
    \ to limit the size of the response for large collections. The minimum value for\
    \ `count` is `1` and the default is `10`. There is also a per-collection maximum\
    \ value to limit request handling time. For example:\n\n```\n; Up to 25 MsgVpns\n\
    /SEMP/v2/config/msgVpns?count=25\n```\n\n### cursor\n\nThe cursor, or position,\
    \ for the next page of objects. Cursors are opaque data that should not be created\
    \ or interpreted by SEMP clients, and should only be used as described below.\n\
    \nWhen a request is made for a collection and there may be additional objects\
    \ available for retrieval that are not included in the initial response, the response\
    \ will include a `cursorQuery` field containing a cursor. The value of this field\
    \ can be specified in the `cursor` query parameter of a subsequent request to\
    \ retrieve the next page of objects. For convenience, an appropriate URI is constructed\
    \ automatically by the broker and included in the `nextPageUri` field of the response.\
    \ This URI can be used directly to retrieve the next page of objects.\n\n### opaquePassword\n\
    \nAttributes with the opaque property are also write-only and so cannot normally\
    \ be retrieved in a GET. However, when a password is provided in the `opaquePassword`\
    \ query parameter, attributes with the opaque property are retrieved in a GET\
    \ in opaque form, encrypted with this password. The query parameter can also be\
    \ used on a POST, PATCH, or PUT to set opaque attributes using opaque attribute\
    \ values retrieved in a GET, so long as:\n\n1. the same password that was used\
    \ to retrieve the opaque attribute values is provided; and\n\n2. the broker to\
    \ which the request is being sent has the same major and minor SEMP version as\
    \ the broker that produced the opaque attribute values.\n\nThe password provided\
    \ in the query parameter must be a minimum of 8 characters and a maximum of 128\
    \ characters.\n\nThe query parameter can only be used in the configuration API,\
    \ and only over HTTPS.\n\n## Authentication\n\nWhen a client makes its first SEMPv2\
    \ request, it must supply a username and password using HTTP Basic authentication.\n\
    \nIf authentication is successful, the broker returns a cookie containing a session\
    \ key. The client can omit the username and password from subsequent requests,\
    \ because the broker now uses the session cookie for authentication instead. When\
    \ the session expires or is deleted, the client must provide the username and\
    \ password again, and the broker creates a new session.\n\nThere are a limited\
    \ number of session slots available on the broker. The broker returns 529 No SEMP\
    \ Session Available if it is not able to allocate a session. For this reason,\
    \ all clients that use SEMPv2 should support cookies.\n\nIf certain attributes—\
    such as a user's password—are changed, the broker automatically deletes the affected\
    \ sessions. These attributes are documented below. However, changes in external\
    \ user configuration data stored on a RADIUS or LDAP server do not trigger the\
    \ broker to delete the associated session(s), therefore you must do this manually,\
    \ if required.\n\nA client can retrieve its current session information using\
    \ the /about/user endpoint, delete its own session using the /about/user/logout\
    \ endpoint, and manage all sessions using the /sessions endpoint.\n\n## Help\n\
    \nVisit [our website](https://solace.com) to learn more about Solace.\n\nYou can\
    \ also download the SEMP API specifications by clicking [here](https://solace.com/downloads/).\n\
    \nIf you need additional support, please contact us at [support@solace.com](mailto:support@solace.com).\n\
    \n## Notes\n\nNote|Description\n:---:|:---\n1|This specification defines SEMP\
    \ starting in \"v2\", and not the original SEMP \"v1\" interface. Request and\
    \ response formats between \"v1\" and \"v2\" are entirely incompatible, although\
    \ both protocols share a common port configuration on the Solace PubSub+ broker.\
    \ They are differentiated by the initial portion of the URI path, one of either\
    \ \"/SEMP/\" or \"/SEMP/v2/\"\n2|This API is partially implemented. Only a subset\
    \ of all objects are available.\n3|Read-only attributes may appear in POST and\
    \ PUT/PATCH requests. However, if a read-only attribute is not marked as identifying,\
    \ it will be ignored during a PUT/PATCH.\n4|On a PUT, if the SEMP user is not\
    \ authorized to modify the attribute, its value is left unchanged rather than\
    \ set to default. In addition, the values of write-only attributes are not set\
    \ to their defaults on a PUT, except in the following two cases: there is a mutual\
    \ requires relationship with another non-write-only attribute, both attributes\
    \ are absent from the request, and the non-write-only attribute is not currently\
    \ set to its default value; or the attribute is also opaque and the `opaquePassword`\
    \ query parameter is provided in the request.\n5|On a PUT, if the object does\
    \ not exist, it is created first.\n\n"
  contact:
    name: Solace
    url: http://www.solace.com
    email: support@solace.com
  version: "2.21"
servers:
- url: http://www.solace.com/SEMP/v2/config
- url: https://www.solace.com/SEMP/v2/config
paths:
  /:
    get:
      tags:
      - all
      summary: Get a Broker object.
      description: |-
        Get a Broker object.

        This object contains global configuration for the message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        tlsServerCertContent||x||x
        tlsServerCertPassword||x||



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:


        Attribute|Access Scope/Level
        :---|:---:
        guaranteedMsgingEnabled|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-only
        guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-only
        guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-only
        guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-only
        guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-only
        guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-only
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-only
        guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-only
        guaranteedMsgingMaxCacheUsage|global/read-only
        guaranteedMsgingMaxMsgSpoolUsage|global/read-only
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-only
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-only
        guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-only
        serviceAmqpEnabled|global/read-only
        serviceAmqpTlsListenPort|global/read-only
        serviceEventConnectionCountThreshold.clearPercent|global/read-only
        serviceEventConnectionCountThreshold.clearValue|global/read-only
        serviceEventConnectionCountThreshold.setPercent|global/read-only
        serviceEventConnectionCountThreshold.setValue|global/read-only
        serviceHealthCheckEnabled|global/read-only
        serviceHealthCheckListenPort|global/read-only
        serviceMateLinkEnabled|global/read-only
        serviceMateLinkListenPort|global/read-only
        serviceMqttEnabled|global/read-only
        serviceMsgBackboneEnabled|global/read-only
        serviceRedundancyEnabled|global/read-only
        serviceRedundancyFirstListenPort|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-only
        serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-only
        serviceRestIncomingEnabled|global/read-only
        serviceRestOutgoingEnabled|global/read-only
        serviceSempLegacyTimeoutEnabled|global/read-only
        serviceSempPlainTextEnabled|global/read-only
        serviceSempPlainTextListenPort|global/read-only
        serviceSempSessionIdleTimeout|global/read-only
        serviceSempSessionMaxLifetime|global/read-only
        serviceSempTlsEnabled|global/read-only
        serviceSempTlsListenPort|global/read-only
        serviceSmfCompressionListenPort|global/read-only
        serviceSmfEnabled|global/read-only
        serviceSmfEventConnectionCountThreshold.clearPercent|global/read-only
        serviceSmfEventConnectionCountThreshold.clearValue|global/read-only
        serviceSmfEventConnectionCountThreshold.setPercent|global/read-only
        serviceSmfEventConnectionCountThreshold.setValue|global/read-only
        serviceSmfPlainTextListenPort|global/read-only
        serviceSmfRoutingControlListenPort|global/read-only
        serviceSmfTlsListenPort|global/read-only
        serviceTlsEventConnectionCountThreshold.clearPercent|global/read-only
        serviceTlsEventConnectionCountThreshold.clearValue|global/read-only
        serviceTlsEventConnectionCountThreshold.setPercent|global/read-only
        serviceTlsEventConnectionCountThreshold.setValue|global/read-only
        serviceWebTransportEnabled|global/read-only
        serviceWebTransportPlainTextListenPort|global/read-only
        serviceWebTransportTlsListenPort|global/read-only
        serviceWebTransportWebUrlSuffix|global/read-only
        tlsBlockVersion11Enabled|global/read-only
        tlsCipherSuiteManagementList|global/read-only
        tlsCipherSuiteMsgBackboneList|global/read-only
        tlsCipherSuiteSecureShellList|global/read-only
        tlsCrimeExploitProtectionEnabled|global/read-only
        tlsServerCertContent|global/read-only
        tlsStandardDomainCertificateAuthoritiesEnabled|vpn/read-only
        tlsTicketLifetime|global/read-only



        This has been available since 2.13.
      operationId: getBroker
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Broker object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      summary: Update a Broker object.
      description: "Update a Broker object. Any attribute missing from the request\
        \ will be left unchanged.\n\nThis object contains global configuration for\
        \ the message broker.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nserviceAmqpTlsListenPort||||x||\n\
        serviceHealthCheckListenPort||||x||\nserviceMateLinkListenPort||||x||\nserviceRedundancyFirstListenPort||||x||\n\
        serviceSempPlainTextListenPort||||x||\nserviceSempTlsListenPort||||x||\nserviceSmfCompressionListenPort||||x||\n\
        serviceSmfPlainTextListenPort||||x||\nserviceSmfRoutingControlListenPort||||x||\n\
        serviceSmfTlsListenPort||||x||\nserviceWebTransportPlainTextListenPort||||x||\n\
        serviceWebTransportTlsListenPort||||x||\nserviceWebTransportWebUrlSuffix||||x||\n\
        tlsServerCertContent|||x|||x\ntlsServerCertPassword|||x|||\n\n\n\nThe following\
        \ attributes in the request may only be provided in certain combinations with\
        \ other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n:---|:---|:---|:---\n\
        Broker|tlsServerCertPassword|tlsServerCertContent|\nEventThreshold|clearPercent|setPercent|clearValue,\
        \ setValue\nEventThreshold|clearValue|setValue|clearPercent, setPercent\n\
        EventThreshold|setPercent|clearPercent|clearValue, setValue\nEventThreshold|setValue|clearValue|clearPercent,\
        \ setPercent\nEventThresholdByPercent|clearPercent|setPercent|\nEventThresholdByPercent|setPercent|clearPercent|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/none\"\
        \ is required to perform this operation. Requests which include the following\
        \ attributes require greater access scope/level:\n\n\nAttribute|Access Scope/Level\n\
        :---|:---:\nauthClientCertRevocationCheckMode|global/admin\nguaranteedMsgingEnabled|global/read-write\n\
        guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-write\nguaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-write\nguaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-write\nguaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-write\n\
        guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-write\n\
        guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-write\n\
        guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-write\nguaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-write\n\
        guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-write\n\
        guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-write\nguaranteedMsgingEventMsgCountThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-write\n\
        guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-write\nguaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-write\n\
        guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-write\n\
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-write\n\
        guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-write\n\
        guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-write\n\
        guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-write\n\
        guaranteedMsgingMaxCacheUsage|global/read-write\nguaranteedMsgingMaxMsgSpoolUsage|global/read-write\n\
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-write\nguaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-write\n\
        guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-write\n\
        serviceAmqpEnabled|global/read-write\nserviceAmqpTlsListenPort|global/read-write\n\
        serviceEventConnectionCountThreshold.clearPercent|global/read-write\nserviceEventConnectionCountThreshold.clearValue|global/read-write\n\
        serviceEventConnectionCountThreshold.setPercent|global/read-write\nserviceEventConnectionCountThreshold.setValue|global/read-write\n\
        serviceHealthCheckEnabled|global/read-write\nserviceHealthCheckListenPort|global/read-write\n\
        serviceMateLinkEnabled|global/read-write\nserviceMateLinkListenPort|global/read-write\n\
        serviceMqttEnabled|global/read-write\nserviceMsgBackboneEnabled|global/read-write\n\
        serviceRedundancyEnabled|global/read-write\nserviceRedundancyFirstListenPort|global/read-write\n\
        serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-write\n\
        serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-write\n\
        serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-write\n\
        serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-write\n\
        serviceRestIncomingEnabled|global/read-write\nserviceRestOutgoingEnabled|global/read-write\n\
        serviceSempLegacyTimeoutEnabled|global/read-write\nserviceSempPlainTextEnabled|global/read-write\n\
        serviceSempPlainTextListenPort|global/read-write\nserviceSempSessionIdleTimeout|global/read-write\n\
        serviceSempSessionMaxLifetime|global/read-write\nserviceSempTlsEnabled|global/read-write\n\
        serviceSempTlsListenPort|global/read-write\nserviceSmfCompressionListenPort|global/read-write\n\
        serviceSmfEnabled|global/read-write\nserviceSmfEventConnectionCountThreshold.clearPercent|global/read-write\n\
        serviceSmfEventConnectionCountThreshold.clearValue|global/read-write\nserviceSmfEventConnectionCountThreshold.setPercent|global/read-write\n\
        serviceSmfEventConnectionCountThreshold.setValue|global/read-write\nserviceSmfPlainTextListenPort|global/read-write\n\
        serviceSmfRoutingControlListenPort|global/read-write\nserviceSmfTlsListenPort|global/read-write\n\
        serviceTlsEventConnectionCountThreshold.clearPercent|global/read-write\nserviceTlsEventConnectionCountThreshold.clearValue|global/read-write\n\
        serviceTlsEventConnectionCountThreshold.setPercent|global/read-write\nserviceTlsEventConnectionCountThreshold.setValue|global/read-write\n\
        serviceWebTransportEnabled|global/read-write\nserviceWebTransportPlainTextListenPort|global/read-write\n\
        serviceWebTransportTlsListenPort|global/read-write\nserviceWebTransportWebUrlSuffix|global/read-write\n\
        tlsBlockVersion11Enabled|global/read-write\ntlsCipherSuiteManagementList|global/read-write\n\
        tlsCipherSuiteMsgBackboneList|global/read-write\ntlsCipherSuiteSecureShellList|global/read-write\n\
        tlsCrimeExploitProtectionEnabled|global/read-write\ntlsServerCertContent|global/read-write\n\
        tlsServerCertPassword|global/read-write\ntlsStandardDomainCertificateAuthoritiesEnabled|global/read-write\n\
        tlsTicketLifetime|global/read-write\n\n\n\nThis has been available since 2.13."
      operationId: updateBroker
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Broker object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Broker'
        required: true
      responses:
        "200":
          description: "The Broker object's attributes after being updated, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrokerResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /about:
    get:
      tags:
      - all
      - about
      summary: Get an About object.
      description: "Get an About object.\n\nThis provides metadata about the SEMP\
        \ API, such as the version of the API supported by the broker.\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"global/none\" is\
        \ required to perform this operation.\n\nThis has been available since 2.13."
      operationId: getAbout
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The About object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about/api:
    get:
      tags:
      - all
      - about
      summary: Get an API Description object.
      description: |-
        Get an API Description object.

        The API Description object provides metadata about the SEMP API.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.2.
      operationId: getAboutApi
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The API Description object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutApiResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about/user:
    get:
      tags:
      - all
      - about
      summary: Get a User object.
      description: |-
        Get a User object.

        Session and access level information about the user accessing the SEMP API.



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.2.
      operationId: getAboutUser
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The User object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about/user/msgVpns:
    get:
      tags:
      - all
      - about
      summary: Get a list of User Message VPN objects.
      description: |-
        Get a list of User Message VPN objects.

        This provides information about the Message VPN access level for the username used to access the SEMP API.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.2.
      operationId: getAboutUserMsgVpns
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of User Message VPN objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserMsgVpnsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /about/user/msgVpns/{msgVpnName}:
    get:
      tags:
      - all
      - about
      summary: Get a User Message VPN object.
      description: |-
        Get a User Message VPN object.

        This provides information about the Message VPN access level for the username used to access the SEMP API.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been available since 2.2.
      operationId: getAboutUserMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The User Message VPN object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AboutUserMsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /certAuthorities:
    get:
      tags:
      - all
      - certAuthority
      summary: Get a list of Certificate Authority objects.
      description: "Get a list of Certificate Authority objects.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ncertAuthorityName|x||x|\ncertContent|||x|\n\
        crlDayList|||x|\ncrlTimeList|||x|\ncrlUrl|||x|\nocspNonResponderCertEnabled|||x|\n\
        ocspOverrideUrl|||x|\nocspTimeout|||x|\nrevocationCheckEnabled|||x|\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities and domainCertAuthorities."
      operationId: getCertAuthorities
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Certificate Authority objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthoritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - certAuthority
      summary: Create a Certificate Authority object.
      description: "Create a Certificate Authority object. Any attribute missing from\
        \ the request will be set to its default value.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x|x|||x|\ncertContent|||||x|\n\
        crlDayList|||||x|\ncrlTimeList|||||x|\ncrlUrl|||||x|\nocspNonResponderCertEnabled|||||x|\n\
        ocspOverrideUrl|||||x|\nocspTimeout|||||x|\nrevocationCheckEnabled|||||x|\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nCertAuthority|crlDayList|crlTimeList|\nCertAuthority|crlTimeList|crlDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities and domainCertAuthorities."
      operationId: createCertAuthority
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertAuthority'
        required: true
      responses:
        "200":
          description: "The Certificate Authority object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /certAuthorities/{certAuthorityName}:
    get:
      tags:
      - all
      - certAuthority
      summary: Get a Certificate Authority object.
      description: "Get a Certificate Authority object.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ncertAuthorityName|x||x|\ncertContent|||x|\n\
        crlDayList|||x|\ncrlTimeList|||x|\ncrlUrl|||x|\nocspNonResponderCertEnabled|||x|\n\
        ocspOverrideUrl|||x|\nocspTimeout|||x|\nrevocationCheckEnabled|||x|\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities and domainCertAuthorities."
      operationId: getCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Certificate Authority object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - certAuthority
      summary: Replace a Certificate Authority object.
      description: "Replace a Certificate Authority object. Any attribute missing\
        \ from the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nClients can authenticate with the message broker over TLS\
        \ by presenting a valid client certificate. The message broker authenticates\
        \ the client certificate by constructing a full certificate chain (from the\
        \ client certificate to intermediate CAs to a configured root CA). The intermediate\
        \ CAs in this chain can be provided by the client, or configured in the message\
        \ broker. The root CA must be configured on the message broker.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x|x|||x|\ncertContent|||||x|\n\
        crlDayList|||||x|\ncrlTimeList|||||x|\ncrlUrl||||x|x|\nocspNonResponderCertEnabled|||||x|\n\
        ocspOverrideUrl|||||x|\nocspTimeout|||||x|\nrevocationCheckEnabled|||||x|\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nCertAuthority|crlDayList|crlTimeList|\nCertAuthority|crlTimeList|crlDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities and domainCertAuthorities."
      operationId: replaceCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertAuthority'
        required: true
      responses:
        "200":
          description: "The Certificate Authority object's attributes after being\
            \ replaced, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - certAuthority
      summary: Delete a Certificate Authority object.
      description: "Delete a Certificate Authority object.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/admin\" is required to perform this operation.\n\
        \nThis has been deprecated since 2.19. Replaced by clientCertAuthorities and\
        \ domainCertAuthorities."
      operationId: deleteCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - certAuthority
      summary: Update a Certificate Authority object.
      description: "Update a Certificate Authority object. Any attribute missing from\
        \ the request will be left unchanged.\n\nClients can authenticate with the\
        \ message broker over TLS by presenting a valid client certificate. The message\
        \ broker authenticates the client certificate by constructing a full certificate\
        \ chain (from the client certificate to intermediate CAs to a configured root\
        \ CA). The intermediate CAs in this chain can be provided by the client, or\
        \ configured in the message broker. The root CA must be configured on the\
        \ message broker.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x|x|||x|\ncertContent|||||x|\n\
        crlDayList|||||x|\ncrlTimeList|||||x|\ncrlUrl||||x|x|\nocspNonResponderCertEnabled|||||x|\n\
        ocspOverrideUrl|||||x|\nocspTimeout|||||x|\nrevocationCheckEnabled|||||x|\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nCertAuthority|crlDayList|crlTimeList|\nCertAuthority|crlTimeList|crlDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities and domainCertAuthorities."
      operationId: updateCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertAuthority'
        required: true
      responses:
        "200":
          description: "The Certificate Authority object's attributes after being\
            \ updated, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames:
    get:
      tags:
      - all
      - certAuthority
      summary: Get a list of OCSP Responder Trusted Common Name objects.
      description: "Get a list of OCSP Responder Trusted Common Name objects.\n\n\
        When an OCSP override URL is configured, the OCSP responder will be required\
        \ to sign the OCSP responses with certificates issued to these Trusted Common\
        \ Names. A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        certAuthorityName|x||x|\nocspTlsTrustedCommonName|x||x|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-only\" is\
        \ required to perform this operation.\n\nThis has been deprecated since 2.19.\
        \ Replaced by clientCertAuthorities."
      operationId: getCertAuthorityOcspTlsTrustedCommonNames
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of OCSP Responder Trusted Common Name objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - certAuthority
      summary: Create an OCSP Responder Trusted Common Name object.
      description: "Create an OCSP Responder Trusted Common Name object. Any attribute\
        \ missing from the request will be set to its default value.\n\nWhen an OCSP\
        \ override URL is configured, the OCSP responder will be required to sign\
        \ the OCSP responses with certificates issued to these Trusted Common Names.\
        \ A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x||x||x|\nocspTlsTrustedCommonName|x|x|||x|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities."
      operationId: createCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The OCSP Responder Trusted Common Name object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
        required: true
      responses:
        "200":
          description: "The OCSP Responder Trusted Common Name object's attributes\
            \ after being created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /certAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}:
    get:
      tags:
      - all
      - certAuthority
      summary: Get an OCSP Responder Trusted Common Name object.
      description: "Get an OCSP Responder Trusted Common Name object.\n\nWhen an OCSP\
        \ override URL is configured, the OCSP responder will be required to sign\
        \ the OCSP responses with certificates issued to these Trusted Common Names.\
        \ A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        certAuthorityName|x||x|\nocspTlsTrustedCommonName|x||x|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-only\" is\
        \ required to perform this operation.\n\nThis has been deprecated since 2.19.\
        \ Replaced by clientCertAuthorities."
      operationId: getCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ocspTlsTrustedCommonName
        in: path
        description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The OCSP Responder Trusted Common Name object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - certAuthority
      summary: Delete an OCSP Responder Trusted Common Name object.
      description: "Delete an OCSP Responder Trusted Common Name object.\n\nWhen an\
        \ OCSP override URL is configured, the OCSP responder will be required to\
        \ sign the OCSP responses with certificates issued to these Trusted Common\
        \ Names. A maximum of 8 common names can be configured as valid response signers.\n\
        \nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been deprecated since\
        \ 2.19. Replaced by clientCertAuthorities."
      operationId: deleteCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ocspTlsTrustedCommonName
        in: path
        description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /clientCertAuthorities:
    get:
      tags:
      - all
      - clientCertAuthority
      summary: Get a list of Client Certificate Authority objects.
      description: "Get a list of Client Certificate Authority objects.\n\nClients\
        \ can authenticate with the message broker over TLS by presenting a valid\
        \ client certificate. The message broker authenticates the client certificate\
        \ by constructing a full certificate chain (from the client certificate to\
        \ intermediate CAs to a configured root CA). The intermediate CAs in this\
        \ chain can be provided by the client, or configured in the message broker.\
        \ The root CA must be configured on the message broker.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ncertAuthorityName|x|||\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-only\" is\
        \ required to perform this operation.\n\nThis has been available since 2.19."
      operationId: getClientCertAuthorities
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Certificate Authority objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthoritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - clientCertAuthority
      summary: Create a Client Certificate Authority object.
      description: "Create a Client Certificate Authority object. Any attribute missing\
        \ from the request will be set to its default value.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x|x||||\n\n\n\n\
        The following attributes in the request may only be provided in certain combinations\
        \ with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n:---|:---|:---|:---\n\
        ClientCertAuthority|crlDayList|crlTimeList|\nClientCertAuthority|crlTimeList|crlDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.19."
      operationId: createClientCertAuthority
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertAuthority'
        required: true
      responses:
        "200":
          description: "The Client Certificate Authority object's attributes after\
            \ being created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /clientCertAuthorities/{certAuthorityName}:
    get:
      tags:
      - all
      - clientCertAuthority
      summary: Get a Client Certificate Authority object.
      description: "Get a Client Certificate Authority object.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ncertAuthorityName|x|||\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-only\" is\
        \ required to perform this operation.\n\nThis has been available since 2.19."
      operationId: getClientCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Certificate Authority object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - clientCertAuthority
      summary: Replace a Client Certificate Authority object.
      description: "Replace a Client Certificate Authority object. Any attribute missing\
        \ from the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nClients can authenticate with the message broker over TLS\
        \ by presenting a valid client certificate. The message broker authenticates\
        \ the client certificate by constructing a full certificate chain (from the\
        \ client certificate to intermediate CAs to a configured root CA). The intermediate\
        \ CAs in this chain can be provided by the client, or configured in the message\
        \ broker. The root CA must be configured on the message broker.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x|x||||\ncrlUrl||||x||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nClientCertAuthority|crlDayList|crlTimeList|\nClientCertAuthority|crlTimeList|crlDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.19."
      operationId: replaceClientCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertAuthority'
        required: true
      responses:
        "200":
          description: "The Client Certificate Authority object's attributes after\
            \ being replaced, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - clientCertAuthority
      summary: Delete a Client Certificate Authority object.
      description: "Delete a Client Certificate Authority object.\n\nClients can authenticate\
        \ with the message broker over TLS by presenting a valid client certificate.\
        \ The message broker authenticates the client certificate by constructing\
        \ a full certificate chain (from the client certificate to intermediate CAs\
        \ to a configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/admin\" is required to perform this operation.\n\
        \nThis has been available since 2.19."
      operationId: deleteClientCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - clientCertAuthority
      summary: Update a Client Certificate Authority object.
      description: "Update a Client Certificate Authority object. Any attribute missing\
        \ from the request will be left unchanged.\n\nClients can authenticate with\
        \ the message broker over TLS by presenting a valid client certificate. The\
        \ message broker authenticates the client certificate by constructing a full\
        \ certificate chain (from the client certificate to intermediate CAs to a\
        \ configured root CA). The intermediate CAs in this chain can be provided\
        \ by the client, or configured in the message broker. The root CA must be\
        \ configured on the message broker.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x|x||||\ncrlUrl||||x||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nClientCertAuthority|crlDayList|crlTimeList|\nClientCertAuthority|crlTimeList|crlDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.19."
      operationId: updateClientCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertAuthority'
        required: true
      responses:
        "200":
          description: "The Client Certificate Authority object's attributes after\
            \ being updated, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames:
    get:
      tags:
      - all
      - clientCertAuthority
      summary: Get a list of OCSP Responder Trusted Common Name objects.
      description: "Get a list of OCSP Responder Trusted Common Name objects.\n\n\
        When an OCSP override URL is configured, the OCSP responder will be required\
        \ to sign the OCSP responses with certificates issued to these Trusted Common\
        \ Names. A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        certAuthorityName|x|||\nocspTlsTrustedCommonName|x|||\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-only\" is\
        \ required to perform this operation.\n\nThis has been available since 2.19."
      operationId: getClientCertAuthorityOcspTlsTrustedCommonNames
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of OCSP Responder Trusted Common Name objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - clientCertAuthority
      summary: Create an OCSP Responder Trusted Common Name object.
      description: "Create an OCSP Responder Trusted Common Name object. Any attribute\
        \ missing from the request will be set to its default value.\n\nWhen an OCSP\
        \ override URL is configured, the OCSP responder will be required to sign\
        \ the OCSP responses with certificates issued to these Trusted Common Names.\
        \ A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x||x|||\nocspTlsTrustedCommonName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.19."
      operationId: createClientCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The OCSP Responder Trusted Common Name object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
        required: true
      responses:
        "200":
          description: "The OCSP Responder Trusted Common Name object's attributes\
            \ after being created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /clientCertAuthorities/{certAuthorityName}/ocspTlsTrustedCommonNames/{ocspTlsTrustedCommonName}:
    get:
      tags:
      - all
      - clientCertAuthority
      summary: Get an OCSP Responder Trusted Common Name object.
      description: "Get an OCSP Responder Trusted Common Name object.\n\nWhen an OCSP\
        \ override URL is configured, the OCSP responder will be required to sign\
        \ the OCSP responses with certificates issued to these Trusted Common Names.\
        \ A maximum of 8 common names can be configured as valid response signers.\n\
        \n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        certAuthorityName|x|||\nocspTlsTrustedCommonName|x|||\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-only\" is\
        \ required to perform this operation.\n\nThis has been available since 2.19."
      operationId: getClientCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ocspTlsTrustedCommonName
        in: path
        description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The OCSP Responder Trusted Common Name object's attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - clientCertAuthority
      summary: Delete an OCSP Responder Trusted Common Name object.
      description: "Delete an OCSP Responder Trusted Common Name object.\n\nWhen an\
        \ OCSP override URL is configured, the OCSP responder will be required to\
        \ sign the OCSP responses with certificates issued to these Trusted Common\
        \ Names. A maximum of 8 common names can be configured as valid response signers.\n\
        \nA SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.19."
      operationId: deleteClientCertAuthorityOcspTlsTrustedCommonName
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ocspTlsTrustedCommonName
        in: path
        description: The expected Trusted Common Name of the OCSP responder remote
          certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Cluster objects.
      description: |-
        Get a list of Cluster objects.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationBasicPassword||x||x
        authenticationClientCertContent||x||x
        authenticationClientCertPassword||x||
        dmrClusterName|x|||
        tlsServerCertEnforceTrustedCommonNameEnabled|||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrClusters
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Cluster objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClustersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - dmrCluster
      summary: Create a Cluster object.
      description: |-
        Create a Cluster object. Any attribute missing from the request will be set to its default value.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationBasicPassword||||x||x
        authenticationClientCertContent||||x||x
        authenticationClientCertPassword||||x||
        dmrClusterName|x|x||||
        nodeName|||x|||
        tlsServerCertEnforceTrustedCommonNameEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createDmrCluster
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cluster object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrCluster'
        required: true
      responses:
        "200":
          description: "The Cluster object's attributes after being created, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Cluster object.
      description: |-
        Get a Cluster object.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationBasicPassword||x||x
        authenticationClientCertContent||x||x
        authenticationClientCertPassword||x||
        dmrClusterName|x|||
        tlsServerCertEnforceTrustedCommonNameEnabled|||x|



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getDmrCluster
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Cluster object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - dmrCluster
      summary: Replace a Cluster object.
      description: "Replace a Cluster object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nA Cluster is a provisioned object on a message broker that contains global\
        \ DMR configuration parameters.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nauthenticationBasicPassword|||x|x||x\n\
        authenticationClientCertContent|||x|x||x\nauthenticationClientCertPassword|||x|x||\n\
        directOnlyEnabled||x||||\ndmrClusterName|x|x||||\nnodeName||x||||\ntlsServerCertEnforceTrustedCommonNameEnabled|||||x|\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nDmrCluster|authenticationClientCertPassword|authenticationClientCertContent|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: replaceDmrCluster
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cluster object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrCluster'
        required: true
      responses:
        "200":
          description: "The Cluster object's attributes after being replaced, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - dmrCluster
      summary: Delete a Cluster object.
      description: |-
        Delete a Cluster object.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteDmrCluster
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - dmrCluster
      summary: Update a Cluster object.
      description: |-
        Update a Cluster object. Any attribute missing from the request will be left unchanged.

        A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationBasicPassword|||x|x||x
        authenticationClientCertContent|||x|x||x
        authenticationClientCertPassword|||x|x||
        directOnlyEnabled||x||||
        dmrClusterName|x|x||||
        nodeName||x||||
        tlsServerCertEnforceTrustedCommonNameEnabled|||||x|



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateDmrCluster
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cluster object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrCluster'
        required: true
      responses:
        "200":
          description: "The Cluster object's attributes after being updated, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Link objects.
      description: "Get a list of Link objects.\n\nA Link connects nodes (either within\
        \ a Cluster or between two different Clusters) and allows them to exchange\
        \ topology information, subscriptions and data.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nauthenticationBasicPassword||x||x\ndmrClusterName|x|||\n\
        remoteNodeName|x|||\n\n\n\nA SEMP client authorized with a minimum access\
        \ scope/level of \"global/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: getDmrClusterLinks
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Link objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinksResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - dmrCluster
      summary: Create a Link object.
      description: "Create a Link object. Any attribute missing from the request will\
        \ be set to its default value.\n\nA Link connects nodes (either within a Cluster\
        \ or between two different Clusters) and allows them to exchange topology\
        \ information, subscriptions and data.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nauthenticationBasicPassword||||x||x\n\
        dmrClusterName|x||x|||\nremoteNodeName|x|x||||\n\n\n\nThe following attributes\
        \ in the request may only be provided in certain combinations with other attributes:\n\
        \n\nClass|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue,\
        \ setValue\nEventThreshold|clearValue|setValue|clearPercent, setPercent\n\
        EventThreshold|setPercent|clearPercent|clearValue, setValue\nEventThreshold|setValue|clearValue|clearPercent,\
        \ setPercent\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"global/read-write\" is required to perform this operation.\n\nThis\
        \ has been available since 2.11."
      operationId: createDmrClusterLink
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Link object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLink'
        required: true
      responses:
        "200":
          description: "The Link object's attributes after being created, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Link object.
      description: "Get a Link object.\n\nA Link connects nodes (either within a Cluster\
        \ or between two different Clusters) and allows them to exchange topology\
        \ information, subscriptions and data.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nauthenticationBasicPassword||x||x\ndmrClusterName|x|||\n\
        remoteNodeName|x|||\n\n\n\nA SEMP client authorized with a minimum access\
        \ scope/level of \"global/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: getDmrClusterLink
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Link object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - dmrCluster
      summary: Replace a Link object.
      description: "Replace a Link object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nA Link connects nodes (either within a Cluster or between two different\
        \ Clusters) and allows them to exchange topology information, subscriptions\
        \ and data.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nauthenticationBasicPassword|||x|x||x\n\
        authenticationScheme||||x||\ndmrClusterName|x|x||||\negressFlowWindowSize||||x||\n\
        initiator||||x||\nremoteNodeName|x|x||||\nspan||||x||\ntransportCompressedEnabled||||x||\n\
        transportTlsEnabled||||x||\n\n\n\nThe following attributes in the request\
        \ may only be provided in certain combinations with other attributes:\n\n\n\
        Class|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue,\
        \ setValue\nEventThreshold|clearValue|setValue|clearPercent, setPercent\n\
        EventThreshold|setPercent|clearPercent|clearValue, setValue\nEventThreshold|setValue|clearValue|clearPercent,\
        \ setPercent\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"global/read-write\" is required to perform this operation.\n\nThis\
        \ has been available since 2.11."
      operationId: replaceDmrClusterLink
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Link object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLink'
        required: true
      responses:
        "200":
          description: "The Link object's attributes after being replaced, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - dmrCluster
      summary: Delete a Link object.
      description: "Delete a Link object.\n\nA Link connects nodes (either within\
        \ a Cluster or between two different Clusters) and allows them to exchange\
        \ topology information, subscriptions and data.\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"global/read-write\" is required to\
        \ perform this operation.\n\nThis has been available since 2.11."
      operationId: deleteDmrClusterLink
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - dmrCluster
      summary: Update a Link object.
      description: "Update a Link object. Any attribute missing from the request will\
        \ be left unchanged.\n\nA Link connects nodes (either within a Cluster or\
        \ between two different Clusters) and allows them to exchange topology information,\
        \ subscriptions and data.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nauthenticationBasicPassword|||x|x||x\n\
        authenticationScheme||||x||\ndmrClusterName|x|x||||\negressFlowWindowSize||||x||\n\
        initiator||||x||\nremoteNodeName|x|x||||\nspan||||x||\ntransportCompressedEnabled||||x||\n\
        transportTlsEnabled||||x||\n\n\n\nThe following attributes in the request\
        \ may only be provided in certain combinations with other attributes:\n\n\n\
        Class|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue,\
        \ setValue\nEventThreshold|clearValue|setValue|clearPercent, setPercent\n\
        EventThreshold|setPercent|clearPercent|clearValue, setValue\nEventThreshold|setValue|clearValue|clearPercent,\
        \ setPercent\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"global/read-write\" is required to perform this operation.\n\nThis\
        \ has been available since 2.11."
      operationId: updateDmrClusterLink
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Link object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLink'
        required: true
      responses:
        "200":
          description: "The Link object's attributes after being updated, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Remote Address objects.
      description: "Get a list of Remote Address objects.\n\nEach Remote Address,\
        \ consisting of a FQDN or IP address and optional port, is used to connect\
        \ to the remote node for this Link. Up to 4 addresses may be provided for\
        \ each Link, and will be tried on a round-robin basis.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ndmrClusterName|x|||\nremoteAddress|x|||\nremoteNodeName|x|||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getDmrClusterLinkRemoteAddresses
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Remote Address objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - dmrCluster
      summary: Create a Remote Address object.
      description: "Create a Remote Address object. Any attribute missing from the\
        \ request will be set to its default value.\n\nEach Remote Address, consisting\
        \ of a FQDN or IP address and optional port, is used to connect to the remote\
        \ node for this Link. Up to 4 addresses may be provided for each Link, and\
        \ will be tried on a round-robin basis.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ndmrClusterName|x||x|||\nremoteAddress|x|x||||\n\
        remoteNodeName|x||x|||\n\n\n\nA SEMP client authorized with a minimum access\
        \ scope/level of \"global/read-write\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: createDmrClusterLinkRemoteAddress
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Remote Address object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
        required: true
      responses:
        "200":
          description: "The Remote Address object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/remoteAddresses/{remoteAddress}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Remote Address object.
      description: "Get a Remote Address object.\n\nEach Remote Address, consisting\
        \ of a FQDN or IP address and optional port, is used to connect to the remote\
        \ node for this Link. Up to 4 addresses may be provided for each Link, and\
        \ will be tried on a round-robin basis.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ndmrClusterName|x|||\nremoteAddress|x|||\nremoteNodeName|x|||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getDmrClusterLinkRemoteAddress
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteAddress
        in: path
        description: "The FQDN or IP address (and optional port) of the remote node.\
          \ If a port is not provided, it will vary based on the transport encoding:\
          \ 55555 (plain-text), 55443 (encrypted), or 55003 (compressed)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Remote Address object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkRemoteAddressResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - dmrCluster
      summary: Delete a Remote Address object.
      description: "Delete a Remote Address object.\n\nEach Remote Address, consisting\
        \ of a FQDN or IP address and optional port, is used to connect to the remote\
        \ node for this Link. Up to 4 addresses may be provided for each Link, and\
        \ will be tried on a round-robin basis.\n\nA SEMP client authorized with a\
        \ minimum access scope/level of \"global/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.11."
      operationId: deleteDmrClusterLinkRemoteAddress
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteAddress
        in: path
        description: "The FQDN or IP address (and optional port) of the remote node.\
          \ If a port is not provided, it will vary based on the transport encoding:\
          \ 55555 (plain-text), 55443 (encrypted), or 55003 (compressed)."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a list of Trusted Common Name objects.
      description: "Get a list of Trusted Common Name objects.\n\nThe Trusted Common\
        \ Names for the Link are used by encrypted transports to verify the name in\
        \ the certificate presented by the remote node. They must include the common\
        \ name of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ndmrClusterName|x||x|\nremoteNodeName|x||x|\n\
        tlsTrustedCommonName|x||x|\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/read-only\" is required to perform this operation.\n\
        \nThis has been deprecated since 2.18. Common Name validation has been replaced\
        \ by Server Certificate Name validation."
      operationId: getDmrClusterLinkTlsTrustedCommonNames
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Trusted Common Name objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - dmrCluster
      summary: Create a Trusted Common Name object.
      description: "Create a Trusted Common Name object. Any attribute missing from\
        \ the request will be set to its default value.\n\nThe Trusted Common Names\
        \ for the Link are used by encrypted transports to verify the name in the\
        \ certificate presented by the remote node. They must include the common name\
        \ of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ndmrClusterName|x||x||x|\nremoteNodeName|x||x||x|\n\
        tlsTrustedCommonName|x|x|||x|\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/read-write\" is required to perform this\
        \ operation.\n\nThis has been deprecated since 2.18. Common Name validation\
        \ has been replaced by Server Certificate Name validation."
      operationId: createDmrClusterLinkTlsTrustedCommonName
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Trusted Common Name object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
        required: true
      responses:
        "200":
          description: "The Trusted Common Name object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /dmrClusters/{dmrClusterName}/links/{remoteNodeName}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    get:
      tags:
      - all
      - dmrCluster
      summary: Get a Trusted Common Name object.
      description: "Get a Trusted Common Name object.\n\nThe Trusted Common Names\
        \ for the Link are used by encrypted transports to verify the name in the\
        \ certificate presented by the remote node. They must include the common name\
        \ of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ndmrClusterName|x||x|\nremoteNodeName|x||x|\n\
        tlsTrustedCommonName|x||x|\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"global/read-only\" is required to perform this operation.\n\
        \nThis has been deprecated since 2.18. Common Name validation has been replaced\
        \ by Server Certificate Name validation."
      operationId: getDmrClusterLinkTlsTrustedCommonName
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Trusted Common Name object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - dmrCluster
      summary: Delete a Trusted Common Name object.
      description: "Delete a Trusted Common Name object.\n\nThe Trusted Common Names\
        \ for the Link are used by encrypted transports to verify the name in the\
        \ certificate presented by the remote node. They must include the common name\
        \ of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\nA SEMP client authorized with a\
        \ minimum access scope/level of \"global/read-write\" is required to perform\
        \ this operation.\n\nThis has been deprecated since 2.18. Common Name validation\
        \ has been replaced by Server Certificate Name validation."
      operationId: deleteDmrClusterLinkTlsTrustedCommonName
      parameters:
      - name: dmrClusterName
        in: path
        description: The name of the Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the Link.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /domainCertAuthorities:
    get:
      tags:
      - all
      - domainCertAuthority
      summary: Get a list of Domain Certificate Authority objects.
      description: |-
        Get a list of Domain Certificate Authority objects.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getDomainCertAuthorities
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Domain Certificate Authority objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthoritiesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - domainCertAuthority
      summary: Create a Domain Certificate Authority object.
      description: |-
        Create a Domain Certificate Authority object. Any attribute missing from the request will be set to its default value.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: createDomainCertAuthority
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Domain Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertAuthority'
        required: true
      responses:
        "200":
          description: "The Domain Certificate Authority object's attributes after\
            \ being created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /domainCertAuthorities/{certAuthorityName}:
    get:
      tags:
      - all
      - domainCertAuthority
      summary: Get a Domain Certificate Authority object.
      description: |-
        Get a Domain Certificate Authority object.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        certAuthorityName|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.19.
      operationId: getDomainCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Domain Certificate Authority object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - domainCertAuthority
      summary: Replace a Domain Certificate Authority object.
      description: "Replace a Domain Certificate Authority object. Any attribute missing\
        \ from the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nCertificate Authorities trusted for domain verification.\n\
        \n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncertAuthorityName|x|x||||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"global/admin\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.19."
      operationId: replaceDomainCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Domain Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertAuthority'
        required: true
      responses:
        "200":
          description: "The Domain Certificate Authority object's attributes after\
            \ being replaced, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - domainCertAuthority
      summary: Delete a Domain Certificate Authority object.
      description: |-
        Delete a Domain Certificate Authority object.

        Certificate Authorities trusted for domain verification.

        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: deleteDomainCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - domainCertAuthority
      summary: Update a Domain Certificate Authority object.
      description: |-
        Update a Domain Certificate Authority object. Any attribute missing from the request will be left unchanged.

        Certificate Authorities trusted for domain verification.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        certAuthorityName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.

        This has been available since 2.19.
      operationId: updateDomainCertAuthority
      parameters:
      - name: certAuthorityName
        in: path
        description: The name of the Certificate Authority.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Domain Certificate Authority object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainCertAuthority'
        required: true
      responses:
        "200":
          description: "The Domain Certificate Authority object's attributes after\
            \ being updated, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainCertAuthorityResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns:
    get:
      tags:
      - all
      - msgVpn
      summary: Get a list of Message VPN objects.
      description: "Get a list of Message VPN objects.\n\nMessage VPNs (Virtual Private\
        \ Networks) allow for the segregation of topic space and clients. They also\
        \ group clients connecting to a network of message brokers, such that messages\
        \ published within a particular group are only visible to that group's clients.\n\
        \n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||x|\nmsgVpnName|x|||\n\
        replicationBridgeAuthenticationBasicPassword||x||x\nreplicationBridgeAuthenticationClientCertContent||x||x\n\
        replicationBridgeAuthenticationClientCertPassword||x||\nreplicationEnabledQueueBehavior||x||\n\
        restTlsServerCertEnforceTrustedCommonNameEnabled|||x|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"vpn/read-only\" is required\
        \ to perform this operation.\n\nThis has been available since 2.0."
      operationId: getMsgVpns
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Message VPN objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      summary: Create a Message VPN object.
      description: "Create a Message VPN object. Any attribute missing from the request\
        \ will be set to its default value.\n\nMessage VPNs (Virtual Private Networks)\
        \ allow for the segregation of topic space and clients. They also group clients\
        \ connecting to a network of message brokers, such that messages published\
        \ within a particular group are only visible to that group's clients.\n\n\n\
        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:|:---:|:---:\n\
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|\nmsgVpnName|x|x||||\n\
        replicationBridgeAuthenticationBasicPassword||||x||x\nreplicationBridgeAuthenticationClientCertContent||||x||x\n\
        replicationBridgeAuthenticationClientCertPassword||||x||\nreplicationEnabledQueueBehavior||||x||\n\
        restTlsServerCertEnforceTrustedCommonNameEnabled|||||x|\n\n\n\nThe following\
        \ attributes in the request may only be provided in certain combinations with\
        \ other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n:---|:---|:---|:---\n\
        EventThreshold|clearPercent|setPercent|clearValue, setValue\nEventThreshold|clearValue|setValue|clearPercent,\
        \ setPercent\nEventThreshold|setPercent|clearPercent|clearValue, setValue\n\
        EventThreshold|setValue|clearValue|clearPercent, setPercent\nEventThresholdByValue|clearValue|setValue|\n\
        EventThresholdByValue|setValue|clearValue|\nMsgVpn|authenticationBasicProfileName|authenticationBasicType|\n\
        MsgVpn|authorizationProfileName|authorizationType|\nMsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|\n\
        MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|\n\
        MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|\n\
        MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|\n\
        MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|\n\
        MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"global/read-write\" is\
        \ required to perform this operation.\n\nThis has been available since 2.0."
      operationId: createMsgVpn
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Message VPN object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpn'
        required: true
      responses:
        "200":
          description: "The Message VPN object's attributes after being created, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}:
    get:
      tags:
      - all
      - msgVpn
      summary: Get a Message VPN object.
      description: "Get a Message VPN object.\n\nMessage VPNs (Virtual Private Networks)\
        \ allow for the segregation of topic space and clients. They also group clients\
        \ connecting to a network of message brokers, such that messages published\
        \ within a particular group are only visible to that group's clients.\n\n\n\
        Attribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||x|\nmsgVpnName|x|||\n\
        replicationBridgeAuthenticationBasicPassword||x||x\nreplicationBridgeAuthenticationClientCertContent||x||x\n\
        replicationBridgeAuthenticationClientCertPassword||x||\nreplicationEnabledQueueBehavior||x||\n\
        restTlsServerCertEnforceTrustedCommonNameEnabled|||x|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"vpn/read-only\" is required\
        \ to perform this operation.\n\nThis has been available since 2.0."
      operationId: getMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Message VPN object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      summary: Replace a Message VPN object.
      description: "Replace a Message VPN object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nMessage VPNs (Virtual Private Networks) allow for the segregation of topic\
        \ space and clients. They also group clients connecting to a network of message\
        \ brokers, such that messages published within a particular group are only\
        \ visible to that group's clients.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nbridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|\n\
        msgVpnName|x|x||||\nreplicationBridgeAuthenticationBasicPassword|||x|||x\n\
        replicationBridgeAuthenticationClientCertContent|||x|||x\nreplicationBridgeAuthenticationClientCertPassword|||x|||\n\
        replicationEnabledQueueBehavior|||x|||\nrestTlsServerCertEnforceTrustedCommonNameEnabled|||||x|\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\
        EventThresholdByValue|clearValue|setValue|\nEventThresholdByValue|setValue|clearValue|\n\
        MsgVpn|authenticationBasicProfileName|authenticationBasicType|\nMsgVpn|authorizationProfileName|authorizationType|\n\
        MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|\n\
        MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|\n\
        MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|\n\
        MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|\n\
        MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|\n\
        MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"vpn/read-write\" is required\
        \ to perform this operation. Requests which include the following attributes\
        \ require greater access scope/level:\n\n\nAttribute|Access Scope/Level\n\
        :---|:---:\nalias|global/read-write\nauthenticationBasicEnabled|global/read-write\n\
        authenticationBasicProfileName|global/read-write\nauthenticationBasicRadiusDomain|global/read-write\n\
        authenticationBasicType|global/read-write\nauthenticationClientCertAllowApiProvidedUsernameEnabled|global/read-write\n\
        authenticationClientCertEnabled|global/read-write\nauthenticationClientCertMaxChainDepth|global/read-write\n\
        authenticationClientCertRevocationCheckMode|global/read-write\nauthenticationClientCertUsernameSource|global/read-write\n\
        authenticationClientCertValidateDateEnabled|global/read-write\nauthenticationKerberosAllowApiProvidedUsernameEnabled|global/read-write\n\
        authenticationKerberosEnabled|global/read-write\nauthenticationOauthEnabled|global/read-write\n\
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write\nbridgingTlsServerCertMaxChainDepth|global/read-write\n\
        bridgingTlsServerCertValidateDateEnabled|global/read-write\nbridgingTlsServerCertValidateNameEnabled|global/read-write\n\
        dmrEnabled|global/read-write\nexportSubscriptionsEnabled|global/read-write\n\
        maxConnectionCount|global/read-write\nmaxEgressFlowCount|global/read-write\n\
        maxEndpointCount|global/read-write\nmaxIngressFlowCount|global/read-write\n\
        maxMsgSpoolUsage|global/read-write\nmaxSubscriptionCount|global/read-write\n\
        maxTransactedSessionCount|global/read-write\nmaxTransactionCount|global/read-write\n\
        mqttRetainMaxMemory|global/read-write\nreplicationBridgeAuthenticationBasicClientUsername|global/read-write\n\
        replicationBridgeAuthenticationBasicPassword|global/read-write\nreplicationBridgeAuthenticationClientCertContent|global/read-write\n\
        replicationBridgeAuthenticationClientCertPassword|global/read-write\nreplicationBridgeAuthenticationScheme|global/read-write\n\
        replicationBridgeCompressedDataEnabled|global/read-write\nreplicationBridgeEgressFlowWindowSize|global/read-write\n\
        replicationBridgeRetryDelay|global/read-write\nreplicationBridgeTlsEnabled|global/read-write\n\
        replicationBridgeUnidirectionalClientProfileName|global/read-write\nreplicationEnabled|global/read-write\n\
        replicationEnabledQueueBehavior|global/read-write\nreplicationQueueMaxMsgSpoolUsage|global/read-write\n\
        replicationRole|global/read-write\nrestTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write\n\
        restTlsServerCertMaxChainDepth|global/read-write\nrestTlsServerCertValidateDateEnabled|global/read-write\n\
        restTlsServerCertValidateNameEnabled|global/read-write\nsempOverMsgBusAdminClientEnabled|global/read-write\n\
        sempOverMsgBusAdminDistributedCacheEnabled|global/read-write\nsempOverMsgBusAdminEnabled|global/read-write\n\
        sempOverMsgBusEnabled|global/read-write\nsempOverMsgBusShowEnabled|global/read-write\n\
        serviceAmqpMaxConnectionCount|global/read-write\nserviceAmqpPlainTextListenPort|global/read-write\n\
        serviceAmqpTlsListenPort|global/read-write\nserviceMqttMaxConnectionCount|global/read-write\n\
        serviceMqttPlainTextListenPort|global/read-write\nserviceMqttTlsListenPort|global/read-write\n\
        serviceMqttTlsWebSocketListenPort|global/read-write\nserviceMqttWebSocketListenPort|global/read-write\n\
        serviceRestIncomingMaxConnectionCount|global/read-write\nserviceRestIncomingPlainTextListenPort|global/read-write\n\
        serviceRestIncomingTlsListenPort|global/read-write\nserviceRestOutgoingMaxConnectionCount|global/read-write\n\
        serviceSmfMaxConnectionCount|global/read-write\nserviceWebMaxConnectionCount|global/read-write\n\
        \n\n\nThis has been available since 2.0."
      operationId: replaceMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Message VPN object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpn'
        required: true
      responses:
        "200":
          description: "The Message VPN object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      summary: Delete a Message VPN object.
      description: "Delete a Message VPN object.\n\nMessage VPNs (Virtual Private\
        \ Networks) allow for the segregation of topic space and clients. They also\
        \ group clients connecting to a network of message brokers, such that messages\
        \ published within a particular group are only visible to that group's clients.\n\
        \nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: deleteMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      summary: Update a Message VPN object.
      description: "Update a Message VPN object. Any attribute missing from the request\
        \ will be left unchanged.\n\nMessage VPNs (Virtual Private Networks) allow\
        \ for the segregation of topic space and clients. They also group clients\
        \ connecting to a network of message brokers, such that messages published\
        \ within a particular group are only visible to that group's clients.\n\n\n\
        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nbridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|\n\
        msgVpnName|x|x||||\nreplicationBridgeAuthenticationBasicPassword|||x|||x\n\
        replicationBridgeAuthenticationClientCertContent|||x|||x\nreplicationBridgeAuthenticationClientCertPassword|||x|||\n\
        replicationEnabledQueueBehavior|||x|||\nrestTlsServerCertEnforceTrustedCommonNameEnabled|||||x|\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\
        EventThresholdByValue|clearValue|setValue|\nEventThresholdByValue|setValue|clearValue|\n\
        MsgVpn|authenticationBasicProfileName|authenticationBasicType|\nMsgVpn|authorizationProfileName|authorizationType|\n\
        MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|\n\
        MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|\n\
        MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|\n\
        MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|\n\
        MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|\n\
        MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|\n\n\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"vpn/read-write\" is required\
        \ to perform this operation. Requests which include the following attributes\
        \ require greater access scope/level:\n\n\nAttribute|Access Scope/Level\n\
        :---|:---:\nalias|global/read-write\nauthenticationBasicEnabled|global/read-write\n\
        authenticationBasicProfileName|global/read-write\nauthenticationBasicRadiusDomain|global/read-write\n\
        authenticationBasicType|global/read-write\nauthenticationClientCertAllowApiProvidedUsernameEnabled|global/read-write\n\
        authenticationClientCertEnabled|global/read-write\nauthenticationClientCertMaxChainDepth|global/read-write\n\
        authenticationClientCertRevocationCheckMode|global/read-write\nauthenticationClientCertUsernameSource|global/read-write\n\
        authenticationClientCertValidateDateEnabled|global/read-write\nauthenticationKerberosAllowApiProvidedUsernameEnabled|global/read-write\n\
        authenticationKerberosEnabled|global/read-write\nauthenticationOauthEnabled|global/read-write\n\
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write\nbridgingTlsServerCertMaxChainDepth|global/read-write\n\
        bridgingTlsServerCertValidateDateEnabled|global/read-write\nbridgingTlsServerCertValidateNameEnabled|global/read-write\n\
        dmrEnabled|global/read-write\nexportSubscriptionsEnabled|global/read-write\n\
        maxConnectionCount|global/read-write\nmaxEgressFlowCount|global/read-write\n\
        maxEndpointCount|global/read-write\nmaxIngressFlowCount|global/read-write\n\
        maxMsgSpoolUsage|global/read-write\nmaxSubscriptionCount|global/read-write\n\
        maxTransactedSessionCount|global/read-write\nmaxTransactionCount|global/read-write\n\
        mqttRetainMaxMemory|global/read-write\nreplicationBridgeAuthenticationBasicClientUsername|global/read-write\n\
        replicationBridgeAuthenticationBasicPassword|global/read-write\nreplicationBridgeAuthenticationClientCertContent|global/read-write\n\
        replicationBridgeAuthenticationClientCertPassword|global/read-write\nreplicationBridgeAuthenticationScheme|global/read-write\n\
        replicationBridgeCompressedDataEnabled|global/read-write\nreplicationBridgeEgressFlowWindowSize|global/read-write\n\
        replicationBridgeRetryDelay|global/read-write\nreplicationBridgeTlsEnabled|global/read-write\n\
        replicationBridgeUnidirectionalClientProfileName|global/read-write\nreplicationEnabled|global/read-write\n\
        replicationEnabledQueueBehavior|global/read-write\nreplicationQueueMaxMsgSpoolUsage|global/read-write\n\
        replicationRole|global/read-write\nrestTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write\n\
        restTlsServerCertMaxChainDepth|global/read-write\nrestTlsServerCertValidateDateEnabled|global/read-write\n\
        restTlsServerCertValidateNameEnabled|global/read-write\nsempOverMsgBusAdminClientEnabled|global/read-write\n\
        sempOverMsgBusAdminDistributedCacheEnabled|global/read-write\nsempOverMsgBusAdminEnabled|global/read-write\n\
        sempOverMsgBusEnabled|global/read-write\nsempOverMsgBusShowEnabled|global/read-write\n\
        serviceAmqpMaxConnectionCount|global/read-write\nserviceAmqpPlainTextListenPort|global/read-write\n\
        serviceAmqpTlsListenPort|global/read-write\nserviceMqttMaxConnectionCount|global/read-write\n\
        serviceMqttPlainTextListenPort|global/read-write\nserviceMqttTlsListenPort|global/read-write\n\
        serviceMqttTlsWebSocketListenPort|global/read-write\nserviceMqttWebSocketListenPort|global/read-write\n\
        serviceRestIncomingMaxConnectionCount|global/read-write\nserviceRestIncomingPlainTextListenPort|global/read-write\n\
        serviceRestIncomingTlsListenPort|global/read-write\nserviceRestOutgoingMaxConnectionCount|global/read-write\n\
        serviceSmfMaxConnectionCount|global/read-write\nserviceWebMaxConnectionCount|global/read-write\n\
        \n\n\nThis has been available since 2.0."
      operationId: updateMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Message VPN object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpn'
        required: true
      responses:
        "200":
          description: "The Message VPN object's attributes after being updated, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of ACL Profile objects.
      description: |-
        Get a list of ACL Profile objects.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAclProfiles
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of ACL Profile objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Create an ACL Profile object.
      description: |-
        Create an ACL Profile object. Any attribute missing from the request will be set to its default value.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnAclProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The ACL Profile object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfile'
        required: true
      responses:
        "200":
          description: "The ACL Profile object's attributes after being created, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get an ACL Profile object.
      description: |-
        Get an ACL Profile object.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAclProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The ACL Profile object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Replace an ACL Profile object.
      description: "Replace an ACL Profile object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nAn ACL Profile controls whether an authenticated client is permitted\
        \ to establish a connection with the message broker or permitted to publish\
        \ and subscribe to specific topics.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\naclProfileName|x|x||||\nmsgVpnName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: replaceMsgVpnAclProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The ACL Profile object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfile'
        required: true
      responses:
        "200":
          description: "The ACL Profile object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Delete an ACL Profile object.
      description: |-
        Delete an ACL Profile object.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnAclProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Update an ACL Profile object.
      description: |-
        Update an ACL Profile object. Any attribute missing from the request will be left unchanged.

        An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnAclProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The ACL Profile object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfile'
        required: true
      responses:
        "200":
          description: "The ACL Profile object's attributes after being updated, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Client Connect Exception objects.
      description: |-
        Get a list of Client Connect Exception objects.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        clientConnectExceptionAddress|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAclProfileClientConnectExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Connect Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Create a Client Connect Exception object.
      description: |-
        Create a Client Connect Exception object. Any attribute missing from the request will be set to its default value.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x|||
        clientConnectExceptionAddress|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnAclProfileClientConnectException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Connect Exception object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
        required: true
      responses:
        "200":
          description: "The Client Connect Exception object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/clientConnectExceptions/{clientConnectExceptionAddress}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Client Connect Exception object.
      description: |-
        Get a Client Connect Exception object.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        clientConnectExceptionAddress|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnAclProfileClientConnectException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientConnectExceptionAddress
        in: path
        description: The IP address/netmask of the client connect exception in CIDR
          form.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Connect Exception object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Delete a Client Connect Exception object.
      description: |-
        Delete a Client Connect Exception object.

        A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnAclProfileClientConnectException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientConnectExceptionAddress
        in: path
        description: The IP address/netmask of the client connect exception in CIDR
          form.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Publish Topic Exception objects.
      description: |-
        Get a list of Publish Topic Exception objects.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x||x|
        msgVpnName|x||x|
        publishExceptionTopic|x||x|
        topicSyntax|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: getMsgVpnAclProfilePublishExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Publish Topic Exception objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Create a Publish Topic Exception object.
      description: |-
        Create a Publish Topic Exception object. Any attribute missing from the request will be set to its default value.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x||x|
        msgVpnName|x||x||x|
        publishExceptionTopic|x|x|||x|
        topicSyntax|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: createMsgVpnAclProfilePublishException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Publish Topic Exception object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
        required: true
      responses:
        "200":
          description: "The Publish Topic Exception object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishExceptions/{topicSyntax},{publishExceptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Publish Topic Exception object.
      description: |-
        Get a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x||x|
        msgVpnName|x||x|
        publishExceptionTopic|x||x|
        topicSyntax|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: getMsgVpnAclProfilePublishException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishExceptionTopic
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Publish Topic Exception object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Delete a Publish Topic Exception object.
      description: |-
        Delete a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by publishTopicExceptions.
      operationId: deleteMsgVpnAclProfilePublishException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishExceptionTopic
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Publish Topic Exception objects.
      description: |-
        Get a list of Publish Topic Exception objects.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        publishTopicException|x|||
        publishTopicExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfilePublishTopicExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Publish Topic Exception objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Create a Publish Topic Exception object.
      description: |-
        Create a Publish Topic Exception object. Any attribute missing from the request will be set to its default value.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x|||
        msgVpnName|x||x|||
        publishTopicException|x|x||||
        publishTopicExceptionSyntax|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: createMsgVpnAclProfilePublishTopicException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Publish Topic Exception object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
        required: true
      responses:
        "200":
          description: "The Publish Topic Exception object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/publishTopicExceptions/{publishTopicExceptionSyntax},{publishTopicException}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Publish Topic Exception object.
      description: |-
        Get a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        publishTopicException|x|||
        publishTopicExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfilePublishTopicException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishTopicExceptionSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishTopicException
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Publish Topic Exception object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Delete a Publish Topic Exception object.
      description: |-
        Delete a Publish Topic Exception object.

        A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnAclProfilePublishTopicException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishTopicExceptionSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: publishTopicException
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Subscribe Topic Exception objects.
      description: |-
        Get a list of Subscribe Topic Exception objects.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x||x|
        msgVpnName|x||x|
        subscribeExceptionTopic|x||x|
        topicSyntax|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: getMsgVpnAclProfileSubscribeExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Subscribe Topic Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Create a Subscribe Topic Exception object.
      description: |-
        Create a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x||x|
        msgVpnName|x||x||x|
        subscribeExceptionTopic|x|x|||x|
        topicSyntax|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: createMsgVpnAclProfileSubscribeException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Subscribe Topic Exception object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
        required: true
      responses:
        "200":
          description: "The Subscribe Topic Exception object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeExceptions/{topicSyntax},{subscribeExceptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Subscribe Topic Exception object.
      description: |-
        Get a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x||x|
        msgVpnName|x||x|
        subscribeExceptionTopic|x||x|
        topicSyntax|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: getMsgVpnAclProfileSubscribeException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeExceptionTopic
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Subscribe Topic Exception object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Delete a Subscribe Topic Exception object.
      description: |-
        Delete a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
      operationId: deleteMsgVpnAclProfileSubscribeException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeExceptionTopic
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Subscribe Share Name Exception objects.
      description: |-
        Get a list of Subscribe Share Name Exception objects.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        subscribeShareNameException|x|||
        subscribeShareNameExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeShareNameExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Subscribe Share Name Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Create a Subscribe Share Name Exception object.
      description: |-
        Create a Subscribe Share Name Exception object. Any attribute missing from the request will be set to its default value.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x|||
        msgVpnName|x||x|||
        subscribeShareNameException|x|x||||
        subscribeShareNameExceptionSyntax|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: createMsgVpnAclProfileSubscribeShareNameException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Subscribe Share Name Exception object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
        required: true
      responses:
        "200":
          description: "The Subscribe Share Name Exception object's attributes after\
            \ being created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeShareNameExceptions/{subscribeShareNameExceptionSyntax},{subscribeShareNameException}
  : get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Subscribe Share Name Exception object.
      description: |-
        Get a Subscribe Share Name Exception object.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        subscribeShareNameException|x|||
        subscribeShareNameExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeShareNameException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeShareNameExceptionSyntax
        in: path
        description: The syntax of the subscribe share name for the exception to the
          default action taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeShareNameException
        in: path
        description: The subscribe share name exception to the default action taken.
          May include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Subscribe Share Name Exception object's attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Delete a Subscribe Share Name Exception object.
      description: |-
        Delete a Subscribe Share Name Exception object.

        A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnAclProfileSubscribeShareNameException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeShareNameExceptionSyntax
        in: path
        description: The syntax of the subscribe share name for the exception to the
          default action taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeShareNameException
        in: path
        description: The subscribe share name exception to the default action taken.
          May include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions:
    get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a list of Subscribe Topic Exception objects.
      description: |-
        Get a list of Subscribe Topic Exception objects.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        subscribeTopicException|x|||
        subscribeTopicExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeTopicExceptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Subscribe Topic Exception objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Create a Subscribe Topic Exception object.
      description: |-
        Create a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName|x||x|||
        msgVpnName|x||x|||
        subscribeTopicException|x|x||||
        subscribeTopicExceptionSyntax|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: createMsgVpnAclProfileSubscribeTopicException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Subscribe Topic Exception object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
        required: true
      responses:
        "200":
          description: "The Subscribe Topic Exception object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/aclProfiles/{aclProfileName}/subscribeTopicExceptions/{subscribeTopicExceptionSyntax},{subscribeTopicException}
  : get:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Get a Subscribe Topic Exception object.
      description: |-
        Get a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        aclProfileName|x|||
        msgVpnName|x|||
        subscribeTopicException|x|||
        subscribeTopicExceptionSyntax|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnAclProfileSubscribeTopicException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeTopicExceptionSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeTopicException
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Subscribe Topic Exception object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - aclProfile
      summary: Delete a Subscribe Topic Exception object.
      description: |-
        Delete a Subscribe Topic Exception object.

        A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnAclProfileSubscribeTopicException
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: aclProfileName
        in: path
        description: The name of the ACL Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeTopicExceptionSyntax
        in: path
        description: The syntax of the topic for the exception to the default action
          taken.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscribeTopicException
        in: path
        description: The topic for the exception to the default action taken. May
          include wildcard characters.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/authenticationOauthProviders:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      summary: Get a list of OAuth Provider objects.
      description: |-
        Get a list of OAuth Provider objects.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        oauthProviderName|x|||
        tokenIntrospectionPassword||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.13.
      operationId: getMsgVpnAuthenticationOauthProviders
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of OAuth Provider objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvidersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      summary: Create an OAuth Provider object.
      description: |-
        Create an OAuth Provider object. Any attribute missing from the request will be set to its default value.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        oauthProviderName|x|x||||
        tokenIntrospectionPassword||||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.13.
      operationId: createMsgVpnAuthenticationOauthProvider
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The OAuth Provider object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        required: true
      responses:
        "200":
          description: "The OAuth Provider object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/authenticationOauthProviders/{oauthProviderName}:
    get:
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      summary: Get an OAuth Provider object.
      description: |-
        Get an OAuth Provider object.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        oauthProviderName|x|||
        tokenIntrospectionPassword||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.13.
      operationId: getMsgVpnAuthenticationOauthProvider
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProviderName
        in: path
        description: The name of the OAuth Provider.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The OAuth Provider object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      summary: Replace an OAuth Provider object.
      description: "Replace an OAuth Provider object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nOAuth Providers contain information about the issuer of an OAuth token\
        \ that is needed to validate the token and derive a client username from it.\n\
        \n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\noauthProviderName|x|x||||\n\
        tokenIntrospectionPassword|||x|||x\n\n\n\nA SEMP client authorized with a\
        \ minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.13."
      operationId: replaceMsgVpnAuthenticationOauthProvider
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProviderName
        in: path
        description: The name of the OAuth Provider.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The OAuth Provider object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        required: true
      responses:
        "200":
          description: "The OAuth Provider object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      summary: Delete an OAuth Provider object.
      description: |-
        Delete an OAuth Provider object.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.13.
      operationId: deleteMsgVpnAuthenticationOauthProvider
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProviderName
        in: path
        description: The name of the OAuth Provider.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - authenticationOauthProvider
      summary: Update an OAuth Provider object.
      description: |-
        Update an OAuth Provider object. Any attribute missing from the request will be left unchanged.

        OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        oauthProviderName|x|x||||
        tokenIntrospectionPassword|||x|||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.13.
      operationId: updateMsgVpnAuthenticationOauthProvider
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthProviderName
        in: path
        description: The name of the OAuth Provider.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The OAuth Provider object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        required: true
      responses:
        "200":
          description: "The OAuth Provider object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/authorizationGroups:
    get:
      tags:
      - all
      - msgVpn
      - authorizationGroup
      summary: Get a list of LDAP Authorization Group objects.
      description: "Get a list of LDAP Authorization Group objects.\n\nTo use client\
        \ authorization groups configured on an external LDAP server to provide client\
        \ authorizations, LDAP Authorization Group objects must be created on the\
        \ Message VPN that match the authorization groups provisioned on the LDAP\
        \ server. These objects must be configured with the client profiles and ACL\
        \ profiles that will be assigned to the clients that belong to those authorization\
        \ groups. A newly created group is placed at the end of the group list which\
        \ is the lowest priority.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nauthorizationGroupName|x|||\nmsgVpnName|x|||\n\
        orderAfterAuthorizationGroupName||x||\norderBeforeAuthorizationGroupName||x||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: getMsgVpnAuthorizationGroups
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of LDAP Authorization Group objects' attributes,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - authorizationGroup
      summary: Create an LDAP Authorization Group object.
      description: "Create an LDAP Authorization Group object. Any attribute missing\
        \ from the request will be set to its default value.\n\nTo use client authorization\
        \ groups configured on an external LDAP server to provide client authorizations,\
        \ LDAP Authorization Group objects must be created on the Message VPN that\
        \ match the authorization groups provisioned on the LDAP server. These objects\
        \ must be configured with the client profiles and ACL profiles that will be\
        \ assigned to the clients that belong to those authorization groups. A newly\
        \ created group is placed at the end of the group list which is the lowest\
        \ priority.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nauthorizationGroupName|x|x||||\n\
        msgVpnName|x||x|||\norderAfterAuthorizationGroupName||||x||\norderBeforeAuthorizationGroupName||||x||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nMsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName\n\
        MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: createMsgVpnAuthorizationGroup
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The LDAP Authorization Group object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        required: true
      responses:
        "200":
          description: "The LDAP Authorization Group object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/authorizationGroups/{authorizationGroupName}:
    get:
      tags:
      - all
      - msgVpn
      - authorizationGroup
      summary: Get an LDAP Authorization Group object.
      description: "Get an LDAP Authorization Group object.\n\nTo use client authorization\
        \ groups configured on an external LDAP server to provide client authorizations,\
        \ LDAP Authorization Group objects must be created on the Message VPN that\
        \ match the authorization groups provisioned on the LDAP server. These objects\
        \ must be configured with the client profiles and ACL profiles that will be\
        \ assigned to the clients that belong to those authorization groups. A newly\
        \ created group is placed at the end of the group list which is the lowest\
        \ priority.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        authorizationGroupName|x|||\nmsgVpnName|x|||\norderAfterAuthorizationGroupName||x||\n\
        orderBeforeAuthorizationGroupName||x||\n\n\n\nA SEMP client authorized with\
        \ a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.0."
      operationId: getMsgVpnAuthorizationGroup
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authorizationGroupName
        in: path
        description: "The name of the LDAP Authorization Group. Special care is needed\
          \ if the group name contains special characters such as '#', '+', ';', '='\
          \ as the value of the group name returned from the LDAP server might prepend\
          \ those characters with '\\'. For example a group name called 'test#,lab,com'\
          \ will be returned from the LDAP server as 'test\\#,lab,com'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The LDAP Authorization Group object's attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - authorizationGroup
      summary: Replace an LDAP Authorization Group object.
      description: "Replace an LDAP Authorization Group object. Any attribute missing\
        \ from the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nTo use client authorization groups configured on an external\
        \ LDAP server to provide client authorizations, LDAP Authorization Group objects\
        \ must be created on the Message VPN that match the authorization groups provisioned\
        \ on the LDAP server. These objects must be configured with the client profiles\
        \ and ACL profiles that will be assigned to the clients that belong to those\
        \ authorization groups. A newly created group is placed at the end of the\
        \ group list which is the lowest priority.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\naclProfileName||||x||\nauthorizationGroupName|x|x||||\n\
        clientProfileName||||x||\nmsgVpnName|x|x||||\norderAfterAuthorizationGroupName|||x|||\n\
        orderBeforeAuthorizationGroupName|||x|||\n\n\n\nThe following attributes in\
        \ the request may only be provided in certain combinations with other attributes:\n\
        \n\nClass|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nMsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName\n\
        MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: replaceMsgVpnAuthorizationGroup
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authorizationGroupName
        in: path
        description: "The name of the LDAP Authorization Group. Special care is needed\
          \ if the group name contains special characters such as '#', '+', ';', '='\
          \ as the value of the group name returned from the LDAP server might prepend\
          \ those characters with '\\'. For example a group name called 'test#,lab,com'\
          \ will be returned from the LDAP server as 'test\\#,lab,com'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The LDAP Authorization Group object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        required: true
      responses:
        "200":
          description: "The LDAP Authorization Group object's attributes after being\
            \ replaced, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - authorizationGroup
      summary: Delete an LDAP Authorization Group object.
      description: "Delete an LDAP Authorization Group object.\n\nTo use client authorization\
        \ groups configured on an external LDAP server to provide client authorizations,\
        \ LDAP Authorization Group objects must be created on the Message VPN that\
        \ match the authorization groups provisioned on the LDAP server. These objects\
        \ must be configured with the client profiles and ACL profiles that will be\
        \ assigned to the clients that belong to those authorization groups. A newly\
        \ created group is placed at the end of the group list which is the lowest\
        \ priority.\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-write\" is required to perform this operation.\n\nThis has\
        \ been available since 2.0."
      operationId: deleteMsgVpnAuthorizationGroup
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authorizationGroupName
        in: path
        description: "The name of the LDAP Authorization Group. Special care is needed\
          \ if the group name contains special characters such as '#', '+', ';', '='\
          \ as the value of the group name returned from the LDAP server might prepend\
          \ those characters with '\\'. For example a group name called 'test#,lab,com'\
          \ will be returned from the LDAP server as 'test\\#,lab,com'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - authorizationGroup
      summary: Update an LDAP Authorization Group object.
      description: "Update an LDAP Authorization Group object. Any attribute missing\
        \ from the request will be left unchanged.\n\nTo use client authorization\
        \ groups configured on an external LDAP server to provide client authorizations,\
        \ LDAP Authorization Group objects must be created on the Message VPN that\
        \ match the authorization groups provisioned on the LDAP server. These objects\
        \ must be configured with the client profiles and ACL profiles that will be\
        \ assigned to the clients that belong to those authorization groups. A newly\
        \ created group is placed at the end of the group list which is the lowest\
        \ priority.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\naclProfileName||||x||\nauthorizationGroupName|x|x||||\n\
        clientProfileName||||x||\nmsgVpnName|x|x||||\norderAfterAuthorizationGroupName|||x|||\n\
        orderBeforeAuthorizationGroupName|||x|||\n\n\n\nThe following attributes in\
        \ the request may only be provided in certain combinations with other attributes:\n\
        \n\nClass|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nMsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName\n\
        MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: updateMsgVpnAuthorizationGroup
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: authorizationGroupName
        in: path
        description: "The name of the LDAP Authorization Group. Special care is needed\
          \ if the group name contains special characters such as '#', '+', ';', '='\
          \ as the value of the group name returned from the LDAP server might prepend\
          \ those characters with '\\'. For example a group name called 'test#,lab,com'\
          \ will be returned from the LDAP server as 'test\\#,lab,com'."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The LDAP Authorization Group object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        required: true
      responses:
        "200":
          description: "The LDAP Authorization Group object's attributes after being\
            \ updated, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnAuthorizationGroupResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Bridge objects.
      description: |-
        Get a list of Bridge objects.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        remoteAuthenticationBasicPassword||x||x
        remoteAuthenticationClientCertContent||x||x
        remoteAuthenticationClientCertPassword||x||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridges
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Bridge objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Create a Bridge object.
      description: |-
        Create a Bridge object. Any attribute missing from the request will be set to its default value.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x|x||||
        bridgeVirtualRouter|x|x||||
        msgVpnName|x||x|||
        remoteAuthenticationBasicPassword||||x||x
        remoteAuthenticationClientCertContent||||x||x
        remoteAuthenticationClientCertPassword||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
        MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
        MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Bridge object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridge'
        required: true
      responses:
        "200":
          description: "The Bridge object's attributes after being created, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Bridge object.
      description: |-
        Get a Bridge object.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        remoteAuthenticationBasicPassword||x||x
        remoteAuthenticationClientCertContent||x||x
        remoteAuthenticationClientCertPassword||x||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Bridge object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Replace a Bridge object.
      description: "Replace a Bridge object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nBridges can be used to link two Message VPNs so that messages published\
        \ to one Message VPN that match the topic subscriptions set for the bridge\
        \ are also delivered to the linked Message VPN.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nbridgeName|x|x||||\nbridgeVirtualRouter|x|x||||\n\
        maxTtl||||x||\nmsgVpnName|x|x||||\nremoteAuthenticationBasicClientUsername||||x||\n\
        remoteAuthenticationBasicPassword|||x|x||x\nremoteAuthenticationClientCertContent|||x|x||x\n\
        remoteAuthenticationClientCertPassword|||x|x||\nremoteAuthenticationScheme||||x||\n\
        remoteDeliverToOnePriority||||x||\n\n\n\nThe following attributes in the request\
        \ may only be provided in certain combinations with other attributes:\n\n\n\
        Class|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nMsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|\n\
        MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|\n\
        MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: replaceMsgVpnBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Bridge object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridge'
        required: true
      responses:
        "200":
          description: "The Bridge object's attributes after being replaced, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Delete a Bridge object.
      description: |-
        Delete a Bridge object.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Update a Bridge object.
      description: |-
        Update a Bridge object. Any attribute missing from the request will be left unchanged.

        Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x|x||||
        bridgeVirtualRouter|x|x||||
        maxTtl||||x||
        msgVpnName|x|x||||
        remoteAuthenticationBasicClientUsername||||x||
        remoteAuthenticationBasicPassword|||x|x||x
        remoteAuthenticationClientCertContent|||x|x||x
        remoteAuthenticationClientCertPassword|||x|x||
        remoteAuthenticationScheme||||x||
        remoteDeliverToOnePriority||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
        MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
        MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Bridge object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridge'
        required: true
      responses:
        "200":
          description: "The Bridge object's attributes after being updated, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Remote Message VPN objects.
      description: |-
        Get a list of Remote Message VPN objects.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        password||x||x
        remoteMsgVpnInterface|x|||
        remoteMsgVpnLocation|x|||
        remoteMsgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridgeRemoteMsgVpns
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Remote Message VPN objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Create a Remote Message VPN object.
      description: |-
        Create a Remote Message VPN object. Any attribute missing from the request will be set to its default value.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x||x|||
        bridgeVirtualRouter|x||x|||
        msgVpnName|x||x|||
        password||||x||x
        remoteMsgVpnInterface|x|||||
        remoteMsgVpnLocation|x|x||||
        remoteMsgVpnName|x|x||||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
        MsgVpnBridgeRemoteMsgVpn|password|clientUsername|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnBridgeRemoteMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Remote Message VPN object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        required: true
      responses:
        "200":
          description: "The Remote Message VPN object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteMsgVpns/{remoteMsgVpnName},{remoteMsgVpnLocation},{remoteMsgVpnInterface}
  : get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Remote Message VPN object.
      description: |-
        Get a Remote Message VPN object.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        password||x||x
        remoteMsgVpnInterface|x|||
        remoteMsgVpnLocation|x|||
        remoteMsgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridgeRemoteMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnName
        in: path
        description: The name of the remote Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnLocation
        in: path
        description: "The location of the remote Message VPN as either an FQDN with\
          \ port, IP address with port, or virtual router name (starting with \"v:\"\
          )."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnInterface
        in: path
        description: "The physical interface on the local Message VPN host for connecting\
          \ to the remote Message VPN. By default, an interface is chosen automatically\
          \ (recommended), but if specified, `remoteMsgVpnLocation` must not be a\
          \ virtual router name."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Remote Message VPN object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Replace a Remote Message VPN object.
      description: "Replace a Remote Message VPN object. Any attribute missing from\
        \ the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nThe Remote Message VPN is the Message VPN that the Bridge\
        \ connects to.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nbridgeName|x|x||||\nbridgeVirtualRouter|x|x||||\n\
        clientUsername||||x||\ncompressedDataEnabled||||x||\negressFlowWindowSize||||x||\n\
        msgVpnName|x|x||||\npassword|||x|x||x\nremoteMsgVpnInterface|x|x||||\nremoteMsgVpnLocation|x|x||||\n\
        remoteMsgVpnName|x|x||||\ntlsEnabled||||x||\n\n\n\nThe following attributes\
        \ in the request may only be provided in certain combinations with other attributes:\n\
        \n\nClass|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nMsgVpnBridgeRemoteMsgVpn|clientUsername|password|\n\
        MsgVpnBridgeRemoteMsgVpn|password|clientUsername|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.0."
      operationId: replaceMsgVpnBridgeRemoteMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnName
        in: path
        description: The name of the remote Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnLocation
        in: path
        description: "The location of the remote Message VPN as either an FQDN with\
          \ port, IP address with port, or virtual router name (starting with \"v:\"\
          )."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnInterface
        in: path
        description: "The physical interface on the local Message VPN host for connecting\
          \ to the remote Message VPN. By default, an interface is chosen automatically\
          \ (recommended), but if specified, `remoteMsgVpnLocation` must not be a\
          \ virtual router name."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Remote Message VPN object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        required: true
      responses:
        "200":
          description: "The Remote Message VPN object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Delete a Remote Message VPN object.
      description: |-
        Delete a Remote Message VPN object.

        The Remote Message VPN is the Message VPN that the Bridge connects to.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnBridgeRemoteMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnName
        in: path
        description: The name of the remote Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnLocation
        in: path
        description: "The location of the remote Message VPN as either an FQDN with\
          \ port, IP address with port, or virtual router name (starting with \"v:\"\
          )."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnInterface
        in: path
        description: "The physical interface on the local Message VPN host for connecting\
          \ to the remote Message VPN. By default, an interface is chosen automatically\
          \ (recommended), but if specified, `remoteMsgVpnLocation` must not be a\
          \ virtual router name."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Update a Remote Message VPN object.
      description: |-
        Update a Remote Message VPN object. Any attribute missing from the request will be left unchanged.

        The Remote Message VPN is the Message VPN that the Bridge connects to.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x|x||||
        bridgeVirtualRouter|x|x||||
        clientUsername||||x||
        compressedDataEnabled||||x||
        egressFlowWindowSize||||x||
        msgVpnName|x|x||||
        password|||x|x||x
        remoteMsgVpnInterface|x|x||||
        remoteMsgVpnLocation|x|x||||
        remoteMsgVpnName|x|x||||
        tlsEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
        MsgVpnBridgeRemoteMsgVpn|password|clientUsername|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnBridgeRemoteMsgVpn
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnName
        in: path
        description: The name of the remote Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnLocation
        in: path
        description: "The location of the remote Message VPN as either an FQDN with\
          \ port, IP address with port, or virtual router name (starting with \"v:\"\
          )."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteMsgVpnInterface
        in: path
        description: "The physical interface on the local Message VPN host for connecting\
          \ to the remote Message VPN. By default, an interface is chosen automatically\
          \ (recommended), but if specified, `remoteMsgVpnLocation` must not be a\
          \ virtual router name."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Remote Message VPN object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        required: true
      responses:
        "200":
          description: "The Remote Message VPN object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Remote Subscription objects.
      description: |-
        Get a list of Remote Subscription objects.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        remoteSubscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridgeRemoteSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Remote Subscription objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Create a Remote Subscription object.
      description: |-
        Create a Remote Subscription object. Any attribute missing from the request will be set to its default value.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        bridgeName|x||x|||
        bridgeVirtualRouter|x||x|||
        deliverAlwaysEnabled||x||||
        msgVpnName|x||x|||
        remoteSubscriptionTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnBridgeRemoteSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Remote Subscription object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
        required: true
      responses:
        "200":
          description: "The Remote Subscription object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/remoteSubscriptions/{remoteSubscriptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Remote Subscription object.
      description: |-
        Get a Remote Subscription object.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        bridgeName|x|||
        bridgeVirtualRouter|x|||
        msgVpnName|x|||
        remoteSubscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnBridgeRemoteSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteSubscriptionTopic
        in: path
        description: The topic of the Bridge remote subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Remote Subscription object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Delete a Remote Subscription object.
      description: |-
        Delete a Remote Subscription object.

        A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnBridgeRemoteSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteSubscriptionTopic
        in: path
        description: The topic of the Bridge remote subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a list of Trusted Common Name objects.
      description: "Get a list of Trusted Common Name objects.\n\nThe Trusted Common\
        \ Names for the Bridge are used by encrypted transports to verify the name\
        \ in the certificate presented by the remote node. They must include the common\
        \ name of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nbridgeName|x||x|\nbridgeVirtualRouter|x||x|\n\
        msgVpnName|x||x|\ntlsTrustedCommonName|x||x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been deprecated since 2.18. Common Name validation\
        \ has been replaced by Server Certificate Name validation."
      operationId: getMsgVpnBridgeTlsTrustedCommonNames
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Trusted Common Name objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Create a Trusted Common Name object.
      description: "Create a Trusted Common Name object. Any attribute missing from\
        \ the request will be set to its default value.\n\nThe Trusted Common Names\
        \ for the Bridge are used by encrypted transports to verify the name in the\
        \ certificate presented by the remote node. They must include the common name\
        \ of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nbridgeName|x||x||x|\nbridgeVirtualRouter|x||x||x|\n\
        msgVpnName|x||x||x|\ntlsTrustedCommonName|x|x|||x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been deprecated since 2.18. Common Name validation\
        \ has been replaced by Server Certificate Name validation."
      operationId: createMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Trusted Common Name object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
        required: true
      responses:
        "200":
          description: "The Trusted Common Name object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/bridges/{bridgeName},{bridgeVirtualRouter}/tlsTrustedCommonNames/{tlsTrustedCommonName}:
    get:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Get a Trusted Common Name object.
      description: "Get a Trusted Common Name object.\n\nThe Trusted Common Names\
        \ for the Bridge are used by encrypted transports to verify the name in the\
        \ certificate presented by the remote node. They must include the common name\
        \ of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nbridgeName|x||x|\nbridgeVirtualRouter|x||x|\n\
        msgVpnName|x||x|\ntlsTrustedCommonName|x||x|\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been deprecated since 2.18. Common Name validation\
        \ has been replaced by Server Certificate Name validation."
      operationId: getMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Trusted Common Name object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - bridge
      summary: Delete a Trusted Common Name object.
      description: "Delete a Trusted Common Name object.\n\nThe Trusted Common Names\
        \ for the Bridge are used by encrypted transports to verify the name in the\
        \ certificate presented by the remote node. They must include the common name\
        \ of the remote node's server certificate or client certificate, depending\
        \ upon the initiator of the connection.\n\nA SEMP client authorized with a\
        \ minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been deprecated since 2.18. Common Name validation\
        \ has been replaced by Server Certificate Name validation."
      operationId: deleteMsgVpnBridgeTlsTrustedCommonName
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeName
        in: path
        description: The name of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: bridgeVirtualRouter
        in: path
        description: The virtual router of the Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/clientProfiles:
    get:
      tags:
      - all
      - msgVpn
      - clientProfile
      summary: Get a list of Client Profile objects.
      description: |-
        Get a list of Client Profile objects.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        apiQueueManagementCopyFromOnCreateName|||x|
        apiTopicEndpointManagementCopyFromOnCreateName|||x|
        clientProfileName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnClientProfiles
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Profile objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfilesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - clientProfile
      summary: Create a Client Profile object.
      description: "Create a Client Profile object. Any attribute missing from the\
        \ request will be set to its default value.\n\nClient Profiles are used to\
        \ assign common configuration properties to clients that have been successfully\
        \ authorized.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\napiQueueManagementCopyFromOnCreateName|||||x|\n\
        apiTopicEndpointManagementCopyFromOnCreateName|||||x|\nclientProfileName|x|x||||\n\
        msgVpnName|x||x|||\n\n\n\nThe following attributes in the request may only\
        \ be provided in certain combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\
        EventThresholdByPercent|clearPercent|setPercent|\nEventThresholdByPercent|setPercent|clearPercent|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: createMsgVpnClientProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Profile object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientProfile'
        required: true
      responses:
        "200":
          description: "The Client Profile object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/clientProfiles/{clientProfileName}:
    get:
      tags:
      - all
      - msgVpn
      - clientProfile
      summary: Get a Client Profile object.
      description: |-
        Get a Client Profile object.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        apiQueueManagementCopyFromOnCreateName|||x|
        apiTopicEndpointManagementCopyFromOnCreateName|||x|
        clientProfileName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnClientProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientProfileName
        in: path
        description: The name of the Client Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Profile object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - clientProfile
      summary: Replace a Client Profile object.
      description: "Replace a Client Profile object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nClient Profiles are used to assign common configuration properties\
        \ to clients that have been successfully authorized.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\napiQueueManagementCopyFromOnCreateName|||||x|\n\
        apiTopicEndpointManagementCopyFromOnCreateName|||||x|\nclientProfileName|x|x||||\n\
        msgVpnName|x|x||||\n\n\n\nThe following attributes in the request may only\
        \ be provided in certain combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\
        EventThresholdByPercent|clearPercent|setPercent|\nEventThresholdByPercent|setPercent|clearPercent|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: replaceMsgVpnClientProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientProfileName
        in: path
        description: The name of the Client Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Profile object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientProfile'
        required: true
      responses:
        "200":
          description: "The Client Profile object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - clientProfile
      summary: Delete a Client Profile object.
      description: |-
        Delete a Client Profile object.

        Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnClientProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientProfileName
        in: path
        description: The name of the Client Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - clientProfile
      summary: Update a Client Profile object.
      description: "Update a Client Profile object. Any attribute missing from the\
        \ request will be left unchanged.\n\nClient Profiles are used to assign common\
        \ configuration properties to clients that have been successfully authorized.\n\
        \n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\napiQueueManagementCopyFromOnCreateName|||||x|\n\
        apiTopicEndpointManagementCopyFromOnCreateName|||||x|\nclientProfileName|x|x||||\n\
        msgVpnName|x|x||||\n\n\n\nThe following attributes in the request may only\
        \ be provided in certain combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\
        EventThresholdByPercent|clearPercent|setPercent|\nEventThresholdByPercent|setPercent|clearPercent|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: updateMsgVpnClientProfile
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientProfileName
        in: path
        description: The name of the Client Profile.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Profile object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientProfile'
        required: true
      responses:
        "200":
          description: "The Client Profile object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientProfileResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/clientUsernames:
    get:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Get a list of Client Username objects.
      description: |-
        Get a list of Client Username objects.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        clientUsername|x|||
        msgVpnName|x|||
        password||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnClientUsernames
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Client Username objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Create a Client Username object.
      description: |-
        Create a Client Username object. Any attribute missing from the request will be set to its default value.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        clientUsername|x|x||||
        msgVpnName|x||x|||
        password||||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnClientUsername
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Username object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientUsername'
        required: true
      responses:
        "200":
          description: "The Client Username object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/clientUsernames/{clientUsername}:
    get:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Get a Client Username object.
      description: |-
        Get a Client Username object.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        clientUsername|x|||
        msgVpnName|x|||
        password||x||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnClientUsername
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientUsername
        in: path
        description: The name of the Client Username.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Client Username object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Replace a Client Username object.
      description: "Replace a Client Username object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nA client is only authorized to connect to a Message VPN that is associated\
        \ with a Client Username that the client has been assigned.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\naclProfileName||||x||\nclientProfileName||||x||\n\
        clientUsername|x|x||||\nmsgVpnName|x|x||||\npassword|||x|||x\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: replaceMsgVpnClientUsername
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientUsername
        in: path
        description: The name of the Client Username.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Username object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientUsername'
        required: true
      responses:
        "200":
          description: "The Client Username object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Delete a Client Username object.
      description: |-
        Delete a Client Username object.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnClientUsername
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientUsername
        in: path
        description: The name of the Client Username.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - clientUsername
      summary: Update a Client Username object.
      description: |-
        Update a Client Username object. Any attribute missing from the request will be left unchanged.

        A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        aclProfileName||||x||
        clientProfileName||||x||
        clientUsername|x|x||||
        msgVpnName|x|x||||
        password|||x|||x



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnClientUsername
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clientUsername
        in: path
        description: The name of the Client Username.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Client Username object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnClientUsername'
        required: true
      responses:
        "200":
          description: "The Client Username object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnClientUsernameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Distributed Cache objects.
      description: "Get a list of Distributed Cache objects.\n\nA Distributed Cache\
        \ is a collection of one or more Cache Clusters that belong to the same Message\
        \ VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe\
        \ to a different set of topics. This effectively divides up the configured\
        \ topic space, to provide scaling to very large topic spaces or very high\
        \ cached message throughput.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ncacheName|x|||\nmsgVpnName|x|||\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnDistributedCaches
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Distributed Cache objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCachesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Create a Distributed Cache object.
      description: "Create a Distributed Cache object. Any attribute missing from\
        \ the request will be set to its default value.\n\nA Distributed Cache is\
        \ a collection of one or more Cache Clusters that belong to the same Message\
        \ VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe\
        \ to a different set of topics. This effectively divides up the configured\
        \ topic space, to provide scaling to very large topic spaces or very high\
        \ cached message throughput.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncacheName|x|x||||\nmsgVpnName|x||x|||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nMsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|\n\
        MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: createMsgVpnDistributedCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Distributed Cache object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCache'
        required: true
      responses:
        "200":
          description: "The Distributed Cache object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Distributed Cache object.
      description: "Get a Distributed Cache object.\n\nA Distributed Cache is a collection\
        \ of one or more Cache Clusters that belong to the same Message VPN. Each\
        \ Cache Cluster in a Distributed Cache is configured to subscribe to a different\
        \ set of topics. This effectively divides up the configured topic space, to\
        \ provide scaling to very large topic spaces or very high cached message throughput.\n\
        \n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        cacheName|x|||\nmsgVpnName|x|||\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"vpn/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: getMsgVpnDistributedCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Distributed Cache object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Replace a Distributed Cache object.
      description: "Replace a Distributed Cache object. Any attribute missing from\
        \ the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nA Distributed Cache is a collection of one or more Cache Clusters\
        \ that belong to the same Message VPN. Each Cache Cluster in a Distributed\
        \ Cache is configured to subscribe to a different set of topics. This effectively\
        \ divides up the configured topic space, to provide scaling to very large\
        \ topic spaces or very high cached message throughput.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncacheName|x|x||||\nmsgVpnName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nMsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|\n\
        MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: replaceMsgVpnDistributedCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Distributed Cache object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCache'
        required: true
      responses:
        "200":
          description: "The Distributed Cache object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Delete a Distributed Cache object.
      description: "Delete a Distributed Cache object.\n\nA Distributed Cache is a\
        \ collection of one or more Cache Clusters that belong to the same Message\
        \ VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe\
        \ to a different set of topics. This effectively divides up the configured\
        \ topic space, to provide scaling to very large topic spaces or very high\
        \ cached message throughput.\n\nA SEMP client authorized with a minimum access\
        \ scope/level of \"vpn/read-write\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: deleteMsgVpnDistributedCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Update a Distributed Cache object.
      description: "Update a Distributed Cache object. Any attribute missing from\
        \ the request will be left unchanged.\n\nA Distributed Cache is a collection\
        \ of one or more Cache Clusters that belong to the same Message VPN. Each\
        \ Cache Cluster in a Distributed Cache is configured to subscribe to a different\
        \ set of topics. This effectively divides up the configured topic space, to\
        \ provide scaling to very large topic spaces or very high cached message throughput.\n\
        \n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncacheName|x|x||||\nmsgVpnName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nMsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|\n\
        MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: updateMsgVpnDistributedCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Distributed Cache object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCache'
        required: true
      responses:
        "200":
          description: "The Distributed Cache object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Cache Cluster objects.
      description: "Get a list of Cache Cluster objects.\n\nA Cache Cluster is a collection\
        \ of one or more Cache Instances that subscribe to exactly the same topics.\
        \ Cache Instances are grouped together in a Cache Cluster for the purpose\
        \ of fault tolerance and load balancing. As published messages are received,\
        \ the message broker message bus sends these live data messages to the Cache\
        \ Instances in the Cache Cluster. This enables client cache requests to be\
        \ served by any of Cache Instances in the Cache Cluster.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ncacheName|x|||\nclusterName|x|||\nmsgVpnName|x|||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnDistributedCacheClusters
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Cache Cluster objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClustersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Create a Cache Cluster object.
      description: "Create a Cache Cluster object. Any attribute missing from the\
        \ request will be set to its default value.\n\nA Cache Cluster is a collection\
        \ of one or more Cache Instances that subscribe to exactly the same topics.\
        \ Cache Instances are grouped together in a Cache Cluster for the purpose\
        \ of fault tolerance and load balancing. As published messages are received,\
        \ the message broker message bus sends these live data messages to the Cache\
        \ Instances in the Cache Cluster. This enables client cache requests to be\
        \ served by any of Cache Instances in the Cache Cluster.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncacheName|x||x|||\nclusterName|x|x||||\n\
        msgVpnName|x||x|||\n\n\n\nThe following attributes in the request may only\
        \ be provided in certain combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThresholdByPercent|clearPercent|setPercent|\nEventThresholdByPercent|setPercent|clearPercent|\n\
        EventThresholdByValue|clearValue|setValue|\nEventThresholdByValue|setValue|clearValue|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: createMsgVpnDistributedCacheCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cache Cluster object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        required: true
      responses:
        "200":
          description: "The Cache Cluster object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Cache Cluster object.
      description: "Get a Cache Cluster object.\n\nA Cache Cluster is a collection\
        \ of one or more Cache Instances that subscribe to exactly the same topics.\
        \ Cache Instances are grouped together in a Cache Cluster for the purpose\
        \ of fault tolerance and load balancing. As published messages are received,\
        \ the message broker message bus sends these live data messages to the Cache\
        \ Instances in the Cache Cluster. This enables client cache requests to be\
        \ served by any of Cache Instances in the Cache Cluster.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\ncacheName|x|||\nclusterName|x|||\nmsgVpnName|x|||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnDistributedCacheCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Cache Cluster object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Replace a Cache Cluster object.
      description: "Replace a Cache Cluster object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nA Cache Cluster is a collection of one or more Cache Instances that\
        \ subscribe to exactly the same topics. Cache Instances are grouped together\
        \ in a Cache Cluster for the purpose of fault tolerance and load balancing.\
        \ As published messages are received, the message broker message bus sends\
        \ these live data messages to the Cache Instances in the Cache Cluster. This\
        \ enables client cache requests to be served by any of Cache Instances in\
        \ the Cache Cluster.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncacheName|x|x||||\nclusterName|x|x||||\n\
        msgVpnName|x|x||||\n\n\n\nThe following attributes in the request may only\
        \ be provided in certain combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThresholdByPercent|clearPercent|setPercent|\nEventThresholdByPercent|setPercent|clearPercent|\n\
        EventThresholdByValue|clearValue|setValue|\nEventThresholdByValue|setValue|clearValue|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: replaceMsgVpnDistributedCacheCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cache Cluster object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        required: true
      responses:
        "200":
          description: "The Cache Cluster object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Delete a Cache Cluster object.
      description: "Delete a Cache Cluster object.\n\nA Cache Cluster is a collection\
        \ of one or more Cache Instances that subscribe to exactly the same topics.\
        \ Cache Instances are grouped together in a Cache Cluster for the purpose\
        \ of fault tolerance and load balancing. As published messages are received,\
        \ the message broker message bus sends these live data messages to the Cache\
        \ Instances in the Cache Cluster. This enables client cache requests to be\
        \ served by any of Cache Instances in the Cache Cluster.\n\nA SEMP client\
        \ authorized with a minimum access scope/level of \"vpn/read-write\" is required\
        \ to perform this operation.\n\nThis has been available since 2.11."
      operationId: deleteMsgVpnDistributedCacheCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Update a Cache Cluster object.
      description: "Update a Cache Cluster object. Any attribute missing from the\
        \ request will be left unchanged.\n\nA Cache Cluster is a collection of one\
        \ or more Cache Instances that subscribe to exactly the same topics. Cache\
        \ Instances are grouped together in a Cache Cluster for the purpose of fault\
        \ tolerance and load balancing. As published messages are received, the message\
        \ broker message bus sends these live data messages to the Cache Instances\
        \ in the Cache Cluster. This enables client cache requests to be served by\
        \ any of Cache Instances in the Cache Cluster.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncacheName|x|x||||\nclusterName|x|x||||\n\
        msgVpnName|x|x||||\n\n\n\nThe following attributes in the request may only\
        \ be provided in certain combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThresholdByPercent|clearPercent|setPercent|\nEventThresholdByPercent|setPercent|clearPercent|\n\
        EventThresholdByValue|clearValue|setValue|\nEventThresholdByValue|setValue|clearValue|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: updateMsgVpnDistributedCacheCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cache Cluster object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        required: true
      responses:
        "200":
          description: "The Cache Cluster object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Home Cache Cluster objects.
      description: |-
        Get a list of Home Cache Cluster objects.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        homeClusterName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusters
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Home Cache Cluster objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Create a Home Cache Cluster object.
      description: |-
        Create a Home Cache Cluster object. Any attribute missing from the request will be set to its default value.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x||x|||
        homeClusterName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Home Cache Cluster object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        required: true
      responses:
        "200":
          description: "The Home Cache Cluster object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Home Cache Cluster object.
      description: |-
        Get a Home Cache Cluster object.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        homeClusterName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Home Cache Cluster object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Delete a Home Cache Cluster object.
      description: |-
        Delete a Home Cache Cluster object.

        A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheClusterGlobalCachingHomeCluster
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes
  : get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Topic Prefix objects.
      description: |-
        Get a list of Topic Prefix objects.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        homeClusterName|x|||
        msgVpnName|x|||
        topicPrefix|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixes
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Prefix objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Create a Topic Prefix object.
      description: |-
        Create a Topic Prefix object. Any attribute missing from the request will be set to its default value.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x||x|||
        homeClusterName|x||x|||
        msgVpnName|x||x|||
        topicPrefix|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Topic Prefix object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        required: true
      responses:
        "200":
          description: "The Topic Prefix object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/globalCachingHomeClusters/{homeClusterName}/topicPrefixes/{topicPrefix}
  : get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Topic Prefix object.
      description: |-
        Get a Topic Prefix object.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        homeClusterName|x|||
        msgVpnName|x|||
        topicPrefix|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicPrefix
        in: path
        description: A topic prefix for global topics available from the remote Home
          Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Prefix object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Delete a Topic Prefix object.
      description: |-
        Delete a Topic Prefix object.

        A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: homeClusterName
        in: path
        description: The name of the remote Home Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicPrefix
        in: path
        description: A topic prefix for global topics available from the remote Home
          Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Cache Instance objects.
      description: |-
        Get a list of Cache Instance objects.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        instanceName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstances
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Cache Instance objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstancesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Create a Cache Instance object.
      description: |-
        Create a Cache Instance object. Any attribute missing from the request will be set to its default value.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x||x|||
        instanceName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheClusterInstance
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cache Instance object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        required: true
      responses:
        "200":
          description: "The Cache Instance object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/instances/{instanceName}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Cache Instance object.
      description: |-
        Get a Cache Instance object.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        instanceName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterInstance
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Cache Instance object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Replace a Cache Instance object.
      description: "Replace a Cache Instance object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nA Cache Instance is a single Cache process that belongs to a single\
        \ Cache Cluster. A Cache Instance object provisioned on the broker is used\
        \ to disseminate configuration information to the Cache process. Cache Instances\
        \ listen for and cache live data messages that match the topic subscriptions\
        \ configured for their parent Cache Cluster.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncacheName|x|x||||\nclusterName|x|x||||\n\
        instanceName|x|x||||\nmsgVpnName|x|x||||\n\n\n\nA SEMP client authorized with\
        \ a minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.11."
      operationId: replaceMsgVpnDistributedCacheClusterInstance
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cache Instance object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        required: true
      responses:
        "200":
          description: "The Cache Instance object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Delete a Cache Instance object.
      description: |-
        Delete a Cache Instance object.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheClusterInstance
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Update a Cache Instance object.
      description: |-
        Update a Cache Instance object. Any attribute missing from the request will be left unchanged.

        A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        clusterName|x|x||||
        instanceName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateMsgVpnDistributedCacheClusterInstance
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: instanceName
        in: path
        description: The name of the Cache Instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Cache Instance object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        required: true
      responses:
        "200":
          description: "The Cache Instance object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a list of Topic objects.
      description: |-
        Get a list of Topic objects.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        msgVpnName|x|||
        topic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterTopics
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Create a Topic object.
      description: |-
        Create a Topic object. Any attribute missing from the request will be set to its default value.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x||x|||
        clusterName|x||x|||
        msgVpnName|x||x|||
        topic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnDistributedCacheClusterTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Topic object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
        required: true
      responses:
        "200":
          description: "The Topic object's attributes after being created, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/distributedCaches/{cacheName}/clusters/{clusterName}/topics/{topic}:
    get:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Get a Topic object.
      description: |-
        Get a Topic object.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        clusterName|x|||
        msgVpnName|x|||
        topic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnDistributedCacheClusterTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topic
        in: path
        description: The value of the Topic in the form a/b/c.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - distributedCache
      summary: Delete a Topic object.
      description: |-
        Delete a Topic object.

        The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnDistributedCacheClusterTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the Distributed Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: clusterName
        in: path
        description: The name of the Cache Cluster.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topic
        in: path
        description: The value of the Topic in the form a/b/c.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/dmrBridges:
    get:
      tags:
      - all
      - msgVpn
      - dmrBridge
      summary: Get a list of DMR Bridge objects.
      description: "Get a list of DMR Bridge objects.\n\nA DMR Bridge is required\
        \ to establish a data channel over a corresponding external link to the remote\
        \ node for a given Message VPN. Each DMR Bridge identifies which external\
        \ link the Message VPN should use, and what the name of the equivalent Message\
        \ VPN at the remote node is.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nremoteNodeName|x|||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnDmrBridges
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of DMR Bridge objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - dmrBridge
      summary: Create a DMR Bridge object.
      description: "Create a DMR Bridge object. Any attribute missing from the request\
        \ will be set to its default value.\n\nA DMR Bridge is required to establish\
        \ a data channel over a corresponding external link to the remote node for\
        \ a given Message VPN. Each DMR Bridge identifies which external link the\
        \ Message VPN should use, and what the name of the equivalent Message VPN\
        \ at the remote node is.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x||x|||\nremoteNodeName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: createMsgVpnDmrBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The DMR Bridge object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDmrBridge'
        required: true
      responses:
        "200":
          description: "The DMR Bridge object's attributes after being created, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/dmrBridges/{remoteNodeName}:
    get:
      tags:
      - all
      - msgVpn
      - dmrBridge
      summary: Get a DMR Bridge object.
      description: "Get a DMR Bridge object.\n\nA DMR Bridge is required to establish\
        \ a data channel over a corresponding external link to the remote node for\
        \ a given Message VPN. Each DMR Bridge identifies which external link the\
        \ Message VPN should use, and what the name of the equivalent Message VPN\
        \ at the remote node is.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nremoteNodeName|x|||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: getMsgVpnDmrBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the DMR Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The DMR Bridge object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - dmrBridge
      summary: Replace a DMR Bridge object.
      description: "Replace a DMR Bridge object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nA DMR Bridge is required to establish a data channel over a corresponding\
        \ external link to the remote node for a given Message VPN. Each DMR Bridge\
        \ identifies which external link the Message VPN should use, and what the\
        \ name of the equivalent Message VPN at the remote node is.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nremoteNodeName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: replaceMsgVpnDmrBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the DMR Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The DMR Bridge object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDmrBridge'
        required: true
      responses:
        "200":
          description: "The DMR Bridge object's attributes after being replaced, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - dmrBridge
      summary: Delete a DMR Bridge object.
      description: "Delete a DMR Bridge object.\n\nA DMR Bridge is required to establish\
        \ a data channel over a corresponding external link to the remote node for\
        \ a given Message VPN. Each DMR Bridge identifies which external link the\
        \ Message VPN should use, and what the name of the equivalent Message VPN\
        \ at the remote node is.\n\nA SEMP client authorized with a minimum access\
        \ scope/level of \"global/read-write\" is required to perform this operation.\n\
        \nThis has been available since 2.11."
      operationId: deleteMsgVpnDmrBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the DMR Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - dmrBridge
      summary: Update a DMR Bridge object.
      description: "Update a DMR Bridge object. Any attribute missing from the request\
        \ will be left unchanged.\n\nA DMR Bridge is required to establish a data\
        \ channel over a corresponding external link to the remote node for a given\
        \ Message VPN. Each DMR Bridge identifies which external link the Message\
        \ VPN should use, and what the name of the equivalent Message VPN at the remote\
        \ node is.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nremoteNodeName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: updateMsgVpnDmrBridge
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: remoteNodeName
        in: path
        description: The name of the node at the remote end of the DMR Bridge.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The DMR Bridge object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnDmrBridge'
        required: true
      responses:
        "200":
          description: "The DMR Bridge object's attributes after being updated, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnDmrBridgeResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiConnectionFactories:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a list of JNDI Connection Factory objects.
      description: |-
        Get a list of JNDI Connection Factory objects.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        connectionFactoryName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiConnectionFactories
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of JNDI Connection Factory objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoriesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Create a JNDI Connection Factory object.
      description: |-
        Create a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        connectionFactoryName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: createMsgVpnJndiConnectionFactory
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Connection Factory object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        required: true
      responses:
        "200":
          description: "The JNDI Connection Factory object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiConnectionFactories/{connectionFactoryName}:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a JNDI Connection Factory object.
      description: |-
        Get a JNDI Connection Factory object.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        connectionFactoryName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiConnectionFactory
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connectionFactoryName
        in: path
        description: The name of the JMS Connection Factory.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The JNDI Connection Factory object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Replace a JNDI Connection Factory object.
      description: "Replace a JNDI Connection Factory object. Any attribute missing\
        \ from the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nThe message broker provides an internal JNDI store for provisioned\
        \ Connection Factory objects that clients can access through JNDI lookups.\n\
        \n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nconnectionFactoryName|x|x||||\n\
        msgVpnName|x|x||||\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-write\" is required to perform this operation.\n\nThis has\
        \ been available since 2.2."
      operationId: replaceMsgVpnJndiConnectionFactory
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connectionFactoryName
        in: path
        description: The name of the JMS Connection Factory.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Connection Factory object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        required: true
      responses:
        "200":
          description: "The JNDI Connection Factory object's attributes after being\
            \ replaced, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Delete a JNDI Connection Factory object.
      description: |-
        Delete a JNDI Connection Factory object.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: deleteMsgVpnJndiConnectionFactory
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connectionFactoryName
        in: path
        description: The name of the JMS Connection Factory.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Update a JNDI Connection Factory object.
      description: |-
        Update a JNDI Connection Factory object. Any attribute missing from the request will be left unchanged.

        The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        connectionFactoryName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: updateMsgVpnJndiConnectionFactory
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: connectionFactoryName
        in: path
        description: The name of the JMS Connection Factory.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Connection Factory object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        required: true
      responses:
        "200":
          description: "The JNDI Connection Factory object's attributes after being\
            \ updated, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiQueues:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a list of JNDI Queue objects.
      description: |-
        Get a list of JNDI Queue objects.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiQueues
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of JNDI Queue objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueuesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Create a JNDI Queue object.
      description: |-
        Create a JNDI Queue object. Any attribute missing from the request will be set to its default value.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        queueName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: createMsgVpnJndiQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Queue object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiQueue'
        required: true
      responses:
        "200":
          description: "The JNDI Queue object's attributes after being created, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiQueues/{queueName}:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a JNDI Queue object.
      description: |-
        Get a JNDI Queue object.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The JNDI name of the JMS Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The JNDI Queue object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Replace a JNDI Queue object.
      description: "Replace a JNDI Queue object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nThe message broker provides an internal JNDI store for provisioned Queue\
        \ objects that clients can access through JNDI lookups.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nqueueName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.2."
      operationId: replaceMsgVpnJndiQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The JNDI name of the JMS Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Queue object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiQueue'
        required: true
      responses:
        "200":
          description: "The JNDI Queue object's attributes after being replaced, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Delete a JNDI Queue object.
      description: |-
        Delete a JNDI Queue object.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: deleteMsgVpnJndiQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The JNDI name of the JMS Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Update a JNDI Queue object.
      description: |-
        Update a JNDI Queue object. Any attribute missing from the request will be left unchanged.

        The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        queueName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: updateMsgVpnJndiQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The JNDI name of the JMS Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Queue object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiQueue'
        required: true
      responses:
        "200":
          description: "The JNDI Queue object's attributes after being updated, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiTopics:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a list of JNDI Topic objects.
      description: |-
        Get a list of JNDI Topic objects.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiTopics
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of JNDI Topic objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Create a JNDI Topic object.
      description: |-
        Create a JNDI Topic object. Any attribute missing from the request will be set to its default value.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        topicName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: createMsgVpnJndiTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Topic object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiTopic'
        required: true
      responses:
        "200":
          description: "The JNDI Topic object's attributes after being created, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/jndiTopics/{topicName}:
    get:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Get a JNDI Topic object.
      description: |-
        Get a JNDI Topic object.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.2.
      operationId: getMsgVpnJndiTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicName
        in: path
        description: The JNDI name of the JMS Topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The JNDI Topic object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Replace a JNDI Topic object.
      description: "Replace a JNDI Topic object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nThe message broker provides an internal JNDI store for provisioned Topic\
        \ objects that clients can access through JNDI lookups.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\ntopicName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.2."
      operationId: replaceMsgVpnJndiTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicName
        in: path
        description: The JNDI name of the JMS Topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Topic object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiTopic'
        required: true
      responses:
        "200":
          description: "The JNDI Topic object's attributes after being replaced, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Delete a JNDI Topic object.
      description: |-
        Delete a JNDI Topic object.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: deleteMsgVpnJndiTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicName
        in: path
        description: The JNDI name of the JMS Topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - jndi
      summary: Update a JNDI Topic object.
      description: |-
        Update a JNDI Topic object. Any attribute missing from the request will be left unchanged.

        The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x|x||||
        topicName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.2.
      operationId: updateMsgVpnJndiTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicName
        in: path
        description: The JNDI name of the JMS Topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The JNDI Topic object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnJndiTopic'
        required: true
      responses:
        "200":
          description: "The JNDI Topic object's attributes after being updated, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnJndiTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttRetainCaches:
    get:
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      summary: Get a list of MQTT Retain Cache objects.
      description: |-
        Get a list of MQTT Retain Cache objects.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttRetainCaches
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of MQTT Retain Cache objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCachesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      summary: Create an MQTT Retain Cache object.
      description: |-
        Create an MQTT Retain Cache object. Any attribute missing from the request will be set to its default value.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        msgVpnName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: createMsgVpnMqttRetainCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The MQTT Retain Cache object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        required: true
      responses:
        "200":
          description: "The MQTT Retain Cache object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttRetainCaches/{cacheName}:
    get:
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      summary: Get an MQTT Retain Cache object.
      description: |-
        Get an MQTT Retain Cache object.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        cacheName|x|||
        msgVpnName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.11.
      operationId: getMsgVpnMqttRetainCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the MQTT Retain Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The MQTT Retain Cache object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      summary: Replace an MQTT Retain Cache object.
      description: "Replace an MQTT Retain Cache object. Any attribute missing from\
        \ the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nUsing MQTT retained messages allows publishing MQTT clients\
        \ to indicate that a message must be stored for later delivery to subscribing\
        \ clients when those subscribing clients add subscriptions matching the retained\
        \ message's topic. An MQTT Retain Cache processes all retained messages for\
        \ a Message VPN.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\ncacheName|x|x||||\nmsgVpnName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.11."
      operationId: replaceMsgVpnMqttRetainCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the MQTT Retain Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The MQTT Retain Cache object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        required: true
      responses:
        "200":
          description: "The MQTT Retain Cache object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      summary: Delete an MQTT Retain Cache object.
      description: |-
        Delete an MQTT Retain Cache object.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: deleteMsgVpnMqttRetainCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the MQTT Retain Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - mqttRetainCache
      summary: Update an MQTT Retain Cache object.
      description: |-
        Update an MQTT Retain Cache object. Any attribute missing from the request will be left unchanged.

        Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        cacheName|x|x||||
        msgVpnName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.11.
      operationId: updateMsgVpnMqttRetainCache
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: cacheName
        in: path
        description: The name of the MQTT Retain Cache.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The MQTT Retain Cache object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        required: true
      responses:
        "200":
          description: "The MQTT Retain Cache object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttRetainCacheResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttSessions:
    get:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Get a list of MQTT Session objects.
      description: "Get a list of MQTT Session objects.\n\nAn MQTT Session object\
        \ is a virtual representation of an MQTT client connection. An MQTT session\
        \ holds the state of an MQTT client (that is, it is used to contain a client's\
        \ QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).\n\
        \n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        mqttSessionClientId|x|||\nmqttSessionVirtualRouter|x|||\nmsgVpnName|x|||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: getMsgVpnMqttSessions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of MQTT Session objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Create an MQTT Session object.
      description: "Create an MQTT Session object. Any attribute missing from the\
        \ request will be set to its default value.\n\nAn MQTT Session object is a\
        \ virtual representation of an MQTT client connection. An MQTT session holds\
        \ the state of an MQTT client (that is, it is used to contain a client's QoS\
        \ 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).\n\n\n\
        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:|:---:|:---:\n\
        mqttSessionClientId|x|x||||\nmqttSessionVirtualRouter|x|x||||\nmsgVpnName|x||x|||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: createMsgVpnMqttSession
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The MQTT Session object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSession'
        required: true
      responses:
        "200":
          description: "The MQTT Session object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}:
    get:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Get an MQTT Session object.
      description: "Get an MQTT Session object.\n\nAn MQTT Session object is a virtual\
        \ representation of an MQTT client connection. An MQTT session holds the state\
        \ of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS\
        \ 1 subscription sets and any undelivered QoS 1 messages).\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmqttSessionClientId|x|||\nmqttSessionVirtualRouter|x|||\n\
        msgVpnName|x|||\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-only\" is required to perform this operation.\n\nThis has\
        \ been available since 2.1."
      operationId: getMsgVpnMqttSession
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The MQTT Session object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Replace an MQTT Session object.
      description: "Replace an MQTT Session object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nAn MQTT Session object is a virtual representation of an MQTT client\
        \ connection. An MQTT session holds the state of an MQTT client (that is,\
        \ it is used to contain a client's QoS 0 and QoS 1 subscription sets and any\
        \ undelivered QoS 1 messages).\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmqttSessionClientId|x|x||||\nmqttSessionVirtualRouter|x|x||||\n\
        msgVpnName|x|x||||\nowner||||x||\n\n\n\nThe following attributes in the request\
        \ may only be provided in certain combinations with other attributes:\n\n\n\
        Class|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue,\
        \ setValue\nEventThreshold|clearValue|setValue|clearPercent, setPercent\n\
        EventThreshold|setPercent|clearPercent|clearValue, setValue\nEventThreshold|setValue|clearValue|clearPercent,\
        \ setPercent\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-write\" is required to perform this operation.\n\nThis has\
        \ been available since 2.1."
      operationId: replaceMsgVpnMqttSession
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The MQTT Session object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSession'
        required: true
      responses:
        "200":
          description: "The MQTT Session object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Delete an MQTT Session object.
      description: "Delete an MQTT Session object.\n\nAn MQTT Session object is a\
        \ virtual representation of an MQTT client connection. An MQTT session holds\
        \ the state of an MQTT client (that is, it is used to contain a client's QoS\
        \ 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).\n\nA\
        \ SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: deleteMsgVpnMqttSession
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Update an MQTT Session object.
      description: "Update an MQTT Session object. Any attribute missing from the\
        \ request will be left unchanged.\n\nAn MQTT Session object is a virtual representation\
        \ of an MQTT client connection. An MQTT session holds the state of an MQTT\
        \ client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription\
        \ sets and any undelivered QoS 1 messages).\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmqttSessionClientId|x|x||||\nmqttSessionVirtualRouter|x|x||||\n\
        msgVpnName|x|x||||\nowner||||x||\n\n\n\nThe following attributes in the request\
        \ may only be provided in certain combinations with other attributes:\n\n\n\
        Class|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue,\
        \ setValue\nEventThreshold|clearValue|setValue|clearPercent, setPercent\n\
        EventThreshold|setPercent|clearPercent|clearValue, setValue\nEventThreshold|setValue|clearValue|clearPercent,\
        \ setPercent\n\n\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-write\" is required to perform this operation.\n\nThis has\
        \ been available since 2.1."
      operationId: updateMsgVpnMqttSession
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The MQTT Session object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSession'
        required: true
      responses:
        "200":
          description: "The MQTT Session object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions:
    get:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Get a list of Subscription objects.
      description: "Get a list of Subscription objects.\n\nAn MQTT session contains\
        \ a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription\
        \ defaults to QoS 0.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmqttSessionClientId|x|||\nmqttSessionVirtualRouter|x|||\n\
        msgVpnName|x|||\nsubscriptionTopic|x|||\n\n\n\nA SEMP client authorized with\
        \ a minimum access scope/level of \"vpn/read-only\" is required to perform\
        \ this operation.\n\nThis has been available since 2.1."
      operationId: getMsgVpnMqttSessionSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Subscription objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Create a Subscription object.
      description: "Create a Subscription object. Any attribute missing from the request\
        \ will be set to its default value.\n\nAn MQTT session contains a client's\
        \ QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults\
        \ to QoS 0.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmqttSessionClientId|x||x|||\nmqttSessionVirtualRouter|x||x|||\n\
        msgVpnName|x||x|||\nsubscriptionTopic|x|x||||\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.1."
      operationId: createMsgVpnMqttSessionSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Subscription object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        required: true
      responses:
        "200":
          description: "The Subscription object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/mqttSessions/{mqttSessionClientId},{mqttSessionVirtualRouter}/subscriptions/{subscriptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Get a Subscription object.
      description: "Get a Subscription object.\n\nAn MQTT session contains a client's\
        \ QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults\
        \ to QoS 0.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        mqttSessionClientId|x|||\nmqttSessionVirtualRouter|x|||\nmsgVpnName|x|||\n\
        subscriptionTopic|x|||\n\n\n\nA SEMP client authorized with a minimum access\
        \ scope/level of \"vpn/read-only\" is required to perform this operation.\n\
        \nThis has been available since 2.1."
      operationId: getMsgVpnMqttSessionSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The MQTT subscription topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Subscription object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Replace a Subscription object.
      description: "Replace a Subscription object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nAn MQTT session contains a client's QoS 0 and QoS 1 subscription sets.\
        \ On creation, a subscription defaults to QoS 0.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmqttSessionClientId|x|x||||\nmqttSessionVirtualRouter|x|x||||\n\
        msgVpnName|x|x||||\nsubscriptionTopic|x|x||||\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.1."
      operationId: replaceMsgVpnMqttSessionSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The MQTT subscription topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Subscription object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        required: true
      responses:
        "200":
          description: "The Subscription object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Delete a Subscription object.
      description: "Delete a Subscription object.\n\nAn MQTT session contains a client's\
        \ QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults\
        \ to QoS 0.\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-write\" is required to perform this operation.\n\nThis has\
        \ been available since 2.1."
      operationId: deleteMsgVpnMqttSessionSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The MQTT subscription topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - mqttSession
      summary: Update a Subscription object.
      description: "Update a Subscription object. Any attribute missing from the request\
        \ will be left unchanged.\n\nAn MQTT session contains a client's QoS 0 and\
        \ QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.\n\
        \n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmqttSessionClientId|x|x||||\nmqttSessionVirtualRouter|x|x||||\n\
        msgVpnName|x|x||||\nsubscriptionTopic|x|x||||\n\n\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.1."
      operationId: updateMsgVpnMqttSessionSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionClientId
        in: path
        description: "The Client ID of the MQTT Session, which corresponds to the\
          \ ClientId provided in the MQTT CONNECT packet."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: mqttSessionVirtualRouter
        in: path
        description: The virtual router of the MQTT Session.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The MQTT subscription topic.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Subscription object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        required: true
      responses:
        "200":
          description: "The Subscription object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queueTemplates:
    get:
      tags:
      - all
      - msgVpn
      - queueTemplate
      summary: Get a list of Queue Template objects.
      description: |-
        Get a list of Queue Template objects.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueTemplateName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnQueueTemplates
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Template objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplatesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - queueTemplate
      summary: Create a Queue Template object.
      description: "Create a Queue Template object. Any attribute missing from the\
        \ request will be set to its default value.\n\nA Queue Template provides a\
        \ mechanism for specifying the initial state for client created queues.\n\n\
        \nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x||x|||\nqueueTemplateName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.14."
      operationId: createMsgVpnQueueTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue Template object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueueTemplate'
        required: true
      responses:
        "200":
          description: "The Queue Template object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queueTemplates/{queueTemplateName}:
    get:
      tags:
      - all
      - msgVpn
      - queueTemplate
      summary: Get a Queue Template object.
      description: |-
        Get a Queue Template object.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueTemplateName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnQueueTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueTemplateName
        in: path
        description: The name of the Queue Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Template object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - queueTemplate
      summary: Replace a Queue Template object.
      description: "Replace a Queue Template object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nA Queue Template provides a mechanism for specifying the initial state\
        \ for client created queues.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nqueueTemplateName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.14."
      operationId: replaceMsgVpnQueueTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueTemplateName
        in: path
        description: The name of the Queue Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue Template object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueueTemplate'
        required: true
      responses:
        "200":
          description: "The Queue Template object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - queueTemplate
      summary: Delete a Queue Template object.
      description: |-
        Delete a Queue Template object.

        A Queue Template provides a mechanism for specifying the initial state for client created queues.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnQueueTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueTemplateName
        in: path
        description: The name of the Queue Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - queueTemplate
      summary: Update a Queue Template object.
      description: "Update a Queue Template object. Any attribute missing from the\
        \ request will be left unchanged.\n\nA Queue Template provides a mechanism\
        \ for specifying the initial state for client created queues.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nqueueTemplateName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.14."
      operationId: updateMsgVpnQueueTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueTemplateName
        in: path
        description: The name of the Queue Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue Template object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueueTemplate'
        required: true
      responses:
        "200":
          description: "The Queue Template object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queues:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a list of Queue objects.
      description: "Get a list of Queue objects.\n\nA Queue acts as both a destination\
        \ that clients can publish messages to, and as an endpoint that clients can\
        \ bind consumers to and consume messages from.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nqueueName|x|||\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: getMsgVpnQueues
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueuesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - queue
      summary: Create a Queue object.
      description: "Create a Queue object. Any attribute missing from the request\
        \ will be set to its default value.\n\nA Queue acts as both a destination\
        \ that clients can publish messages to, and as an endpoint that clients can\
        \ bind consumers to and consume messages from.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x||x|||\nqueueName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: createMsgVpnQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueue'
        required: true
      responses:
        "200":
          description: "The Queue object's attributes after being created, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queues/{queueName}:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a Queue object.
      description: "Get a Queue object.\n\nA Queue acts as both a destination that\
        \ clients can publish messages to, and as an endpoint that clients can bind\
        \ consumers to and consume messages from.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nqueueName|x|||\n\n\n\nA SEMP\
        \ client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: getMsgVpnQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - queue
      summary: Replace a Queue object.
      description: "Replace a Queue object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nA Queue acts as both a destination that clients can publish messages to,\
        \ and as an endpoint that clients can bind consumers to and consume messages\
        \ from.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\naccessType||||x||\nmsgVpnName|x|x||||\n\
        owner||||x||\npermission||||x||\nqueueName|x|x||||\nrespectMsgPriorityEnabled||||x||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: replaceMsgVpnQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueue'
        required: true
      responses:
        "200":
          description: "The Queue object's attributes after being replaced, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - queue
      summary: Delete a Queue object.
      description: "Delete a Queue object.\n\nA Queue acts as both a destination that\
        \ clients can publish messages to, and as an endpoint that clients can bind\
        \ consumers to and consume messages from.\n\nA SEMP client authorized with\
        \ a minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.0."
      operationId: deleteMsgVpnQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - queue
      summary: Update a Queue object.
      description: "Update a Queue object. Any attribute missing from the request\
        \ will be left unchanged.\n\nA Queue acts as both a destination that clients\
        \ can publish messages to, and as an endpoint that clients can bind consumers\
        \ to and consume messages from.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\naccessType||||x||\nmsgVpnName|x|x||||\n\
        owner||||x||\npermission||||x||\nqueueName|x|x||||\nrespectMsgPriorityEnabled||||x||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: updateMsgVpnQueue
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueue'
        required: true
      responses:
        "200":
          description: "The Queue object's attributes after being updated, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a list of Queue Subscription objects.
      description: |-
        Get a list of Queue Subscription objects.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||
        subscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnQueueSubscriptions
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Subscription objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - queue
      summary: Create a Queue Subscription object.
      description: |-
        Create a Queue Subscription object. Any attribute missing from the request will be set to its default value.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        queueName|x||x|||
        subscriptionTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnQueueSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue Subscription object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnQueueSubscription'
        required: true
      responses:
        "200":
          description: "The Queue Subscription object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/queues/{queueName}/subscriptions/{subscriptionTopic}:
    get:
      tags:
      - all
      - msgVpn
      - queue
      summary: Get a Queue Subscription object.
      description: |-
        Get a Queue Subscription object.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        queueName|x|||
        subscriptionTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnQueueSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The topic of the Subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Subscription object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnQueueSubscriptionResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - queue
      summary: Delete a Queue Subscription object.
      description: |-
        Delete a Queue Subscription object.

        One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnQueueSubscription
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueName
        in: path
        description: The name of the Queue.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionTopic
        in: path
        description: The topic of the Subscription.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/replayLogs:
    get:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Get a list of Replay Log objects.
      description: "Get a list of Replay Log objects.\n\nWhen the Message Replay feature\
        \ is enabled, message brokers store persistent messages in a Replay Log. These\
        \ messages are kept until the log is full, after which the oldest messages\
        \ are removed to free up space for new messages.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nreplayLogName|x|||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.10."
      operationId: getMsgVpnReplayLogs
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Replay Log objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Create a Replay Log object.
      description: "Create a Replay Log object. Any attribute missing from the request\
        \ will be set to its default value.\n\nWhen the Message Replay feature is\
        \ enabled, message brokers store persistent messages in a Replay Log. These\
        \ messages are kept until the log is full, after which the oldest messages\
        \ are removed to free up space for new messages.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x||x|||\nreplayLogName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.10."
      operationId: createMsgVpnReplayLog
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Replay Log object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplayLog'
        required: true
      responses:
        "200":
          description: "The Replay Log object's attributes after being created, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/replayLogs/{replayLogName}:
    get:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Get a Replay Log object.
      description: "Get a Replay Log object.\n\nWhen the Message Replay feature is\
        \ enabled, message brokers store persistent messages in a Replay Log. These\
        \ messages are kept until the log is full, after which the oldest messages\
        \ are removed to free up space for new messages.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nreplayLogName|x|||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.10."
      operationId: getMsgVpnReplayLog
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Replay Log object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Replace a Replay Log object.
      description: "Replace a Replay Log object. Any attribute missing from the request\
        \ will be set to its default value, subject to the exceptions in note 4.\n\
        \nWhen the Message Replay feature is enabled, message brokers store persistent\
        \ messages in a Replay Log. These messages are kept until the log is full,\
        \ after which the oldest messages are removed to free up space for new messages.\n\
        \n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nreplayLogName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.10."
      operationId: replaceMsgVpnReplayLog
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Replay Log object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplayLog'
        required: true
      responses:
        "200":
          description: "The Replay Log object's attributes after being replaced, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Delete a Replay Log object.
      description: "Delete a Replay Log object.\n\nWhen the Message Replay feature\
        \ is enabled, message brokers store persistent messages in a Replay Log. These\
        \ messages are kept until the log is full, after which the oldest messages\
        \ are removed to free up space for new messages.\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"global/read-write\" is required to\
        \ perform this operation.\n\nThis has been available since 2.10."
      operationId: deleteMsgVpnReplayLog
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - replayLog
      summary: Update a Replay Log object.
      description: "Update a Replay Log object. Any attribute missing from the request\
        \ will be left unchanged.\n\nWhen the Message Replay feature is enabled, message\
        \ brokers store persistent messages in a Replay Log. These messages are kept\
        \ until the log is full, after which the oldest messages are removed to free\
        \ up space for new messages.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nreplayLogName|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.10."
      operationId: updateMsgVpnReplayLog
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replayLogName
        in: path
        description: The name of the Replay Log.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Replay Log object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplayLog'
        required: true
      responses:
        "200":
          description: "The Replay Log object's attributes after being updated, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplayLogResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/replicatedTopics:
    get:
      tags:
      - all
      - msgVpn
      - replicatedTopic
      summary: Get a list of Replicated Topic objects.
      description: "Get a list of Replicated Topic objects.\n\nTo indicate which messages\
        \ should be replicated between the active and standby site, a Replicated Topic\
        \ subscription must be configured on a Message VPN. If a published message\
        \ matches both a replicated topic and an endpoint on the active site, then\
        \ the message is replicated to the standby site.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nreplicatedTopic|x|||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: getMsgVpnReplicatedTopics
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Replicated Topic objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - replicatedTopic
      summary: Create a Replicated Topic object.
      description: "Create a Replicated Topic object. Any attribute missing from the\
        \ request will be set to its default value.\n\nTo indicate which messages\
        \ should be replicated between the active and standby site, a Replicated Topic\
        \ subscription must be configured on a Message VPN. If a published message\
        \ matches both a replicated topic and an endpoint on the active site, then\
        \ the message is replicated to the standby site.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x||x|||\nreplicatedTopic|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: createMsgVpnReplicatedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Replicated Topic object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        required: true
      responses:
        "200":
          description: "The Replicated Topic object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/replicatedTopics/{replicatedTopic}:
    get:
      tags:
      - all
      - msgVpn
      - replicatedTopic
      summary: Get a Replicated Topic object.
      description: "Get a Replicated Topic object.\n\nTo indicate which messages should\
        \ be replicated between the active and standby site, a Replicated Topic subscription\
        \ must be configured on a Message VPN. If a published message matches both\
        \ a replicated topic and an endpoint on the active site, then the message\
        \ is replicated to the standby site.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nreplicatedTopic|x|||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: getMsgVpnReplicatedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replicatedTopic
        in: path
        description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Replicated Topic object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - replicatedTopic
      summary: Replace a Replicated Topic object.
      description: "Replace a Replicated Topic object. Any attribute missing from\
        \ the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nTo indicate which messages should be replicated between the\
        \ active and standby site, a Replicated Topic subscription must be configured\
        \ on a Message VPN. If a published message matches both a replicated topic\
        \ and an endpoint on the active site, then the message is replicated to the\
        \ standby site.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nreplicatedTopic|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: replaceMsgVpnReplicatedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replicatedTopic
        in: path
        description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Replicated Topic object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        required: true
      responses:
        "200":
          description: "The Replicated Topic object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - replicatedTopic
      summary: Delete a Replicated Topic object.
      description: "Delete a Replicated Topic object.\n\nTo indicate which messages\
        \ should be replicated between the active and standby site, a Replicated Topic\
        \ subscription must be configured on a Message VPN. If a published message\
        \ matches both a replicated topic and an endpoint on the active site, then\
        \ the message is replicated to the standby site.\n\nA SEMP client authorized\
        \ with a minimum access scope/level of \"vpn/read-write\" is required to perform\
        \ this operation.\n\nThis has been available since 2.1."
      operationId: deleteMsgVpnReplicatedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replicatedTopic
        in: path
        description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - replicatedTopic
      summary: Update a Replicated Topic object.
      description: "Update a Replicated Topic object. Any attribute missing from the\
        \ request will be left unchanged.\n\nTo indicate which messages should be\
        \ replicated between the active and standby site, a Replicated Topic subscription\
        \ must be configured on a Message VPN. If a published message matches both\
        \ a replicated topic and an endpoint on the active site, then the message\
        \ is replicated to the standby site.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nreplicatedTopic|x|x||||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: updateMsgVpnReplicatedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: replicatedTopic
        in: path
        description: The topic for applying replication. Published messages matching
          this topic will be replicated to the standby site.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Replicated Topic object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        required: true
      responses:
        "200":
          description: "The Replicated Topic object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnReplicatedTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of REST Delivery Point objects.
      description: |-
        Get a list of REST Delivery Point objects.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPoints
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of REST Delivery Point objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Create a REST Delivery Point object.
      description: |-
        Create a REST Delivery Point object. Any attribute missing from the request will be set to its default value.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        restDeliveryPointName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnRestDeliveryPoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The REST Delivery Point object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        required: true
      responses:
        "200":
          description: "The REST Delivery Point object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a REST Delivery Point object.
      description: |-
        Get a REST Delivery Point object.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The REST Delivery Point object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Replace a REST Delivery Point object.
      description: "Replace a REST Delivery Point object. Any attribute missing from\
        \ the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nA REST Delivery Point manages delivery of messages from queues\
        \ to a named list of REST Consumers.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nclientProfileName||||x||\nmsgVpnName|x|x||||\n\
        restDeliveryPointName|x|x||||\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"vpn/read-write\" is required to perform this operation.\n\
        \nThis has been available since 2.0."
      operationId: replaceMsgVpnRestDeliveryPoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The REST Delivery Point object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        required: true
      responses:
        "200":
          description: "The REST Delivery Point object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Delete a REST Delivery Point object.
      description: |-
        Delete a REST Delivery Point object.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnRestDeliveryPoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Update a REST Delivery Point object.
      description: |-
        Update a REST Delivery Point object. Any attribute missing from the request will be left unchanged.

        A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        clientProfileName||||x||
        msgVpnName|x|x||||
        restDeliveryPointName|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnRestDeliveryPoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The REST Delivery Point object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        required: true
      responses:
        "200":
          description: "The REST Delivery Point object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of Queue Binding objects.
      description: "Get a list of Queue Binding objects.\n\nA Queue Binding for a\
        \ REST Delivery Point attracts messages to be delivered to REST consumers.\
        \ If the queue does not exist it can be created subsequently, and once the\
        \ queue is operational the broker performs the queue binding. Removing the\
        \ queue binding does not delete the queue itself. Similarly, removing the\
        \ queue does not remove the queue binding, which fails until the queue is\
        \ recreated or the queue binding is deleted.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:\nmsgVpnName|x|||\nqueueBindingName|x|||\nrestDeliveryPointName|x|||\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: getMsgVpnRestDeliveryPointQueueBindings
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Queue Binding objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Create a Queue Binding object.
      description: "Create a Queue Binding object. Any attribute missing from the\
        \ request will be set to its default value.\n\nA Queue Binding for a REST\
        \ Delivery Point attracts messages to be delivered to REST consumers. If the\
        \ queue does not exist it can be created subsequently, and once the queue\
        \ is operational the broker performs the queue binding. Removing the queue\
        \ binding does not delete the queue itself. Similarly, removing the queue\
        \ does not remove the queue binding, which fails until the queue is recreated\
        \ or the queue binding is deleted.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x||x|||\nqueueBindingName|x|x||||\n\
        restDeliveryPointName|x||x|||\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"vpn/read-write\" is required to perform this operation.\n\
        \nThis has been available since 2.0."
      operationId: createMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue Binding object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        required: true
      responses:
        "200":
          description: "The Queue Binding object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/queueBindings/{queueBindingName}:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a Queue Binding object.
      description: "Get a Queue Binding object.\n\nA Queue Binding for a REST Delivery\
        \ Point attracts messages to be delivered to REST consumers. If the queue\
        \ does not exist it can be created subsequently, and once the queue is operational\
        \ the broker performs the queue binding. Removing the queue binding does not\
        \ delete the queue itself. Similarly, removing the queue does not remove the\
        \ queue binding, which fails until the queue is recreated or the queue binding\
        \ is deleted.\n\n\nAttribute|Identifying|Write-Only|Deprecated|Opaque\n:---|:---:|:---:|:---:|:---:\n\
        msgVpnName|x|||\nqueueBindingName|x|||\nrestDeliveryPointName|x|||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"vpn/read-only\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: getMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Queue Binding object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Replace a Queue Binding object.
      description: "Replace a Queue Binding object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nA Queue Binding for a REST Delivery Point attracts messages to be\
        \ delivered to REST consumers. If the queue does not exist it can be created\
        \ subsequently, and once the queue is operational the broker performs the\
        \ queue binding. Removing the queue binding does not delete the queue itself.\
        \ Similarly, removing the queue does not remove the queue binding, which fails\
        \ until the queue is recreated or the queue binding is deleted.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nqueueBindingName|x|x||||\n\
        restDeliveryPointName|x|x||||\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"vpn/read-write\" is required to perform this operation.\n\
        \nThis has been available since 2.0."
      operationId: replaceMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue Binding object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        required: true
      responses:
        "200":
          description: "The Queue Binding object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Delete a Queue Binding object.
      description: "Delete a Queue Binding object.\n\nA Queue Binding for a REST Delivery\
        \ Point attracts messages to be delivered to REST consumers. If the queue\
        \ does not exist it can be created subsequently, and once the queue is operational\
        \ the broker performs the queue binding. Removing the queue binding does not\
        \ delete the queue itself. Similarly, removing the queue does not remove the\
        \ queue binding, which fails until the queue is recreated or the queue binding\
        \ is deleted.\n\nA SEMP client authorized with a minimum access scope/level\
        \ of \"vpn/read-write\" is required to perform this operation.\n\nThis has\
        \ been available since 2.0."
      operationId: deleteMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Update a Queue Binding object.
      description: "Update a Queue Binding object. Any attribute missing from the\
        \ request will be left unchanged.\n\nA Queue Binding for a REST Delivery Point\
        \ attracts messages to be delivered to REST consumers. If the queue does not\
        \ exist it can be created subsequently, and once the queue is operational\
        \ the broker performs the queue binding. Removing the queue binding does not\
        \ delete the queue itself. Similarly, removing the queue does not remove the\
        \ queue binding, which fails until the queue is recreated or the queue binding\
        \ is deleted.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\nqueueBindingName|x|x||||\n\
        restDeliveryPointName|x|x||||\n\n\n\nA SEMP client authorized with a minimum\
        \ access scope/level of \"vpn/read-write\" is required to perform this operation.\n\
        \nThis has been available since 2.0."
      operationId: updateMsgVpnRestDeliveryPointQueueBinding
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: queueBindingName
        in: path
        description: The name of a queue in the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Queue Binding object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        required: true
      responses:
        "200":
          description: "The Queue Binding object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of REST Consumer objects.
      description: |-
        Get a list of REST Consumer objects.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationClientCertContent||x||x
        authenticationClientCertPassword||x||
        authenticationHttpBasicPassword||x||x
        authenticationHttpHeaderValue||x||x
        authenticationOauthClientSecret||x||x
        authenticationOauthJwtSecretKey||x||x
        msgVpnName|x|||
        restConsumerName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPointRestConsumers
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of REST Consumer objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumersResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Create a REST Consumer object.
      description: |-
        Create a REST Consumer object. Any attribute missing from the request will be set to its default value.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationClientCertContent||||x||x
        authenticationClientCertPassword||||x||
        authenticationHttpBasicPassword||||x||x
        authenticationHttpHeaderValue||||x||x
        authenticationOauthClientSecret||||x||x
        authenticationOauthJwtSecretKey||||x||x
        msgVpnName|x||x|||
        restConsumerName|x|x||||
        restDeliveryPointName|x||x|||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
        MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
        MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The REST Consumer object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        required: true
      responses:
        "200":
          description: "The REST Consumer object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a REST Consumer object.
      description: |-
        Get a REST Consumer object.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        authenticationClientCertContent||x||x
        authenticationClientCertPassword||x||
        authenticationHttpBasicPassword||x||x
        authenticationHttpHeaderValue||x||x
        authenticationOauthClientSecret||x||x
        authenticationOauthJwtSecretKey||x||x
        msgVpnName|x|||
        restConsumerName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The REST Consumer object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Replace a REST Consumer object.
      description: "Replace a REST Consumer object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nREST Consumer objects establish HTTP connectivity to REST consumer\
        \ applications who wish to receive messages from a broker.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nauthenticationClientCertContent|||x|x||x\n\
        authenticationClientCertPassword|||x|x||\nauthenticationHttpBasicPassword|||x|x||x\n\
        authenticationHttpBasicUsername||||x||\nauthenticationHttpHeaderValue|||x|||x\n\
        authenticationOauthClientId||||x||\nauthenticationOauthClientScope||||x||\n\
        authenticationOauthClientSecret|||x|x||x\nauthenticationOauthClientTokenEndpoint||||x||\n\
        authenticationOauthJwtSecretKey|||x|x||x\nauthenticationOauthJwtTokenEndpoint||||x||\n\
        authenticationScheme||||x||\nmsgVpnName|x|x||||\noutgoingConnectionCount||||x||\n\
        remoteHost||||x||\nremotePort||||x||\nrestConsumerName|x|x||||\nrestDeliveryPointName|x|x||||\n\
        tlsCipherSuiteList||||x||\ntlsEnabled||||x||\n\n\n\nThe following attributes\
        \ in the request may only be provided in certain combinations with other attributes:\n\
        \n\nClass|Attribute|Requires|Conflicts\n:---|:---|:---|:---\nMsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|\n\
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|\n\
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|\n\
        MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|\nMsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|\n\
        \n\n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.0."
      operationId: replaceMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The REST Consumer object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        required: true
      responses:
        "200":
          description: "The REST Consumer object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Delete a REST Consumer object.
      description: |-
        Delete a REST Consumer object.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Update a REST Consumer object.
      description: |-
        Update a REST Consumer object. Any attribute missing from the request will be left unchanged.

        REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        authenticationClientCertContent|||x|x||x
        authenticationClientCertPassword|||x|x||
        authenticationHttpBasicPassword|||x|x||x
        authenticationHttpBasicUsername||||x||
        authenticationHttpHeaderValue|||x|||x
        authenticationOauthClientId||||x||
        authenticationOauthClientScope||||x||
        authenticationOauthClientSecret|||x|x||x
        authenticationOauthClientTokenEndpoint||||x||
        authenticationOauthJwtSecretKey|||x|x||x
        authenticationOauthJwtTokenEndpoint||||x||
        authenticationScheme||||x||
        msgVpnName|x|x||||
        outgoingConnectionCount||||x||
        remoteHost||||x||
        remotePort||||x||
        restConsumerName|x|x||||
        restDeliveryPointName|x|x||||
        tlsCipherSuiteList||||x||
        tlsEnabled||||x||



        The following attributes in the request may only be provided in certain combinations with other attributes:


        Class|Attribute|Requires|Conflicts
        :---|:---|:---|:---
        MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
        MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
        MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
        MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: updateMsgVpnRestDeliveryPointRestConsumer
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The REST Consumer object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        required: true
      responses:
        "200":
          description: "The REST Consumer object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of Claim objects.
      description: |-
        Get a list of Claim objects.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        oauthJwtClaimName|x|||
        restConsumerName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaims
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Claim objects' attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Create a Claim object.
      description: |-
        Create a Claim object. Any attribute missing from the request will be set to its default value.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        oauthJwtClaimName|x|x||||
        oauthJwtClaimValue||x||||
        restConsumerName|x||x|||
        restDeliveryPointName|x||x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.21.
      operationId: createMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Claim object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
        required: true
      responses:
        "200":
          description: "The Claim object's attributes after being created, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/oauthJwtClaims/{oauthJwtClaimName}
  : get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a Claim object.
      description: |-
        Get a Claim object.

        A Claim is added to the JWT sent to the OAuth token request endpoint.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        oauthJwtClaimName|x|||
        restConsumerName|x|||
        restDeliveryPointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.21.
      operationId: getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthJwtClaimName
        in: path
        description: "The name of the additional claim. Cannot be \"exp\", \"iat\"\
          , or \"jti\"."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Claim object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Delete a Claim object.
      description: |-
        Delete a Claim object.

        A Claim is added to the JWT sent to the OAuth token request endpoint.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.21.
      operationId: deleteMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: oauthJwtClaimName
        in: path
        description: "The name of the additional claim. Cannot be \"exp\", \"iat\"\
          , or \"jti\"."
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames:
    get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a list of Trusted Common Name objects.
      description: |-
        Get a list of Trusted Common Name objects.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x||x|
        restConsumerName|x||x|
        restDeliveryPointName|x||x|
        tlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Trusted Common Name objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Create a Trusted Common Name object.
      description: |-
        Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x||x|
        restConsumerName|x||x||x|
        restDeliveryPointName|x||x||x|
        tlsTrustedCommonName|x|x|||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
      operationId: createMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Trusted Common Name object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        required: true
      responses:
        "200":
          description: "The Trusted Common Name object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  ? /msgVpns/{msgVpnName}/restDeliveryPoints/{restDeliveryPointName}/restConsumers/{restConsumerName}/tlsTrustedCommonNames/{tlsTrustedCommonName}
  : get:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Get a Trusted Common Name object.
      description: |-
        Get a Trusted Common Name object.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x||x|
        restConsumerName|x||x|
        restDeliveryPointName|x||x|
        tlsTrustedCommonName|x||x|



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
      operationId: getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Trusted Common Name object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      - restDeliveryPoint
      summary: Delete a Trusted Common Name object.
      description: |-
        Delete a Trusted Common Name object.

        The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
      operationId: deleteMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restDeliveryPointName
        in: path
        description: The name of the REST Delivery Point.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: restConsumerName
        in: path
        description: The name of the REST Consumer.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: tlsTrustedCommonName
        in: path
        description: The expected trusted common name of the remote certificate.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/sequencedTopics:
    get:
      tags:
      - all
      - msgVpn
      summary: Get a list of Sequenced Topic objects.
      description: |-
        Get a list of Sequenced Topic objects.

        A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        sequencedTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnSequencedTopics
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Sequenced Topic objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnSequencedTopicsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      summary: Create a Sequenced Topic object.
      description: |-
        Create a Sequenced Topic object. Any attribute missing from the request will be set to its default value.

        A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        msgVpnName|x||x|||
        sequencedTopic|x|x||||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: createMsgVpnSequencedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Sequenced Topic object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnSequencedTopic'
        required: true
      responses:
        "200":
          description: "The Sequenced Topic object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnSequencedTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/sequencedTopics/{sequencedTopic}:
    get:
      tags:
      - all
      - msgVpn
      summary: Get a Sequenced Topic object.
      description: |-
        Get a Sequenced Topic object.

        A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        sequencedTopic|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.0.
      operationId: getMsgVpnSequencedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sequencedTopic
        in: path
        description: Topic for applying sequence numbers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Sequenced Topic object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnSequencedTopicResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    delete:
      tags:
      - all
      - msgVpn
      summary: Delete a Sequenced Topic object.
      description: |-
        Delete a Sequenced Topic object.

        A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.0.
      operationId: deleteMsgVpnSequencedTopic
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sequencedTopic
        in: path
        description: Topic for applying sequence numbers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
  /msgVpns/{msgVpnName}/topicEndpointTemplates:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      summary: Get a list of Topic Endpoint Template objects.
      description: |-
        Get a list of Topic Endpoint Template objects.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicEndpointTemplateName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnTopicEndpointTemplates
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Endpoint Template objects' attributes, and\
            \ the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplatesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      summary: Create a Topic Endpoint Template object.
      description: "Create a Topic Endpoint Template object. Any attribute missing\
        \ from the request will be set to its default value.\n\nA Topic Endpoint Template\
        \ provides a mechanism for specifying the initial state for client created\
        \ topic endpoints.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x||x|||\ntopicEndpointTemplateName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.14."
      operationId: createMsgVpnTopicEndpointTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Topic Endpoint Template object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        required: true
      responses:
        "200":
          description: "The Topic Endpoint Template object's attributes after being\
            \ created, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/topicEndpointTemplates/{topicEndpointTemplateName}:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      summary: Get a Topic Endpoint Template object.
      description: |-
        Get a Topic Endpoint Template object.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicEndpointTemplateName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.14.
      operationId: getMsgVpnTopicEndpointTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointTemplateName
        in: path
        description: The name of the Topic Endpoint Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Endpoint Template object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      summary: Replace a Topic Endpoint Template object.
      description: "Replace a Topic Endpoint Template object. Any attribute missing\
        \ from the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nA Topic Endpoint Template provides a mechanism for specifying\
        \ the initial state for client created topic endpoints.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\ntopicEndpointTemplateName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.14."
      operationId: replaceMsgVpnTopicEndpointTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointTemplateName
        in: path
        description: The name of the Topic Endpoint Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Topic Endpoint Template object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        required: true
      responses:
        "200":
          description: "The Topic Endpoint Template object's attributes after being\
            \ replaced, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      summary: Delete a Topic Endpoint Template object.
      description: |-
        Delete a Topic Endpoint Template object.

        A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.14.
      operationId: deleteMsgVpnTopicEndpointTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointTemplateName
        in: path
        description: The name of the Topic Endpoint Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - topicEndpointTemplate
      summary: Update a Topic Endpoint Template object.
      description: "Update a Topic Endpoint Template object. Any attribute missing\
        \ from the request will be left unchanged.\n\nA Topic Endpoint Template provides\
        \ a mechanism for specifying the initial state for client created topic endpoints.\n\
        \n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x|x||||\ntopicEndpointTemplateName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.14."
      operationId: updateMsgVpnTopicEndpointTemplate
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointTemplateName
        in: path
        description: The name of the Topic Endpoint Template.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Topic Endpoint Template object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        required: true
      responses:
        "200":
          description: "The Topic Endpoint Template object's attributes after being\
            \ updated, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/topicEndpoints:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a list of Topic Endpoint objects.
      description: |-
        Get a list of Topic Endpoint objects.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicEndpointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnTopicEndpoints
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Topic Endpoint objects' attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointsResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Create a Topic Endpoint object.
      description: "Create a Topic Endpoint object. Any attribute missing from the\
        \ request will be set to its default value.\n\nA Topic Endpoint attracts messages\
        \ published to a topic for which the Topic Endpoint has a matching topic subscription.\
        \ The topic subscription for the Topic Endpoint is specified in the client\
        \ request to bind a Flow to that Topic Endpoint. Queues are significantly\
        \ more flexible than Topic Endpoints and are the recommended approach for\
        \ most applications. The use of Topic Endpoints should be restricted to JMS\
        \ applications.\n\n\nAttribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nmsgVpnName|x||x|||\ntopicEndpointName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: createMsgVpnTopicEndpoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Topic Endpoint object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        required: true
      responses:
        "200":
          description: "The Topic Endpoint object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /msgVpns/{msgVpnName}/topicEndpoints/{topicEndpointName}:
    get:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Get a Topic Endpoint object.
      description: |-
        Get a Topic Endpoint object.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        msgVpnName|x|||
        topicEndpointName|x|||



        A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.

        This has been available since 2.1.
      operationId: getMsgVpnTopicEndpoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Topic Endpoint object's attributes, and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Replace a Topic Endpoint object.
      description: "Replace a Topic Endpoint object. Any attribute missing from the\
        \ request will be set to its default value, subject to the exceptions in note\
        \ 4.\n\nA Topic Endpoint attracts messages published to a topic for which\
        \ the Topic Endpoint has a matching topic subscription. The topic subscription\
        \ for the Topic Endpoint is specified in the client request to bind a Flow\
        \ to that Topic Endpoint. Queues are significantly more flexible than Topic\
        \ Endpoints and are the recommended approach for most applications. The use\
        \ of Topic Endpoints should be restricted to JMS applications.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\naccessType||||x||\nmsgVpnName|x|x||||\n\
        owner||||x||\npermission||||x||\nrespectMsgPriorityEnabled||||x||\ntopicEndpointName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: replaceMsgVpnTopicEndpoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Topic Endpoint object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        required: true
      responses:
        "200":
          description: "The Topic Endpoint object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Delete a Topic Endpoint object.
      description: |-
        Delete a Topic Endpoint object.

        A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.

        A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.

        This has been available since 2.1.
      operationId: deleteMsgVpnTopicEndpoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - msgVpn
      - topicEndpoint
      summary: Update a Topic Endpoint object.
      description: "Update a Topic Endpoint object. Any attribute missing from the\
        \ request will be left unchanged.\n\nA Topic Endpoint attracts messages published\
        \ to a topic for which the Topic Endpoint has a matching topic subscription.\
        \ The topic subscription for the Topic Endpoint is specified in the client\
        \ request to bind a Flow to that Topic Endpoint. Queues are significantly\
        \ more flexible than Topic Endpoints and are the recommended approach for\
        \ most applications. The use of Topic Endpoints should be restricted to JMS\
        \ applications.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\naccessType||||x||\nmsgVpnName|x|x||||\n\
        owner||||x||\npermission||||x||\nrespectMsgPriorityEnabled||||x||\ntopicEndpointName|x|x||||\n\
        \n\n\nThe following attributes in the request may only be provided in certain\
        \ combinations with other attributes:\n\n\nClass|Attribute|Requires|Conflicts\n\
        :---|:---|:---|:---\nEventThreshold|clearPercent|setPercent|clearValue, setValue\n\
        EventThreshold|clearValue|setValue|clearPercent, setPercent\nEventThreshold|setPercent|clearPercent|clearValue,\
        \ setValue\nEventThreshold|setValue|clearValue|clearPercent, setPercent\n\n\
        \n\nA SEMP client authorized with a minimum access scope/level of \"vpn/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.1."
      operationId: updateMsgVpnTopicEndpoint
      parameters:
      - name: msgVpnName
        in: path
        description: The name of the Message VPN.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: topicEndpointName
        in: path
        description: The name of the Topic Endpoint.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Topic Endpoint object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        required: true
      responses:
        "200":
          description: "The Topic Endpoint object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MsgVpnTopicEndpointResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /systemInformation:
    get:
      tags:
      - all
      - systemInformation
      summary: Get a System Information object.
      description: |-
        Get a System Information object.

        The System Information object provides metadata about the SEMP API.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        platform|||x|
        sempVersion|||x|



        A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.

        This has been deprecated since 2.2. /systemInformation was replaced by /about/api.
      operationId: getSystemInformation
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The System Information object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemInformationResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      deprecated: true
      security:
      - basicAuth: []
  /virtualHostnames:
    get:
      tags:
      - all
      - virtualHostname
      summary: Get a list of Virtual Hostname objects.
      description: |-
        Get a list of Virtual Hostname objects.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        virtualHostname|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.17.
      operationId: getVirtualHostnames
      parameters:
      - name: count
        in: query
        description: Limit the count of objects in the response. See the documentation
          for the `count` parameter.
        required: false
        style: form
        explode: true
        schema:
          minimum: 1
          type: integer
          default: 10
      - name: cursor
        in: query
        description: "The cursor, or position, for the next page of objects. See the\
          \ documentation for the `cursor` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: where
        in: query
        description: Include in the response only objects where certain conditions
          are true. See the the documentation for the `where` parameter.
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The list of Virtual Hostname objects' attributes, and the\
            \ request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnamesResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    post:
      tags:
      - all
      - virtualHostname
      summary: Create a Virtual Hostname object.
      description: |-
        Create a Virtual Hostname object. Any attribute missing from the request will be set to its default value.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        virtualHostname|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.17.
      operationId: createVirtualHostname
      parameters:
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Virtual Hostname object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHostname'
        required: true
      responses:
        "200":
          description: "The Virtual Hostname object's attributes after being created,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
  /virtualHostnames/{virtualHostname}:
    get:
      tags:
      - all
      - virtualHostname
      summary: Get a Virtual Hostname object.
      description: |-
        Get a Virtual Hostname object.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Write-Only|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:
        virtualHostname|x|||



        A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.

        This has been available since 2.17.
      operationId: getVirtualHostname
      parameters:
      - name: virtualHostname
        in: path
        description: The virtual hostname.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: "The Virtual Hostname object's attributes, and the request\
            \ metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    put:
      tags:
      - all
      - virtualHostname
      summary: Replace a Virtual Hostname object.
      description: "Replace a Virtual Hostname object. Any attribute missing from\
        \ the request will be set to its default value, subject to the exceptions\
        \ in note 4.\n\nA Virtual Hostname is a provisioned object on a message broker\
        \ that contains a Virtual Hostname to Message VPN mapping.\n\nClients which\
        \ connect to a global (as opposed to per Message VPN) port and provides this\
        \ hostname will be directed to its corresponding Message VPN. A case-insentive\
        \ match is performed on the full client-provided hostname against the configured\
        \ virtual-hostname.\n\nThis mechanism is only supported for hostnames provided\
        \ through the Server Name Indication (SNI) extension of TLS.\n\n\nAttribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque\n\
        :---|:---:|:---:|:---:|:---:|:---:|:---:\nvirtualHostname|x|x||||\n\n\n\n\
        A SEMP client authorized with a minimum access scope/level of \"global/read-write\"\
        \ is required to perform this operation.\n\nThis has been available since\
        \ 2.17."
      operationId: replaceVirtualHostname
      parameters:
      - name: virtualHostname
        in: path
        description: The virtual hostname.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Virtual Hostname object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHostname'
        required: true
      responses:
        "200":
          description: "The Virtual Hostname object's attributes after being replaced,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
    delete:
      tags:
      - all
      - virtualHostname
      summary: Delete a Virtual Hostname object.
      description: |-
        Delete a Virtual Hostname object.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.

        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.17.
      operationId: deleteVirtualHostname
      parameters:
      - name: virtualHostname
        in: path
        description: The virtual hostname.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: The request metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
    patch:
      tags:
      - all
      - virtualHostname
      summary: Update a Virtual Hostname object.
      description: |-
        Update a Virtual Hostname object. Any attribute missing from the request will be left unchanged.

        A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.

        Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.

        This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.


        Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
        :---|:---:|:---:|:---:|:---:|:---:|:---:
        virtualHostname|x|x||||



        A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.

        This has been available since 2.17.
      operationId: updateVirtualHostname
      parameters:
      - name: virtualHostname
        in: path
        description: The virtual hostname.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: opaquePassword
        in: query
        description: "Accept opaque attributes in the request or return opaque attributes\
          \ in the response, encrypted with the specified password. See that documentation\
          \ for the `opaquePassword` parameter."
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: select
        in: query
        description: "Include in the response only selected attributes of the object,\
          \ or exclude from the response selected attributes of the object. See the\
          \ documentation for the `select` parameter."
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: The Virtual Hostname object's attributes.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VirtualHostname'
        required: true
      responses:
        "200":
          description: "The Virtual Hostname object's attributes after being updated,\
            \ and the request metadata."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VirtualHostnameResponse'
        default:
          description: The error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SempMetaOnlyResponse'
      security:
      - basicAuth: []
      x-codegen-request-body-name: body
components:
  schemas:
    About:
      type: object
    AboutApi:
      type: object
      properties:
        platform:
          type: string
          description: The platform running the SEMP API.
        sempVersion:
          type: string
          description: The version of the SEMP API.
      example:
        sempVersion: sempVersion
        platform: platform
    AboutApiLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this API Description object.
      example:
        uri: uri
    AboutApiResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AboutApi'
        links:
          $ref: '#/components/schemas/AboutApiLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          sempVersion: sempVersion
          platform: platform
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    AboutLinks:
      type: object
      properties:
        apiUri:
          type: string
          description: The URI of this About's API Description object. Available since
            2.2.
        uri:
          type: string
          description: The URI of this About object.
        userUri:
          type: string
          description: The URI of this About's User object. Available since 2.2.
      example:
        apiUri: apiUri
        userUri: userUri
        uri: uri
    AboutResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/About'
        links:
          $ref: '#/components/schemas/AboutLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data: {}
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          apiUri: apiUri
          userUri: userUri
          uri: uri
    AboutUser:
      type: object
      properties:
        globalAccessLevel:
          type: string
          description: |
            The global access level of the User. The allowed values and their meaning are:

            <pre>
            "admin" - Full administrative access.
            "none" - No access.
            "read-only" - Read only access.
            "read-write" - Read and write access.
            </pre>
          enum:
          - admin
          - none
          - read-only
          - read-write
        sessionCreateTime:
          type: integer
          description: The timestamp of when the session was created. This value represents
            the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available
            since 2.21.
          format: int32
        sessionCurrentTime:
          type: integer
          description: The current server timestamp. This is provided as a reference
            point for the other timestamps provided. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
        sessionHardExpiryTime:
          type: integer
          description: "The hard expiry time for the session. After this time the\
            \ session will be invalid, regardless of activity. This value represents\
            \ the number of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available\
            \ since 2.21."
          format: int32
        sessionId:
          type: string
          description: An identifier for the session to differentiate this session
            from other sessions for the same user. This value is not guaranteed to
            be unique between active sessions for different users. Available since
            2.21.
        sessionIdleExpiryTime:
          type: integer
          description: The session idle expiry time. After this time the session will
            be invalid if there has been no activity. This value represents the number
            of seconds since 1970-01-01 00:00:00 UTC (Unix time). Available since
            2.21.
          format: int32
        username:
          type: string
          description: The username of the User. Available since 2.21.
      example:
        sessionCurrentTime: 6
        sessionIdleExpiryTime: 5
        sessionHardExpiryTime: 1
        sessionCreateTime: 0
        sessionId: sessionId
        globalAccessLevel: admin
        username: username
    AboutUserLinks:
      type: object
      properties:
        msgVpnsUri:
          type: string
          description: The URI of this User's collection of User Message VPN objects.
        uri:
          type: string
          description: The URI of this User object.
      example:
        msgVpnsUri: msgVpnsUri
        uri: uri
    AboutUserMsgVpn:
      type: object
      properties:
        accessLevel:
          type: string
          description: |
            The Message VPN access level of the User. The allowed values and their meaning are:

            <pre>
            "none" - No access.
            "read-only" - Read only access.
            "read-write" - Read and write access.
            </pre>
          enum:
          - none
          - read-only
          - read-write
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        accessLevel: none
        msgVpnName: msgVpnName
    AboutUserMsgVpnLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this User Message VPN object.
      example:
        uri: uri
    AboutUserMsgVpnResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AboutUserMsgVpn'
        links:
          $ref: '#/components/schemas/AboutUserMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          accessLevel: none
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    AboutUserMsgVpnsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AboutUserMsgVpn'
        links:
          type: array
          items:
            $ref: '#/components/schemas/AboutUserMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - accessLevel: none
          msgVpnName: msgVpnName
        - accessLevel: none
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    AboutUserResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AboutUser'
        links:
          $ref: '#/components/schemas/AboutUserLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          sessionCurrentTime: 6
          sessionIdleExpiryTime: 5
          sessionHardExpiryTime: 1
          sessionCreateTime: 0
          sessionId: sessionId
          globalAccessLevel: admin
          username: username
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          msgVpnsUri: msgVpnsUri
          uri: uri
    Broker:
      type: object
      properties:
        authClientCertRevocationCheckMode:
          type: string
          description: "The client certificate revocation checking mode used when\
            \ a client authenticates with a client certificate. The default value\
            \ is `\"none\"`. The allowed values and their meaning are:\n\n<pre>\n\"\
            none\" - Do not perform any certificate revocation checking.\n\"ocsp\"\
            \ - Use the Open Certificate Status Protcol (OCSP) for certificate revocation\
            \ checking.\n\"crl\" - Use Certificate Revocation Lists (CRL) for certificate\
            \ revocation checking.\n\"ocsp-crl\" - Use OCSP first, but if OCSP fails\
            \ to return an unambiguous result, then check via CRL.\n</pre>\n"
          enum:
          - none
          - ocsp
          - crl
          - ocsp-crl
        guaranteedMsgingEnabled:
          type: boolean
          description: Enable or disable Guaranteed Messaging. The default value is
            `false`. Available since 2.18.
        guaranteedMsgingEventCacheUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventDeliveredUnackedThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventDiskUsageThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventEndpointCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventMsgCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventMsgSpoolFileCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingEventTransactedSessionResourceCountThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        guaranteedMsgingEventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        guaranteedMsgingMaxCacheUsage:
          type: integer
          description: Guaranteed messaging cache usage limit. Expressed as a maximum
            percentage of the NAB's egress queueing. resources that the guaranteed
            message cache is allowed to use. The default value is `10`. Available
            since 2.18.
          format: int32
        guaranteedMsgingMaxMsgSpoolUsage:
          type: integer
          description: "The maximum total message spool usage allowed across all VPNs\
            \ on this broker, in megabytes. Recommendation: the maximum value should\
            \ be less than 90% of the disk space allocated for the guaranteed message\
            \ spool. The default value is `60000`. Available since 2.18."
          format: int64
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout:
          type: integer
          description: "The maximum time, in milliseconds, that can be tolerated for\
            \ remote acknowledgement of synchronization messages before which the\
            \ remote system will be considered out of sync. The default value is `10000`.\
            \ Available since 2.18."
          format: int64
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout:
          type: integer
          description: "The maximum time, in milliseconds, that can be tolerated for\
            \ remote disk writes before which the remote system will be considered\
            \ out of sync. The default value is `10000`. Available since 2.18."
          format: int64
        guaranteedMsgingTransactionReplicationCompatibilityMode:
          type: string
          description: |-
            The replication compatibility mode for the router. The default value is `"legacy"`. The allowed values and their meaning are:"legacy" - All transactions originated by clients are replicated to the standby site without using transactions."transacted" - All transactions originated by clients are replicated to the standby site using transactions. The default value is `"legacy"`. The allowed values and their meaning are:

            <pre>
            "legacy" - All transactions originated by clients are replicated to the standby site without using transactions.
            "transacted" - All transactions originated by clients are replicated to the standby site using transactions.
            </pre>
             Available since 2.18.
          enum:
          - legacy
          - transacted
        serviceAmqpEnabled:
          type: boolean
          description: "Enable or disable the AMQP service. When disabled new AMQP\
            \ Clients may not connect through the global or per-VPN AMQP listen-ports,\
            \ and all currently connected AMQP Clients are immediately disconnected.\
            \ The default value is `false`. Available since 2.17."
        serviceAmqpTlsListenPort:
          type: integer
          description: TCP port number that AMQP clients can use to connect to the
            broker using raw TCP over TLS. The default value is `0`. Available since
            2.17.
          format: int64
        serviceEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceHealthCheckEnabled:
          type: boolean
          description: Enable or disable the health-check service. The default value
            is `false`. Available since 2.17.
        serviceHealthCheckListenPort:
          type: integer
          description: The port number for the health-check service. The port must
            be unique across the message backbone. The health-check service must be
            disabled to change the port. The default value is `5550`. Available since
            2.17.
          format: int64
        serviceMateLinkEnabled:
          type: boolean
          description: Enable or disable the mate-link service. The default value
            is `true`. Available since 2.17.
        serviceMateLinkListenPort:
          type: integer
          description: The port number for the mate-link service. The port must be
            unique across the message backbone. The mate-link service must be disabled
            to change the port. The default value is `8741`. Available since 2.17.
          format: int64
        serviceMqttEnabled:
          type: boolean
          description: "Enable or disable the MQTT service. When disabled new MQTT\
            \ Clients may not connect through the per-VPN MQTT listen-ports, and all\
            \ currently connected MQTT Clients are immediately disconnected. The default\
            \ value is `false`. Available since 2.17."
        serviceMsgBackboneEnabled:
          type: boolean
          description: "Enable or disable the msg-backbone service. When disabled\
            \ new Clients may not connect through global or per-VPN listen-ports,\
            \ and all currently connected Clients are immediately disconnected. The\
            \ default value is `true`. Available since 2.17."
        serviceRedundancyEnabled:
          type: boolean
          description: Enable or disable the redundancy service. The default value
            is `true`. Available since 2.17.
        serviceRedundancyFirstListenPort:
          type: integer
          description: The first listen-port used for the redundancy service. Redundancy
            uses this port and the subsequent 2 ports. These port must be unique across
            the message backbone. The redundancy service must be disabled to change
            this port. The default value is `8300`. Available since 2.17.
          format: int64
        serviceRestEventOutgoingConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceRestIncomingEnabled:
          type: boolean
          description: Enable or disable the REST service incoming connections on
            the router. The default value is `false`. Available since 2.17.
        serviceRestOutgoingEnabled:
          type: boolean
          description: Enable or disable the REST service outgoing connections on
            the router. The default value is `false`. Available since 2.17.
        serviceSempLegacyTimeoutEnabled:
          type: boolean
          description: "Enable or disable extended SEMP timeouts for paged GETs. When\
            \ a request times out, it returns the current page of content, even if\
            \ the page is not full.  When enabled, the timeout is 60 seconds. When\
            \ disabled, the timeout is 5 seconds.  The recommended setting is disabled\
            \ (no legacy-timeout).  This parameter is intended as a temporary workaround\
            \ to be used until SEMP clients can handle short pages.  This setting\
            \ will be removed in a future release. The default value is `false`. Available\
            \ since 2.18."
        serviceSempPlainTextEnabled:
          type: boolean
          description: Enable or disable plain-text SEMP service. The default value
            is `true`. Available since 2.17.
        serviceSempPlainTextListenPort:
          type: integer
          description: The TCP port for plain-text SEMP client connections. The default
            value is `80`. Available since 2.17.
          format: int64
        serviceSempSessionIdleTimeout:
          type: integer
          description: "The session idle timeout, in minutes. Sessions will be invalidated\
            \ if there is no activity in this period of time. The default value is\
            \ `15`. Available since 2.21."
          format: int32
        serviceSempSessionMaxLifetime:
          type: integer
          description: "The maximum lifetime of a session, in minutes. Sessions will\
            \ be invalidated after this period of time, regardless of activity. The\
            \ default value is `43200`. Available since 2.21."
          format: int32
        serviceSempTlsEnabled:
          type: boolean
          description: Enable or disable TLS SEMP service. The default value is `true`.
            Available since 2.17.
        serviceSempTlsListenPort:
          type: integer
          description: The TCP port for TLS SEMP client connections. The default value
            is `1943`. Available since 2.17.
          format: int64
        serviceSmfCompressionListenPort:
          type: integer
          description: TCP port number that SMF clients can use to connect to the
            broker using raw compression TCP. The default value is `55003`. Available
            since 2.17.
          format: int64
        serviceSmfEnabled:
          type: boolean
          description: "Enable or disable the SMF service. When disabled new SMF Clients\
            \ may not connect through the global listen-ports, and all currently connected\
            \ SMF Clients are immediately disconnected. The default value is `true`.\
            \ Available since 2.17."
        serviceSmfEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceSmfPlainTextListenPort:
          type: integer
          description: TCP port number that SMF clients can use to connect to the
            broker using raw TCP. The default value is `55555`. Available since 2.17.
          format: int64
        serviceSmfRoutingControlListenPort:
          type: integer
          description: TCP port number that SMF clients can use to connect to the
            broker using raw routing control TCP. The default value is `55556`. Available
            since 2.17.
          format: int64
        serviceSmfTlsListenPort:
          type: integer
          description: TCP port number that SMF clients can use to connect to the
            broker using raw TCP over TLS. The default value is `55443`. Available
            since 2.17.
          format: int64
        serviceTlsEventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        serviceWebTransportEnabled:
          type: boolean
          description: "Enable or disable the web-transport service. When disabled\
            \ new web-transport Clients may not connect through the global listen-ports,\
            \ and all currently connected web-transport Clients are immediately disconnected.\
            \ The default value is `false`. Available since 2.17."
        serviceWebTransportPlainTextListenPort:
          type: integer
          description: The TCP port for plain-text WEB client connections. The default
            value is `8008`. Available since 2.17.
          format: int64
        serviceWebTransportTlsListenPort:
          type: integer
          description: The TCP port for TLS WEB client connections. The default value
            is `1443`. Available since 2.17.
          format: int64
        serviceWebTransportWebUrlSuffix:
          type: string
          description: Used to specify the Web URL suffix that will be used by Web
            clients when communicating with the broker. The default value is `""`.
            Available since 2.17.
        tlsBlockVersion11Enabled:
          type: boolean
          description: "Enable or disable the blocking of TLS version 1.1 connections.\
            \ When blocked, all existing incoming and outgoing TLS 1.1 connections\
            \ with Clients, SEMP users, and LDAP servers remain connected while new\
            \ connections are blocked. Note that support for TLS 1.1 will eventually\
            \ be discontinued, at which time TLS 1.1 connections will be blocked regardless\
            \ of this setting. The default value is `false`."
        tlsCipherSuiteManagementList:
          type: string
          description: "The colon-separated list of cipher suites used for TLS management\
            \ connections (e.g. SEMP, LDAP). The value \"default\" implies all supported\
            \ suites ordered from most secure to least secure. The default value is\
            \ `\"default\"`."
        tlsCipherSuiteMsgBackboneList:
          type: string
          description: The colon-separated list of cipher suites used for TLS data
            connections (e.g. client pub/sub). The value "default" implies all supported
            suites ordered from most secure to least secure. The default value is
            `"default"`.
        tlsCipherSuiteSecureShellList:
          type: string
          description: "The colon-separated list of cipher suites used for TLS secure\
            \ shell connections (e.g. SSH, SFTP, SCP). The value \"default\" implies\
            \ all supported suites ordered from most secure to least secure. The default\
            \ value is `\"default\"`."
        tlsCrimeExploitProtectionEnabled:
          type: boolean
          description: "Enable or disable protection against the CRIME exploit. When\
            \ enabled, TLS+compressed messaging performance is degraded. This protection\
            \ should only be disabled if sufficient ACL and authentication features\
            \ are being employed such that a potential attacker does not have sufficient\
            \ access to trigger the exploit. The default value is `true`."
        tlsServerCertContent:
          type: string
          description: "The PEM formatted content for the server certificate used\
            \ for TLS connections. It must consist of a private key and between one\
            \ and three certificates comprising the certificate trust chain. This\
            \ attribute is absent from a GET and not updated when absent in a PUT,\
            \ subject to the exceptions in note 4. Changing this attribute requires\
            \ an HTTPS connection. The default value is `\"\"`."
          x-requires-https: true
        tlsServerCertPassword:
          type: string
          description: "The password for the server certificate used for TLS connections.\
            \ This attribute is absent from a GET and not updated when absent in a\
            \ PUT, subject to the exceptions in note 4. Changing this attribute requires\
            \ an HTTPS connection. The default value is `\"\"`."
          x-requires-https: true
        tlsStandardDomainCertificateAuthoritiesEnabled:
          type: boolean
          description: Enable or disable the standard domain certificate authority
            list. The default value is `true`. Available since 2.19.
        tlsTicketLifetime:
          type: integer
          description: "The TLS ticket lifetime in seconds. When a client connects\
            \ with TLS, a session with a session ticket is created using the TLS ticket\
            \ lifetime which determines how long the client has to resume the session.\
            \ The default value is `86400`."
          format: int32
      example:
        serviceSempPlainTextEnabled: true
        guaranteedMsgingEventDeliveredUnackedThreshold:
          clearPercent: 5
          setPercent: 2
        guaranteedMsgingEventTransactedSessionResourceCountThreshold: null
        serviceSmfEnabled: true
        guaranteedMsgingEventMsgSpoolFileCountThreshold: null
        tlsCipherSuiteManagementList: tlsCipherSuiteManagementList
        serviceMsgBackboneEnabled: true
        serviceSmfCompressionListenPort: 4
        guaranteedMsgingEventTransactionCountThreshold: null
        serviceSmfPlainTextListenPort: 5
        serviceWebTransportWebUrlSuffix: serviceWebTransportWebUrlSuffix
        serviceSmfTlsListenPort: 9
        serviceMateLinkListenPort: 1
        serviceSempLegacyTimeoutEnabled: true
        serviceWebTransportPlainTextListenPort: 6
        serviceWebTransportTlsListenPort: 8
        tlsTicketLifetime: 9
        serviceSmfRoutingControlListenPort: 9
        tlsServerCertPassword: tlsServerCertPassword
        authClientCertRevocationCheckMode: none
        serviceRestIncomingEnabled: true
        serviceSempSessionIdleTimeout: 6
        serviceWebTransportEnabled: true
        tlsCipherSuiteSecureShellList: tlsCipherSuiteSecureShellList
        serviceAmqpEnabled: true
        guaranteedMsgingEventDiskUsageThreshold: null
        serviceSempTlsEnabled: true
        serviceEventConnectionCountThreshold: null
        serviceRedundancyFirstListenPort: 1
        guaranteedMsgingEventEgressFlowCountThreshold: null
        guaranteedMsgingEventMsgCountThreshold: null
        serviceHealthCheckListenPort: 7
        serviceRestEventOutgoingConnectionCountThreshold: null
        guaranteedMsgingEventEndpointCountThreshold: null
        serviceHealthCheckEnabled: true
        serviceMateLinkEnabled: true
        serviceSmfEventConnectionCountThreshold: null
        serviceRestOutgoingEnabled: true
        guaranteedMsgingMaxCacheUsage: 7
        serviceAmqpTlsListenPort: 4
        serviceSempTlsListenPort: 1
        tlsServerCertContent: tlsServerCertContent
        serviceSempSessionMaxLifetime: 7
        tlsCipherSuiteMsgBackboneList: tlsCipherSuiteMsgBackboneList
        guaranteedMsgingTransactionReplicationCompatibilityMode: legacy
        guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout: 3
        guaranteedMsgingEventIngressFlowCountThreshold: null
        guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout: 2
        guaranteedMsgingMaxMsgSpoolUsage: 9
        serviceRedundancyEnabled: true
        serviceMqttEnabled: true
        serviceTlsEventConnectionCountThreshold: null
        tlsBlockVersion11Enabled: true
        tlsCrimeExploitProtectionEnabled: true
        serviceSempPlainTextListenPort: 1
        guaranteedMsgingEnabled: true
        guaranteedMsgingEventTransactedSessionCountThreshold: null
        tlsStandardDomainCertificateAuthoritiesEnabled: true
        guaranteedMsgingEventMsgSpoolUsageThreshold: null
        guaranteedMsgingEventCacheUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
    BrokerLinks:
      type: object
      properties:
        aboutUri:
          type: string
          description: The URI of this Broker's About object.
        certAuthoritiesUri:
          type: string
          description: The URI of this Broker's collection of Certificate Authority
            objects. Deprecated since 2.19. Replaced by clientCertAuthorities and
            domainCertAuthorities.
        clientCertAuthoritiesUri:
          type: string
          description: The URI of this Broker's collection of Client Certificate Authority
            objects. Available since 2.19.
        dmrClustersUri:
          type: string
          description: The URI of this Broker's collection of Cluster objects. Available
            since 2.11.
        domainCertAuthoritiesUri:
          type: string
          description: The URI of this Broker's collection of Domain Certificate Authority
            objects. Available since 2.19.
        msgVpnsUri:
          type: string
          description: The URI of this Broker's collection of Message VPN objects.
            Available since 2.0.
        systemInformationUri:
          type: string
          description: The URI of this Broker's System Information object. Deprecated
            since 2.2. /systemInformation was replaced by /about/api.
        uri:
          type: string
          description: The URI of this Broker object.
        virtualHostnamesUri:
          type: string
          description: The URI of this Broker's collection of Virtual Hostname objects.
            Available since 2.17.
      example:
        virtualHostnamesUri: virtualHostnamesUri
        certAuthoritiesUri: certAuthoritiesUri
        systemInformationUri: systemInformationUri
        aboutUri: aboutUri
        msgVpnsUri: msgVpnsUri
        domainCertAuthoritiesUri: domainCertAuthoritiesUri
        clientCertAuthoritiesUri: clientCertAuthoritiesUri
        uri: uri
        dmrClustersUri: dmrClustersUri
    BrokerResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Broker'
        links:
          $ref: '#/components/schemas/BrokerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          serviceSempPlainTextEnabled: true
          guaranteedMsgingEventDeliveredUnackedThreshold:
            clearPercent: 5
            setPercent: 2
          guaranteedMsgingEventTransactedSessionResourceCountThreshold: null
          serviceSmfEnabled: true
          guaranteedMsgingEventMsgSpoolFileCountThreshold: null
          tlsCipherSuiteManagementList: tlsCipherSuiteManagementList
          serviceMsgBackboneEnabled: true
          serviceSmfCompressionListenPort: 4
          guaranteedMsgingEventTransactionCountThreshold: null
          serviceSmfPlainTextListenPort: 5
          serviceWebTransportWebUrlSuffix: serviceWebTransportWebUrlSuffix
          serviceSmfTlsListenPort: 9
          serviceMateLinkListenPort: 1
          serviceSempLegacyTimeoutEnabled: true
          serviceWebTransportPlainTextListenPort: 6
          serviceWebTransportTlsListenPort: 8
          tlsTicketLifetime: 9
          serviceSmfRoutingControlListenPort: 9
          tlsServerCertPassword: tlsServerCertPassword
          authClientCertRevocationCheckMode: none
          serviceRestIncomingEnabled: true
          serviceSempSessionIdleTimeout: 6
          serviceWebTransportEnabled: true
          tlsCipherSuiteSecureShellList: tlsCipherSuiteSecureShellList
          serviceAmqpEnabled: true
          guaranteedMsgingEventDiskUsageThreshold: null
          serviceSempTlsEnabled: true
          serviceEventConnectionCountThreshold: null
          serviceRedundancyFirstListenPort: 1
          guaranteedMsgingEventEgressFlowCountThreshold: null
          guaranteedMsgingEventMsgCountThreshold: null
          serviceHealthCheckListenPort: 7
          serviceRestEventOutgoingConnectionCountThreshold: null
          guaranteedMsgingEventEndpointCountThreshold: null
          serviceHealthCheckEnabled: true
          serviceMateLinkEnabled: true
          serviceSmfEventConnectionCountThreshold: null
          serviceRestOutgoingEnabled: true
          guaranteedMsgingMaxCacheUsage: 7
          serviceAmqpTlsListenPort: 4
          serviceSempTlsListenPort: 1
          tlsServerCertContent: tlsServerCertContent
          serviceSempSessionMaxLifetime: 7
          tlsCipherSuiteMsgBackboneList: tlsCipherSuiteMsgBackboneList
          guaranteedMsgingTransactionReplicationCompatibilityMode: legacy
          guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout: 3
          guaranteedMsgingEventIngressFlowCountThreshold: null
          guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout: 2
          guaranteedMsgingMaxMsgSpoolUsage: 9
          serviceRedundancyEnabled: true
          serviceMqttEnabled: true
          serviceTlsEventConnectionCountThreshold: null
          tlsBlockVersion11Enabled: true
          tlsCrimeExploitProtectionEnabled: true
          serviceSempPlainTextListenPort: 1
          guaranteedMsgingEnabled: true
          guaranteedMsgingEventTransactedSessionCountThreshold: null
          tlsStandardDomainCertificateAuthoritiesEnabled: true
          guaranteedMsgingEventMsgSpoolUsageThreshold: null
          guaranteedMsgingEventCacheUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          virtualHostnamesUri: virtualHostnamesUri
          certAuthoritiesUri: certAuthoritiesUri
          systemInformationUri: systemInformationUri
          aboutUri: aboutUri
          msgVpnsUri: msgVpnsUri
          domainCertAuthoritiesUri: domainCertAuthoritiesUri
          clientCertAuthoritiesUri: clientCertAuthoritiesUri
          uri: uri
          dmrClustersUri: dmrClustersUri
    CertAuthoritiesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
    CertAuthority:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority. Deprecated since 2.19.
            Replaced by clientCertAuthorities and domainCertAuthorities.
        certContent:
          type: string
          description: The PEM formatted content for the trusted root certificate
            of a Certificate Authority. The default value is `""`. Deprecated since
            2.19. certAuthorities replaced by clientCertAuthorities and domainCertAuthorities.
        crlDayList:
          type: string
          description: "The scheduled CRL refresh day(s), specified as \"daily\" or\
            \ a comma-separated list of days. Days must be specified as \"Sun\", \"\
            Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces,\
            \ and in sorted order from Sunday to Saturday. The default value is `\"\
            daily\"`. Deprecated since 2.19. certAuthorities replaced by clientCertAuthorities\
            \ and domainCertAuthorities."
        crlTimeList:
          type: string
          description: "The scheduled CRL refresh time(s), specified as \"hourly\"\
            \ or a comma-separated list of 24-hour times in the form hh:mm, or h:mm.\
            \ There must be no spaces, and times must be in sorted order from 0:00\
            \ to 23:59. The default value is `\"3:00\"`. Deprecated since 2.19. certAuthorities\
            \ replaced by clientCertAuthorities and domainCertAuthorities."
        crlUrl:
          type: string
          description: The URL for the CRL source. This is a required attribute for
            CRL to be operational and the URL must be complete with http:// included.
            The default value is `""`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
        ocspNonResponderCertEnabled:
          type: boolean
          description: Enable or disable allowing a non-responder certificate to sign
            an OCSP response. Typically used with an OCSP override URL in cases where
            a single certificate is used to sign client certificates and OCSP responses.
            The default value is `false`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
        ocspOverrideUrl:
          type: string
          description: The OCSP responder URL to use for overriding the one supplied
            in the client certificate. The URL must be complete with http:// included.
            The default value is `""`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
        ocspTimeout:
          type: integer
          description: The timeout in seconds to receive a response from the OCSP
            responder after sending a request or making the initial connection attempt.
            The default value is `5`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
          format: int64
        revocationCheckEnabled:
          type: boolean
          description: Enable or disable Certificate Authority revocation checking.
            The default value is `false`. Deprecated since 2.19. certAuthorities replaced
            by clientCertAuthorities and domainCertAuthorities.
      example:
        crlTimeList: crlTimeList
        ocspOverrideUrl: ocspOverrideUrl
        certAuthorityName: certAuthorityName
        ocspNonResponderCertEnabled: true
        revocationCheckEnabled: true
        crlDayList: crlDayList
        certContent: certContent
        ocspTimeout: 0
        crlUrl: crlUrl
    CertAuthorityLinks:
      type: object
      properties:
        ocspTlsTrustedCommonNamesUri:
          type: string
          description: The URI of this Certificate Authority's collection of OCSP
            Responder Trusted Common Name objects. Deprecated since 2.19. Replaced
            by clientCertAuthorities.
        uri:
          type: string
          description: The URI of this Certificate Authority object.
      example:
        ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
        uri: uri
    CertAuthorityOcspTlsTrustedCommonName:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority. Deprecated since 2.19.
            Replaced by clientCertAuthorities.
        ocspTlsTrustedCommonName:
          type: string
          description: The expected Trusted Common Name of the OCSP responder remote
            certificate. Deprecated since 2.19. Replaced by clientCertAuthorities.
      example:
        certAuthorityName: certAuthorityName
        ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
    CertAuthorityOcspTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this OCSP Responder Trusted Common Name object.
      example:
        uri: uri
    CertAuthorityOcspTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    CertAuthorityOcspTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/CertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    CertAuthorityResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CertAuthority'
        links:
          $ref: '#/components/schemas/CertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
    ClientCertAuthoritiesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        - crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
        - ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
    ClientCertAuthority:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority.
        certContent:
          type: string
          description: The PEM formatted content for the trusted root certificate
            of a client Certificate Authority. The default value is `""`.
        crlDayList:
          type: string
          description: "The scheduled CRL refresh day(s), specified as \"daily\" or\
            \ a comma-separated list of days. Days must be specified as \"Sun\", \"\
            Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces,\
            \ and in sorted order from Sunday to Saturday. The default value is `\"\
            daily\"`."
        crlTimeList:
          type: string
          description: "The scheduled CRL refresh time(s), specified as \"hourly\"\
            \ or a comma-separated list of 24-hour times in the form hh:mm, or h:mm.\
            \ There must be no spaces, and times must be in sorted order from 0:00\
            \ to 23:59. The default value is `\"3:00\"`."
        crlUrl:
          type: string
          description: The URL for the CRL source. This is a required attribute for
            CRL to be operational and the URL must be complete with http:// included.
            The default value is `""`.
        ocspNonResponderCertEnabled:
          type: boolean
          description: Enable or disable allowing a non-responder certificate to sign
            an OCSP response. Typically used with an OCSP override URL in cases where
            a single certificate is used to sign client certificates and OCSP responses.
            The default value is `false`.
        ocspOverrideUrl:
          type: string
          description: The OCSP responder URL to use for overriding the one supplied
            in the client certificate. The URL must be complete with http:// included.
            The default value is `""`.
        ocspTimeout:
          type: integer
          description: The timeout in seconds to receive a response from the OCSP
            responder after sending a request or making the initial connection attempt.
            The default value is `5`.
          format: int64
        revocationCheckEnabled:
          type: boolean
          description: Enable or disable Certificate Authority revocation checking.
            The default value is `false`.
      example:
        crlTimeList: crlTimeList
        ocspOverrideUrl: ocspOverrideUrl
        certAuthorityName: certAuthorityName
        ocspNonResponderCertEnabled: true
        revocationCheckEnabled: true
        crlDayList: crlDayList
        certContent: certContent
        ocspTimeout: 0
        crlUrl: crlUrl
    ClientCertAuthorityLinks:
      type: object
      properties:
        ocspTlsTrustedCommonNamesUri:
          type: string
          description: The URI of this Client Certificate Authority's collection of
            OCSP Responder Trusted Common Name objects.
        uri:
          type: string
          description: The URI of this Client Certificate Authority object.
      example:
        ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
        uri: uri
    ClientCertAuthorityOcspTlsTrustedCommonName:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority.
        ocspTlsTrustedCommonName:
          type: string
          description: The expected Trusted Common Name of the OCSP responder remote
            certificate.
      example:
        certAuthorityName: certAuthorityName
        ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
    ClientCertAuthorityOcspTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this OCSP Responder Trusted Common Name object.
      example:
        uri: uri
    ClientCertAuthorityOcspTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    ClientCertAuthorityOcspTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/ClientCertAuthorityOcspTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        - certAuthorityName: certAuthorityName
          ocspTlsTrustedCommonName: ocspTlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    ClientCertAuthorityResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClientCertAuthority'
        links:
          $ref: '#/components/schemas/ClientCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          crlTimeList: crlTimeList
          ocspOverrideUrl: ocspOverrideUrl
          certAuthorityName: certAuthorityName
          ocspNonResponderCertEnabled: true
          revocationCheckEnabled: true
          crlDayList: crlDayList
          certContent: certContent
          ocspTimeout: 0
          crlUrl: crlUrl
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          ocspTlsTrustedCommonNamesUri: ocspTlsTrustedCommonNamesUri
          uri: uri
    DmrCluster:
      type: object
      properties:
        authenticationBasicEnabled:
          type: boolean
          description: Enable or disable basic authentication for Cluster Links. The
            default value is `true`.
        authenticationBasicPassword:
          type: string
          description: "The password used to authenticate incoming Cluster Links when\
            \ using basic internal authentication. The same password is also used\
            \ by outgoing Cluster Links if a per-Link password is not configured.\
            \ This attribute is absent from a GET and not updated when absent in a\
            \ PUT, subject to the exceptions in note 4. The default value is `\"\"\
            `."
        authenticationBasicType:
          type: string
          description: |
            The type of basic authentication to use for Cluster Links. The default value is `"internal"`. The allowed values and their meaning are:

            <pre>
            "internal" - Use locally configured password.
            "none" - No authentication.
            </pre>
          enum:
          - internal
          - none
        authenticationClientCertContent:
          type: string
          description: "The PEM formatted content for the client certificate used\
            \ to login to the remote node. It must consist of a private key and between\
            \ one and three certificates comprising the certificate trust chain. This\
            \ attribute is absent from a GET and not updated when absent in a PUT,\
            \ subject to the exceptions in note 4. Changing this attribute requires\
            \ an HTTPS connection. The default value is `\"\"`."
          x-requires-https: true
        authenticationClientCertEnabled:
          type: boolean
          description: Enable or disable client certificate authentication for Cluster
            Links. The default value is `true`.
        authenticationClientCertPassword:
          type: string
          description: "The password for the client certificate. This attribute is\
            \ absent from a GET and not updated when absent in a PUT, subject to the\
            \ exceptions in note 4. Changing this attribute requires an HTTPS connection.\
            \ The default value is `\"\"`."
          x-requires-https: true
        directOnlyEnabled:
          type: boolean
          description: Enable or disable direct messaging only. Guaranteed messages
            will not be transmitted through the cluster. The default value is `false`.
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        enabled:
          type: boolean
          description: Enable or disable the Cluster. The default value is `false`.
        nodeName:
          type: string
          description: "The name of this node in the Cluster. This is the name that\
            \ this broker (or redundant group of brokers) is know by to other nodes\
            \ in the Cluster. The name is chosen automatically to be either this broker's\
            \ Router Name or Mate Router Name, depending on which Active Standby Role\
            \ (primary or backup) this broker plays in its redundancy group."
        tlsServerCertEnforceTrustedCommonNameEnabled:
          type: boolean
          description: "Enable or disable the enforcing of the common name provided\
            \ by the remote broker against the list of trusted common names configured\
            \ for the Link. If enabled, the certificate's common name must match one\
            \ of the trusted common names for the Link to be accepted. Common Name\
            \ validation is not performed if Server Certificate Name Validation is\
            \ enabled, even if Common Name validation is enabled. The default value\
            \ is `true`. Deprecated since 2.18. Common Name validation has been replaced\
            \ by Server Certificate Name validation."
        tlsServerCertMaxChainDepth:
          type: integer
          description: The maximum allowed depth of a certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
            The default value is `3`.
          format: int64
        tlsServerCertValidateDateEnabled:
          type: boolean
          description: "Enable or disable the validation of the \"Not Before\" and\
            \ \"Not After\" validity dates in the certificate. When disabled, the\
            \ certificate is accepted even if the certificate is not valid based on\
            \ these dates. The default value is `true`."
        tlsServerCertValidateNameEnabled:
          type: boolean
          description: "Enable or disable the standard TLS authentication mechanism\
            \ of verifying the name used to connect to the bridge. If enabled, the\
            \ name used to connect to the bridge is checked against the names specified\
            \ in the certificate returned by the remote router. Legacy Common Name\
            \ validation is not performed if Server Certificate Name Validation is\
            \ enabled, even if Common Name validation is also enabled. The default\
            \ value is `true`. Available since 2.18."
      example:
        nodeName: nodeName
        directOnlyEnabled: true
        authenticationBasicPassword: authenticationBasicPassword
        enabled: true
        authenticationClientCertPassword: authenticationClientCertPassword
        tlsServerCertValidateNameEnabled: true
        tlsServerCertMaxChainDepth: 0
        authenticationClientCertEnabled: true
        dmrClusterName: dmrClusterName
        tlsServerCertValidateDateEnabled: true
        authenticationBasicEnabled: true
        authenticationClientCertContent: authenticationClientCertContent
        authenticationBasicType: internal
        tlsServerCertEnforceTrustedCommonNameEnabled: true
    DmrClusterLink:
      type: object
      properties:
        authenticationBasicPassword:
          type: string
          description: "The password used to authenticate with the remote node when\
            \ using basic internal authentication. If this per-Link password is not\
            \ configured, the Cluster's password is used instead. This attribute is\
            \ absent from a GET and not updated when absent in a PUT, subject to the\
            \ exceptions in note 4. The default value is `\"\"`."
        authenticationScheme:
          type: string
          description: |
            The authentication scheme to be used by the Link which initiates connections to the remote node. The default value is `"basic"`. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
        clientProfileQueueControl1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Control 1\" (C-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        clientProfileQueueControl1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Control 1\" (C-1) priority queue, regardless of the `clientProfileQueueControl1MaxDepth`\
            \ value. The default value is `4`."
          format: int32
        clientProfileQueueDirect1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 1\" (D-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        clientProfileQueueDirect1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 1\" (D-1) priority queue, regardless of the `clientProfileQueueDirect1MaxDepth`\
            \ value. The default value is `4`."
          format: int32
        clientProfileQueueDirect2MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 2\" (D-2) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        clientProfileQueueDirect2MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 2\" (D-2) priority queue, regardless of the `clientProfileQueueDirect2MaxDepth`\
            \ value. The default value is `4`."
          format: int32
        clientProfileQueueDirect3MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 3\" (D-3) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        clientProfileQueueDirect3MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 3\" (D-3) priority queue, regardless of the `clientProfileQueueDirect3MaxDepth`\
            \ value. The default value is `4`."
          format: int32
        clientProfileQueueGuaranteed1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Guaranteed 1\" (G-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        clientProfileQueueGuaranteed1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Guaranteed 1\" (G-3) priority queue, regardless of the `clientProfileQueueGuaranteed1MaxDepth`\
            \ value. The default value is `255`."
          format: int32
        clientProfileTcpCongestionWindowSize:
          type: integer
          description: "The TCP initial congestion window size, in multiples of the\
            \ TCP Maximum Segment Size (MSS). Changing the value from its default\
            \ of 2 results in non-compliance with RFC 2581. Contact Solace Support\
            \ before changing this value. The default value is `2`."
          format: int64
        clientProfileTcpKeepaliveCount:
          type: integer
          description: The number of TCP keepalive retransmissions to be carried out
            before declaring that the remote end is not available. The default value
            is `5`.
          format: int64
        clientProfileTcpKeepaliveIdleTime:
          type: integer
          description: "The amount of time a connection must remain idle before TCP\
            \ begins sending keepalive probes, in seconds. The default value is `3`."
          format: int64
        clientProfileTcpKeepaliveInterval:
          type: integer
          description: "The amount of time between TCP keepalive retransmissions when\
            \ no acknowledgement is received, in seconds. The default value is `1`."
          format: int64
        clientProfileTcpMaxSegmentSize:
          type: integer
          description: "The TCP maximum segment size, in bytes. Changes are applied\
            \ to all existing connections. The default value is `1460`."
          format: int64
        clientProfileTcpMaxWindowSize:
          type: integer
          description: "The TCP maximum window size, in kilobytes. Changes are applied\
            \ to all existing connections. The default value is `256`."
          format: int64
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        egressFlowWindowSize:
          type: integer
          description: The number of outstanding guaranteed messages that can be sent
            over the Link before acknowledgement is received by the sender. The default
            value is `255`.
          format: int64
        enabled:
          type: boolean
          description: "Enable or disable the Link. When disabled, subscription sets\
            \ of this and the remote node are not kept up-to-date, and messages are\
            \ not exchanged with the remote node. Published guaranteed messages will\
            \ be queued up for future delivery based on current subscription sets.\
            \ The default value is `false`."
        initiator:
          type: string
          description: |
            The initiator of the Link's TCP connections. The default value is `"lexical"`. The allowed values and their meaning are:

            <pre>
            "lexical" - The "higher" node-name initiates.
            "local" - The local node initiates.
            "remote" - The remote node initiates.
            </pre>
          enum:
          - lexical
          - local
          - remote
        queueDeadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ) used by the Queue
            for discarded messages. The default value is `"#DEAD_MSG_QUEUE"`.
        queueEventSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Queue. The default value is `1000000`.
          format: int64
        queueMaxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage by the Queue (quota), in megabytes\
            \ (MB). The default varies by platform."
          format: int64
        queueMaxRedeliveryCount:
          type: integer
          description: The maximum number of times the Queue will attempt redelivery
            of a message prior to it being discarded or moved to the DMQ. A value
            of 0 means to retry forever. The default value is `0`.
          format: int64
        queueMaxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the Queue\
            \ when `queueRespectTtlEnabled` is `true`. A message expires when the\
            \ lesser of the sender assigned time-to-live (TTL) in the message and\
            \ the `queueMaxTtl` configured for the Queue, is exceeded. A value of\
            \ 0 disables expiry. The default value is `0`."
          format: int64
        queueRejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"always"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
        queueRespectTtlEnabled:
          type: boolean
          description: "Enable or disable the respecting of the time-to-live (TTL)\
            \ for messages in the Queue. When enabled, expired messages are discarded\
            \ or moved to the DMQ. The default value is `false`."
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the Link.
        span:
          type: string
          description: "The span of the Link, either internal or external. Internal\
            \ Links connect nodes within the same Cluster. External Links connect\
            \ nodes within different Clusters. The default value is `\"external\"\
            `. The allowed values and their meaning are:\n\n<pre>\n\"internal\" -\
            \ Link to same cluster.\n\"external\" - Link to other cluster.\n</pre>\n"
          enum:
          - internal
          - external
        transportCompressedEnabled:
          type: boolean
          description: Enable or disable compression on the Link. The default value
            is `false`.
        transportTlsEnabled:
          type: boolean
          description: Enable or disable encryption (TLS) on the Link. The default
            value is `false`.
      example:
        transportCompressedEnabled: true
        remoteNodeName: remoteNodeName
        clientProfileQueueDirect2MaxDepth: 5
        clientProfileQueueDirect1MaxDepth: 1
        clientProfileQueueDirect3MinMsgBurst: 9
        initiator: lexical
        queueMaxDeliveredUnackedMsgsPerFlow: 1
        clientProfileQueueDirect3MaxDepth: 7
        queueMaxRedeliveryCount: 5
        transportTlsEnabled: true
        enabled: true
        queueDeadMsgQueue: queueDeadMsgQueue
        authenticationScheme: basic
        clientProfileQueueControl1MaxDepth: 0
        clientProfileQueueDirect2MinMsgBurst: 2
        queueEventSpoolUsageThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        clientProfileQueueControl1MinMsgBurst: 6
        queueMaxMsgSpoolUsage: 4
        clientProfileTcpKeepaliveInterval: 1
        egressFlowWindowSize: 7
        clientProfileTcpCongestionWindowSize: 4
        clientProfileQueueDirect1MinMsgBurst: 5
        queueRespectTtlEnabled: true
        clientProfileTcpMaxWindowSize: 6
        authenticationBasicPassword: authenticationBasicPassword
        clientProfileTcpKeepaliveCount: 7
        queueMaxTtl: 9
        clientProfileTcpKeepaliveIdleTime: 1
        queueRejectMsgToSenderOnDiscardBehavior: always
        dmrClusterName: dmrClusterName
        clientProfileTcpMaxSegmentSize: 1
        clientProfileQueueGuaranteed1MaxDepth: 3
        clientProfileQueueGuaranteed1MinMsgBurst: 2
        span: internal
    DmrClusterLinkLinks:
      type: object
      properties:
        remoteAddressesUri:
          type: string
          description: The URI of this Link's collection of Remote Address objects.
        tlsTrustedCommonNamesUri:
          type: string
          description: The URI of this Link's collection of Trusted Common Name objects.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
        uri:
          type: string
          description: The URI of this Link object.
      example:
        remoteAddressesUri: remoteAddressesUri
        uri: uri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    DmrClusterLinkRemoteAddress:
      type: object
      properties:
        dmrClusterName:
          type: string
          description: The name of the Cluster.
        remoteAddress:
          type: string
          description: "The FQDN or IP address (and optional port) of the remote node.\
            \ If a port is not provided, it will vary based on the transport encoding:\
            \ 55555 (plain-text), 55443 (encrypted), or 55003 (compressed)."
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the Link.
      example:
        remoteNodeName: remoteNodeName
        dmrClusterName: dmrClusterName
        remoteAddress: remoteAddress
    DmrClusterLinkRemoteAddressLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Remote Address object.
      example:
        uri: uri
    DmrClusterLinkRemoteAddressResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
        links:
          $ref: '#/components/schemas/DmrClusterLinkRemoteAddressLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    DmrClusterLinkRemoteAddressesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddress'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkRemoteAddressLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          remoteAddress: remoteAddress
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    DmrClusterLinkResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DmrClusterLink'
        links:
          $ref: '#/components/schemas/DmrClusterLinkLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 5
          clientProfileQueueDirect1MaxDepth: 1
          clientProfileQueueDirect3MinMsgBurst: 9
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          clientProfileQueueDirect3MaxDepth: 7
          queueMaxRedeliveryCount: 5
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 0
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          clientProfileQueueControl1MinMsgBurst: 6
          queueMaxMsgSpoolUsage: 4
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 7
          clientProfileTcpCongestionWindowSize: 4
          clientProfileQueueDirect1MinMsgBurst: 5
          queueRespectTtlEnabled: true
          clientProfileTcpMaxWindowSize: 6
          authenticationBasicPassword: authenticationBasicPassword
          clientProfileTcpKeepaliveCount: 7
          queueMaxTtl: 9
          clientProfileTcpKeepaliveIdleTime: 1
          queueRejectMsgToSenderOnDiscardBehavior: always
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 3
          clientProfileQueueGuaranteed1MinMsgBurst: 2
          span: internal
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    DmrClusterLinkTlsTrustedCommonName:
      type: object
      properties:
        dmrClusterName:
          type: string
          description: The name of the Cluster. Deprecated since 2.18. Common Name
            validation has been replaced by Server Certificate Name validation.
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the Link. Deprecated
            since 2.18. Common Name validation has been replaced by Server Certificate
            Name validation.
        tlsTrustedCommonName:
          type: string
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
      example:
        remoteNodeName: remoteNodeName
        dmrClusterName: dmrClusterName
        tlsTrustedCommonName: tlsTrustedCommonName
    DmrClusterLinkTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Trusted Common Name object.
      example:
        uri: uri
    DmrClusterLinkTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    DmrClusterLinkTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        - remoteNodeName: remoteNodeName
          dmrClusterName: dmrClusterName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    DmrClusterLinks:
      type: object
      properties:
        linksUri:
          type: string
          description: The URI of this Cluster's collection of Link objects.
        uri:
          type: string
          description: The URI of this Cluster object.
      example:
        linksUri: linksUri
        uri: uri
    DmrClusterLinksResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLink'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinkLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 5
          clientProfileQueueDirect1MaxDepth: 1
          clientProfileQueueDirect3MinMsgBurst: 9
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          clientProfileQueueDirect3MaxDepth: 7
          queueMaxRedeliveryCount: 5
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 0
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          clientProfileQueueControl1MinMsgBurst: 6
          queueMaxMsgSpoolUsage: 4
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 7
          clientProfileTcpCongestionWindowSize: 4
          clientProfileQueueDirect1MinMsgBurst: 5
          queueRespectTtlEnabled: true
          clientProfileTcpMaxWindowSize: 6
          authenticationBasicPassword: authenticationBasicPassword
          clientProfileTcpKeepaliveCount: 7
          queueMaxTtl: 9
          clientProfileTcpKeepaliveIdleTime: 1
          queueRejectMsgToSenderOnDiscardBehavior: always
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 3
          clientProfileQueueGuaranteed1MinMsgBurst: 2
          span: internal
        - transportCompressedEnabled: true
          remoteNodeName: remoteNodeName
          clientProfileQueueDirect2MaxDepth: 5
          clientProfileQueueDirect1MaxDepth: 1
          clientProfileQueueDirect3MinMsgBurst: 9
          initiator: lexical
          queueMaxDeliveredUnackedMsgsPerFlow: 1
          clientProfileQueueDirect3MaxDepth: 7
          queueMaxRedeliveryCount: 5
          transportTlsEnabled: true
          enabled: true
          queueDeadMsgQueue: queueDeadMsgQueue
          authenticationScheme: basic
          clientProfileQueueControl1MaxDepth: 0
          clientProfileQueueDirect2MinMsgBurst: 2
          queueEventSpoolUsageThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          clientProfileQueueControl1MinMsgBurst: 6
          queueMaxMsgSpoolUsage: 4
          clientProfileTcpKeepaliveInterval: 1
          egressFlowWindowSize: 7
          clientProfileTcpCongestionWindowSize: 4
          clientProfileQueueDirect1MinMsgBurst: 5
          queueRespectTtlEnabled: true
          clientProfileTcpMaxWindowSize: 6
          authenticationBasicPassword: authenticationBasicPassword
          clientProfileTcpKeepaliveCount: 7
          queueMaxTtl: 9
          clientProfileTcpKeepaliveIdleTime: 1
          queueRejectMsgToSenderOnDiscardBehavior: always
          dmrClusterName: dmrClusterName
          clientProfileTcpMaxSegmentSize: 1
          clientProfileQueueGuaranteed1MaxDepth: 3
          clientProfileQueueGuaranteed1MinMsgBurst: 2
          span: internal
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - remoteAddressesUri: remoteAddressesUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    DmrClusterResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DmrCluster'
        links:
          $ref: '#/components/schemas/DmrClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          nodeName: nodeName
          directOnlyEnabled: true
          authenticationBasicPassword: authenticationBasicPassword
          enabled: true
          authenticationClientCertPassword: authenticationClientCertPassword
          tlsServerCertValidateNameEnabled: true
          tlsServerCertMaxChainDepth: 0
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          authenticationClientCertContent: authenticationClientCertContent
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          linksUri: linksUri
          uri: uri
    DmrClustersResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DmrCluster'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DmrClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - nodeName: nodeName
          directOnlyEnabled: true
          authenticationBasicPassword: authenticationBasicPassword
          enabled: true
          authenticationClientCertPassword: authenticationClientCertPassword
          tlsServerCertValidateNameEnabled: true
          tlsServerCertMaxChainDepth: 0
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          authenticationClientCertContent: authenticationClientCertContent
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        - nodeName: nodeName
          directOnlyEnabled: true
          authenticationBasicPassword: authenticationBasicPassword
          enabled: true
          authenticationClientCertPassword: authenticationClientCertPassword
          tlsServerCertValidateNameEnabled: true
          tlsServerCertMaxChainDepth: 0
          authenticationClientCertEnabled: true
          dmrClusterName: dmrClusterName
          tlsServerCertValidateDateEnabled: true
          authenticationBasicEnabled: true
          authenticationClientCertContent: authenticationClientCertContent
          authenticationBasicType: internal
          tlsServerCertEnforceTrustedCommonNameEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - linksUri: linksUri
          uri: uri
        - linksUri: linksUri
          uri: uri
    DomainCertAuthoritiesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/DomainCertAuthority'
        links:
          type: array
          items:
            $ref: '#/components/schemas/DomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - certAuthorityName: certAuthorityName
          certContent: certContent
        - certAuthorityName: certAuthorityName
          certContent: certContent
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    DomainCertAuthority:
      type: object
      properties:
        certAuthorityName:
          type: string
          description: The name of the Certificate Authority.
        certContent:
          type: string
          description: The PEM formatted content for the trusted root certificate
            of a domain Certificate Authority. The default value is `""`.
      example:
        certAuthorityName: certAuthorityName
        certContent: certContent
    DomainCertAuthorityLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Domain Certificate Authority object.
      example:
        uri: uri
    DomainCertAuthorityResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DomainCertAuthority'
        links:
          $ref: '#/components/schemas/DomainCertAuthorityLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          certAuthorityName: certAuthorityName
          certContent: certContent
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    EventThreshold:
      type: object
      properties:
        clearPercent:
          type: integer
          description: The clear threshold for the value of this counter as a percentage
            of its maximum value. Falling below this value will trigger a corresponding
            event. This attribute may not be returned in a GET.
          format: int64
        clearValue:
          type: integer
          description: The clear threshold for the absolute value of this counter.
            Falling below this value will trigger a corresponding event. This attribute
            may not be returned in a GET.
          format: int64
        setPercent:
          type: integer
          description: The set threshold for the value of this counter as a percentage
            of its maximum value. Exceeding this value will trigger a corresponding
            event. This attribute may not be returned in a GET.
          format: int64
        setValue:
          type: integer
          description: The set threshold for the absolute value of this counter. Exceeding
            this value will trigger a corresponding event. This attribute may not
            be returned in a GET.
          format: int64
      example:
        clearPercent: 0
        setPercent: 1
        setValue: 5
        clearValue: 6
    EventThresholdByPercent:
      type: object
      properties:
        clearPercent:
          type: integer
          description: The clear threshold for the value of this counter as a percentage
            of its maximum value. Falling below this value will trigger a corresponding
            event.
          format: int64
        setPercent:
          type: integer
          description: The set threshold for the value of this counter as a percentage
            of its maximum value. Exceeding this value will trigger a corresponding
            event.
          format: int64
      example:
        clearPercent: 5
        setPercent: 2
    EventThresholdByValue:
      type: object
      properties:
        clearValue:
          type: integer
          description: The clear threshold for the absolute value of this counter
            or rate. Falling below this value will trigger a corresponding event.
          format: int64
        setValue:
          type: integer
          description: The set threshold for the absolute value of this counter or
            rate. Exceeding this value will trigger a corresponding event.
          format: int64
      example:
        setValue: 5
        clearValue: 1
    MsgVpn:
      type: object
      properties:
        alias:
          type: string
          description: "The name of another Message VPN which this Message VPN is\
            \ an alias for. When this Message VPN is enabled, the alias has no effect.\
            \ When this Message VPN is disabled, Clients (but not Bridges and routing\
            \ Links) logging into this Message VPN are automatically logged in to\
            \ the other Message VPN, and authentication and authorization take place\
            \ in the context of the other Message VPN.\n\nAliases may form a non-circular\
            \ chain, cascading one to the next. The default value is `\"\"`. Available\
            \ since 2.14."
        authenticationBasicEnabled:
          type: boolean
          description: "Enable or disable basic authentication for clients connecting\
            \ to the Message VPN. Basic authentication is authentication that involves\
            \ the use of a username and password to prove identity. If a user provides\
            \ credentials for a different authentication scheme, this setting is not\
            \ applicable. The default value is `true`."
        authenticationBasicProfileName:
          type: string
          description: The name of the RADIUS or LDAP Profile to use for basic authentication.
            The default value is `"default"`.
        authenticationBasicRadiusDomain:
          type: string
          description: The RADIUS domain to use for basic authentication. The default
            value is `""`.
        authenticationBasicType:
          type: string
          description: |
            The type of basic authentication to use for clients connecting to the Message VPN. The default value is `"radius"`. The allowed values and their meaning are:

            <pre>
            "internal" - Internal database. Authentication is against Client Usernames.
            "ldap" - LDAP authentication. An LDAP profile name must be provided.
            "radius" - RADIUS authentication. A RADIUS profile name must be provided.
            "none" - No authentication. Anonymous login allowed.
            </pre>
          enum:
          - internal
          - ldap
          - radius
          - none
        authenticationClientCertAllowApiProvidedUsernameEnabled:
          type: boolean
          description: "Enable or disable allowing a client to specify a Client Username\
            \ via the API connect method. When disabled, the certificate CN (Common\
            \ Name) is always used. The default value is `false`."
        authenticationClientCertEnabled:
          type: boolean
          description: Enable or disable client certificate authentication in the
            Message VPN. The default value is `false`.
        authenticationClientCertMaxChainDepth:
          type: integer
          description: The maximum depth for a client certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
            The default value is `3`.
          format: int64
        authenticationClientCertRevocationCheckMode:
          type: string
          description: "The desired behavior for client certificate revocation checking.\
            \ The default value is `\"allow-valid\"`. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"allow-all\" - Allow the client to authenticate,\
            \ the result of client certificate revocation check is ignored.\n\"allow-unknown\"\
            \ - Allow the client to authenticate even if the revocation status of\
            \ his certificate cannot be determined.\n\"allow-valid\" - Allow the client\
            \ to authenticate only when the revocation check returned an explicit\
            \ positive response.\n</pre>\n Available since 2.6."
          enum:
          - allow-all
          - allow-unknown
          - allow-valid
        authenticationClientCertUsernameSource:
          type: string
          description: |-
            The field from the client certificate to use as the client username. The default value is `"common-name"`. The allowed values and their meaning are:

            <pre>
            "certificate-thumbprint" - The username is computed as the SHA-1 hash over the entire DER-encoded contents of the client certificate.
            "common-name" - The username is extracted from the certificate's first instance of the Common Name attribute in the Subject DN.
            "common-name-last" - The username is extracted from the certificate's last instance of the Common Name attribute in the Subject DN.
            "subject-alternate-name-msupn" - The username is extracted from the certificate's Other Name type of the Subject Alternative Name and must have the msUPN signature.
            "uid" - The username is extracted from the certificate's first instance of the User Identifier attribute in the Subject DN.
            "uid-last" - The username is extracted from the certificate's last instance of the User Identifier attribute in the Subject DN.
            </pre>
             Available since 2.6.
          enum:
          - certificate-thumbprint
          - common-name
          - common-name-last
          - subject-alternate-name-msupn
          - uid
          - uid-last
        authenticationClientCertValidateDateEnabled:
          type: boolean
          description: Enable or disable validation of the "Not Before" and "Not After"
            validity dates in the client certificate. The default value is `true`.
        authenticationKerberosAllowApiProvidedUsernameEnabled:
          type: boolean
          description: "Enable or disable allowing a client to specify a Client Username\
            \ via the API connect method. When disabled, the Kerberos Principal name\
            \ is always used. The default value is `false`."
        authenticationKerberosEnabled:
          type: boolean
          description: Enable or disable Kerberos authentication in the Message VPN.
            The default value is `false`.
        authenticationOauthDefaultProviderName:
          type: string
          description: The name of the provider to use when the client does not supply
            a provider name. The default value is `""`. Available since 2.13.
        authenticationOauthEnabled:
          type: boolean
          description: Enable or disable OAuth authentication. The default value is
            `false`. Available since 2.13.
        authorizationLdapGroupMembershipAttributeName:
          type: string
          description: The name of the attribute that is retrieved from the LDAP server
            as part of the LDAP search when authorizing a client connecting to the
            Message VPN. The default value is `"memberOf"`.
        authorizationLdapTrimClientUsernameDomainEnabled:
          type: boolean
          description: "Enable or disable client-username domain trimming for LDAP\
            \ lookups of client connections. When enabled, the value of $CLIENT_USERNAME\
            \ (when used for searching) will be truncated at the first occurance of\
            \ the @ character. For example, if the client-username is in the form\
            \ of an email address, then the domain portion will be removed. The default\
            \ value is `false`. Available since 2.13."
        authorizationProfileName:
          type: string
          description: The name of the LDAP Profile to use for client authorization.
            The default value is `""`.
        authorizationType:
          type: string
          description: |
            The type of authorization to use for clients connecting to the Message VPN. The default value is `"internal"`. The allowed values and their meaning are:

            <pre>
            "ldap" - LDAP authorization.
            "internal" - Internal authorization.
            </pre>
          enum:
          - ldap
          - internal
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled:
          type: boolean
          description: "Enable or disable validation of the Common Name (CN) in the\
            \ server certificate from the remote broker. If enabled, the Common Name\
            \ is checked against the list of Trusted Common Names configured for the\
            \ Bridge. Common Name validation is not performed if Server Certificate\
            \ Name Validation is enabled, even if Common Name validation is enabled.\
            \ The default value is `true`. Deprecated since 2.18. Common Name validation\
            \ has been replaced by Server Certificate Name validation."
        bridgingTlsServerCertMaxChainDepth:
          type: integer
          description: The maximum depth for a server certificate chain. The depth
            of a chain is defined as the number of signing CA certificates that are
            present in the chain back to a trusted self-signed root CA certificate.
            The default value is `3`.
          format: int64
        bridgingTlsServerCertValidateDateEnabled:
          type: boolean
          description: "Enable or disable validation of the \"Not Before\" and \"\
            Not After\" validity dates in the server certificate. When disabled, a\
            \ certificate will be accepted even if the certificate is not valid based\
            \ on these dates. The default value is `true`."
        bridgingTlsServerCertValidateNameEnabled:
          type: boolean
          description: "Enable or disable the standard TLS authentication mechanism\
            \ of verifying the name used to connect to the bridge. If enabled, the\
            \ name used to connect to the bridge is checked against the names specified\
            \ in the certificate returned by the remote router. Legacy Common Name\
            \ validation is not performed if Server Certificate Name Validation is\
            \ enabled, even if Common Name validation is also enabled. The default\
            \ value is `true`. Available since 2.18."
        distributedCacheManagementEnabled:
          type: boolean
          description: Enable or disable managing of cache instances over the message
            bus. The default value is `true`.
        dmrEnabled:
          type: boolean
          description: Enable or disable Dynamic Message Routing (DMR) for the Message
            VPN. The default value is `false`. Available since 2.11.
        enabled:
          type: boolean
          description: Enable or disable the Message VPN. The default value is `false`.
        eventConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventEndpointCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventLargeMsgThreshold:
          type: integer
          description: "The threshold, in kilobytes, after which a message is considered\
            \ to be large for the Message VPN. The default value is `1024`."
          format: int64
        eventLogTag:
          type: string
          description: A prefix applied to all published Events in the Message VPN.
            The default value is `""`.
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventPublishClientEnabled:
          type: boolean
          description: Enable or disable Client level Event message publishing. The
            default value is `false`.
        eventPublishMsgVpnEnabled:
          type: boolean
          description: Enable or disable Message VPN level Event message publishing.
            The default value is `false`.
        eventPublishSubscriptionMode:
          type: string
          description: "Subscription level Event message publishing mode. The default\
            \ value is `\"off\"`. The allowed values and their meaning are:\n\n<pre>\n\
            \"off\" - Disable client level event message publishing.\n\"on-with-format-v1\"\
            \ - Enable client level event message publishing with format v1.\n\"on-with-no-unsubscribe-events-on-disconnect-format-v1\"\
            \ - As \"on-with-format-v1\", but unsubscribe events are not generated\
            \ when a client disconnects. Unsubscribe events are still raised when\
            \ a client explicitly unsubscribes from its subscriptions.\n\"on-with-format-v2\"\
            \ - Enable client level event message publishing with format v2.\n\"on-with-no-unsubscribe-events-on-disconnect-format-v2\"\
            \ - As \"on-with-format-v2\", but unsubscribe events are not generated\
            \ when a client disconnects. Unsubscribe events are still raised when\
            \ a client explicitly unsubscribes from its subscriptions.\n</pre>\n"
          enum:
          - "off"
          - on-with-format-v1
          - on-with-no-unsubscribe-events-on-disconnect-format-v1
          - on-with-format-v2
          - on-with-no-unsubscribe-events-on-disconnect-format-v2
        eventPublishTopicFormatMqttEnabled:
          type: boolean
          description: Enable or disable Event publish topics in MQTT format. The
            default value is `false`.
        eventPublishTopicFormatSmfEnabled:
          type: boolean
          description: Enable or disable Event publish topics in SMF format. The default
            value is `true`.
        eventServiceAmqpConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceMqttConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceRestIncomingConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceSmfConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceWebConnectionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSubscriptionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        exportSubscriptionsEnabled:
          type: boolean
          description: Enable or disable the export of subscriptions in the Message
            VPN to other routers in the network over Neighbor links. The default value
            is `false`.
        jndiEnabled:
          type: boolean
          description: Enable or disable JNDI access for clients in the Message VPN.
            The default value is `false`. Available since 2.2.
        maxConnectionCount:
          type: integer
          description: The maximum number of client connections to the Message VPN.
            The default is the maximum value supported by the platform.
          format: int64
        maxEgressFlowCount:
          type: integer
          description: The maximum number of transmit flows that can be created in
            the Message VPN. The default value is `1000`.
          format: int64
        maxEndpointCount:
          type: integer
          description: The maximum number of Queues and Topic Endpoints that can be
            created in the Message VPN. The default value is `1000`.
          format: int64
        maxIngressFlowCount:
          type: integer
          description: The maximum number of receive flows that can be created in
            the Message VPN. The default value is `1000`.
          format: int64
        maxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage by the Message VPN, in megabytes.\
            \ The default value is `0`."
          format: int64
        maxSubscriptionCount:
          type: integer
          description: "The maximum number of local client subscriptions that can\
            \ be added to the Message VPN. This limit is not enforced when a subscription\
            \ is added using a management interface, such as CLI or SEMP. The default\
            \ varies by platform."
          format: int64
        maxTransactedSessionCount:
          type: integer
          description: The maximum number of transacted sessions that can be created
            in the Message VPN. The default varies by platform.
          format: int64
        maxTransactionCount:
          type: integer
          description: The maximum number of transactions that can be created in the
            Message VPN. The default varies by platform.
          format: int64
        mqttRetainMaxMemory:
          type: integer
          description: "The maximum total memory usage of the MQTT Retain feature\
            \ for this Message VPN, in MB. If the maximum memory is reached, any arriving\
            \ retain messages that require more memory are discarded. A value of -1\
            \ indicates that the memory is bounded only by the global max memory limit.\
            \ A value of 0 prevents MQTT Retain from becoming operational. The default\
            \ value is `-1`. Available since 2.11."
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        replicationAckPropagationIntervalMsgCount:
          type: integer
          description: "The acknowledgement (ACK) propagation interval for the replication\
            \ Bridge, in number of replicated messages. The default value is `20`."
          format: int64
        replicationBridgeAuthenticationBasicClientUsername:
          type: string
          description: The Client Username the replication Bridge uses to login to
            the remote Message VPN. The default value is `""`.
        replicationBridgeAuthenticationBasicPassword:
          type: string
          description: "The password for the Client Username. This attribute is absent\
            \ from a GET and not updated when absent in a PUT, subject to the exceptions\
            \ in note 4. The default value is `\"\"`."
        replicationBridgeAuthenticationClientCertContent:
          type: string
          description: "The PEM formatted content for the client certificate used\
            \ by this bridge to login to the Remote Message VPN. It must consist of\
            \ a private key and between one and three certificates comprising the\
            \ certificate trust chain. This attribute is absent from a GET and not\
            \ updated when absent in a PUT, subject to the exceptions in note 4. Changing\
            \ this attribute requires an HTTPS connection. The default value is `\"\
            \"`. Available since 2.9."
          x-requires-https: true
        replicationBridgeAuthenticationClientCertPassword:
          type: string
          description: "The password for the client certificate. This attribute is\
            \ absent from a GET and not updated when absent in a PUT, subject to the\
            \ exceptions in note 4. Changing this attribute requires an HTTPS connection.\
            \ The default value is `\"\"`. Available since 2.9."
          x-requires-https: true
        replicationBridgeAuthenticationScheme:
          type: string
          description: |
            The authentication scheme for the replication Bridge in the Message VPN. The default value is `"basic"`. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
        replicationBridgeCompressedDataEnabled:
          type: boolean
          description: Enable or disable use of compression for the replication Bridge.
            The default value is `false`.
        replicationBridgeEgressFlowWindowSize:
          type: integer
          description: "The size of the window used for guaranteed messages published\
            \ to the replication Bridge, in messages. The default value is `255`."
          format: int64
        replicationBridgeRetryDelay:
          type: integer
          description: The number of seconds that must pass before retrying the replication
            Bridge connection. The default value is `3`.
          format: int64
        replicationBridgeTlsEnabled:
          type: boolean
          description: Enable or disable use of encryption (TLS) for the replication
            Bridge connection. The default value is `false`.
        replicationBridgeUnidirectionalClientProfileName:
          type: string
          description: The Client Profile for the unidirectional replication Bridge
            in the Message VPN. It is used only for the TCP parameters. The default
            value is `"#client-profile"`.
        replicationEnabled:
          type: boolean
          description: Enable or disable replication for the Message VPN. The default
            value is `false`.
        replicationEnabledQueueBehavior:
          type: string
          description: "The behavior to take when enabling replication for the Message\
            \ VPN, depending on the existence of the replication Queue. This attribute\
            \ is absent from a GET and not updated when absent in a PUT, subject to\
            \ the exceptions in note 4. The default value is `\"fail-on-existing-queue\"\
            `. The allowed values and their meaning are:\n\n<pre>\n\"fail-on-existing-queue\"\
            \ - The data replication queue must not already exist.\n\"force-use-existing-queue\"\
            \ - The data replication queue must already exist. Any data messages on\
            \ the Queue will be forwarded to interested applications. IMPORTANT: Before\
            \ using this mode be certain that the messages are not stale or otherwise\
            \ unsuitable to be forwarded. This mode can only be specified when the\
            \ existing queue is configured the same as is currently specified under\
            \ replication configuration otherwise the enabling of replication will\
            \ fail.\n\"force-recreate-queue\" - The data replication queue must already\
            \ exist. Any data messages on the Queue will be discarded. IMPORTANT:\
            \ Before using this mode be certain that the messages on the existing\
            \ data replication queue are not needed by interested applications.\n\
            </pre>\n"
          enum:
          - fail-on-existing-queue
          - force-use-existing-queue
          - force-recreate-queue
        replicationQueueMaxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage by the replication Bridge\
            \ local Queue (quota), in megabytes. The default value is `60000`."
          format: int64
        replicationQueueRejectMsgToSenderOnDiscardEnabled:
          type: boolean
          description: Enable or disable whether messages discarded on the replication
            Bridge local Queue are rejected back to the sender. The default value
            is `true`.
        replicationRejectMsgWhenSyncIneligibleEnabled:
          type: boolean
          description: Enable or disable whether guaranteed messages published to
            synchronously replicated Topics are rejected back to the sender when synchronous
            replication becomes ineligible. The default value is `false`.
        replicationRole:
          type: string
          description: |
            The replication role for the Message VPN. The default value is `"standby"`. The allowed values and their meaning are:

            <pre>
            "active" - Assume the Active role in replication for the Message VPN.
            "standby" - Assume the Standby role in replication for the Message VPN.
            </pre>
          enum:
          - active
          - standby
        replicationTransactionMode:
          type: string
          description: |
            The transaction replication mode for all transactions within the Message VPN. Changing this value during operation will not affect existing transactions; it is only used upon starting a transaction. The default value is `"async"`. The allowed values and their meaning are:

            <pre>
            "sync" - Messages are acknowledged when replicated (spooled remotely).
            "async" - Messages are acknowledged when pending replication (spooled locally).
            </pre>
          enum:
          - sync
          - async
        restTlsServerCertEnforceTrustedCommonNameEnabled:
          type: boolean
          description: "Enable or disable validation of the Common Name (CN) in the\
            \ server certificate from the remote REST Consumer. If enabled, the Common\
            \ Name is checked against the list of Trusted Common Names configured\
            \ for the REST Consumer. Common Name validation is not performed if Server\
            \ Certificate Name Validation is enabled, even if Common Name validation\
            \ is enabled. The default value is `true`. Deprecated since 2.17. Common\
            \ Name validation has been replaced by Server Certificate Name validation."
        restTlsServerCertMaxChainDepth:
          type: integer
          description: The maximum depth for a REST Consumer server certificate chain.
            The depth of a chain is defined as the number of signing CA certificates
            that are present in the chain back to a trusted self-signed root CA certificate.
            The default value is `3`.
          format: int64
        restTlsServerCertValidateDateEnabled:
          type: boolean
          description: Enable or disable validation of the "Not Before" and "Not After"
            validity dates in the REST Consumer server certificate. The default value
            is `true`.
        restTlsServerCertValidateNameEnabled:
          type: boolean
          description: "Enable or disable the standard TLS authentication mechanism\
            \ of verifying the name used to connect to the remote REST Consumer. If\
            \ enabled, the name used to connect to the remote REST Consumer is checked\
            \ against the names specified in the certificate returned by the remote\
            \ router. Legacy Common Name validation is not performed if Server Certificate\
            \ Name Validation is enabled, even if Common Name validation is also enabled.\
            \ The default value is `true`. Available since 2.17."
        sempOverMsgBusAdminClientEnabled:
          type: boolean
          description: Enable or disable "admin client" SEMP over the message bus
            commands for the current Message VPN. The default value is `false`.
        sempOverMsgBusAdminDistributedCacheEnabled:
          type: boolean
          description: Enable or disable "admin distributed-cache" SEMP over the message
            bus commands for the current Message VPN. The default value is `false`.
        sempOverMsgBusAdminEnabled:
          type: boolean
          description: Enable or disable "admin" SEMP over the message bus commands
            for the current Message VPN. The default value is `false`.
        sempOverMsgBusEnabled:
          type: boolean
          description: Enable or disable SEMP over the message bus for the current
            Message VPN. The default value is `true`.
        sempOverMsgBusShowEnabled:
          type: boolean
          description: Enable or disable "show" SEMP over the message bus commands
            for the current Message VPN. The default value is `false`.
        serviceAmqpMaxConnectionCount:
          type: integer
          description: The maximum number of AMQP client connections that can be simultaneously
            connected to the Message VPN. This value may be higher than supported
            by the platform. The default is the maximum value supported by the platform.
            Available since 2.7.
          format: int64
        serviceAmqpPlainTextEnabled:
          type: boolean
          description: Enable or disable the plain-text AMQP service in the Message
            VPN. Disabling causes clients connected to the corresponding listen-port
            to be disconnected. The default value is `false`. Available since 2.7.
        serviceAmqpPlainTextListenPort:
          type: integer
          description: The port number for plain-text AMQP clients that connect to
            the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
            The default value is `0`. Available since 2.7.
          format: int64
        serviceAmqpTlsEnabled:
          type: boolean
          description: Enable or disable the use of encryption (TLS) for the AMQP
            service in the Message VPN. Disabling causes clients currently connected
            over TLS to be disconnected. The default value is `false`. Available since
            2.7.
        serviceAmqpTlsListenPort:
          type: integer
          description: The port number for AMQP clients that connect to the Message
            VPN over TLS. The port must be unique across the message backbone. A value
            of 0 means that the listen-port is unassigned and cannot be enabled. The
            default value is `0`. Available since 2.7.
          format: int64
        serviceMqttAuthenticationClientCertRequest:
          type: string
          description: |-
            Determines when to request a client certificate from an incoming MQTT client connecting via a TLS port. The default value is `"when-enabled-in-message-vpn"`. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
        serviceMqttMaxConnectionCount:
          type: integer
          description: The maximum number of MQTT client connections that can be simultaneously
            connected to the Message VPN. The default is the maximum value supported
            by the platform. Available since 2.1.
          format: int64
        serviceMqttPlainTextEnabled:
          type: boolean
          description: Enable or disable the plain-text MQTT service in the Message
            VPN. Disabling causes clients currently connected to be disconnected.
            The default value is `false`. Available since 2.1.
        serviceMqttPlainTextListenPort:
          type: integer
          description: The port number for plain-text MQTT clients that connect to
            the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
            The default value is `0`. Available since 2.1.
          format: int64
        serviceMqttTlsEnabled:
          type: boolean
          description: Enable or disable the use of encryption (TLS) for the MQTT
            service in the Message VPN. Disabling causes clients currently connected
            over TLS to be disconnected. The default value is `false`. Available since
            2.1.
        serviceMqttTlsListenPort:
          type: integer
          description: The port number for MQTT clients that connect to the Message
            VPN over TLS. The port must be unique across the message backbone. A value
            of 0 means that the listen-port is unassigned and cannot be enabled. The
            default value is `0`. Available since 2.1.
          format: int64
        serviceMqttTlsWebSocketEnabled:
          type: boolean
          description: Enable or disable the use of encrypted WebSocket (WebSocket
            over TLS) for the MQTT service in the Message VPN. Disabling causes clients
            currently connected by encrypted WebSocket to be disconnected. The default
            value is `false`. Available since 2.1.
        serviceMqttTlsWebSocketListenPort:
          type: integer
          description: The port number for MQTT clients that connect to the Message
            VPN using WebSocket over TLS. The port must be unique across the message
            backbone. A value of 0 means that the listen-port is unassigned and cannot
            be enabled. The default value is `0`. Available since 2.1.
          format: int64
        serviceMqttWebSocketEnabled:
          type: boolean
          description: Enable or disable the use of WebSocket for the MQTT service
            in the Message VPN. Disabling causes clients currently connected by WebSocket
            to be disconnected. The default value is `false`. Available since 2.1.
        serviceMqttWebSocketListenPort:
          type: integer
          description: The port number for plain-text MQTT clients that connect to
            the Message VPN using WebSocket. The port must be unique across the message
            backbone. A value of 0 means that the listen-port is unassigned and cannot
            be enabled. The default value is `0`. Available since 2.1.
          format: int64
        serviceRestIncomingAuthenticationClientCertRequest:
          type: string
          description: |-
            Determines when to request a client certificate from an incoming REST Producer connecting via a TLS port. The default value is `"when-enabled-in-message-vpn"`. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
        serviceRestIncomingAuthorizationHeaderHandling:
          type: string
          description: "The handling of Authorization headers for incoming REST connections.\
            \ The default value is `\"drop\"`. The allowed values and their meaning\
            \ are:\n\n<pre>\n\"drop\" - Do not attach the Authorization header to\
            \ the message as a user property. This configuration is most secure.\n\
            \"forward\" - Forward the Authorization header, attaching it to the message\
            \ as a user property in the same way as other headers. For best security,\
            \ use the drop setting.\n\"legacy\" - If the Authorization header was\
            \ used for authentication to the broker, do not attach it to the message.\
            \ If the Authorization header was not used for authentication to the broker,\
            \ attach it to the message as a user property in the same way as other\
            \ headers. For best security, use the drop setting.\n</pre>\n Available\
            \ since 2.19."
          enum:
          - drop
          - forward
          - legacy
        serviceRestIncomingMaxConnectionCount:
          type: integer
          description: The maximum number of REST incoming client connections that
            can be simultaneously connected to the Message VPN. This value may be
            higher than supported by the platform. The default is the maximum value
            supported by the platform.
          format: int64
        serviceRestIncomingPlainTextEnabled:
          type: boolean
          description: Enable or disable the plain-text REST service for incoming
            clients in the Message VPN. Disabling causes clients currently connected
            to be disconnected. The default value is `false`.
        serviceRestIncomingPlainTextListenPort:
          type: integer
          description: The port number for incoming plain-text REST clients that connect
            to the Message VPN. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
            The default value is `0`.
          format: int64
        serviceRestIncomingTlsEnabled:
          type: boolean
          description: Enable or disable the use of encryption (TLS) for the REST
            service for incoming clients in the Message VPN. Disabling causes clients
            currently connected over TLS to be disconnected. The default value is
            `false`.
        serviceRestIncomingTlsListenPort:
          type: integer
          description: The port number for incoming REST clients that connect to the
            Message VPN over TLS. The port must be unique across the message backbone.
            A value of 0 means that the listen-port is unassigned and cannot be enabled.
            The default value is `0`.
          format: int64
        serviceRestMode:
          type: string
          description: |-
            The REST service mode for incoming REST clients that connect to the Message VPN. The default value is `"messaging"`. The allowed values and their meaning are:

            <pre>
            "gateway" - Act as a message gateway through which REST messages are propagated.
            "messaging" - Act as a message broker on which REST messages are queued.
            </pre>
             Available since 2.6.
          enum:
          - gateway
          - messaging
        serviceRestOutgoingMaxConnectionCount:
          type: integer
          description: The maximum number of REST Consumer (outgoing) client connections
            that can be simultaneously connected to the Message VPN. The default varies
            by platform.
          format: int64
        serviceSmfMaxConnectionCount:
          type: integer
          description: The maximum number of SMF client connections that can be simultaneously
            connected to the Message VPN. This value may be higher than supported
            by the platform. The default varies by platform.
          format: int64
        serviceSmfPlainTextEnabled:
          type: boolean
          description: Enable or disable the plain-text SMF service in the Message
            VPN. Disabling causes clients currently connected to be disconnected.
            The default value is `true`.
        serviceSmfTlsEnabled:
          type: boolean
          description: Enable or disable the use of encryption (TLS) for the SMF service
            in the Message VPN. Disabling causes clients currently connected over
            TLS to be disconnected. The default value is `true`.
        serviceWebAuthenticationClientCertRequest:
          type: string
          description: |-
            Determines when to request a client certificate from a Web Transport client connecting via a TLS port. The default value is `"when-enabled-in-message-vpn"`. The allowed values and their meaning are:

            <pre>
            "always" - Always ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "never" - Never ask for a client certificate regardless of the "message-vpn > authentication > client-certificate > shutdown" configuration.
            "when-enabled-in-message-vpn" - Only ask for a client-certificate if client certificate authentication is enabled under "message-vpn >  authentication > client-certificate > shutdown".
            </pre>
             Available since 2.21.
          enum:
          - always
          - never
          - when-enabled-in-message-vpn
        serviceWebMaxConnectionCount:
          type: integer
          description: The maximum number of Web Transport client connections that
            can be simultaneously connected to the Message VPN. This value may be
            higher than supported by the platform. The default is the maximum value
            supported by the platform.
          format: int64
        serviceWebPlainTextEnabled:
          type: boolean
          description: Enable or disable the plain-text Web Transport service in the
            Message VPN. Disabling causes clients currently connected to be disconnected.
            The default value is `true`.
        serviceWebTlsEnabled:
          type: boolean
          description: Enable or disable the use of TLS for the Web Transport service
            in the Message VPN. Disabling causes clients currently connected over
            TLS to be disconnected. The default value is `true`.
        tlsAllowDowngradeToPlainTextEnabled:
          type: boolean
          description: Enable or disable the allowing of TLS SMF clients to downgrade
            their connections to plain-text connections. Changing this will not affect
            existing connections. The default value is `false`.
      example:
        serviceMqttMaxConnectionCount: 6
        authorizationProfileName: authorizationProfileName
        replicationBridgeAuthenticationClientCertPassword: replicationBridgeAuthenticationClientCertPassword
        replicationBridgeEgressFlowWindowSize: 6
        restTlsServerCertMaxChainDepth: 4
        serviceRestIncomingPlainTextEnabled: true
        replicationEnabled: true
        eventServiceWebConnectionCountThreshold: null
        bridgingTlsServerCertValidateDateEnabled: true
        authorizationType: ldap
        replicationAckPropagationIntervalMsgCount: 1
        bridgingTlsServerCertMaxChainDepth: 6
        replicationBridgeCompressedDataEnabled: true
        serviceAmqpPlainTextEnabled: true
        bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
        restTlsServerCertValidateDateEnabled: true
        eventTransactedSessionCountThreshold: null
        authenticationKerberosEnabled: true
        authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
        serviceRestIncomingPlainTextListenPort: 1
        authenticationClientCertUsernameSource: certificate-thumbprint
        replicationBridgeAuthenticationClientCertContent: replicationBridgeAuthenticationClientCertContent
        eventSubscriptionCountThreshold: null
        serviceMqttPlainTextListenPort: 8
        authenticationClientCertMaxChainDepth: 0
        serviceMqttWebSocketEnabled: true
        authorizationLdapTrimClientUsernameDomainEnabled: true
        serviceRestIncomingAuthorizationHeaderHandling: drop
        authenticationClientCertEnabled: true
        restTlsServerCertEnforceTrustedCommonNameEnabled: true
        replicationRejectMsgWhenSyncIneligibleEnabled: true
        eventPublishTopicFormatSmfEnabled: true
        authenticationBasicProfileName: authenticationBasicProfileName
        enabled: true
        replicationBridgeAuthenticationScheme: basic
        serviceRestIncomingAuthenticationClientCertRequest: always
        replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
        serviceRestIncomingMaxConnectionCount: 6
        sempOverMsgBusEnabled: true
        maxTransactionCount: 1
        serviceAmqpTlsListenPort: 9
        serviceMqttTlsListenPort: 9
        eventServiceAmqpConnectionCountThreshold: null
        serviceRestMode: gateway
        serviceRestIncomingTlsEnabled: true
        authenticationKerberosAllowApiProvidedUsernameEnabled: true
        sempOverMsgBusAdminDistributedCacheEnabled: true
        maxSubscriptionCount: 4
        authenticationOauthEnabled: true
        authenticationBasicType: internal
        serviceWebMaxConnectionCount: 5
        serviceAmqpMaxConnectionCount: 5
        maxEgressFlowCount: 7
        serviceMqttWebSocketListenPort: 3
        serviceSmfPlainTextEnabled: true
        maxEndpointCount: 9
        serviceWebTlsEnabled: true
        serviceMqttTlsWebSocketEnabled: true
        exportSubscriptionsEnabled: true
        eventIngressMsgRateThreshold: null
        eventPublishSubscriptionMode: "off"
        serviceMqttTlsEnabled: true
        eventConnectionCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        serviceSmfTlsEnabled: true
        eventLargeMsgThreshold: 5
        serviceRestIncomingTlsListenPort: 2
        replicationQueueRejectMsgToSenderOnDiscardEnabled: true
        eventTransactionCountThreshold: null
        eventPublishMsgVpnEnabled: true
        sempOverMsgBusShowEnabled: true
        serviceWebPlainTextEnabled: true
        dmrEnabled: true
        msgVpnName: msgVpnName
        eventEndpointCountThreshold: null
        sempOverMsgBusAdminEnabled: true
        eventEgressFlowCountThreshold: null
        eventServiceRestIncomingConnectionCountThreshold: null
        eventMsgSpoolUsageThreshold: null
        serviceSmfMaxConnectionCount: 6
        jndiEnabled: true
        restTlsServerCertValidateNameEnabled: true
        serviceMqttPlainTextEnabled: true
        eventPublishClientEnabled: true
        replicationQueueMaxMsgSpoolUsage: 1
        eventServiceMqttConnectionCountThreshold: null
        sempOverMsgBusAdminClientEnabled: true
        tlsAllowDowngradeToPlainTextEnabled: true
        maxConnectionCount: 2
        serviceWebAuthenticationClientCertRequest: always
        serviceRestOutgoingMaxConnectionCount: 6
        replicationBridgeTlsEnabled: true
        authenticationClientCertRevocationCheckMode: allow-all
        authenticationClientCertAllowApiProvidedUsernameEnabled: true
        eventServiceSmfConnectionCountThreshold: null
        serviceAmqpPlainTextListenPort: 9
        authenticationClientCertValidateDateEnabled: true
        serviceAmqpTlsEnabled: true
        eventEgressMsgRateThreshold:
          setValue: 5
          clearValue: 1
        replicationTransactionMode: sync
        replicationRole: active
        authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
        replicationEnabledQueueBehavior: fail-on-existing-queue
        replicationBridgeRetryDelay: 7
        eventLogTag: eventLogTag
        distributedCacheManagementEnabled: true
        alias: alias
        serviceMqttTlsWebSocketListenPort: 6
        replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
        bridgingTlsServerCertValidateNameEnabled: true
        replicationBridgeAuthenticationBasicPassword: replicationBridgeAuthenticationBasicPassword
        maxIngressFlowCount: 3
        serviceMqttAuthenticationClientCertRequest: always
        maxTransactedSessionCount: 7
        mqttRetainMaxMemory: 1
        eventPublishTopicFormatMqttEnabled: true
        authenticationBasicEnabled: true
        maxMsgSpoolUsage: 2
        authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
        eventIngressFlowCountThreshold: null
    MsgVpnAclProfile:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        clientConnectDefaultAction:
          type: string
          description: |
            The default action to take when a client using the ACL Profile connects to the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:

            <pre>
            "allow" - Allow client connection unless an exception is found for it.
            "disallow" - Disallow client connection unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        publishTopicDefaultAction:
          type: string
          description: |
            The default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
        subscribeShareNameDefaultAction:
          type: string
          description: |-
            The default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. The default value is `"allow"`. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
             Available since 2.14.
          enum:
          - allow
          - disallow
        subscribeTopicDefaultAction:
          type: string
          description: |
            The default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. The default value is `"disallow"`. The allowed values and their meaning are:

            <pre>
            "allow" - Allow topic unless an exception is found for it.
            "disallow" - Disallow topic unless an exception is found for it.
            </pre>
          enum:
          - allow
          - disallow
      example:
        clientConnectDefaultAction: allow
        publishTopicDefaultAction: allow
        subscribeTopicDefaultAction: allow
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        subscribeShareNameDefaultAction: allow
    MsgVpnAclProfileClientConnectException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        clientConnectExceptionAddress:
          type: string
          description: The IP address/netmask of the client connect exception in CIDR
            form.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        clientConnectExceptionAddress: clientConnectExceptionAddress
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
    MsgVpnAclProfileClientConnectExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Connect Exception object.
      example:
        uri: uri
    MsgVpnAclProfileClientConnectExceptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnAclProfileClientConnectExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileClientConnectExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        - clientConnectExceptionAddress: clientConnectExceptionAddress
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfileLinks:
      type: object
      properties:
        clientConnectExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Client Connect
            Exception objects.
        publishExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Publish Topic Exception
            objects. Deprecated since 2.14. Replaced by publishTopicExceptions.
        publishTopicExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Publish Topic Exception
            objects. Available since 2.14.
        subscribeExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Subscribe Topic
            Exception objects. Deprecated since 2.14. Replaced by subscribeTopicExceptions.
        subscribeShareNameExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Subscribe Share
            Name Exception objects. Available since 2.14.
        subscribeTopicExceptionsUri:
          type: string
          description: The URI of this ACL Profile's collection of Subscribe Topic
            Exception objects. Available since 2.14.
        uri:
          type: string
          description: The URI of this ACL Profile object.
      example:
        clientConnectExceptionsUri: clientConnectExceptionsUri
        subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
        subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
        publishExceptionsUri: publishExceptionsUri
        uri: uri
        publishTopicExceptionsUri: publishTopicExceptionsUri
        subscribeExceptionsUri: subscribeExceptionsUri
    MsgVpnAclProfilePublishException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile. Deprecated since 2.14. Replaced
            by publishTopicExceptions.
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.14. Replaced
            by publishTopicExceptions.
        publishExceptionTopic:
          type: string
          description: The topic for the exception to the default action taken. May
            include wildcard characters. Deprecated since 2.14. Replaced by publishTopicExceptions.
        topicSyntax:
          type: string
          description: |-
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
             Deprecated since 2.14. Replaced by publishTopicExceptions.
          enum:
          - smf
          - mqtt
      example:
        publishExceptionTopic: publishExceptionTopic
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        topicSyntax: smf
    MsgVpnAclProfilePublishExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Publish Topic Exception object.
      example:
        uri: uri
    MsgVpnAclProfilePublishExceptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnAclProfilePublishExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        - publishExceptionTopic: publishExceptionTopic
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          topicSyntax: smf
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfilePublishTopicException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        publishTopicException:
          type: string
          description: The topic for the exception to the default action taken. May
            include wildcard characters.
        publishTopicExceptionSyntax:
          type: string
          description: |
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
      example:
        publishTopicExceptionSyntax: smf
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        publishTopicException: publishTopicException
    MsgVpnAclProfilePublishTopicExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Publish Topic Exception object.
      example:
        uri: uri
    MsgVpnAclProfilePublishTopicExceptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnAclProfilePublishTopicExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfilePublishTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        - publishTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          publishTopicException: publishTopicException
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfileResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfile'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
    MsgVpnAclProfileSubscribeException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile. Deprecated since 2.14. Replaced
            by subscribeTopicExceptions.
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.14. Replaced
            by subscribeTopicExceptions.
        subscribeExceptionTopic:
          type: string
          description: The topic for the exception to the default action taken. May
            include wildcard characters. Deprecated since 2.14. Replaced by subscribeTopicExceptions.
        topicSyntax:
          type: string
          description: |-
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
             Deprecated since 2.14. Replaced by subscribeTopicExceptions.
          enum:
          - smf
          - mqtt
      example:
        msgVpnName: msgVpnName
        subscribeExceptionTopic: subscribeExceptionTopic
        aclProfileName: aclProfileName
        topicSyntax: smf
    MsgVpnAclProfileSubscribeExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Subscribe Topic Exception object.
      example:
        uri: uri
    MsgVpnAclProfileSubscribeExceptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnAclProfileSubscribeExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        - msgVpnName: msgVpnName
          subscribeExceptionTopic: subscribeExceptionTopic
          aclProfileName: aclProfileName
          topicSyntax: smf
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfileSubscribeShareNameException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscribeShareNameException:
          type: string
          description: The subscribe share name exception to the default action taken.
            May include wildcard characters.
        subscribeShareNameExceptionSyntax:
          type: string
          description: |
            The syntax of the subscribe share name for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
      example:
        subscribeShareNameExceptionSyntax: smf
        msgVpnName: msgVpnName
        subscribeShareNameException: subscribeShareNameException
        aclProfileName: aclProfileName
    MsgVpnAclProfileSubscribeShareNameExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Subscribe Share Name Exception object.
      example:
        uri: uri
    MsgVpnAclProfileSubscribeShareNameExceptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnAclProfileSubscribeShareNameExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeShareNameExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        - subscribeShareNameExceptionSyntax: smf
          msgVpnName: msgVpnName
          subscribeShareNameException: subscribeShareNameException
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfileSubscribeTopicException:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The name of the ACL Profile.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscribeTopicException:
          type: string
          description: The topic for the exception to the default action taken. May
            include wildcard characters.
        subscribeTopicExceptionSyntax:
          type: string
          description: |
            The syntax of the topic for the exception to the default action taken. The allowed values and their meaning are:

            <pre>
            "smf" - Topic uses SMF syntax.
            "mqtt" - Topic uses MQTT syntax.
            </pre>
          enum:
          - smf
          - mqtt
      example:
        subscribeTopicException: subscribeTopicException
        subscribeTopicExceptionSyntax: smf
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
    MsgVpnAclProfileSubscribeTopicExceptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Subscribe Topic Exception object.
      example:
        uri: uri
    MsgVpnAclProfileSubscribeTopicExceptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
        links:
          $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnAclProfileSubscribeTopicExceptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicException'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileSubscribeTopicExceptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        - subscribeTopicException: subscribeTopicException
          subscribeTopicExceptionSyntax: smf
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnAclProfilesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfile'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAclProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        - clientConnectDefaultAction: allow
          publishTopicDefaultAction: allow
          subscribeTopicDefaultAction: allow
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          subscribeShareNameDefaultAction: allow
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
        - clientConnectExceptionsUri: clientConnectExceptionsUri
          subscribeTopicExceptionsUri: subscribeTopicExceptionsUri
          subscribeShareNameExceptionsUri: subscribeShareNameExceptionsUri
          publishExceptionsUri: publishExceptionsUri
          uri: uri
          publishTopicExceptionsUri: publishTopicExceptionsUri
          subscribeExceptionsUri: subscribeExceptionsUri
    MsgVpnAuthenticationOauthProvider:
      type: object
      properties:
        audienceClaimName:
          type: string
          description: "The audience claim name, indicating which part of the object\
            \ to use for determining the audience. The default value is `\"aud\"`."
        audienceClaimSource:
          type: string
          description: "The audience claim source, indicating where to search for\
            \ the audience value. The default value is `\"id-token\"`. The allowed\
            \ values and their meaning are:\n\n<pre>\n\"access-token\" - The OAuth\
            \ v2 access_token.\n\"id-token\" - The OpenID Connect id_token.\n\"introspection\"\
            \ - The result of introspecting the OAuth v2 access_token.\n</pre>\n"
          enum:
          - access-token
          - id-token
          - introspection
        audienceClaimValue:
          type: string
          description: The required audience value for a token to be considered valid.
            The default value is `""`.
        audienceValidationEnabled:
          type: boolean
          description: Enable or disable audience validation. The default value is
            `false`.
        authorizationGroupClaimName:
          type: string
          description: "The authorization group claim name, indicating which part\
            \ of the object to use for determining the authorization group. The default\
            \ value is `\"scope\"`."
        authorizationGroupClaimSource:
          type: string
          description: "The authorization group claim source, indicating where to\
            \ search for the authorization group name. The default value is `\"id-token\"\
            `. The allowed values and their meaning are:\n\n<pre>\n\"access-token\"\
            \ - The OAuth v2 access_token.\n\"id-token\" - The OpenID Connect id_token.\n\
            \"introspection\" - The result of introspecting the OAuth v2 access_token.\n\
            </pre>\n"
          enum:
          - access-token
          - id-token
          - introspection
        authorizationGroupEnabled:
          type: boolean
          description: "Enable or disable OAuth based authorization. When enabled,\
            \ the configured authorization type for OAuth clients is overridden. The\
            \ default value is `false`."
        disconnectOnTokenExpirationEnabled:
          type: boolean
          description: "Enable or disable the disconnection of clients when their\
            \ tokens expire. Changing this value does not affect existing clients,\
            \ only new client connections. The default value is `true`."
        enabled:
          type: boolean
          description: Enable or disable OAuth Provider client authentication. The
            default value is `false`.
        jwksRefreshInterval:
          type: integer
          description: The number of seconds between forced JWKS public key refreshing.
            The default value is `86400`.
          format: int32
        jwksUri:
          type: string
          description: The URI where the OAuth provider publishes its JWKS public
            keys. The default value is `""`.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        oauthProviderName:
          type: string
          description: The name of the OAuth Provider.
        tokenIgnoreTimeLimitsEnabled:
          type: boolean
          description: Enable or disable whether to ignore time limits and accept
            tokens that are not yet valid or are no longer valid. The default value
            is `false`.
        tokenIntrospectionParameterName:
          type: string
          description: The parameter name used to identify the token during access
            token introspection. A standards compliant OAuth introspection server
            expects "token". The default value is `"token"`.
        tokenIntrospectionPassword:
          type: string
          description: "The password to use when logging into the token introspection\
            \ URI. This attribute is absent from a GET and not updated when absent\
            \ in a PUT, subject to the exceptions in note 4. The default value is\
            \ `\"\"`."
        tokenIntrospectionTimeout:
          type: integer
          description: The maximum time in seconds a token introspection is allowed
            to take. The default value is `1`.
          format: int32
        tokenIntrospectionUri:
          type: string
          description: The token introspection URI of the OAuth authentication server.
            The default value is `""`.
        tokenIntrospectionUsername:
          type: string
          description: The username to use when logging into the token introspection
            URI. The default value is `""`.
        usernameClaimName:
          type: string
          description: "The username claim name, indicating which part of the object\
            \ to use for determining the username. The default value is `\"sub\"`."
        usernameClaimSource:
          type: string
          description: "The username claim source, indicating where to search for\
            \ the username value. The default value is `\"id-token\"`. The allowed\
            \ values and their meaning are:\n\n<pre>\n\"access-token\" - The OAuth\
            \ v2 access_token.\n\"id-token\" - The OpenID Connect id_token.\n\"introspection\"\
            \ - The result of introspecting the OAuth v2 access_token.\n</pre>\n"
          enum:
          - access-token
          - id-token
          - introspection
        usernameValidateEnabled:
          type: boolean
          description: Enable or disable whether the API provided username will be
            validated against the username calculated from the token(s); the connection
            attempt is rejected if they differ. The default value is `false`.
      example:
        audienceValidationEnabled: true
        audienceClaimValue: audienceClaimValue
        usernameValidateEnabled: true
        oauthProviderName: oauthProviderName
        tokenIntrospectionPassword: tokenIntrospectionPassword
        jwksUri: jwksUri
        tokenIntrospectionTimeout: 6
        tokenIntrospectionUsername: tokenIntrospectionUsername
        enabled: true
        authorizationGroupClaimSource: access-token
        usernameClaimSource: access-token
        jwksRefreshInterval: 0
        authorizationGroupEnabled: true
        tokenIgnoreTimeLimitsEnabled: true
        audienceClaimSource: access-token
        authorizationGroupClaimName: authorizationGroupClaimName
        tokenIntrospectionUri: tokenIntrospectionUri
        disconnectOnTokenExpirationEnabled: true
        msgVpnName: msgVpnName
        usernameClaimName: usernameClaimName
        audienceClaimName: audienceClaimName
        tokenIntrospectionParameterName: tokenIntrospectionParameterName
    MsgVpnAuthenticationOauthProviderLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this OAuth Provider object.
      example:
        uri: uri
    MsgVpnAuthenticationOauthProviderResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        links:
          $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          audienceValidationEnabled: true
          audienceClaimValue: audienceClaimValue
          usernameValidateEnabled: true
          oauthProviderName: oauthProviderName
          tokenIntrospectionPassword: tokenIntrospectionPassword
          jwksUri: jwksUri
          tokenIntrospectionTimeout: 6
          tokenIntrospectionUsername: tokenIntrospectionUsername
          enabled: true
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksRefreshInterval: 0
          authorizationGroupEnabled: true
          tokenIgnoreTimeLimitsEnabled: true
          audienceClaimSource: access-token
          authorizationGroupClaimName: authorizationGroupClaimName
          tokenIntrospectionUri: tokenIntrospectionUri
          disconnectOnTokenExpirationEnabled: true
          msgVpnName: msgVpnName
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnAuthenticationOauthProvidersResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProvider'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthenticationOauthProviderLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - audienceValidationEnabled: true
          audienceClaimValue: audienceClaimValue
          usernameValidateEnabled: true
          oauthProviderName: oauthProviderName
          tokenIntrospectionPassword: tokenIntrospectionPassword
          jwksUri: jwksUri
          tokenIntrospectionTimeout: 6
          tokenIntrospectionUsername: tokenIntrospectionUsername
          enabled: true
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksRefreshInterval: 0
          authorizationGroupEnabled: true
          tokenIgnoreTimeLimitsEnabled: true
          audienceClaimSource: access-token
          authorizationGroupClaimName: authorizationGroupClaimName
          tokenIntrospectionUri: tokenIntrospectionUri
          disconnectOnTokenExpirationEnabled: true
          msgVpnName: msgVpnName
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
        - audienceValidationEnabled: true
          audienceClaimValue: audienceClaimValue
          usernameValidateEnabled: true
          oauthProviderName: oauthProviderName
          tokenIntrospectionPassword: tokenIntrospectionPassword
          jwksUri: jwksUri
          tokenIntrospectionTimeout: 6
          tokenIntrospectionUsername: tokenIntrospectionUsername
          enabled: true
          authorizationGroupClaimSource: access-token
          usernameClaimSource: access-token
          jwksRefreshInterval: 0
          authorizationGroupEnabled: true
          tokenIgnoreTimeLimitsEnabled: true
          audienceClaimSource: access-token
          authorizationGroupClaimName: authorizationGroupClaimName
          tokenIntrospectionUri: tokenIntrospectionUri
          disconnectOnTokenExpirationEnabled: true
          msgVpnName: msgVpnName
          usernameClaimName: usernameClaimName
          audienceClaimName: audienceClaimName
          tokenIntrospectionParameterName: tokenIntrospectionParameterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnAuthorizationGroup:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The ACL Profile of the LDAP Authorization Group. The default
            value is `"default"`.
        authorizationGroupName:
          type: string
          description: "The name of the LDAP Authorization Group. Special care is\
            \ needed if the group name contains special characters such as '#', '+',\
            \ ';', '=' as the value of the group name returned from the LDAP server\
            \ might prepend those characters with '\\'. For example a group name called\
            \ 'test#,lab,com' will be returned from the LDAP server as 'test\\#,lab,com'."
        clientProfileName:
          type: string
          description: The Client Profile of the LDAP Authorization Group. The default
            value is `"default"`.
        enabled:
          type: boolean
          description: Enable or disable the LDAP Authorization Group in the Message
            VPN. The default value is `false`.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        orderAfterAuthorizationGroupName:
          type: string
          description: "Lower the priority to be less than this group. This attribute\
            \ is absent from a GET and not updated when absent in a PUT, subject to\
            \ the exceptions in note 4. The default is not applicable."
        orderBeforeAuthorizationGroupName:
          type: string
          description: "Raise the priority to be greater than this group. This attribute\
            \ is absent from a GET and not updated when absent in a PUT, subject to\
            \ the exceptions in note 4. The default is not applicable."
      example:
        orderBeforeAuthorizationGroupName: orderBeforeAuthorizationGroupName
        authorizationGroupName: authorizationGroupName
        clientProfileName: clientProfileName
        msgVpnName: msgVpnName
        aclProfileName: aclProfileName
        enabled: true
        orderAfterAuthorizationGroupName: orderAfterAuthorizationGroupName
    MsgVpnAuthorizationGroupLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this LDAP Authorization Group object.
      example:
        uri: uri
    MsgVpnAuthorizationGroupResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        links:
          $ref: '#/components/schemas/MsgVpnAuthorizationGroupLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          orderBeforeAuthorizationGroupName: orderBeforeAuthorizationGroupName
          authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
          orderAfterAuthorizationGroupName: orderAfterAuthorizationGroupName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnAuthorizationGroupsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroup'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnAuthorizationGroupLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - orderBeforeAuthorizationGroupName: orderBeforeAuthorizationGroupName
          authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
          orderAfterAuthorizationGroupName: orderAfterAuthorizationGroupName
        - orderBeforeAuthorizationGroupName: orderBeforeAuthorizationGroupName
          authorizationGroupName: authorizationGroupName
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          aclProfileName: aclProfileName
          enabled: true
          orderAfterAuthorizationGroupName: orderAfterAuthorizationGroupName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridge:
      type: object
      properties:
        bridgeName:
          type: string
          description: The name of the Bridge.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        enabled:
          type: boolean
          description: Enable or disable the Bridge. The default value is `false`.
        maxTtl:
          type: integer
          description: The maximum time-to-live (TTL) in hops. Messages are discarded
            if their TTL exceeds this value. The default value is `8`.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        remoteAuthenticationBasicClientUsername:
          type: string
          description: The Client Username the Bridge uses to login to the remote
            Message VPN. The default value is `""`.
        remoteAuthenticationBasicPassword:
          type: string
          description: "The password for the Client Username. This attribute is absent\
            \ from a GET and not updated when absent in a PUT, subject to the exceptions\
            \ in note 4. The default value is `\"\"`."
        remoteAuthenticationClientCertContent:
          type: string
          description: "The PEM formatted content for the client certificate used\
            \ by the Bridge to login to the remote Message VPN. It must consist of\
            \ a private key and between one and three certificates comprising the\
            \ certificate trust chain. This attribute is absent from a GET and not\
            \ updated when absent in a PUT, subject to the exceptions in note 4. Changing\
            \ this attribute requires an HTTPS connection. The default value is `\"\
            \"`. Available since 2.9."
          x-requires-https: true
        remoteAuthenticationClientCertPassword:
          type: string
          description: "The password for the client certificate. This attribute is\
            \ absent from a GET and not updated when absent in a PUT, subject to the\
            \ exceptions in note 4. Changing this attribute requires an HTTPS connection.\
            \ The default value is `\"\"`. Available since 2.9."
          x-requires-https: true
        remoteAuthenticationScheme:
          type: string
          description: |
            The authentication scheme for the remote Message VPN. The default value is `"basic"`. The allowed values and their meaning are:

            <pre>
            "basic" - Basic Authentication Scheme (via username and password).
            "client-certificate" - Client Certificate Authentication Scheme (via certificate file or content).
            </pre>
          enum:
          - basic
          - client-certificate
        remoteConnectionRetryCount:
          type: integer
          description: The maximum number of retry attempts to establish a connection
            to the remote Message VPN. A value of 0 means to retry forever. The default
            value is `0`.
          format: int64
        remoteConnectionRetryDelay:
          type: integer
          description: The number of seconds the broker waits for the bridge connection
            to be established before attempting a new connection. The default value
            is `3`.
          format: int64
        remoteDeliverToOnePriority:
          type: string
          description: |
            The priority for deliver-to-one (DTO) messages transmitted from the remote Message VPN. The default value is `"p1"`. The allowed values and their meaning are:

            <pre>
            "p1" - The 1st or highest priority.
            "p2" - The 2nd highest priority.
            "p3" - The 3rd highest priority.
            "p4" - The 4th highest priority.
            "da" - Ignore priority and deliver always.
            </pre>
          enum:
          - p1
          - p2
          - p3
          - p4
          - da
        tlsCipherSuiteList:
          type: string
          description: The colon-separated list of cipher suites supported for TLS
            connections to the remote Message VPN. The value "default" implies all
            supported suites ordered from most secure to least secure. The default
            value is `"default"`.
      example:
        remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
        remoteAuthenticationClientCertPassword: remoteAuthenticationClientCertPassword
        maxTtl: 0
        remoteDeliverToOnePriority: p1
        bridgeName: bridgeName
        enabled: true
        remoteAuthenticationBasicPassword: remoteAuthenticationBasicPassword
        bridgeVirtualRouter: primary
        remoteAuthenticationClientCertContent: remoteAuthenticationClientCertContent
        remoteConnectionRetryCount: 6
        remoteConnectionRetryDelay: 1
        tlsCipherSuiteList: tlsCipherSuiteList
        msgVpnName: msgVpnName
        remoteAuthenticationScheme: basic
    MsgVpnBridgeLinks:
      type: object
      properties:
        remoteMsgVpnsUri:
          type: string
          description: The URI of this Bridge's collection of Remote Message VPN objects.
        remoteSubscriptionsUri:
          type: string
          description: The URI of this Bridge's collection of Remote Subscription
            objects.
        tlsTrustedCommonNamesUri:
          type: string
          description: The URI of this Bridge's collection of Trusted Common Name
            objects. Deprecated since 2.18. Common Name validation has been replaced
            by Server Certificate Name validation.
        uri:
          type: string
          description: The URI of this Bridge object.
      example:
        remoteMsgVpnsUri: remoteMsgVpnsUri
        uri: uri
        remoteSubscriptionsUri: remoteSubscriptionsUri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnBridgeRemoteMsgVpn:
      type: object
      properties:
        bridgeName:
          type: string
          description: The name of the Bridge.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        clientUsername:
          type: string
          description: The Client Username the Bridge uses to login to the remote
            Message VPN. This per remote Message VPN value overrides the value provided
            for the Bridge overall. The default value is `""`.
        compressedDataEnabled:
          type: boolean
          description: Enable or disable data compression for the remote Message VPN
            connection. The default value is `false`.
        connectOrder:
          type: integer
          description: "The preference given to incoming connections from remote Message\
            \ VPN hosts, from 1 (highest priority) to 4 (lowest priority). The default\
            \ value is `4`."
          format: int32
        egressFlowWindowSize:
          type: integer
          description: The number of outstanding guaranteed messages that can be transmitted
            over the remote Message VPN connection before an acknowledgement is received.
            The default value is `255`.
          format: int64
        enabled:
          type: boolean
          description: Enable or disable the remote Message VPN. The default value
            is `false`.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        password:
          type: string
          description: "The password for the Client Username. This attribute is absent\
            \ from a GET and not updated when absent in a PUT, subject to the exceptions\
            \ in note 4. The default value is `\"\"`."
        queueBinding:
          type: string
          description: The queue binding of the Bridge in the remote Message VPN.
            The default value is `""`.
        remoteMsgVpnInterface:
          type: string
          description: "The physical interface on the local Message VPN host for connecting\
            \ to the remote Message VPN. By default, an interface is chosen automatically\
            \ (recommended), but if specified, `remoteMsgVpnLocation` must not be\
            \ a virtual router name."
        remoteMsgVpnLocation:
          type: string
          description: "The location of the remote Message VPN as either an FQDN with\
            \ port, IP address with port, or virtual router name (starting with \"\
            v:\")."
        remoteMsgVpnName:
          type: string
          description: The name of the remote Message VPN.
        tlsEnabled:
          type: boolean
          description: Enable or disable encryption (TLS) for the remote Message VPN
            connection. The default value is `false`.
        unidirectionalClientProfile:
          type: string
          description: "The Client Profile for the unidirectional Bridge of the remote\
            \ Message VPN. The Client Profile must exist in the local Message VPN,\
            \ and it is used only for the TCP parameters. Note that the default client\
            \ profile has a TCP maximum window size of 2MB. The default value is `\"\
            #client-profile\"`."
      example:
        egressFlowWindowSize: 6
        remoteMsgVpnLocation: remoteMsgVpnLocation
        bridgeName: bridgeName
        compressedDataEnabled: true
        enabled: true
        remoteMsgVpnName: remoteMsgVpnName
        bridgeVirtualRouter: primary
        password: password
        remoteMsgVpnInterface: remoteMsgVpnInterface
        tlsEnabled: true
        clientUsername: clientUsername
        connectOrder: 0
        queueBinding: queueBinding
        msgVpnName: msgVpnName
        unidirectionalClientProfile: unidirectionalClientProfile
    MsgVpnBridgeRemoteMsgVpnLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Remote Message VPN object.
      example:
        uri: uri
    MsgVpnBridgeRemoteMsgVpnResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          password: password
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          unidirectionalClientProfile: unidirectionalClientProfile
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnBridgeRemoteMsgVpnsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpn'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteMsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          password: password
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          unidirectionalClientProfile: unidirectionalClientProfile
        - egressFlowWindowSize: 6
          remoteMsgVpnLocation: remoteMsgVpnLocation
          bridgeName: bridgeName
          compressedDataEnabled: true
          enabled: true
          remoteMsgVpnName: remoteMsgVpnName
          bridgeVirtualRouter: primary
          password: password
          remoteMsgVpnInterface: remoteMsgVpnInterface
          tlsEnabled: true
          clientUsername: clientUsername
          connectOrder: 0
          queueBinding: queueBinding
          msgVpnName: msgVpnName
          unidirectionalClientProfile: unidirectionalClientProfile
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridgeRemoteSubscription:
      type: object
      properties:
        bridgeName:
          type: string
          description: The name of the Bridge.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n"
          enum:
          - primary
          - backup
          - auto
        deliverAlwaysEnabled:
          type: boolean
          description: Enable or disable deliver-always for the Bridge remote subscription
            topic instead of a deliver-to-one remote priority. A given topic for the
            Bridge may be deliver-to-one or deliver-always but not both.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        remoteSubscriptionTopic:
          type: string
          description: The topic of the Bridge remote subscription.
      example:
        bridgeVirtualRouter: primary
        deliverAlwaysEnabled: true
        remoteSubscriptionTopic: remoteSubscriptionTopic
        msgVpnName: msgVpnName
        bridgeName: bridgeName
    MsgVpnBridgeRemoteSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Remote Subscription object.
      example:
        uri: uri
    MsgVpnBridgeRemoteSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnBridgeRemoteSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeRemoteSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        - bridgeVirtualRouter: primary
          deliverAlwaysEnabled: true
          remoteSubscriptionTopic: remoteSubscriptionTopic
          msgVpnName: msgVpnName
          bridgeName: bridgeName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridgeResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnBridge'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          remoteAuthenticationClientCertPassword: remoteAuthenticationClientCertPassword
          maxTtl: 0
          remoteDeliverToOnePriority: p1
          bridgeName: bridgeName
          enabled: true
          remoteAuthenticationBasicPassword: remoteAuthenticationBasicPassword
          bridgeVirtualRouter: primary
          remoteAuthenticationClientCertContent: remoteAuthenticationClientCertContent
          remoteConnectionRetryCount: 6
          remoteConnectionRetryDelay: 1
          tlsCipherSuiteList: tlsCipherSuiteList
          msgVpnName: msgVpnName
          remoteAuthenticationScheme: basic
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          remoteMsgVpnsUri: remoteMsgVpnsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnBridgeTlsTrustedCommonName:
      type: object
      properties:
        bridgeName:
          type: string
          description: The name of the Bridge. Deprecated since 2.18. Common Name
            validation has been replaced by Server Certificate Name validation.
        bridgeVirtualRouter:
          type: string
          description: "The virtual router of the Bridge. The allowed values and their\
            \ meaning are:\n\n<pre>\n\"primary\" - The Bridge is used for the primary\
            \ virtual router.\n\"backup\" - The Bridge is used for the backup virtual\
            \ router.\n\"auto\" - The Bridge is automatically assigned a virtual router\
            \ at creation, depending on the broker's active-standby role.\n</pre>\n\
            \ Deprecated since 2.18. Common Name validation has been replaced by Server\
            \ Certificate Name validation."
          enum:
          - primary
          - backup
          - auto
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since 2.18. Common
            Name validation has been replaced by Server Certificate Name validation.
        tlsTrustedCommonName:
          type: string
          description: The expected trusted common name of the remote certificate.
            Deprecated since 2.18. Common Name validation has been replaced by Server
            Certificate Name validation.
      example:
        bridgeVirtualRouter: primary
        msgVpnName: msgVpnName
        bridgeName: bridgeName
        tlsTrustedCommonName: tlsTrustedCommonName
    MsgVpnBridgeTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Trusted Common Name object.
      example:
        uri: uri
    MsgVpnBridgeTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnBridgeTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        - bridgeVirtualRouter: primary
          msgVpnName: msgVpnName
          bridgeName: bridgeName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnBridgesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridge'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          remoteAuthenticationClientCertPassword: remoteAuthenticationClientCertPassword
          maxTtl: 0
          remoteDeliverToOnePriority: p1
          bridgeName: bridgeName
          enabled: true
          remoteAuthenticationBasicPassword: remoteAuthenticationBasicPassword
          bridgeVirtualRouter: primary
          remoteAuthenticationClientCertContent: remoteAuthenticationClientCertContent
          remoteConnectionRetryCount: 6
          remoteConnectionRetryDelay: 1
          tlsCipherSuiteList: tlsCipherSuiteList
          msgVpnName: msgVpnName
          remoteAuthenticationScheme: basic
        - remoteAuthenticationBasicClientUsername: remoteAuthenticationBasicClientUsername
          remoteAuthenticationClientCertPassword: remoteAuthenticationClientCertPassword
          maxTtl: 0
          remoteDeliverToOnePriority: p1
          bridgeName: bridgeName
          enabled: true
          remoteAuthenticationBasicPassword: remoteAuthenticationBasicPassword
          bridgeVirtualRouter: primary
          remoteAuthenticationClientCertContent: remoteAuthenticationClientCertContent
          remoteConnectionRetryCount: 6
          remoteConnectionRetryDelay: 1
          tlsCipherSuiteList: tlsCipherSuiteList
          msgVpnName: msgVpnName
          remoteAuthenticationScheme: basic
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - remoteMsgVpnsUri: remoteMsgVpnsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - remoteMsgVpnsUri: remoteMsgVpnsUri
          uri: uri
          remoteSubscriptionsUri: remoteSubscriptionsUri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnClientProfile:
      type: object
      properties:
        allowBridgeConnectionsEnabled:
          type: boolean
          description: Enable or disable allowing Bridge clients using the Client
            Profile to connect. Changing this setting does not affect existing Bridge
            client connections. The default value is `false`.
        allowCutThroughForwardingEnabled:
          type: boolean
          description: Enable or disable allowing clients using the Client Profile
            to bind to endpoints with the cut-through forwarding delivery mode. Changing
            this value does not affect existing client connections. The default value
            is `false`.
        allowGuaranteedEndpointCreateDurability:
          type: string
          description: |-
            The types of Queues and Topic Endpoints that clients using the client-profile can create. Changing this value does not affect existing client connections. The default value is `"all"`. The allowed values and their meaning are:

            <pre>
            "all" - Client can create any type of endpoint.
            "durable" - Client can create only durable endpoints.
            "non-durable" - Client can create only non-durable endpoints.
            </pre>
             Available since 2.14.
          enum:
          - all
          - durable
          - non-durable
        allowGuaranteedEndpointCreateEnabled:
          type: boolean
          description: Enable or disable allowing clients using the Client Profile
            to create topic endponts or queues. Changing this value does not affect
            existing client connections. The default value is `false`.
        allowGuaranteedMsgReceiveEnabled:
          type: boolean
          description: Enable or disable allowing clients using the Client Profile
            to receive guaranteed messages. Changing this setting does not affect
            existing client connections. The default value is `false`.
        allowGuaranteedMsgSendEnabled:
          type: boolean
          description: Enable or disable allowing clients using the Client Profile
            to send guaranteed messages. Changing this setting does not affect existing
            client connections. The default value is `false`.
        allowSharedSubscriptionsEnabled:
          type: boolean
          description: Enable or disable allowing shared subscriptions. Changing this
            setting does not affect existing subscriptions. The default value is `false`.
            Available since 2.11.
        allowTransactedSessionsEnabled:
          type: boolean
          description: Enable or disable allowing clients using the Client Profile
            to establish transacted sessions. Changing this setting does not affect
            existing client connections. The default value is `false`.
        apiQueueManagementCopyFromOnCreateName:
          type: string
          description: The name of a queue to copy settings from when a new queue
            is created by a client using the Client Profile. The referenced queue
            must exist in the Message VPN. The default value is `""`. Deprecated since
            2.14. This attribute has been replaced with `apiQueueManagementCopyFromOnCreateTemplateName`.
        apiQueueManagementCopyFromOnCreateTemplateName:
          type: string
          description: "The name of a queue template to copy settings from when a\
            \ new queue is created by a client using the Client Profile. If the referenced\
            \ queue template does not exist, queue creation will fail when it tries\
            \ to resolve this template. The default value is `\"\"`. Available since\
            \ 2.14."
        apiTopicEndpointManagementCopyFromOnCreateName:
          type: string
          description: The name of a topic endpoint to copy settings from when a new
            topic endpoint is created by a client using the Client Profile. The referenced
            topic endpoint must exist in the Message VPN. The default value is `""`.
            Deprecated since 2.14. This attribute has been replaced with `apiTopicEndpointManagementCopyFromOnCreateTemplateName`.
        apiTopicEndpointManagementCopyFromOnCreateTemplateName:
          type: string
          description: "The name of a topic endpoint template to copy settings from\
            \ when a new topic endpoint is created by a client using the Client Profile.\
            \ If the referenced topic endpoint template does not exist, topic endpoint\
            \ creation will fail when it tries to resolve this template. The default\
            \ value is `\"\"`. Available since 2.14."
        clientProfileName:
          type: string
          description: The name of the Client Profile.
        compressionEnabled:
          type: boolean
          description: Enable or disable allowing clients using the Client Profile
            to use compression. The default value is `true`. Available since 2.10.
        elidingDelay:
          type: integer
          description: "The amount of time to delay the delivery of messages to clients\
            \ using the Client Profile after the initial message has been delivered\
            \ (the eliding delay interval), in milliseconds. A value of 0 means there\
            \ is no delay in delivering messages to clients. The default value is\
            \ `0`."
          format: int64
        elidingEnabled:
          type: boolean
          description: Enable or disable message eliding for clients using the Client
            Profile. The default value is `false`.
        elidingMaxTopicCount:
          type: integer
          description: The maximum number of topics tracked for message eliding per
            client connection using the Client Profile. The default value is `256`.
          format: int64
        eventClientProvisionedEndpointSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEgressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventEndpointCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventIngressFlowCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceSmfConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventServiceWebConnectionCountPerClientUsernameThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSubscriptionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactedSessionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventTransactionCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxConnectionCountPerClientUsername:
          type: integer
          description: The maximum number of client connections per Client Username
            using the Client Profile. The default is the maximum value supported by
            the platform.
          format: int64
        maxEgressFlowCount:
          type: integer
          description: The maximum number of transmit flows that can be created by
            one client using the Client Profile. The default value is `1000`.
          format: int64
        maxEndpointCountPerClientUsername:
          type: integer
          description: The maximum number of queues and topic endpoints that can be
            created by clients with the same Client Username using the Client Profile.
            The default value is `1000`.
          format: int64
        maxIngressFlowCount:
          type: integer
          description: The maximum number of receive flows that can be created by
            one client using the Client Profile. The default value is `1000`.
          format: int64
        maxMsgsPerTransaction:
          type: integer
          description: The maximum number of publisher and consumer messages combined
            that is allowed within a transaction for each client associated with this
            client-profile. Exceeding this limit will result in a transaction prepare
            or commit failure. Changing this value during operation will not affect
            existing sessions. It is only validated at transaction creation time.
            Large transactions consume more resources and are more likely to require
            retrieving messages from the ADB or from disk to process the transaction
            prepare or commit requests. The transaction processing rate may diminish
            if a large number of messages must be retrieved from the ADB or from disk.
            Care should be taken to not use excessively large transactions needlessly
            to avoid exceeding resource limits and to avoid reducing the overall broker
            performance. The default value is `256`. Available since 2.20.
          format: int32
        maxSubscriptionCount:
          type: integer
          description: "The maximum number of subscriptions per client using the Client\
            \ Profile. This limit is not enforced when a client adds a subscription\
            \ to an endpoint, except for MQTT QoS 1 subscriptions. In addition, this\
            \ limit is not enforced when a subscription is added using a management\
            \ interface, such as CLI or SEMP. The default varies by platform."
          format: int64
        maxTransactedSessionCount:
          type: integer
          description: The maximum number of transacted sessions that can be created
            by one client using the Client Profile. The default value is `10`.
          format: int64
        maxTransactionCount:
          type: integer
          description: The maximum number of transactions that can be created by one
            client using the Client Profile. The default varies by platform.
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueControl1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Control 1\" (C-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        queueControl1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Control 1\" (C-1) priority queue, regardless of the `queueControl1MaxDepth`\
            \ value. The default value is `4`."
          format: int32
        queueDirect1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 1\" (D-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        queueDirect1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 1\" (D-1) priority queue, regardless of the `queueDirect1MaxDepth`\
            \ value. The default value is `4`."
          format: int32
        queueDirect2MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 2\" (D-2) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        queueDirect2MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 2\" (D-2) priority queue, regardless of the `queueDirect2MaxDepth`\
            \ value. The default value is `4`."
          format: int32
        queueDirect3MaxDepth:
          type: integer
          description: "The maximum depth of the \"Direct 3\" (D-3) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        queueDirect3MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Direct 3\" (D-3) priority queue, regardless of the `queueDirect3MaxDepth`\
            \ value. The default value is `4`."
          format: int32
        queueGuaranteed1MaxDepth:
          type: integer
          description: "The maximum depth of the \"Guaranteed 1\" (G-1) priority queue,\
            \ in work units. Each work unit is 2048 bytes of message data. The default\
            \ value is `20000`."
          format: int32
        queueGuaranteed1MinMsgBurst:
          type: integer
          description: "The number of messages that are always allowed entry into\
            \ the \"Guaranteed 1\" (G-3) priority queue, regardless of the `queueGuaranteed1MaxDepth`\
            \ value. The default value is `255`."
          format: int32
        rejectMsgToSenderOnNoSubscriptionMatchEnabled:
          type: boolean
          description: Enable or disable the sending of a negative acknowledgement
            (NACK) to a client using the Client Profile when discarding a guaranteed
            message due to no matching subscription found. The default value is `false`.
            Available since 2.2.
        replicationAllowClientConnectWhenStandbyEnabled:
          type: boolean
          description: Enable or disable allowing clients using the Client Profile
            to connect to the Message VPN when its replication state is standby. The
            default value is `false`.
        serviceMinKeepaliveTimeout:
          type: integer
          description: The minimum client keepalive timeout which will be enforced
            for client connections. The default value is `30`. Available since 2.19.
          format: int32
        serviceSmfMaxConnectionCountPerClientUsername:
          type: integer
          description: The maximum number of SMF client connections per Client Username
            using the Client Profile. The default is the maximum value supported by
            the platform.
          format: int64
        serviceSmfMinKeepaliveEnabled:
          type: boolean
          description: Enable or disable the enforcement of a minimum keepalive timeout
            for SMF clients. The default value is `false`. Available since 2.19.
        serviceWebInactiveTimeout:
          type: integer
          description: "The timeout for inactive Web Transport client sessions using\
            \ the Client Profile, in seconds. The default value is `30`."
          format: int64
        serviceWebMaxConnectionCountPerClientUsername:
          type: integer
          description: The maximum number of Web Transport client connections per
            Client Username using the Client Profile. The default is the maximum value
            supported by the platform.
          format: int64
        serviceWebMaxPayload:
          type: integer
          description: "The maximum Web Transport payload size before fragmentation\
            \ occurs for clients using the Client Profile, in bytes. The size of the\
            \ header is not included. The default value is `1000000`."
          format: int64
        tcpCongestionWindowSize:
          type: integer
          description: "The TCP initial congestion window size for clients using the\
            \ Client Profile, in multiples of the TCP Maximum Segment Size (MSS).\
            \ Changing the value from its default of 2 results in non-compliance with\
            \ RFC 2581. Contact Solace Support before changing this value. The default\
            \ value is `2`."
          format: int64
        tcpKeepaliveCount:
          type: integer
          description: The number of TCP keepalive retransmissions to a client using
            the Client Profile before declaring that it is not available. The default
            value is `5`.
          format: int64
        tcpKeepaliveIdleTime:
          type: integer
          description: "The amount of time a client connection using the Client Profile\
            \ must remain idle before TCP begins sending keepalive probes, in seconds.\
            \ The default value is `3`."
          format: int64
        tcpKeepaliveInterval:
          type: integer
          description: "The amount of time between TCP keepalive retransmissions to\
            \ a client using the Client Profile when no acknowledgement is received,\
            \ in seconds. The default value is `1`."
          format: int64
        tcpMaxSegmentSize:
          type: integer
          description: "The TCP maximum segment size for clients using the Client\
            \ Profile, in bytes. Changes are applied to all existing connections.\
            \ The default value is `1460`."
          format: int64
        tcpMaxWindowSize:
          type: integer
          description: "The TCP maximum window size for clients using the Client Profile,\
            \ in kilobytes. Changes are applied to all existing connections. The default\
            \ value is `256`."
          format: int64
        tlsAllowDowngradeToPlainTextEnabled:
          type: boolean
          description: Enable or disable allowing a client using the Client Profile
            to downgrade an encrypted connection to plain text. The default value
            is `true`. Available since 2.8.
      example:
        apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
        compressionEnabled: true
        tcpMaxWindowSize: 6
        allowGuaranteedEndpointCreateDurability: all
        clientProfileName: clientProfileName
        eventTransactionCountThreshold: null
        tcpMaxSegmentSize: 2
        queueDirect2MaxDepth: 1
        serviceSmfMinKeepaliveEnabled: true
        msgVpnName: msgVpnName
        allowSharedSubscriptionsEnabled: true
        eventClientProvisionedEndpointSpoolUsageThreshold:
          clearPercent: 5
          setPercent: 2
        eventEgressFlowCountThreshold: null
        queueDirect3MinMsgBurst: 1
        elidingDelay: 0
        eventServiceWebConnectionCountPerClientUsernameThreshold: null
        queueControl1MinMsgBurst: 7
        serviceWebMaxPayload: 9
        serviceMinKeepaliveTimeout: 9
        eventTransactedSessionCountThreshold: null
        apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
        eventSubscriptionCountThreshold: null
        tlsAllowDowngradeToPlainTextEnabled: true
        tcpKeepaliveIdleTime: 6
        maxEndpointCountPerClientUsername: 5
        queueDirect2MinMsgBurst: 6
        queueGuaranteed1MinMsgBurst: 5
        queueDirect1MaxDepth: 1
        eventServiceSmfConnectionCountPerClientUsernameThreshold: null
        tcpCongestionWindowSize: 6
        eventEndpointCountPerClientUsernameThreshold: null
        queueDirect3MaxDepth: 7
        allowBridgeConnectionsEnabled: true
        allowTransactedSessionsEnabled: true
        serviceSmfMaxConnectionCountPerClientUsername: 9
        allowGuaranteedMsgSendEnabled: true
        queueDirect1MinMsgBurst: 1
        queueGuaranteed1MaxDepth: 4
        serviceWebInactiveTimeout: 6
        allowGuaranteedMsgReceiveEnabled: true
        tcpKeepaliveCount: 3
        maxTransactionCount: 2
        apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
        maxSubscriptionCount: 9
        eventConnectionCountPerClientUsernameThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        elidingMaxTopicCount: 6
        maxMsgsPerTransaction: 7
        queueControl1MaxDepth: 4
        tcpKeepaliveInterval: 1
        elidingEnabled: true
        maxIngressFlowCount: 2
        replicationAllowClientConnectWhenStandbyEnabled: true
        maxEgressFlowCount: 5
        maxTransactedSessionCount: 3
        rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
        serviceWebMaxConnectionCountPerClientUsername: 8
        allowGuaranteedEndpointCreateEnabled: true
        allowCutThroughForwardingEnabled: true
        apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
        maxConnectionCountPerClientUsername: 1
        eventIngressFlowCountThreshold: null
    MsgVpnClientProfileLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Profile object.
      example:
        uri: uri
    MsgVpnClientProfileResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnClientProfile'
        links:
          $ref: '#/components/schemas/MsgVpnClientProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 6
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold: null
          tcpMaxSegmentSize: 2
          queueDirect2MaxDepth: 1
          serviceSmfMinKeepaliveEnabled: true
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 5
            setPercent: 2
          eventEgressFlowCountThreshold: null
          queueDirect3MinMsgBurst: 1
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold: null
          queueControl1MinMsgBurst: 7
          serviceWebMaxPayload: 9
          serviceMinKeepaliveTimeout: 9
          eventTransactedSessionCountThreshold: null
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          eventSubscriptionCountThreshold: null
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 5
          queueDirect2MinMsgBurst: 6
          queueGuaranteed1MinMsgBurst: 5
          queueDirect1MaxDepth: 1
          eventServiceSmfConnectionCountPerClientUsernameThreshold: null
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold: null
          queueDirect3MaxDepth: 7
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          serviceSmfMaxConnectionCountPerClientUsername: 9
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 1
          queueGuaranteed1MaxDepth: 4
          serviceWebInactiveTimeout: 6
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 3
          maxTransactionCount: 2
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 9
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 7
          queueControl1MaxDepth: 4
          tcpKeepaliveInterval: 1
          elidingEnabled: true
          maxIngressFlowCount: 2
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 5
          maxTransactedSessionCount: 3
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 8
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold: null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnClientProfilesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientProfile'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientProfileLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 6
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold: null
          tcpMaxSegmentSize: 2
          queueDirect2MaxDepth: 1
          serviceSmfMinKeepaliveEnabled: true
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 5
            setPercent: 2
          eventEgressFlowCountThreshold: null
          queueDirect3MinMsgBurst: 1
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold: null
          queueControl1MinMsgBurst: 7
          serviceWebMaxPayload: 9
          serviceMinKeepaliveTimeout: 9
          eventTransactedSessionCountThreshold: null
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          eventSubscriptionCountThreshold: null
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 5
          queueDirect2MinMsgBurst: 6
          queueGuaranteed1MinMsgBurst: 5
          queueDirect1MaxDepth: 1
          eventServiceSmfConnectionCountPerClientUsernameThreshold: null
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold: null
          queueDirect3MaxDepth: 7
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          serviceSmfMaxConnectionCountPerClientUsername: 9
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 1
          queueGuaranteed1MaxDepth: 4
          serviceWebInactiveTimeout: 6
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 3
          maxTransactionCount: 2
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 9
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 7
          queueControl1MaxDepth: 4
          tcpKeepaliveInterval: 1
          elidingEnabled: true
          maxIngressFlowCount: 2
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 5
          maxTransactedSessionCount: 3
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 8
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold: null
        - apiTopicEndpointManagementCopyFromOnCreateName: apiTopicEndpointManagementCopyFromOnCreateName
          compressionEnabled: true
          tcpMaxWindowSize: 6
          allowGuaranteedEndpointCreateDurability: all
          clientProfileName: clientProfileName
          eventTransactionCountThreshold: null
          tcpMaxSegmentSize: 2
          queueDirect2MaxDepth: 1
          serviceSmfMinKeepaliveEnabled: true
          msgVpnName: msgVpnName
          allowSharedSubscriptionsEnabled: true
          eventClientProvisionedEndpointSpoolUsageThreshold:
            clearPercent: 5
            setPercent: 2
          eventEgressFlowCountThreshold: null
          queueDirect3MinMsgBurst: 1
          elidingDelay: 0
          eventServiceWebConnectionCountPerClientUsernameThreshold: null
          queueControl1MinMsgBurst: 7
          serviceWebMaxPayload: 9
          serviceMinKeepaliveTimeout: 9
          eventTransactedSessionCountThreshold: null
          apiQueueManagementCopyFromOnCreateTemplateName: apiQueueManagementCopyFromOnCreateTemplateName
          eventSubscriptionCountThreshold: null
          tlsAllowDowngradeToPlainTextEnabled: true
          tcpKeepaliveIdleTime: 6
          maxEndpointCountPerClientUsername: 5
          queueDirect2MinMsgBurst: 6
          queueGuaranteed1MinMsgBurst: 5
          queueDirect1MaxDepth: 1
          eventServiceSmfConnectionCountPerClientUsernameThreshold: null
          tcpCongestionWindowSize: 6
          eventEndpointCountPerClientUsernameThreshold: null
          queueDirect3MaxDepth: 7
          allowBridgeConnectionsEnabled: true
          allowTransactedSessionsEnabled: true
          serviceSmfMaxConnectionCountPerClientUsername: 9
          allowGuaranteedMsgSendEnabled: true
          queueDirect1MinMsgBurst: 1
          queueGuaranteed1MaxDepth: 4
          serviceWebInactiveTimeout: 6
          allowGuaranteedMsgReceiveEnabled: true
          tcpKeepaliveCount: 3
          maxTransactionCount: 2
          apiTopicEndpointManagementCopyFromOnCreateTemplateName: apiTopicEndpointManagementCopyFromOnCreateTemplateName
          maxSubscriptionCount: 9
          eventConnectionCountPerClientUsernameThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          elidingMaxTopicCount: 6
          maxMsgsPerTransaction: 7
          queueControl1MaxDepth: 4
          tcpKeepaliveInterval: 1
          elidingEnabled: true
          maxIngressFlowCount: 2
          replicationAllowClientConnectWhenStandbyEnabled: true
          maxEgressFlowCount: 5
          maxTransactedSessionCount: 3
          rejectMsgToSenderOnNoSubscriptionMatchEnabled: true
          serviceWebMaxConnectionCountPerClientUsername: 8
          allowGuaranteedEndpointCreateEnabled: true
          allowCutThroughForwardingEnabled: true
          apiQueueManagementCopyFromOnCreateName: apiQueueManagementCopyFromOnCreateName
          maxConnectionCountPerClientUsername: 1
          eventIngressFlowCountThreshold: null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnClientUsername:
      type: object
      properties:
        aclProfileName:
          type: string
          description: The ACL Profile of the Client Username. The default value is
            `"default"`.
        clientProfileName:
          type: string
          description: The Client Profile of the Client Username. The default value
            is `"default"`.
        clientUsername:
          type: string
          description: The name of the Client Username.
        enabled:
          type: boolean
          description: "Enable or disable the Client Username. When disabled, all\
            \ clients currently connected as the Client Username are disconnected.\
            \ The default value is `false`."
        guaranteedEndpointPermissionOverrideEnabled:
          type: boolean
          description: "Enable or disable guaranteed endpoint permission override\
            \ for the Client Username. When enabled all guaranteed endpoints may be\
            \ accessed, modified or deleted with the same permission as the owner.\
            \ The default value is `false`."
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        password:
          type: string
          description: "The password for the Client Username. This attribute is absent\
            \ from a GET and not updated when absent in a PUT, subject to the exceptions\
            \ in note 4. The default value is `\"\"`."
        subscriptionManagerEnabled:
          type: boolean
          description: Enable or disable the subscription management capability of
            the Client Username. This is the ability to manage subscriptions on behalf
            of other Client Usernames. The default value is `false`.
      example:
        password: password
        subscriptionManagerEnabled: true
        clientUsername: clientUsername
        clientProfileName: clientProfileName
        msgVpnName: msgVpnName
        guaranteedEndpointPermissionOverrideEnabled: true
        aclProfileName: aclProfileName
        enabled: true
    MsgVpnClientUsernameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Client Username object.
      example:
        uri: uri
    MsgVpnClientUsernameResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnClientUsername'
        links:
          $ref: '#/components/schemas/MsgVpnClientUsernameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          password: password
          subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnClientUsernamesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientUsername'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnClientUsernameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - password: password
          subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        - password: password
          subscriptionManagerEnabled: true
          clientUsername: clientUsername
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          guaranteedEndpointPermissionOverrideEnabled: true
          aclProfileName: aclProfileName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnDistributedCache:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        enabled:
          type: boolean
          description: Enable or disable the Distributed Cache. The default value
            is `false`.
        heartbeat:
          type: integer
          description: "The heartbeat interval, in seconds, used by the Cache Instances\
            \ to monitor connectivity with the message broker. The default value is\
            \ `10`."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        scheduledDeleteMsgDayList:
          type: string
          description: "The scheduled delete message day(s), specified as \"daily\"\
            \ or a comma-separated list of days. Days must be specified as \"Sun\"\
            , \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", or \"Sat\", with no spaces,\
            \ and in sorted order from Sunday to Saturday. The default value is `\"\
            \"`."
        scheduledDeleteMsgTimeList:
          type: string
          description: "The scheduled delete message time(s), specified as \"hourly\"\
            \ or a comma-separated list of 24-hour times in the form hh:mm, or h:mm.\
            \ There must be no spaces, and times must be in sorted order from 0:00\
            \ to 23:59. The default value is `\"\"`."
      example:
        cacheName: cacheName
        heartbeat: 0
        scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
        msgVpnName: msgVpnName
        scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
        enabled: true
    MsgVpnDistributedCacheCluster:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        deliverToOneOverrideEnabled:
          type: boolean
          description: Enable or disable deliver-to-one override for the Cache Cluster.
            The default value is `true`.
        enabled:
          type: boolean
          description: Enable or disable the Cache Cluster. The default value is `false`.
        eventDataByteRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventDataMsgRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventMaxMemoryThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventMaxTopicsThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventRequestQueueDepthThreshold:
          $ref: '#/components/schemas/EventThresholdByPercent'
        eventRequestRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        eventResponseRateThreshold:
          $ref: '#/components/schemas/EventThresholdByValue'
        globalCachingEnabled:
          type: boolean
          description: "Enable or disable global caching for the Cache Cluster. When\
            \ enabled, the Cache Instances will fetch topics from remote Home Cache\
            \ Clusters when requested, and subscribe to those topics to cache them\
            \ locally. When disabled, the Cache Instances will remove all subscriptions\
            \ and cached messages for topics from remote Home Cache Clusters. The\
            \ default value is `false`."
        globalCachingHeartbeat:
          type: integer
          description: "The heartbeat interval, in seconds, used by the Cache Instances\
            \ to monitor connectivity with the remote Home Cache Clusters. The default\
            \ value is `3`."
          format: int64
        globalCachingTopicLifetime:
          type: integer
          description: "The topic lifetime, in seconds. If no client requests are\
            \ received for a given global topic over the duration of the topic lifetime,\
            \ then the Cache Instance will remove the subscription and cached messages\
            \ for that topic. A value of 0 disables aging. The default value is `3600`."
          format: int64
        maxMemory:
          type: integer
          description: "The maximum memory usage, in megabytes (MB), for each Cache\
            \ Instance in the Cache Cluster. The default value is `2048`."
          format: int64
        maxMsgsPerTopic:
          type: integer
          description: "The maximum number of messages per topic for each Cache Instance\
            \ in the Cache Cluster. When at the maximum, old messages are removed\
            \ as new messages arrive. The default value is `1`."
          format: int64
        maxRequestQueueDepth:
          type: integer
          description: The maximum queue depth for cache requests received by the
            Cache Cluster. The default value is `100000`.
          format: int64
        maxTopicCount:
          type: integer
          description: The maximum number of topics for each Cache Instance in the
            Cache Cluster. The default value is `2000000`.
          format: int64
        msgLifetime:
          type: integer
          description: "The message lifetime, in seconds. If a message remains cached\
            \ for the duration of its lifetime, the Cache Instance will remove the\
            \ message. A lifetime of 0 results in the message being retained indefinitely.\
            \ The default value is `0`."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        newTopicAdvertisementEnabled:
          type: boolean
          description: "Enable or disable the advertising, onto the message bus, of\
            \ new topics learned by each Cache Instance in the Cache Cluster. The\
            \ default value is `false`."
      example:
        eventRequestQueueDepthThreshold: null
        eventResponseRateThreshold: null
        msgLifetime: 7
        eventDataByteRateThreshold:
          setValue: 5
          clearValue: 1
        eventDataMsgRateThreshold: null
        maxMemory: 1
        maxMsgsPerTopic: 5
        deliverToOneOverrideEnabled: true
        enabled: true
        eventRequestRateThreshold: null
        cacheName: cacheName
        globalCachingEnabled: true
        globalCachingHeartbeat: 0
        clusterName: clusterName
        newTopicAdvertisementEnabled: true
        eventMaxTopicsThreshold: null
        msgVpnName: msgVpnName
        eventMaxMemoryThreshold:
          clearPercent: 5
          setPercent: 2
        maxTopicCount: 2
        globalCachingTopicLifetime: 6
        maxRequestQueueDepth: 5
    MsgVpnDistributedCacheClusterGlobalCachingHomeCluster:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        homeClusterName:
          type: string
          description: The name of the remote Home Cache Cluster.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        cacheName: cacheName
        clusterName: clusterName
        msgVpnName: msgVpnName
        homeClusterName: homeClusterName
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks:
      type: object
      properties:
        topicPrefixesUri:
          type: string
          description: The URI of this Home Cache Cluster's collection of Topic Prefix
            objects.
        uri:
          type: string
          description: The URI of this Home Cache Cluster object.
      example:
        topicPrefixesUri: topicPrefixesUri
        uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          topicPrefixesUri: topicPrefixesUri
          uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        homeClusterName:
          type: string
          description: The name of the remote Home Cache Cluster.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        topicPrefix:
          type: string
          description: A topic prefix for global topics available from the remote
            Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
      example:
        cacheName: cacheName
        topicPrefix: topicPrefix
        clusterName: clusterName
        msgVpnName: msgVpnName
        homeClusterName: homeClusterName
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Prefix object.
      example:
        uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        - cacheName: cacheName
          topicPrefix: topicPrefix
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        - cacheName: cacheName
          clusterName: clusterName
          msgVpnName: msgVpnName
          homeClusterName: homeClusterName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - topicPrefixesUri: topicPrefixesUri
          uri: uri
        - topicPrefixesUri: topicPrefixesUri
          uri: uri
    MsgVpnDistributedCacheClusterInstance:
      type: object
      properties:
        autoStartEnabled:
          type: boolean
          description: "Enable or disable auto-start for the Cache Instance. When\
            \ enabled, the Cache Instance will automatically attempt to transition\
            \ from the Stopped operational state to Up whenever it restarts or reconnects\
            \ to the message broker. The default value is `false`."
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        enabled:
          type: boolean
          description: Enable or disable the Cache Instance. The default value is
            `false`.
        instanceName:
          type: string
          description: The name of the Cache Instance.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        stopOnLostMsgEnabled:
          type: boolean
          description: "Enable or disable stop-on-lost-message for the Cache Instance.\
            \ When enabled, the Cache Instance will transition to the stopped operational\
            \ state upon losing a message. When stopped, it cannot accept or respond\
            \ to cache requests, but continues to cache messages. The default value\
            \ is `true`."
      example:
        cacheName: cacheName
        instanceName: instanceName
        stopOnLostMsgEnabled: true
        clusterName: clusterName
        msgVpnName: msgVpnName
        autoStartEnabled: true
        enabled: true
    MsgVpnDistributedCacheClusterInstanceLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Cache Instance object.
      example:
        uri: uri
    MsgVpnDistributedCacheClusterInstanceResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          instanceName: instanceName
          stopOnLostMsgEnabled: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          autoStartEnabled: true
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnDistributedCacheClusterInstancesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstance'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterInstanceLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          instanceName: instanceName
          stopOnLostMsgEnabled: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          autoStartEnabled: true
          enabled: true
        - cacheName: cacheName
          instanceName: instanceName
          stopOnLostMsgEnabled: true
          clusterName: clusterName
          msgVpnName: msgVpnName
          autoStartEnabled: true
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnDistributedCacheClusterLinks:
      type: object
      properties:
        globalCachingHomeClustersUri:
          type: string
          description: The URI of this Cache Cluster's collection of Home Cache Cluster
            objects.
        instancesUri:
          type: string
          description: The URI of this Cache Cluster's collection of Cache Instance
            objects.
        topicsUri:
          type: string
          description: The URI of this Cache Cluster's collection of Topic objects.
        uri:
          type: string
          description: The URI of this Cache Cluster object.
      example:
        globalCachingHomeClustersUri: globalCachingHomeClustersUri
        instancesUri: instancesUri
        topicsUri: topicsUri
        uri: uri
    MsgVpnDistributedCacheClusterResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          eventRequestQueueDepthThreshold: null
          eventResponseRateThreshold: null
          msgLifetime: 7
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 1
          eventDataMsgRateThreshold: null
          maxMemory: 1
          maxMsgsPerTopic: 5
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold: null
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 0
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold: null
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 5
            setPercent: 2
          maxTopicCount: 2
          globalCachingTopicLifetime: 6
          maxRequestQueueDepth: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
    MsgVpnDistributedCacheClusterTopic:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the Distributed Cache.
        clusterName:
          type: string
          description: The name of the Cache Cluster.
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        topic:
          type: string
          description: The value of the Topic in the form a/b/c.
      example:
        cacheName: cacheName
        clusterName: clusterName
        topic: topic
        msgVpnName: msgVpnName
    MsgVpnDistributedCacheClusterTopicLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic object.
      example:
        uri: uri
    MsgVpnDistributedCacheClusterTopicResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnDistributedCacheClusterTopicsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopic'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        - cacheName: cacheName
          clusterName: clusterName
          topic: topic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnDistributedCacheClustersResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheCluster'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheClusterLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - eventRequestQueueDepthThreshold: null
          eventResponseRateThreshold: null
          msgLifetime: 7
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 1
          eventDataMsgRateThreshold: null
          maxMemory: 1
          maxMsgsPerTopic: 5
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold: null
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 0
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold: null
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 5
            setPercent: 2
          maxTopicCount: 2
          globalCachingTopicLifetime: 6
          maxRequestQueueDepth: 5
        - eventRequestQueueDepthThreshold: null
          eventResponseRateThreshold: null
          msgLifetime: 7
          eventDataByteRateThreshold:
            setValue: 5
            clearValue: 1
          eventDataMsgRateThreshold: null
          maxMemory: 1
          maxMsgsPerTopic: 5
          deliverToOneOverrideEnabled: true
          enabled: true
          eventRequestRateThreshold: null
          cacheName: cacheName
          globalCachingEnabled: true
          globalCachingHeartbeat: 0
          clusterName: clusterName
          newTopicAdvertisementEnabled: true
          eventMaxTopicsThreshold: null
          msgVpnName: msgVpnName
          eventMaxMemoryThreshold:
            clearPercent: 5
            setPercent: 2
          maxTopicCount: 2
          globalCachingTopicLifetime: 6
          maxRequestQueueDepth: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
        - globalCachingHomeClustersUri: globalCachingHomeClustersUri
          instancesUri: instancesUri
          topicsUri: topicsUri
          uri: uri
    MsgVpnDistributedCacheLinks:
      type: object
      properties:
        clustersUri:
          type: string
          description: The URI of this Distributed Cache's collection of Cache Cluster
            objects.
        uri:
          type: string
          description: The URI of this Distributed Cache object.
      example:
        clustersUri: clustersUri
        uri: uri
    MsgVpnDistributedCacheResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDistributedCache'
        links:
          $ref: '#/components/schemas/MsgVpnDistributedCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          heartbeat: 0
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          clustersUri: clustersUri
          uri: uri
    MsgVpnDistributedCachesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCache'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDistributedCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          heartbeat: 0
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
        - cacheName: cacheName
          heartbeat: 0
          scheduledDeleteMsgDayList: scheduledDeleteMsgDayList
          msgVpnName: msgVpnName
          scheduledDeleteMsgTimeList: scheduledDeleteMsgTimeList
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - clustersUri: clustersUri
          uri: uri
        - clustersUri: clustersUri
          uri: uri
    MsgVpnDmrBridge:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        remoteMsgVpnName:
          type: string
          description: The remote Message VPN of the DMR Bridge. The default value
            is `""`.
        remoteNodeName:
          type: string
          description: The name of the node at the remote end of the DMR Bridge.
      example:
        remoteMsgVpnName: remoteMsgVpnName
        remoteNodeName: remoteNodeName
        msgVpnName: msgVpnName
    MsgVpnDmrBridgeLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this DMR Bridge object.
      example:
        uri: uri
    MsgVpnDmrBridgeResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnDmrBridge'
        links:
          $ref: '#/components/schemas/MsgVpnDmrBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnDmrBridgesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridge'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnDmrBridgeLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          msgVpnName: msgVpnName
        - remoteMsgVpnName: remoteMsgVpnName
          remoteNodeName: remoteNodeName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnJndiConnectionFactoriesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        - messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnJndiConnectionFactory:
      type: object
      properties:
        allowDuplicateClientIdEnabled:
          type: boolean
          description: Enable or disable whether new JMS connections can use the same
            Client identifier (ID) as an existing connection. The default value is
            `false`. Available since 2.3.
        clientDescription:
          type: string
          description: The description of the Client. The default value is `""`.
        clientId:
          type: string
          description: "The Client identifier (ID). If not specified, a unique value\
            \ for it will be generated. The default value is `\"\"`."
        connectionFactoryName:
          type: string
          description: The name of the JMS Connection Factory.
        dtoReceiveOverrideEnabled:
          type: boolean
          description: "Enable or disable overriding by the Subscriber (Consumer)\
            \ of the deliver-to-one (DTO) property on messages. When enabled, the\
            \ Subscriber can receive all DTO tagged messages. The default value is\
            \ `true`."
        dtoReceiveSubscriberLocalPriority:
          type: integer
          description: The priority for receiving deliver-to-one (DTO) messages by
            the Subscriber (Consumer) if the messages are published on the local broker
            that the Subscriber is directly connected to. The default value is `1`.
          format: int32
        dtoReceiveSubscriberNetworkPriority:
          type: integer
          description: The priority for receiving deliver-to-one (DTO) messages by
            the Subscriber (Consumer) if the messages are published on a remote broker.
            The default value is `1`.
          format: int32
        dtoSendEnabled:
          type: boolean
          description: Enable or disable the deliver-to-one (DTO) property on messages
            sent by the Publisher (Producer). The default value is `false`.
        dynamicEndpointCreateDurableEnabled:
          type: boolean
          description: Enable or disable whether a durable endpoint will be dynamically
            created on the broker when the client calls "Session.createDurableSubscriber()"
            or "Session.createQueue()". The created endpoint respects the message
            time-to-live (TTL) according to the "dynamicEndpointRespectTtlEnabled"
            property. The default value is `false`.
        dynamicEndpointRespectTtlEnabled:
          type: boolean
          description: Enable or disable whether dynamically created durable and non-durable
            endpoints respect the message time-to-live (TTL) property. The default
            value is `true`.
        guaranteedReceiveAckTimeout:
          type: integer
          description: "The timeout for sending the acknowledgement (ACK) for guaranteed\
            \ messages received by the Subscriber (Consumer), in milliseconds. The\
            \ default value is `1000`."
          format: int32
        guaranteedReceiveReconnectRetryCount:
          type: integer
          description: The maximum number of attempts to reconnect to the host or
            list of hosts after the guaranteed  messaging connection has been lost.
            The value "-1" means to retry forever. The default value is `-1`. Available
            since 2.14.
          format: int32
        guaranteedReceiveReconnectRetryWait:
          type: integer
          description: "The amount of time to wait before making another attempt to\
            \ connect or reconnect to the host after the guaranteed messaging connection\
            \ has been lost, in milliseconds. The default value is `3000`. Available\
            \ since 2.14."
          format: int32
        guaranteedReceiveWindowSize:
          type: integer
          description: "The size of the window for guaranteed messages received by\
            \ the Subscriber (Consumer), in messages. The default value is `18`."
          format: int32
        guaranteedReceiveWindowSizeAckThreshold:
          type: integer
          description: The threshold for sending the acknowledgement (ACK) for guaranteed
            messages received by the Subscriber (Consumer) as a percentage of `guaranteedReceiveWindowSize`.
            The default value is `60`.
          format: int32
        guaranteedSendAckTimeout:
          type: integer
          description: "The timeout for receiving the acknowledgement (ACK) for guaranteed\
            \ messages sent by the Publisher (Producer), in milliseconds. The default\
            \ value is `2000`."
          format: int32
        guaranteedSendWindowSize:
          type: integer
          description: "The size of the window for non-persistent guaranteed messages\
            \ sent by the Publisher (Producer), in messages. For persistent messages\
            \ the window size is fixed at 1. The default value is `255`."
          format: int32
        messagingDefaultDeliveryMode:
          type: string
          description: |
            The default delivery mode for messages sent by the Publisher (Producer). The default value is `"persistent"`. The allowed values and their meaning are:

            <pre>
            "persistent" - The broker spools messages (persists in the Message Spool) as part of the send operation.
            "non-persistent" - The broker does not spool messages (does not persist in the Message Spool) as part of the send operation.
            </pre>
          enum:
          - persistent
          - non-persistent
        messagingDefaultDmqEligibleEnabled:
          type: boolean
          description: Enable or disable whether messages sent by the Publisher (Producer)
            are Dead Message Queue (DMQ) eligible by default. The default value is
            `false`.
        messagingDefaultElidingEligibleEnabled:
          type: boolean
          description: Enable or disable whether messages sent by the Publisher (Producer)
            are Eliding eligible by default. The default value is `false`.
        messagingJmsxUserIdEnabled:
          type: boolean
          description: Enable or disable inclusion (adding or replacing) of the JMSXUserID
            property in messages sent by the Publisher (Producer). The default value
            is `false`.
        messagingTextInXmlPayloadEnabled:
          type: boolean
          description: "Enable or disable encoding of JMS text messages in Publisher\
            \ (Producer) messages as XML payload. When disabled, JMS text messages\
            \ are encoded as a binary attachment. The default value is `true`."
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        transportCompressionLevel:
          type: integer
          description: "The ZLIB compression level for the connection to the broker.\
            \ The value \"0\" means no compression, and the value \"-1\" means the\
            \ compression level is specified in the JNDI Properties file. The default\
            \ value is `-1`."
          format: int32
        transportConnectRetryCount:
          type: integer
          description: "The maximum number of retry attempts to establish an initial\
            \ connection to the host or list of hosts. The value \"0\" means a single\
            \ attempt (no retries), and the value \"-1\" means to retry forever. The\
            \ default value is `0`."
          format: int32
        transportConnectRetryPerHostCount:
          type: integer
          description: "The maximum number of retry attempts to establish an initial\
            \ connection to each host on the list of hosts. The value \"0\" means\
            \ a single attempt (no retries), and the value \"-1\" means to retry forever.\
            \ The default value is `0`."
          format: int32
        transportConnectTimeout:
          type: integer
          description: "The timeout for establishing an initial connection to the\
            \ broker, in milliseconds. The default value is `30000`."
          format: int32
        transportDirectTransportEnabled:
          type: boolean
          description: "Enable or disable usage of the Direct Transport mode for sending\
            \ non-persistent messages. When disabled, the Guaranteed Transport mode\
            \ is used. The default value is `true`."
        transportKeepaliveCount:
          type: integer
          description: The maximum number of consecutive application-level keepalive
            messages sent without the broker response before the connection to the
            broker is closed. The default value is `3`.
          format: int32
        transportKeepaliveEnabled:
          type: boolean
          description: Enable or disable usage of application-level keepalive messages
            to maintain a connection with the broker. The default value is `true`.
        transportKeepaliveInterval:
          type: integer
          description: "The interval between application-level keepalive messages,\
            \ in milliseconds. The default value is `3000`."
          format: int32
        transportMsgCallbackOnIoThreadEnabled:
          type: boolean
          description: Enable or disable delivery of asynchronous messages directly
            from the I/O thread. Contact Solace Support before enabling this property.
            The default value is `false`.
        transportOptimizeDirectEnabled:
          type: boolean
          description: "Enable or disable optimization for the Direct Transport delivery\
            \ mode. If enabled, the client application is limited to one Publisher\
            \ (Producer) and one non-durable Subscriber (Consumer). The default value\
            \ is `false`."
        transportPort:
          type: integer
          description: The connection port number on the broker for SMF clients. The
            value "-1" means the port is specified in the JNDI Properties file. The
            default value is `-1`.
          format: int32
        transportReadTimeout:
          type: integer
          description: "The timeout for reading a reply from the broker, in milliseconds.\
            \ The default value is `10000`."
          format: int32
        transportReceiveBufferSize:
          type: integer
          description: "The size of the receive socket buffer, in bytes. It corresponds\
            \ to the SO_RCVBUF socket option. The default value is `65536`."
          format: int32
        transportReconnectRetryCount:
          type: integer
          description: The maximum number of attempts to reconnect to the host or
            list of hosts after the connection has been lost. The value "-1" means
            to retry forever. The default value is `3`.
          format: int32
        transportReconnectRetryWait:
          type: integer
          description: "The amount of time before making another attempt to connect\
            \ or reconnect to the host after the connection has been lost, in milliseconds.\
            \ The default value is `3000`."
          format: int32
        transportSendBufferSize:
          type: integer
          description: "The size of the send socket buffer, in bytes. It corresponds\
            \ to the SO_SNDBUF socket option. The default value is `65536`."
          format: int32
        transportTcpNoDelayEnabled:
          type: boolean
          description: "Enable or disable the TCP_NODELAY option. When enabled, Nagle's\
            \ algorithm for TCP/IP congestion control (RFC 896) is disabled. The default\
            \ value is `true`."
        xaEnabled:
          type: boolean
          description: "Enable or disable this as an XA Connection Factory. When enabled,\
            \ the Connection Factory can be cast to \"XAConnectionFactory\", \"XAQueueConnectionFactory\"\
            \ or \"XATopicConnectionFactory\". The default value is `false`."
      example:
        messagingDefaultDeliveryMode: persistent
        connectionFactoryName: connectionFactoryName
        guaranteedReceiveAckTimeout: 1
        transportReadTimeout: 7
        transportReconnectRetryCount: 4
        dtoReceiveSubscriberNetworkPriority: 6
        messagingDefaultElidingEligibleEnabled: true
        transportDirectTransportEnabled: true
        transportReconnectRetryWait: 5
        clientDescription: clientDescription
        guaranteedReceiveWindowSize: 2
        dtoReceiveSubscriberLocalPriority: 0
        transportCompressionLevel: 2
        transportConnectRetryPerHostCount: 7
        guaranteedSendAckTimeout: 9
        transportReceiveBufferSize: 1
        msgVpnName: msgVpnName
        transportKeepaliveEnabled: true
        allowDuplicateClientIdEnabled: true
        transportPort: 6
        guaranteedReceiveReconnectRetryCount: 5
        transportConnectRetryCount: 4
        transportConnectTimeout: 1
        dynamicEndpointCreateDurableEnabled: true
        clientId: clientId
        messagingJmsxUserIdEnabled: true
        guaranteedReceiveWindowSizeAckThreshold: 7
        dynamicEndpointRespectTtlEnabled: true
        messagingTextInXmlPayloadEnabled: true
        guaranteedSendWindowSize: 3
        transportKeepaliveInterval: 1
        transportOptimizeDirectEnabled: true
        transportTcpNoDelayEnabled: true
        guaranteedReceiveReconnectRetryWait: 5
        transportSendBufferSize: 9
        transportKeepaliveCount: 1
        xaEnabled: true
        dtoSendEnabled: true
        messagingDefaultDmqEligibleEnabled: true
        dtoReceiveOverrideEnabled: true
        transportMsgCallbackOnIoThreadEnabled: true
    MsgVpnJndiConnectionFactoryLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this JNDI Connection Factory object.
      example:
        uri: uri
    MsgVpnJndiConnectionFactoryResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactory'
        links:
          $ref: '#/components/schemas/MsgVpnJndiConnectionFactoryLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          messagingDefaultDeliveryMode: persistent
          connectionFactoryName: connectionFactoryName
          guaranteedReceiveAckTimeout: 1
          transportReadTimeout: 7
          transportReconnectRetryCount: 4
          dtoReceiveSubscriberNetworkPriority: 6
          messagingDefaultElidingEligibleEnabled: true
          transportDirectTransportEnabled: true
          transportReconnectRetryWait: 5
          clientDescription: clientDescription
          guaranteedReceiveWindowSize: 2
          dtoReceiveSubscriberLocalPriority: 0
          transportCompressionLevel: 2
          transportConnectRetryPerHostCount: 7
          guaranteedSendAckTimeout: 9
          transportReceiveBufferSize: 1
          msgVpnName: msgVpnName
          transportKeepaliveEnabled: true
          allowDuplicateClientIdEnabled: true
          transportPort: 6
          guaranteedReceiveReconnectRetryCount: 5
          transportConnectRetryCount: 4
          transportConnectTimeout: 1
          dynamicEndpointCreateDurableEnabled: true
          clientId: clientId
          messagingJmsxUserIdEnabled: true
          guaranteedReceiveWindowSizeAckThreshold: 7
          dynamicEndpointRespectTtlEnabled: true
          messagingTextInXmlPayloadEnabled: true
          guaranteedSendWindowSize: 3
          transportKeepaliveInterval: 1
          transportOptimizeDirectEnabled: true
          transportTcpNoDelayEnabled: true
          guaranteedReceiveReconnectRetryWait: 5
          transportSendBufferSize: 9
          transportKeepaliveCount: 1
          xaEnabled: true
          dtoSendEnabled: true
          messagingDefaultDmqEligibleEnabled: true
          dtoReceiveOverrideEnabled: true
          transportMsgCallbackOnIoThreadEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnJndiQueue:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        physicalName:
          type: string
          description: The physical name of the JMS Queue. The default value is `""`.
        queueName:
          type: string
          description: The JNDI name of the JMS Queue.
      example:
        queueName: queueName
        physicalName: physicalName
        msgVpnName: msgVpnName
    MsgVpnJndiQueueLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this JNDI Queue object.
      example:
        uri: uri
    MsgVpnJndiQueueResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnJndiQueue'
        links:
          $ref: '#/components/schemas/MsgVpnJndiQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnJndiQueuesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueue'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        - queueName: queueName
          physicalName: physicalName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnJndiTopic:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        physicalName:
          type: string
          description: The physical name of the JMS Topic. The default value is `""`.
        topicName:
          type: string
          description: The JNDI name of the JMS Topic.
      example:
        physicalName: physicalName
        topicName: topicName
        msgVpnName: msgVpnName
    MsgVpnJndiTopicLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this JNDI Topic object.
      example:
        uri: uri
    MsgVpnJndiTopicResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnJndiTopic'
        links:
          $ref: '#/components/schemas/MsgVpnJndiTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnJndiTopicsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopic'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnJndiTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        - physicalName: physicalName
          topicName: topicName
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnLinks:
      type: object
      properties:
        aclProfilesUri:
          type: string
          description: The URI of this Message VPN's collection of ACL Profile objects.
        authenticationOauthProvidersUri:
          type: string
          description: The URI of this Message VPN's collection of OAuth Provider
            objects. Available since 2.13.
        authorizationGroupsUri:
          type: string
          description: The URI of this Message VPN's collection of LDAP Authorization
            Group objects.
        bridgesUri:
          type: string
          description: The URI of this Message VPN's collection of Bridge objects.
        clientProfilesUri:
          type: string
          description: The URI of this Message VPN's collection of Client Profile
            objects.
        clientUsernamesUri:
          type: string
          description: The URI of this Message VPN's collection of Client Username
            objects.
        distributedCachesUri:
          type: string
          description: The URI of this Message VPN's collection of Distributed Cache
            objects. Available since 2.11.
        dmrBridgesUri:
          type: string
          description: The URI of this Message VPN's collection of DMR Bridge objects.
            Available since 2.11.
        jndiConnectionFactoriesUri:
          type: string
          description: The URI of this Message VPN's collection of JNDI Connection
            Factory objects. Available since 2.2.
        jndiQueuesUri:
          type: string
          description: The URI of this Message VPN's collection of JNDI Queue objects.
            Available since 2.2.
        jndiTopicsUri:
          type: string
          description: The URI of this Message VPN's collection of JNDI Topic objects.
            Available since 2.2.
        mqttRetainCachesUri:
          type: string
          description: The URI of this Message VPN's collection of MQTT Retain Cache
            objects. Available since 2.11.
        mqttSessionsUri:
          type: string
          description: The URI of this Message VPN's collection of MQTT Session objects.
            Available since 2.1.
        queueTemplatesUri:
          type: string
          description: The URI of this Message VPN's collection of Queue Template
            objects. Available since 2.14.
        queuesUri:
          type: string
          description: The URI of this Message VPN's collection of Queue objects.
        replayLogsUri:
          type: string
          description: The URI of this Message VPN's collection of Replay Log objects.
            Available since 2.10.
        replicatedTopicsUri:
          type: string
          description: The URI of this Message VPN's collection of Replicated Topic
            objects. Available since 2.1.
        restDeliveryPointsUri:
          type: string
          description: The URI of this Message VPN's collection of REST Delivery Point
            objects.
        sequencedTopicsUri:
          type: string
          description: The URI of this Message VPN's collection of Sequenced Topic
            objects.
        topicEndpointTemplatesUri:
          type: string
          description: The URI of this Message VPN's collection of Topic Endpoint
            Template objects. Available since 2.14.
        topicEndpointsUri:
          type: string
          description: The URI of this Message VPN's collection of Topic Endpoint
            objects. Available since 2.1.
        uri:
          type: string
          description: The URI of this Message VPN object.
      example:
        authenticationOauthProvidersUri: authenticationOauthProvidersUri
        clientProfilesUri: clientProfilesUri
        topicEndpointsUri: topicEndpointsUri
        jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
        mqttRetainCachesUri: mqttRetainCachesUri
        clientUsernamesUri: clientUsernamesUri
        bridgesUri: bridgesUri
        replicatedTopicsUri: replicatedTopicsUri
        topicEndpointTemplatesUri: topicEndpointTemplatesUri
        aclProfilesUri: aclProfilesUri
        sequencedTopicsUri: sequencedTopicsUri
        uri: uri
        jndiTopicsUri: jndiTopicsUri
        dmrBridgesUri: dmrBridgesUri
        replayLogsUri: replayLogsUri
        queueTemplatesUri: queueTemplatesUri
        queuesUri: queuesUri
        restDeliveryPointsUri: restDeliveryPointsUri
        distributedCachesUri: distributedCachesUri
        mqttSessionsUri: mqttSessionsUri
        authorizationGroupsUri: authorizationGroupsUri
        jndiQueuesUri: jndiQueuesUri
    MsgVpnMqttRetainCache:
      type: object
      properties:
        cacheName:
          type: string
          description: The name of the MQTT Retain Cache.
        enabled:
          type: boolean
          description: "Enable or disable this MQTT Retain Cache. When the cache is\
            \ disabled, neither retain messages nor retain requests will be delivered\
            \ by the cache. However, live retain messages will continue to be delivered\
            \ to currently connected MQTT clients. The default value is `false`."
        msgLifetime:
          type: integer
          description: "The message lifetime, in seconds. If a message remains cached\
            \ for the duration of its lifetime, the cache will remove the message.\
            \ A lifetime of 0 results in the message being retained indefinitely.\
            \ The default value is `0`."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
      example:
        cacheName: cacheName
        msgLifetime: 0
        msgVpnName: msgVpnName
        enabled: true
    MsgVpnMqttRetainCacheLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this MQTT Retain Cache object.
      example:
        uri: uri
    MsgVpnMqttRetainCacheResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        links:
          $ref: '#/components/schemas/MsgVpnMqttRetainCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          cacheName: cacheName
          msgLifetime: 0
          msgVpnName: msgVpnName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnMqttRetainCachesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCache'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttRetainCacheLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - cacheName: cacheName
          msgLifetime: 0
          msgVpnName: msgVpnName
          enabled: true
        - cacheName: cacheName
          msgLifetime: 0
          msgVpnName: msgVpnName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnMqttSession:
      type: object
      properties:
        enabled:
          type: boolean
          description: "Enable or disable the MQTT Session. When disabled, the client\
            \ is disconnected, new messages matching QoS 0 subscriptions are discarded,\
            \ and new messages matching QoS 1 subscriptions are stored for future\
            \ delivery. The default value is `false`."
        mqttSessionClientId:
          type: string
          description: "The Client ID of the MQTT Session, which corresponds to the\
            \ ClientId provided in the MQTT CONNECT packet."
        mqttSessionVirtualRouter:
          type: string
          description: |
            The virtual router of the MQTT Session. The allowed values and their meaning are:

            <pre>
            "primary" - The MQTT Session belongs to the primary virtual router.
            "backup" - The MQTT Session belongs to the backup virtual router.
            </pre>
          enum:
          - primary
          - backup
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        owner:
          type: string
          description: The owner of the MQTT Session. For externally-created sessions
            this defaults to the Client Username of the connecting client. For management-created
            sessions this defaults to empty. The default value is `""`.
        queueConsumerAckPropagationEnabled:
          type: boolean
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`. Available since 2.14.
        queueDeadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ) used by the MQTT Session
            Queue. The default value is `"#DEAD_MSG_QUEUE"`. Available since 2.14.
        queueEventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueEventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        queueMaxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind to the MQTT
            Session Queue. The default value is `1000`. Available since 2.14.
          format: int64
        queueMaxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow for the MQTT Session Queue. The default value is `10000`. Available
            since 2.14.
          format: int64
        queueMaxMsgSize:
          type: integer
          description: "The maximum message size allowed in the MQTT Session Queue,\
            \ in bytes (B). The default value is `10000000`. Available since 2.14."
          format: int32
        queueMaxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed by the MQTT Session\
            \ Queue, in megabytes (MB). A value of 0 only allows spooling of the last\
            \ message received and disables quota checking. The default value is `5000`.\
            \ Available since 2.14."
          format: int64
        queueMaxRedeliveryCount:
          type: integer
          description: The maximum number of times the MQTT Session Queue will attempt
            redelivery of a message prior to it being discarded or moved to the DMQ.
            A value of 0 means to retry forever. The default value is `0`. Available
            since 2.14.
          format: int64
        queueMaxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the MQTT\
            \ Session Queue when `queueRespectTtlEnabled` is `\"true\"`. A message\
            \ expires when the lesser of the sender assigned time-to-live (TTL) in\
            \ the message and the `queueMaxTtl` configured for the MQTT Session Queue,\
            \ is exceeded. A value of 0 disables expiry. The default value is `0`.\
            \ Available since 2.14."
          format: int64
        queueRejectLowPriorityMsgEnabled:
          type: boolean
          description: Enable or disable the checking of low priority messages against
            the `queueRejectLowPriorityMsgLimit`. This may only be enabled if `queueRejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`. Available
            since 2.14.
        queueRejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages of any priority in the MQTT Session
            Queue above which low priority messages are not admitted but higher priority
            messages are allowed. The default value is `0`. Available since 2.14.
          format: int64
        queueRejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |-
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"when-queue-enabled"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
             Available since 2.14.
          enum:
          - always
          - when-queue-enabled
          - never
        queueRespectTtlEnabled:
          type: boolean
          description: "Enable or disable the respecting of the time-to-live (TTL)\
            \ for messages in the MQTT Session Queue. When enabled, expired messages\
            \ are discarded or moved to the DMQ. The default value is `false`. Available\
            \ since 2.14."
      example:
        owner: owner
        queueMaxBindCount: 0
        mqttSessionClientId: mqttSessionClientId
        queueRejectLowPriorityMsgEnabled: true
        queueRespectTtlEnabled: true
        queueMaxDeliveredUnackedMsgsPerFlow: 6
        queueMaxRedeliveryCount: 5
        enabled: true
        queueMaxTtl: 2
        queueRejectLowPriorityMsgLimit: 7
        queueDeadMsgQueue: queueDeadMsgQueue
        queueEventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueRejectMsgToSenderOnDiscardBehavior: always
        queueEventMsgSpoolUsageThreshold: null
        queueMaxMsgSize: 1
        msgVpnName: msgVpnName
        queueEventRejectLowPriorityMsgLimitThreshold: null
        queueMaxMsgSpoolUsage: 5
        mqttSessionVirtualRouter: primary
        queueConsumerAckPropagationEnabled: true
    MsgVpnMqttSessionLinks:
      type: object
      properties:
        subscriptionsUri:
          type: string
          description: The URI of this MQTT Session's collection of Subscription objects.
        uri:
          type: string
          description: The URI of this MQTT Session object.
      example:
        subscriptionsUri: subscriptionsUri
        uri: uri
    MsgVpnMqttSessionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnMqttSession'
        links:
          $ref: '#/components/schemas/MsgVpnMqttSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          owner: owner
          queueMaxBindCount: 0
          mqttSessionClientId: mqttSessionClientId
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          queueMaxDeliveredUnackedMsgsPerFlow: 6
          queueMaxRedeliveryCount: 5
          enabled: true
          queueMaxTtl: 2
          queueRejectLowPriorityMsgLimit: 7
          queueDeadMsgQueue: queueDeadMsgQueue
          queueEventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueEventMsgSpoolUsageThreshold: null
          queueMaxMsgSize: 1
          msgVpnName: msgVpnName
          queueEventRejectLowPriorityMsgLimitThreshold: null
          queueMaxMsgSpoolUsage: 5
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnMqttSessionSubscription:
      type: object
      properties:
        mqttSessionClientId:
          type: string
          description: "The Client ID of the MQTT Session, which corresponds to the\
            \ ClientId provided in the MQTT CONNECT packet."
        mqttSessionVirtualRouter:
          type: string
          description: |
            The virtual router of the MQTT Session. The allowed values and their meaning are:

            <pre>
            "primary" - The MQTT Session belongs to the primary virtual router.
            "backup" - The MQTT Session belongs to the backup virtual router.
            </pre>
          enum:
          - primary
          - backup
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        subscriptionQos:
          type: integer
          description: "The quality of service (QoS) for the subscription as either\
            \ 0 (deliver at most once) or 1 (deliver at least once). QoS 2 is not\
            \ supported, but QoS 2 messages attracted by QoS 0 or QoS 1 subscriptions\
            \ are accepted and delivered accordingly. The default value is `0`."
          format: int64
        subscriptionTopic:
          type: string
          description: The MQTT subscription topic.
      example:
        mqttSessionClientId: mqttSessionClientId
        subscriptionQos: 0
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
        mqttSessionVirtualRouter: primary
    MsgVpnMqttSessionSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Subscription object.
      example:
        uri: uri
    MsgVpnMqttSessionSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnMqttSessionSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        - mqttSessionClientId: mqttSessionClientId
          subscriptionQos: 0
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
          mqttSessionVirtualRouter: primary
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnMqttSessionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSession'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnMqttSessionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - owner: owner
          queueMaxBindCount: 0
          mqttSessionClientId: mqttSessionClientId
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          queueMaxDeliveredUnackedMsgsPerFlow: 6
          queueMaxRedeliveryCount: 5
          enabled: true
          queueMaxTtl: 2
          queueRejectLowPriorityMsgLimit: 7
          queueDeadMsgQueue: queueDeadMsgQueue
          queueEventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueEventMsgSpoolUsageThreshold: null
          queueMaxMsgSize: 1
          msgVpnName: msgVpnName
          queueEventRejectLowPriorityMsgLimitThreshold: null
          queueMaxMsgSpoolUsage: 5
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        - owner: owner
          queueMaxBindCount: 0
          mqttSessionClientId: mqttSessionClientId
          queueRejectLowPriorityMsgEnabled: true
          queueRespectTtlEnabled: true
          queueMaxDeliveredUnackedMsgsPerFlow: 6
          queueMaxRedeliveryCount: 5
          enabled: true
          queueMaxTtl: 2
          queueRejectLowPriorityMsgLimit: 7
          queueDeadMsgQueue: queueDeadMsgQueue
          queueEventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueRejectMsgToSenderOnDiscardBehavior: always
          queueEventMsgSpoolUsageThreshold: null
          queueMaxMsgSize: 1
          msgVpnName: msgVpnName
          queueEventRejectLowPriorityMsgLimitThreshold: null
          queueMaxMsgSpoolUsage: 5
          mqttSessionVirtualRouter: primary
          queueConsumerAckPropagationEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - subscriptionsUri: subscriptionsUri
          uri: uri
        - subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnQueue:
      type: object
      properties:
        accessType:
          type: string
          description: |
            The access type for delivering messages to consumer flows bound to the Queue. The default value is `"exclusive"`. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
        consumerAckPropagationEnabled:
          type: boolean
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`.
        deadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ) used by the Queue.
            The default value is `"#DEAD_MSG_QUEUE"`. Available since 2.2.
        deliveryCountEnabled:
          type: boolean
          description: Enable or disable the ability for client applications to query
            the message delivery count of messages received from the Queue. This is
            a controlled availability feature. Please contact Solace to find out if
            this feature is supported for your use case. The default value is `false`.
            Available since 2.19.
        egressEnabled:
          type: boolean
          description: Enable or disable the transmission of messages from the Queue.
            The default value is `false`.
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        ingressEnabled:
          type: boolean
          description: Enable or disable the reception of messages to the Queue. The
            default value is `false`.
        maxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind to the Queue.
            The default value is `1000`.
          format: int64
        maxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Queue. The default value is `10000`.
          format: int64
        maxMsgSize:
          type: integer
          description: "The maximum message size allowed in the Queue, in bytes (B).\
            \ The default value is `10000000`."
          format: int32
        maxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed by the Queue, in megabytes\
            \ (MB). A value of 0 only allows spooling of the last message received\
            \ and disables quota checking. The default value is `5000`."
          format: int64
        maxRedeliveryCount:
          type: integer
          description: The maximum number of times the Queue will attempt redelivery
            of a message prior to it being discarded or moved to the DMQ. A value
            of 0 means to retry forever. The default value is `0`.
          format: int64
        maxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the Queue\
            \ when `respectTtlEnabled` is `\"true\"`. A message expires when the lesser\
            \ of the sender assigned time-to-live (TTL) in the message and the `maxTtl`\
            \ configured for the Queue, is exceeded. A value of 0 disables expiry.\
            \ The default value is `0`."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        owner:
          type: string
          description: The Client Username that owns the Queue and has permission
            equivalent to `"delete"`. The default value is `""`.
        permission:
          type: string
          description: "The permission level for all consumers of the Queue, excluding\
            \ the owner. The default value is `\"no-access\"`. The allowed values\
            \ and their meaning are:\n\n<pre>\n\"no-access\" - Disallows all access.\n\
            \"read-only\" - Read-only access to the messages.\n\"consume\" - Consume\
            \ (read and remove) messages.\n\"modify-topic\" - Consume messages or\
            \ modify the topic/selector.\n\"delete\" - Consume messages, modify the\
            \ topic/selector or delete the Client created endpoint altogether.\n</pre>\n"
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
        queueName:
          type: string
          description: The name of the Queue.
        redeliveryEnabled:
          type: boolean
          description: "Enable or disable message redelivery. When enabled, the number\
            \ of redelivery attempts is controlled by maxRedeliveryCount. When disabled,\
            \ the message will never be delivered from the queue more than once. The\
            \ default value is `true`. Available since 2.18."
        rejectLowPriorityMsgEnabled:
          type: boolean
          description: Enable or disable the checking of low priority messages against
            the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`.
        rejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages of any priority in the Queue above which
            low priority messages are not admitted but higher priority messages are
            allowed. The default value is `0`.
          format: int64
        rejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |-
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"when-queue-enabled"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
             Available since 2.1.
          enum:
          - always
          - when-queue-enabled
          - never
        respectMsgPriorityEnabled:
          type: boolean
          description: "Enable or disable the respecting of message priority. When\
            \ enabled, messages contained in the Queue are delivered in priority order,\
            \ from 9 (highest) to 0 (lowest). MQTT queues do not support enabling\
            \ message priority. The default value is `false`. Available since 2.8."
        respectTtlEnabled:
          type: boolean
          description: "Enable or disable the respecting of the time-to-live (TTL)\
            \ for messages in the Queue. When enabled, expired messages are discarded\
            \ or moved to the DMQ. The default value is `false`."
      example:
        redeliveryEnabled: true
        rejectLowPriorityMsgLimit: 7
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        deliveryCountEnabled: true
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        respectMsgPriorityEnabled: true
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
        maxBindCount: 0
        owner: owner
        eventMsgSpoolUsageThreshold: null
        egressEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        maxRedeliveryCount: 5
        ingressEnabled: true
        queueName: queueName
        eventRejectLowPriorityMsgLimitThreshold: null
        maxMsgSpoolUsage: 5
    MsgVpnQueueLinks:
      type: object
      properties:
        subscriptionsUri:
          type: string
          description: The URI of this Queue's collection of Queue Subscription objects.
        uri:
          type: string
          description: The URI of this Queue object.
      example:
        subscriptionsUri: subscriptionsUri
        uri: uri
    MsgVpnQueueResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnQueue'
        links:
          $ref: '#/components/schemas/MsgVpnQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          eventMsgSpoolUsageThreshold: null
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          queueName: queueName
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnQueueSubscription:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        queueName:
          type: string
          description: The name of the Queue.
        subscriptionTopic:
          type: string
          description: The topic of the Subscription.
      example:
        queueName: queueName
        msgVpnName: msgVpnName
        subscriptionTopic: subscriptionTopic
    MsgVpnQueueSubscriptionLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Queue Subscription object.
      example:
        uri: uri
    MsgVpnQueueSubscriptionResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnQueueSubscription'
        links:
          $ref: '#/components/schemas/MsgVpnQueueSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnQueueSubscriptionsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscription'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueSubscriptionLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
        - queueName: queueName
          msgVpnName: msgVpnName
          subscriptionTopic: subscriptionTopic
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnQueueTemplate:
      type: object
      properties:
        accessType:
          type: string
          description: |
            The access type for delivering messages to consumer flows. The default value is `"exclusive"`. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
        consumerAckPropagationEnabled:
          type: boolean
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`.
        deadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ). The default value
            is `"#DEAD_MSG_QUEUE"`.
        durabilityOverride:
          type: string
          description: "Controls the durability of queues created from this template.\
            \ If non-durable, the created queue will be non-durable, regardless of\
            \ the specified durability. If none, the created queue will have the requested\
            \ durability. The default value is `\"none\"`. The allowed values and\
            \ their meaning are:\n\n<pre>\n\"none\" - The durability of the endpoint\
            \ will be as requested on create.\n\"non-durable\" - The durability of\
            \ the created queue will be non-durable, regardless of what was requested.\n\
            </pre>\n"
          enum:
          - none
          - non-durable
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind. The default
            value is `1000`.
          format: int64
        maxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow. The default value is `10000`.
          format: int64
        maxMsgSize:
          type: integer
          description: "The maximum message size allowed, in bytes (B). The default\
            \ value is `10000000`."
          format: int32
        maxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed, in megabytes (MB).\
            \ A value of 0 only allows spooling of the last message received and disables\
            \ quota checking. The default value is `5000`."
          format: int64
        maxRedeliveryCount:
          type: integer
          description: The maximum number of message redelivery attempts that will
            occur prior to the message being discarded or moved to the DMQ. A value
            of 0 means to retry forever. The default value is `0`.
          format: int64
        maxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in a Queue\
            \ when `respectTtlEnabled` is `\"true\"`. A message expires when the lesser\
            \ of the sender assigned time-to-live (TTL) in the message and the `maxTtl`\
            \ configured for the Queue, is exceeded. A value of 0 disables expiry.\
            \ The default value is `0`."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        permission:
          type: string
          description: "The permission level for all consumers, excluding the owner.\
            \ The default value is `\"no-access\"`. The allowed values and their meaning\
            \ are:\n\n<pre>\n\"no-access\" - Disallows all access.\n\"read-only\"\
            \ - Read-only access to the messages.\n\"consume\" - Consume (read and\
            \ remove) messages.\n\"modify-topic\" - Consume messages or modify the\
            \ topic/selector.\n\"delete\" - Consume messages, modify the topic/selector\
            \ or delete the Client created endpoint altogether.\n</pre>\n"
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
        queueNameFilter:
          type: string
          description: "A wildcardable pattern used to determine which Queues use\
            \ settings from this Template. Two different wildcards are supported:\
            \ * and >. Similar to topic filters or subscription patterns, a > matches\
            \ anything (but only when used at the end), and a * matches zero or more\
            \ characters but never a slash (/). A > is only a wildcard when used at\
            \ the end, after a /. A * is only allowed at the end, after a slash (/).\
            \ The default value is `\"\"`."
        queueTemplateName:
          type: string
          description: The name of the Queue Template.
        redeliveryEnabled:
          type: boolean
          description: "Enable or disable message redelivery. When enabled, the number\
            \ of redelivery attempts is controlled by maxRedeliveryCount. When disabled,\
            \ the message will never be delivered from the queue more than once. The\
            \ default value is `true`. Available since 2.18."
        rejectLowPriorityMsgEnabled:
          type: boolean
          description: Enable or disable the checking of low priority messages against
            the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`.
        rejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages of any priority above which low priority
            messages are not admitted but higher priority messages are allowed. The
            default value is `0`.
          format: int64
        rejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs prevent the message from being delivered to any destination and Transacted Session commits to fail. The default value is `"when-queue-enabled"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-queue-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Queue is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-queue-enabled
          - never
        respectMsgPriorityEnabled:
          type: boolean
          description: "Enable or disable the respecting of message priority. When\
            \ enabled, messages are delivered in priority order, from 9 (highest)\
            \ to 0 (lowest). The default value is `false`."
        respectTtlEnabled:
          type: boolean
          description: "Enable or disable the respecting of the time-to-live (TTL)\
            \ for messages. When enabled, expired messages are discarded or moved\
            \ to the DMQ. The default value is `false`."
      example:
        maxBindCount: 0
        eventMsgSpoolUsageThreshold: null
        redeliveryEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        rejectLowPriorityMsgLimit: 7
        maxRedeliveryCount: 5
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        queueNameFilter: queueNameFilter
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        queueTemplateName: queueTemplateName
        respectMsgPriorityEnabled: true
        durabilityOverride: none
        eventRejectLowPriorityMsgLimitThreshold: null
        maxMsgSpoolUsage: 5
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
    MsgVpnQueueTemplateLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Queue Template object.
      example:
        uri: uri
    MsgVpnQueueTemplateResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnQueueTemplate'
        links:
          $ref: '#/components/schemas/MsgVpnQueueTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          maxBindCount: 0
          eventMsgSpoolUsageThreshold: null
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnQueueTemplatesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplate'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold: null
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold: null
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          queueNameFilter: queueNameFilter
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          queueTemplateName: queueTemplateName
          respectMsgPriorityEnabled: true
          durabilityOverride: none
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnQueuesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueue'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnQueueLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          eventMsgSpoolUsageThreshold: null
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          queueName: queueName
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        - redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          eventMsgSpoolUsageThreshold: null
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          queueName: queueName
          eventRejectLowPriorityMsgLimitThreshold: null
          maxMsgSpoolUsage: 5
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - subscriptionsUri: subscriptionsUri
          uri: uri
        - subscriptionsUri: subscriptionsUri
          uri: uri
    MsgVpnReplayLog:
      type: object
      properties:
        egressEnabled:
          type: boolean
          description: Enable or disable the transmission of messages from the Replay
            Log. The default value is `false`.
        ingressEnabled:
          type: boolean
          description: Enable or disable the reception of messages to the Replay Log.
            The default value is `false`.
        maxSpoolUsage:
          type: integer
          description: "The maximum spool usage allowed by the Replay Log, in megabytes\
            \ (MB). If this limit is exceeded, old messages will be trimmed. The default\
            \ value is `0`."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        replayLogName:
          type: string
          description: The name of the Replay Log.
      example:
        ingressEnabled: true
        replayLogName: replayLogName
        maxSpoolUsage: 0
        egressEnabled: true
        msgVpnName: msgVpnName
    MsgVpnReplayLogLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Replay Log object.
      example:
        uri: uri
    MsgVpnReplayLogResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnReplayLog'
        links:
          $ref: '#/components/schemas/MsgVpnReplayLogLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          ingressEnabled: true
          replayLogName: replayLogName
          maxSpoolUsage: 0
          egressEnabled: true
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnReplayLogsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLog'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplayLogLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - ingressEnabled: true
          replayLogName: replayLogName
          maxSpoolUsage: 0
          egressEnabled: true
          msgVpnName: msgVpnName
        - ingressEnabled: true
          replayLogName: replayLogName
          maxSpoolUsage: 0
          egressEnabled: true
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnReplicatedTopic:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        replicatedTopic:
          type: string
          description: The topic for applying replication. Published messages matching
            this topic will be replicated to the standby site.
        replicationMode:
          type: string
          description: |
            The replication mode for the Replicated Topic. The default value is `"async"`. The allowed values and their meaning are:

            <pre>
            "sync" - Messages are acknowledged when replicated (spooled remotely).
            "async" - Messages are acknowledged when pending replication (spooled locally).
            </pre>
          enum:
          - sync
          - async
      example:
        replicationMode: sync
        replicatedTopic: replicatedTopic
        msgVpnName: msgVpnName
    MsgVpnReplicatedTopicLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Replicated Topic object.
      example:
        uri: uri
    MsgVpnReplicatedTopicResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        links:
          $ref: '#/components/schemas/MsgVpnReplicatedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnReplicatedTopicsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopic'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnReplicatedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        - replicationMode: sync
          replicatedTopic: replicatedTopic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpn'
        links:
          $ref: '#/components/schemas/MsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          serviceMqttMaxConnectionCount: 6
          authorizationProfileName: authorizationProfileName
          replicationBridgeAuthenticationClientCertPassword: replicationBridgeAuthenticationClientCertPassword
          replicationBridgeEgressFlowWindowSize: 6
          restTlsServerCertMaxChainDepth: 4
          serviceRestIncomingPlainTextEnabled: true
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold: null
          bridgingTlsServerCertValidateDateEnabled: true
          authorizationType: ldap
          replicationAckPropagationIntervalMsgCount: 1
          bridgingTlsServerCertMaxChainDepth: 6
          replicationBridgeCompressedDataEnabled: true
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          restTlsServerCertValidateDateEnabled: true
          eventTransactedSessionCountThreshold: null
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 1
          authenticationClientCertUsernameSource: certificate-thumbprint
          replicationBridgeAuthenticationClientCertContent: replicationBridgeAuthenticationClientCertContent
          eventSubscriptionCountThreshold: null
          serviceMqttPlainTextListenPort: 8
          authenticationClientCertMaxChainDepth: 0
          serviceMqttWebSocketEnabled: true
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceRestIncomingAuthorizationHeaderHandling: drop
          authenticationClientCertEnabled: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          eventPublishTopicFormatSmfEnabled: true
          authenticationBasicProfileName: authenticationBasicProfileName
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          serviceRestIncomingMaxConnectionCount: 6
          sempOverMsgBusEnabled: true
          maxTransactionCount: 1
          serviceAmqpTlsListenPort: 9
          serviceMqttTlsListenPort: 9
          eventServiceAmqpConnectionCountThreshold: null
          serviceRestMode: gateway
          serviceRestIncomingTlsEnabled: true
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          maxSubscriptionCount: 4
          authenticationOauthEnabled: true
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 5
          serviceAmqpMaxConnectionCount: 5
          maxEgressFlowCount: 7
          serviceMqttWebSocketListenPort: 3
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 9
          serviceWebTlsEnabled: true
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          eventIngressMsgRateThreshold: null
          eventPublishSubscriptionMode: "off"
          serviceMqttTlsEnabled: true
          eventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 5
          serviceRestIncomingTlsListenPort: 2
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold: null
          eventPublishMsgVpnEnabled: true
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          dmrEnabled: true
          msgVpnName: msgVpnName
          eventEndpointCountThreshold: null
          sempOverMsgBusAdminEnabled: true
          eventEgressFlowCountThreshold: null
          eventServiceRestIncomingConnectionCountThreshold: null
          eventMsgSpoolUsageThreshold: null
          serviceSmfMaxConnectionCount: 6
          jndiEnabled: true
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          eventPublishClientEnabled: true
          replicationQueueMaxMsgSpoolUsage: 1
          eventServiceMqttConnectionCountThreshold: null
          sempOverMsgBusAdminClientEnabled: true
          tlsAllowDowngradeToPlainTextEnabled: true
          maxConnectionCount: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          eventServiceSmfConnectionCountThreshold: null
          serviceAmqpPlainTextListenPort: 9
          authenticationClientCertValidateDateEnabled: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          replicationEnabledQueueBehavior: fail-on-existing-queue
          replicationBridgeRetryDelay: 7
          eventLogTag: eventLogTag
          distributedCacheManagementEnabled: true
          alias: alias
          serviceMqttTlsWebSocketListenPort: 6
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          bridgingTlsServerCertValidateNameEnabled: true
          replicationBridgeAuthenticationBasicPassword: replicationBridgeAuthenticationBasicPassword
          maxIngressFlowCount: 3
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 7
          mqttRetainMaxMemory: 1
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          maxMsgSpoolUsage: 2
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
          eventIngressFlowCountThreshold: null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          authenticationOauthProvidersUri: authenticationOauthProvidersUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          sequencedTopicsUri: sequencedTopicsUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
    MsgVpnRestDeliveryPoint:
      type: object
      properties:
        clientProfileName:
          type: string
          description: The Client Profile of the REST Delivery Point. It must exist
            in the local Message VPN. Its TCP parameters are used for all REST Consumers
            in this RDP. Its queue properties are used by the RDP client. The Client
            Profile is used inside the auto-generated Client Username for this RDP.
            The default value is `"default"`.
        enabled:
          type: boolean
          description: "Enable or disable the REST Delivery Point. When disabled,\
            \ no connections are initiated or messages delivered to any of the contained\
            \ REST Consumers. The default value is `false`."
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
        service:
          type: string
          description: The name of the service that this REST Delivery Point connects
            to. Internally the broker does not use this value; it is informational
            only. The default value is `""`. Available since 2.19.
        vendor:
          type: string
          description: The name of the vendor that this REST Delivery Point connects
            to. Internally the broker does not use this value; it is informational
            only. The default value is `""`. Available since 2.19.
      example:
        service: service
        vendor: vendor
        clientProfileName: clientProfileName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        enabled: true
    MsgVpnRestDeliveryPointLinks:
      type: object
      properties:
        queueBindingsUri:
          type: string
          description: The URI of this REST Delivery Point's collection of Queue Binding
            objects.
        restConsumersUri:
          type: string
          description: The URI of this REST Delivery Point's collection of REST Consumer
            objects.
        uri:
          type: string
          description: The URI of this REST Delivery Point object.
      example:
        restConsumersUri: restConsumersUri
        queueBindingsUri: queueBindingsUri
        uri: uri
    MsgVpnRestDeliveryPointQueueBinding:
      type: object
      properties:
        gatewayReplaceTargetAuthorityEnabled:
          type: boolean
          description: "Enable or disable whether the authority for the request-target\
            \ is replaced with that configured for the REST Consumer remote. When\
            \ enabled, the broker sends HTTP requests in absolute-form, with the request-target's\
            \ authority taken from the REST Consumer's remote host and port configuration.\
            \ When disabled, the broker sends HTTP requests whose request-target matches\
            \ that of the original request message, including whether to use absolute-form\
            \ or origin-form. This configuration is applicable only when the Message\
            \ VPN is in REST gateway mode. The default value is `false`. Available\
            \ since 2.6."
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        postRequestTarget:
          type: string
          description: "The request-target string to use when sending requests. It\
            \ identifies the target resource on the far-end REST Consumer upon which\
            \ to apply the request. There are generally two common forms for the request-target.\
            \ The origin-form is most often used in practice and contains the path\
            \ and query components of the target URI. If the path component is empty\
            \ then the client must generally send a \"/\" as the path. When making\
            \ a request to a proxy, most often the absolute-form is required. This\
            \ configuration is only applicable when the Message VPN is in REST messaging\
            \ mode. The default value is `\"\"`."
        queueBindingName:
          type: string
          description: The name of a queue in the Message VPN.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
      example:
        gatewayReplaceTargetAuthorityEnabled: true
        queueBindingName: queueBindingName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        postRequestTarget: postRequestTarget
    MsgVpnRestDeliveryPointQueueBindingLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Queue Binding object.
      example:
        uri: uri
    MsgVpnRestDeliveryPointQueueBindingResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          postRequestTarget: postRequestTarget
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnRestDeliveryPointQueueBindingsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBinding'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointQueueBindingLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          postRequestTarget: postRequestTarget
        - gatewayReplaceTargetAuthorityEnabled: true
          queueBindingName: queueBindingName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          postRequestTarget: postRequestTarget
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnRestDeliveryPointResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          service: service
          vendor: vendor
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
    MsgVpnRestDeliveryPointRestConsumer:
      type: object
      properties:
        authenticationClientCertContent:
          type: string
          description: "The PEM formatted content for the client certificate that\
            \ the REST Consumer will present to the REST host. It must consist of\
            \ a private key and between one and three certificates comprising the\
            \ certificate trust chain. This attribute is absent from a GET and not\
            \ updated when absent in a PUT, subject to the exceptions in note 4. Changing\
            \ this attribute requires an HTTPS connection. The default value is `\"\
            \"`. Available since 2.9."
          x-requires-https: true
        authenticationClientCertPassword:
          type: string
          description: "The password for the client certificate. This attribute is\
            \ absent from a GET and not updated when absent in a PUT, subject to the\
            \ exceptions in note 4. Changing this attribute requires an HTTPS connection.\
            \ The default value is `\"\"`. Available since 2.9."
          x-requires-https: true
        authenticationHttpBasicPassword:
          type: string
          description: "The password for the username. This attribute is absent from\
            \ a GET and not updated when absent in a PUT, subject to the exceptions\
            \ in note 4. The default value is `\"\"`."
        authenticationHttpBasicUsername:
          type: string
          description: The username that the REST Consumer will use to login to the
            REST host. Normally a username is only configured when basic authentication
            is selected for the REST Consumer. The default value is `""`.
        authenticationHttpHeaderName:
          type: string
          description: The authentication header name. The default value is `""`.
            Available since 2.15.
        authenticationHttpHeaderValue:
          type: string
          description: "The authentication header value. This attribute is absent\
            \ from a GET and not updated when absent in a PUT, subject to the exceptions\
            \ in note 4. The default value is `\"\"`. Available since 2.15."
        authenticationOauthClientId:
          type: string
          description: The OAuth client ID. The default value is `""`. Available since
            2.19.
        authenticationOauthClientScope:
          type: string
          description: The OAuth scope. The default value is `""`. Available since
            2.19.
        authenticationOauthClientSecret:
          type: string
          description: "The OAuth client secret. This attribute is absent from a GET\
            \ and not updated when absent in a PUT, subject to the exceptions in note\
            \ 4. The default value is `\"\"`. Available since 2.19."
        authenticationOauthClientTokenEndpoint:
          type: string
          description: The OAuth token endpoint URL that the REST Consumer will use
            to request a token for login to the REST host. Must begin with "https".
            The default value is `""`. Available since 2.19.
        authenticationOauthJwtSecretKey:
          type: string
          description: "The OAuth secret key used to sign the token request JWT. This\
            \ attribute is absent from a GET and not updated when absent in a PUT,\
            \ subject to the exceptions in note 4. The default value is `\"\"`. Available\
            \ since 2.21."
        authenticationOauthJwtTokenEndpoint:
          type: string
          description: The OAuth token endpoint URL that the REST Consumer will use
            to request a token for login to the REST host. The default value is `""`.
            Available since 2.21.
        authenticationScheme:
          type: string
          description: "The authentication scheme used by the REST Consumer to login\
            \ to the REST host. The default value is `\"none\"`. The allowed values\
            \ and their meaning are:\n\n<pre>\n\"none\" - Login with no authentication.\
            \ This may be useful for anonymous connections or when a REST Consumer\
            \ does not require authentication.\n\"http-basic\" - Login with a username\
            \ and optional password according to HTTP Basic authentication as per\
            \ RFC2616.\n\"client-certificate\" - Login with a client TLS certificate\
            \ as per RFC5246. Client certificate authentication is only available\
            \ on TLS connections.\n\"http-header\" - Login with a specified HTTP header.\n\
            \"oauth-client\" - Login with OAuth 2.0 client credentials.\n\"oauth-jwt\"\
            \ - Login with OAuth (RFC 7523 JWT Profile).\n\"transparent\" - Login\
            \ using the Authorization header from the message properties, if present.\
            \ Transparent authentication passes along existing Authorization header\
            \ metadata instead of discarding it. Note that if the message is coming\
            \ from a REST producer, the REST service must be configured to forward\
            \ the Authorization header.\n</pre>\n"
          enum:
          - none
          - http-basic
          - client-certificate
          - http-header
          - oauth-client
          - oauth-jwt
          - transparent
        enabled:
          type: boolean
          description: "Enable or disable the REST Consumer. When disabled, no connections\
            \ are initiated or messages delivered to this particular REST Consumer.\
            \ The default value is `false`."
        httpMethod:
          type: string
          description: |-
            The HTTP method to use (POST or PUT). This is used only when operating in the REST service "messaging" mode and is ignored in "gateway" mode. The default value is `"post"`. The allowed values and their meaning are:

            <pre>
            "post" - Use the POST HTTP method.
            "put" - Use the PUT HTTP method.
            </pre>
             Available since 2.17.
          enum:
          - post
          - put
        localInterface:
          type: string
          description: "The interface that will be used for all outgoing connections\
            \ associated with the REST Consumer. When unspecified, an interface is\
            \ automatically chosen. The default value is `\"\"`."
        maxPostWaitTime:
          type: integer
          description: "The maximum amount of time (in seconds) to wait for an HTTP\
            \ POST response from the REST Consumer. Once this time is exceeded, the\
            \ TCP connection is reset. The default value is `30`."
          format: int32
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        outgoingConnectionCount:
          type: integer
          description: The number of concurrent TCP connections open to the REST Consumer.
            The default value is `3`.
          format: int32
        remoteHost:
          type: string
          description: The IP address or DNS name to which the broker is to connect
            to deliver messages for the REST Consumer. A host value must be configured
            for the REST Consumer to be operationally up. The default value is `""`.
        remotePort:
          type: integer
          description: The port associated with the host of the REST Consumer. The
            default value is `8080`.
          format: int64
        restConsumerName:
          type: string
          description: The name of the REST Consumer.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
        retryDelay:
          type: integer
          description: The number of seconds that must pass before retrying the remote
            REST Consumer connection. The default value is `3`.
          format: int32
        tlsCipherSuiteList:
          type: string
          description: The colon-separated list of cipher suites the REST Consumer
            uses in its encrypted connection. The value `"default"` implies all supported
            suites ordered from most secure to least secure. The list of default cipher
            suites is available in the `tlsCipherSuiteMsgBackboneDefaultList` attribute
            of the Broker object in the Monitoring API. The REST Consumer should choose
            the first suite from this list that it supports. The default value is
            `"default"`.
        tlsEnabled:
          type: boolean
          description: Enable or disable encryption (TLS) for the REST Consumer. The
            default value is `false`.
      example:
        authenticationOauthClientSecret: authenticationOauthClientSecret
        remoteHost: remoteHost
        httpMethod: post
        enabled: true
        localInterface: localInterface
        outgoingConnectionCount: 6
        retryDelay: 5
        tlsEnabled: true
        authenticationScheme: none
        authenticationClientCertContent: authenticationClientCertContent
        msgVpnName: msgVpnName
        authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
        authenticationOauthJwtSecretKey: authenticationOauthJwtSecretKey
        authenticationHttpBasicUsername: authenticationHttpBasicUsername
        authenticationHttpHeaderValue: authenticationHttpHeaderValue
        maxPostWaitTime: 0
        authenticationOauthClientId: authenticationOauthClientId
        restConsumerName: restConsumerName
        remotePort: 1
        authenticationClientCertPassword: authenticationClientCertPassword
        authenticationHttpHeaderName: authenticationHttpHeaderName
        authenticationHttpBasicPassword: authenticationHttpBasicPassword
        authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
        tlsCipherSuiteList: tlsCipherSuiteList
        authenticationOauthClientScope: authenticationOauthClientScope
        restDeliveryPointName: restDeliveryPointName
    MsgVpnRestDeliveryPointRestConsumerLinks:
      type: object
      properties:
        oauthJwtClaimsUri:
          type: string
          description: The URI of this REST Consumer's collection of Claim objects.
            Available since 2.21.
        tlsTrustedCommonNamesUri:
          type: string
          description: The URI of this REST Consumer's collection of Trusted Common
            Name objects. Deprecated since (will be deprecated in next SEMP version).
            Common Name validation has been replaced by Server Certificate Name validation.
        uri:
          type: string
          description: The URI of this REST Consumer object.
      example:
        oauthJwtClaimsUri: oauthJwtClaimsUri
        uri: uri
        tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        oauthJwtClaimName:
          type: string
          description: "The name of the additional claim. Cannot be \"exp\", \"iat\"\
            , or \"jti\"."
        oauthJwtClaimValue:
          type: string
          description: The value of the additional claim.
        restConsumerName:
          type: string
          description: The name of the REST Consumer.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point.
      example:
        oauthJwtClaimValue: oauthJwtClaimValue
        oauthJwtClaimName: oauthJwtClaimName
        restConsumerName: restConsumerName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Claim object.
      example:
        uri: uri
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        - oauthJwtClaimValue: oauthJwtClaimValue
          oauthJwtClaimName: oauthJwtClaimName
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnRestDeliveryPointRestConsumerResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          authenticationOauthClientSecret: authenticationOauthClientSecret
          remoteHost: remoteHost
          httpMethod: post
          enabled: true
          localInterface: localInterface
          outgoingConnectionCount: 6
          retryDelay: 5
          tlsEnabled: true
          authenticationScheme: none
          authenticationClientCertContent: authenticationClientCertContent
          msgVpnName: msgVpnName
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthJwtSecretKey: authenticationOauthJwtSecretKey
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          authenticationHttpHeaderValue: authenticationHttpHeaderValue
          maxPostWaitTime: 0
          authenticationOauthClientId: authenticationOauthClientId
          restConsumerName: restConsumerName
          remotePort: 1
          authenticationClientCertPassword: authenticationClientCertPassword
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationHttpBasicPassword: authenticationHttpBasicPassword
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN. Deprecated since (will be deprecated
            in next SEMP version). Common Name validation has been replaced by Server
            Certificate Name validation.
        restConsumerName:
          type: string
          description: The name of the REST Consumer. Deprecated since (will be deprecated
            in next SEMP version). Common Name validation has been replaced by Server
            Certificate Name validation.
        restDeliveryPointName:
          type: string
          description: The name of the REST Delivery Point. Deprecated since (will
            be deprecated in next SEMP version). Common Name validation has been replaced
            by Server Certificate Name validation.
        tlsTrustedCommonName:
          type: string
          description: The expected trusted common name of the remote certificate.
            Deprecated since (will be deprecated in next SEMP version). Common Name
            validation has been replaced by Server Certificate Name validation.
      example:
        restConsumerName: restConsumerName
        msgVpnName: msgVpnName
        restDeliveryPointName: restDeliveryPointName
        tlsTrustedCommonName: tlsTrustedCommonName
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Trusted Common Name object.
      example:
        uri: uri
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        links:
          $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        - restConsumerName: restConsumerName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          tlsTrustedCommonName: tlsTrustedCommonName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnRestDeliveryPointRestConsumersResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumer'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointRestConsumerLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - authenticationOauthClientSecret: authenticationOauthClientSecret
          remoteHost: remoteHost
          httpMethod: post
          enabled: true
          localInterface: localInterface
          outgoingConnectionCount: 6
          retryDelay: 5
          tlsEnabled: true
          authenticationScheme: none
          authenticationClientCertContent: authenticationClientCertContent
          msgVpnName: msgVpnName
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthJwtSecretKey: authenticationOauthJwtSecretKey
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          authenticationHttpHeaderValue: authenticationHttpHeaderValue
          maxPostWaitTime: 0
          authenticationOauthClientId: authenticationOauthClientId
          restConsumerName: restConsumerName
          remotePort: 1
          authenticationClientCertPassword: authenticationClientCertPassword
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationHttpBasicPassword: authenticationHttpBasicPassword
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
        - authenticationOauthClientSecret: authenticationOauthClientSecret
          remoteHost: remoteHost
          httpMethod: post
          enabled: true
          localInterface: localInterface
          outgoingConnectionCount: 6
          retryDelay: 5
          tlsEnabled: true
          authenticationScheme: none
          authenticationClientCertContent: authenticationClientCertContent
          msgVpnName: msgVpnName
          authenticationOauthClientTokenEndpoint: authenticationOauthClientTokenEndpoint
          authenticationOauthJwtSecretKey: authenticationOauthJwtSecretKey
          authenticationHttpBasicUsername: authenticationHttpBasicUsername
          authenticationHttpHeaderValue: authenticationHttpHeaderValue
          maxPostWaitTime: 0
          authenticationOauthClientId: authenticationOauthClientId
          restConsumerName: restConsumerName
          remotePort: 1
          authenticationClientCertPassword: authenticationClientCertPassword
          authenticationHttpHeaderName: authenticationHttpHeaderName
          authenticationHttpBasicPassword: authenticationHttpBasicPassword
          authenticationOauthJwtTokenEndpoint: authenticationOauthJwtTokenEndpoint
          tlsCipherSuiteList: tlsCipherSuiteList
          authenticationOauthClientScope: authenticationOauthClientScope
          restDeliveryPointName: restDeliveryPointName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
        - oauthJwtClaimsUri: oauthJwtClaimsUri
          uri: uri
          tlsTrustedCommonNamesUri: tlsTrustedCommonNamesUri
    MsgVpnRestDeliveryPointsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPoint'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnRestDeliveryPointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - service: service
          vendor: vendor
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          enabled: true
        - service: service
          vendor: vendor
          clientProfileName: clientProfileName
          msgVpnName: msgVpnName
          restDeliveryPointName: restDeliveryPointName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
        - restConsumersUri: restConsumersUri
          queueBindingsUri: queueBindingsUri
          uri: uri
    MsgVpnSequencedTopic:
      type: object
      properties:
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        sequencedTopic:
          type: string
          description: Topic for applying sequence numbers.
      example:
        sequencedTopic: sequencedTopic
        msgVpnName: msgVpnName
    MsgVpnSequencedTopicLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Sequenced Topic object.
      example:
        uri: uri
    MsgVpnSequencedTopicResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnSequencedTopic'
        links:
          $ref: '#/components/schemas/MsgVpnSequencedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          sequencedTopic: sequencedTopic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnSequencedTopicsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnSequencedTopic'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnSequencedTopicLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - sequencedTopic: sequencedTopic
          msgVpnName: msgVpnName
        - sequencedTopic: sequencedTopic
          msgVpnName: msgVpnName
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnTopicEndpoint:
      type: object
      properties:
        accessType:
          type: string
          description: |-
            The access type for delivering messages to consumer flows bound to the Topic Endpoint. The default value is `"exclusive"`. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
             Available since 2.4.
          enum:
          - exclusive
          - non-exclusive
        consumerAckPropagationEnabled:
          type: boolean
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`.
        deadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ) used by the Topic
            Endpoint. The default value is `"#DEAD_MSG_QUEUE"`. Available since 2.2.
        deliveryCountEnabled:
          type: boolean
          description: Enable or disable the ability for client applications to query
            the message delivery count of messages received from the Topic Endpoint.
            This is a controlled availability feature. Please contact Solace to find
            out if this feature is supported for your use case. The default value
            is `false`. Available since 2.19.
        egressEnabled:
          type: boolean
          description: Enable or disable the transmission of messages from the Topic
            Endpoint. The default value is `false`.
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        ingressEnabled:
          type: boolean
          description: Enable or disable the reception of messages to the Topic Endpoint.
            The default value is `false`.
        maxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind to the Topic
            Endpoint. The default value is `1`. Available since 2.4.
          format: int64
        maxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow for the Topic Endpoint. The default value is `10000`.
          format: int64
        maxMsgSize:
          type: integer
          description: "The maximum message size allowed in the Topic Endpoint, in\
            \ bytes (B). The default value is `10000000`."
          format: int32
        maxRedeliveryCount:
          type: integer
          description: The maximum number of times the Topic Endpoint will attempt
            redelivery of a message prior to it being discarded or moved to the DMQ.
            A value of 0 means to retry forever. The default value is `0`.
          format: int64
        maxSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed by the Topic Endpoint,\
            \ in megabytes (MB). A value of 0 only allows spooling of the last message\
            \ received and disables quota checking. The default value is `5000`."
          format: int64
        maxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the Topic\
            \ Endpoint when `respectTtlEnabled` is `\"true\"`. A message expires when\
            \ the lesser of the sender assigned time-to-live (TTL) in the message\
            \ and the `maxTtl` configured for the Topic Endpoint, is exceeded. A value\
            \ of 0 disables expiry. The default value is `0`."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        owner:
          type: string
          description: The Client Username that owns the Topic Endpoint and has permission
            equivalent to `"delete"`. The default value is `""`.
        permission:
          type: string
          description: "The permission level for all consumers of the Topic Endpoint,\
            \ excluding the owner. The default value is `\"no-access\"`. The allowed\
            \ values and their meaning are:\n\n<pre>\n\"no-access\" - Disallows all\
            \ access.\n\"read-only\" - Read-only access to the messages.\n\"consume\"\
            \ - Consume (read and remove) messages.\n\"modify-topic\" - Consume messages\
            \ or modify the topic/selector.\n\"delete\" - Consume messages, modify\
            \ the topic/selector or delete the Client created endpoint altogether.\n\
            </pre>\n"
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
        redeliveryEnabled:
          type: boolean
          description: "Enable or disable message redelivery. When enabled, the number\
            \ of redelivery attempts is controlled by maxRedeliveryCount. When disabled,\
            \ the message will never be delivered from the topic-endpoint more than\
            \ once. The default value is `true`. Available since 2.18."
        rejectLowPriorityMsgEnabled:
          type: boolean
          description: Enable or disable the checking of low priority messages against
            the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`.
        rejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages of any priority in the Topic Endpoint
            above which low priority messages are not admitted but higher priority
            messages are allowed. The default value is `0`.
          format: int64
        rejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"never"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-topic-endpoint-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Topic Endpoint is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-topic-endpoint-enabled
          - never
        respectMsgPriorityEnabled:
          type: boolean
          description: "Enable or disable the respecting of message priority. When\
            \ enabled, messages contained in the Topic Endpoint are delivered in priority\
            \ order, from 9 (highest) to 0 (lowest). The default value is `false`.\
            \ Available since 2.8."
        respectTtlEnabled:
          type: boolean
          description: "Enable or disable the respecting of the time-to-live (TTL)\
            \ for messages in the Topic Endpoint. When enabled, expired messages are\
            \ discarded or moved to the DMQ. The default value is `false`."
        topicEndpointName:
          type: string
          description: The name of the Topic Endpoint.
      example:
        redeliveryEnabled: true
        rejectLowPriorityMsgLimit: 7
        eventSpoolUsageThreshold: null
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        deliveryCountEnabled: true
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        respectMsgPriorityEnabled: true
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
        maxBindCount: 0
        owner: owner
        topicEndpointName: topicEndpointName
        maxSpoolUsage: 5
        egressEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        maxRedeliveryCount: 5
        ingressEnabled: true
        eventRejectLowPriorityMsgLimitThreshold: null
    MsgVpnTopicEndpointLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Endpoint object.
      example:
        uri: uri
    MsgVpnTopicEndpointResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          eventSpoolUsageThreshold: null
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          topicEndpointName: topicEndpointName
          maxSpoolUsage: 5
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          eventRejectLowPriorityMsgLimitThreshold: null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnTopicEndpointTemplate:
      type: object
      properties:
        accessType:
          type: string
          description: |
            The access type for delivering messages to consumer flows. The default value is `"exclusive"`. The allowed values and their meaning are:

            <pre>
            "exclusive" - Exclusive delivery of messages to the first bound consumer flow.
            "non-exclusive" - Non-exclusive delivery of messages to all bound consumer flows in a round-robin fashion.
            </pre>
          enum:
          - exclusive
          - non-exclusive
        consumerAckPropagationEnabled:
          type: boolean
          description: Enable or disable the propagation of consumer acknowledgements
            (ACKs) received on the active replication Message VPN to the standby replication
            Message VPN. The default value is `true`.
        deadMsgQueue:
          type: string
          description: The name of the Dead Message Queue (DMQ). The default value
            is `"#DEAD_MSG_QUEUE"`.
        eventBindCountThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventMsgSpoolUsageThreshold:
          $ref: '#/components/schemas/EventThreshold'
        eventRejectLowPriorityMsgLimitThreshold:
          $ref: '#/components/schemas/EventThreshold'
        maxBindCount:
          type: integer
          description: The maximum number of consumer flows that can bind. The default
            value is `1`.
          format: int64
        maxDeliveredUnackedMsgsPerFlow:
          type: integer
          description: The maximum number of messages delivered but not acknowledged
            per flow. The default value is `10000`.
          format: int64
        maxMsgSize:
          type: integer
          description: "The maximum message size allowed, in bytes (B). The default\
            \ value is `10000000`."
          format: int32
        maxMsgSpoolUsage:
          type: integer
          description: "The maximum message spool usage allowed, in megabytes (MB).\
            \ A value of 0 only allows spooling of the last message received and disables\
            \ quota checking. The default value is `5000`."
          format: int64
        maxRedeliveryCount:
          type: integer
          description: The maximum number of message redelivery attempts that will
            occur prior to the message being discarded or moved to the DMQ. A value
            of 0 means to retry forever. The default value is `0`.
          format: int64
        maxTtl:
          type: integer
          description: "The maximum time in seconds a message can stay in the Topic\
            \ Endpoint when `respectTtlEnabled` is `\"true\"`. A message expires when\
            \ the lesser of the sender assigned time-to-live (TTL) in the message\
            \ and the `maxTtl` configured for the Topic Endpoint, is exceeded. A value\
            \ of 0 disables expiry. The default value is `0`."
          format: int64
        msgVpnName:
          type: string
          description: The name of the Message VPN.
        permission:
          type: string
          description: "The permission level for all consumers, excluding the owner.\
            \ The default value is `\"no-access\"`. The allowed values and their meaning\
            \ are:\n\n<pre>\n\"no-access\" - Disallows all access.\n\"read-only\"\
            \ - Read-only access to the messages.\n\"consume\" - Consume (read and\
            \ remove) messages.\n\"modify-topic\" - Consume messages or modify the\
            \ topic/selector.\n\"delete\" - Consume messages, modify the topic/selector\
            \ or delete the Client created endpoint altogether.\n</pre>\n"
          enum:
          - no-access
          - read-only
          - consume
          - modify-topic
          - delete
        redeliveryEnabled:
          type: boolean
          description: "Enable or disable message redelivery. When enabled, the number\
            \ of redelivery attempts is controlled by maxRedeliveryCount. When disabled,\
            \ the message will never be delivered from the topic-endpoint more than\
            \ once. The default value is `true`. Available since 2.18."
        rejectLowPriorityMsgEnabled:
          type: boolean
          description: Enable or disable the checking of low priority messages against
            the `rejectLowPriorityMsgLimit`. This may only be enabled if `rejectMsgToSenderOnDiscardBehavior`
            does not have a value of `"never"`. The default value is `false`.
        rejectLowPriorityMsgLimit:
          type: integer
          description: The number of messages that are permitted before low priority
            messages are rejected. The default value is `0`.
          format: int64
        rejectMsgToSenderOnDiscardBehavior:
          type: string
          description: |
            Determines when to return negative acknowledgements (NACKs) to sending clients on message discards. Note that NACKs cause the message to not be delivered to any destination and Transacted Session commits to fail. The default value is `"never"`. The allowed values and their meaning are:

            <pre>
            "always" - Always return a negative acknowledgment (NACK) to the sending client on message discard.
            "when-topic-endpoint-enabled" - Only return a negative acknowledgment (NACK) to the sending client on message discard when the Topic Endpoint is enabled.
            "never" - Never return a negative acknowledgment (NACK) to the sending client on message discard.
            </pre>
          enum:
          - always
          - when-topic-endpoint-enabled
          - never
        respectMsgPriorityEnabled:
          type: boolean
          description: "Enable or disable the respecting of message priority. When\
            \ enabled, messages are delivered in priority order, from 9 (highest)\
            \ to 0 (lowest). The default value is `false`."
        respectTtlEnabled:
          type: boolean
          description: "Enable or disable the respecting of the time-to-live (TTL)\
            \ for messages. When enabled, expired messages are discarded or moved\
            \ to the DMQ. The default value is `false`."
        topicEndpointNameFilter:
          type: string
          description: "A wildcardable pattern used to determine which Topic Endpoints\
            \ use settings from this Template. Two different wildcards are supported:\
            \ * and >. Similar to topic filters or subscription patterns, a > matches\
            \ anything (but only when used at the end), and a * matches zero or more\
            \ characters but never a slash (/). A > is only a wildcard when used at\
            \ the end, after a /. A * is only allowed at the end, after a slash (/).\
            \ The default value is `\"\"`."
        topicEndpointTemplateName:
          type: string
          description: The name of the Topic Endpoint Template.
      example:
        maxBindCount: 0
        eventMsgSpoolUsageThreshold: null
        topicEndpointTemplateName: topicEndpointTemplateName
        redeliveryEnabled: true
        maxTtl: 2
        respectTtlEnabled: true
        permission: no-access
        rejectLowPriorityMsgLimit: 7
        maxRedeliveryCount: 5
        maxMsgSize: 1
        accessType: exclusive
        deadMsgQueue: deadMsgQueue
        rejectMsgToSenderOnDiscardBehavior: always
        consumerAckPropagationEnabled: true
        eventBindCountThreshold:
          clearPercent: 0
          setPercent: 1
          setValue: 5
          clearValue: 6
        respectMsgPriorityEnabled: true
        eventRejectLowPriorityMsgLimitThreshold: null
        topicEndpointNameFilter: topicEndpointNameFilter
        maxMsgSpoolUsage: 5
        msgVpnName: msgVpnName
        maxDeliveredUnackedMsgsPerFlow: 6
        rejectLowPriorityMsgEnabled: true
    MsgVpnTopicEndpointTemplateLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Topic Endpoint Template object.
      example:
        uri: uri
    MsgVpnTopicEndpointTemplateResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        links:
          $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          maxBindCount: 0
          eventMsgSpoolUsageThreshold: null
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold: null
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    MsgVpnTopicEndpointTemplatesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplate'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointTemplateLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold: null
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold: null
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        - maxBindCount: 0
          eventMsgSpoolUsageThreshold: null
          topicEndpointTemplateName: topicEndpointTemplateName
          redeliveryEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          rejectLowPriorityMsgLimit: 7
          maxRedeliveryCount: 5
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          eventRejectLowPriorityMsgLimitThreshold: null
          topicEndpointNameFilter: topicEndpointNameFilter
          maxMsgSpoolUsage: 5
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnTopicEndpointsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpoint'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnTopicEndpointLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          eventSpoolUsageThreshold: null
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          topicEndpointName: topicEndpointName
          maxSpoolUsage: 5
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          eventRejectLowPriorityMsgLimitThreshold: null
        - redeliveryEnabled: true
          rejectLowPriorityMsgLimit: 7
          eventSpoolUsageThreshold: null
          maxMsgSize: 1
          accessType: exclusive
          deadMsgQueue: deadMsgQueue
          deliveryCountEnabled: true
          rejectMsgToSenderOnDiscardBehavior: always
          consumerAckPropagationEnabled: true
          eventBindCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          respectMsgPriorityEnabled: true
          msgVpnName: msgVpnName
          maxDeliveredUnackedMsgsPerFlow: 6
          rejectLowPriorityMsgEnabled: true
          maxBindCount: 0
          owner: owner
          topicEndpointName: topicEndpointName
          maxSpoolUsage: 5
          egressEnabled: true
          maxTtl: 2
          respectTtlEnabled: true
          permission: no-access
          maxRedeliveryCount: 5
          ingressEnabled: true
          eventRejectLowPriorityMsgLimitThreshold: null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
    MsgVpnsResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpn'
        links:
          type: array
          items:
            $ref: '#/components/schemas/MsgVpnLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - serviceMqttMaxConnectionCount: 6
          authorizationProfileName: authorizationProfileName
          replicationBridgeAuthenticationClientCertPassword: replicationBridgeAuthenticationClientCertPassword
          replicationBridgeEgressFlowWindowSize: 6
          restTlsServerCertMaxChainDepth: 4
          serviceRestIncomingPlainTextEnabled: true
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold: null
          bridgingTlsServerCertValidateDateEnabled: true
          authorizationType: ldap
          replicationAckPropagationIntervalMsgCount: 1
          bridgingTlsServerCertMaxChainDepth: 6
          replicationBridgeCompressedDataEnabled: true
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          restTlsServerCertValidateDateEnabled: true
          eventTransactedSessionCountThreshold: null
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 1
          authenticationClientCertUsernameSource: certificate-thumbprint
          replicationBridgeAuthenticationClientCertContent: replicationBridgeAuthenticationClientCertContent
          eventSubscriptionCountThreshold: null
          serviceMqttPlainTextListenPort: 8
          authenticationClientCertMaxChainDepth: 0
          serviceMqttWebSocketEnabled: true
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceRestIncomingAuthorizationHeaderHandling: drop
          authenticationClientCertEnabled: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          eventPublishTopicFormatSmfEnabled: true
          authenticationBasicProfileName: authenticationBasicProfileName
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          serviceRestIncomingMaxConnectionCount: 6
          sempOverMsgBusEnabled: true
          maxTransactionCount: 1
          serviceAmqpTlsListenPort: 9
          serviceMqttTlsListenPort: 9
          eventServiceAmqpConnectionCountThreshold: null
          serviceRestMode: gateway
          serviceRestIncomingTlsEnabled: true
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          maxSubscriptionCount: 4
          authenticationOauthEnabled: true
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 5
          serviceAmqpMaxConnectionCount: 5
          maxEgressFlowCount: 7
          serviceMqttWebSocketListenPort: 3
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 9
          serviceWebTlsEnabled: true
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          eventIngressMsgRateThreshold: null
          eventPublishSubscriptionMode: "off"
          serviceMqttTlsEnabled: true
          eventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 5
          serviceRestIncomingTlsListenPort: 2
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold: null
          eventPublishMsgVpnEnabled: true
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          dmrEnabled: true
          msgVpnName: msgVpnName
          eventEndpointCountThreshold: null
          sempOverMsgBusAdminEnabled: true
          eventEgressFlowCountThreshold: null
          eventServiceRestIncomingConnectionCountThreshold: null
          eventMsgSpoolUsageThreshold: null
          serviceSmfMaxConnectionCount: 6
          jndiEnabled: true
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          eventPublishClientEnabled: true
          replicationQueueMaxMsgSpoolUsage: 1
          eventServiceMqttConnectionCountThreshold: null
          sempOverMsgBusAdminClientEnabled: true
          tlsAllowDowngradeToPlainTextEnabled: true
          maxConnectionCount: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          eventServiceSmfConnectionCountThreshold: null
          serviceAmqpPlainTextListenPort: 9
          authenticationClientCertValidateDateEnabled: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          replicationEnabledQueueBehavior: fail-on-existing-queue
          replicationBridgeRetryDelay: 7
          eventLogTag: eventLogTag
          distributedCacheManagementEnabled: true
          alias: alias
          serviceMqttTlsWebSocketListenPort: 6
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          bridgingTlsServerCertValidateNameEnabled: true
          replicationBridgeAuthenticationBasicPassword: replicationBridgeAuthenticationBasicPassword
          maxIngressFlowCount: 3
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 7
          mqttRetainMaxMemory: 1
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          maxMsgSpoolUsage: 2
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
          eventIngressFlowCountThreshold: null
        - serviceMqttMaxConnectionCount: 6
          authorizationProfileName: authorizationProfileName
          replicationBridgeAuthenticationClientCertPassword: replicationBridgeAuthenticationClientCertPassword
          replicationBridgeEgressFlowWindowSize: 6
          restTlsServerCertMaxChainDepth: 4
          serviceRestIncomingPlainTextEnabled: true
          replicationEnabled: true
          eventServiceWebConnectionCountThreshold: null
          bridgingTlsServerCertValidateDateEnabled: true
          authorizationType: ldap
          replicationAckPropagationIntervalMsgCount: 1
          bridgingTlsServerCertMaxChainDepth: 6
          replicationBridgeCompressedDataEnabled: true
          serviceAmqpPlainTextEnabled: true
          bridgingTlsServerCertEnforceTrustedCommonNameEnabled: true
          restTlsServerCertValidateDateEnabled: true
          eventTransactedSessionCountThreshold: null
          authenticationKerberosEnabled: true
          authorizationLdapGroupMembershipAttributeName: authorizationLdapGroupMembershipAttributeName
          serviceRestIncomingPlainTextListenPort: 1
          authenticationClientCertUsernameSource: certificate-thumbprint
          replicationBridgeAuthenticationClientCertContent: replicationBridgeAuthenticationClientCertContent
          eventSubscriptionCountThreshold: null
          serviceMqttPlainTextListenPort: 8
          authenticationClientCertMaxChainDepth: 0
          serviceMqttWebSocketEnabled: true
          authorizationLdapTrimClientUsernameDomainEnabled: true
          serviceRestIncomingAuthorizationHeaderHandling: drop
          authenticationClientCertEnabled: true
          restTlsServerCertEnforceTrustedCommonNameEnabled: true
          replicationRejectMsgWhenSyncIneligibleEnabled: true
          eventPublishTopicFormatSmfEnabled: true
          authenticationBasicProfileName: authenticationBasicProfileName
          enabled: true
          replicationBridgeAuthenticationScheme: basic
          serviceRestIncomingAuthenticationClientCertRequest: always
          replicationBridgeUnidirectionalClientProfileName: replicationBridgeUnidirectionalClientProfileName
          serviceRestIncomingMaxConnectionCount: 6
          sempOverMsgBusEnabled: true
          maxTransactionCount: 1
          serviceAmqpTlsListenPort: 9
          serviceMqttTlsListenPort: 9
          eventServiceAmqpConnectionCountThreshold: null
          serviceRestMode: gateway
          serviceRestIncomingTlsEnabled: true
          authenticationKerberosAllowApiProvidedUsernameEnabled: true
          sempOverMsgBusAdminDistributedCacheEnabled: true
          maxSubscriptionCount: 4
          authenticationOauthEnabled: true
          authenticationBasicType: internal
          serviceWebMaxConnectionCount: 5
          serviceAmqpMaxConnectionCount: 5
          maxEgressFlowCount: 7
          serviceMqttWebSocketListenPort: 3
          serviceSmfPlainTextEnabled: true
          maxEndpointCount: 9
          serviceWebTlsEnabled: true
          serviceMqttTlsWebSocketEnabled: true
          exportSubscriptionsEnabled: true
          eventIngressMsgRateThreshold: null
          eventPublishSubscriptionMode: "off"
          serviceMqttTlsEnabled: true
          eventConnectionCountThreshold:
            clearPercent: 0
            setPercent: 1
            setValue: 5
            clearValue: 6
          serviceSmfTlsEnabled: true
          eventLargeMsgThreshold: 5
          serviceRestIncomingTlsListenPort: 2
          replicationQueueRejectMsgToSenderOnDiscardEnabled: true
          eventTransactionCountThreshold: null
          eventPublishMsgVpnEnabled: true
          sempOverMsgBusShowEnabled: true
          serviceWebPlainTextEnabled: true
          dmrEnabled: true
          msgVpnName: msgVpnName
          eventEndpointCountThreshold: null
          sempOverMsgBusAdminEnabled: true
          eventEgressFlowCountThreshold: null
          eventServiceRestIncomingConnectionCountThreshold: null
          eventMsgSpoolUsageThreshold: null
          serviceSmfMaxConnectionCount: 6
          jndiEnabled: true
          restTlsServerCertValidateNameEnabled: true
          serviceMqttPlainTextEnabled: true
          eventPublishClientEnabled: true
          replicationQueueMaxMsgSpoolUsage: 1
          eventServiceMqttConnectionCountThreshold: null
          sempOverMsgBusAdminClientEnabled: true
          tlsAllowDowngradeToPlainTextEnabled: true
          maxConnectionCount: 2
          serviceWebAuthenticationClientCertRequest: always
          serviceRestOutgoingMaxConnectionCount: 6
          replicationBridgeTlsEnabled: true
          authenticationClientCertRevocationCheckMode: allow-all
          authenticationClientCertAllowApiProvidedUsernameEnabled: true
          eventServiceSmfConnectionCountThreshold: null
          serviceAmqpPlainTextListenPort: 9
          authenticationClientCertValidateDateEnabled: true
          serviceAmqpTlsEnabled: true
          eventEgressMsgRateThreshold:
            setValue: 5
            clearValue: 1
          replicationTransactionMode: sync
          replicationRole: active
          authenticationBasicRadiusDomain: authenticationBasicRadiusDomain
          replicationEnabledQueueBehavior: fail-on-existing-queue
          replicationBridgeRetryDelay: 7
          eventLogTag: eventLogTag
          distributedCacheManagementEnabled: true
          alias: alias
          serviceMqttTlsWebSocketListenPort: 6
          replicationBridgeAuthenticationBasicClientUsername: replicationBridgeAuthenticationBasicClientUsername
          bridgingTlsServerCertValidateNameEnabled: true
          replicationBridgeAuthenticationBasicPassword: replicationBridgeAuthenticationBasicPassword
          maxIngressFlowCount: 3
          serviceMqttAuthenticationClientCertRequest: always
          maxTransactedSessionCount: 7
          mqttRetainMaxMemory: 1
          eventPublishTopicFormatMqttEnabled: true
          authenticationBasicEnabled: true
          maxMsgSpoolUsage: 2
          authenticationOauthDefaultProviderName: authenticationOauthDefaultProviderName
          eventIngressFlowCountThreshold: null
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - authenticationOauthProvidersUri: authenticationOauthProvidersUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          sequencedTopicsUri: sequencedTopicsUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
        - authenticationOauthProvidersUri: authenticationOauthProvidersUri
          clientProfilesUri: clientProfilesUri
          topicEndpointsUri: topicEndpointsUri
          jndiConnectionFactoriesUri: jndiConnectionFactoriesUri
          mqttRetainCachesUri: mqttRetainCachesUri
          clientUsernamesUri: clientUsernamesUri
          bridgesUri: bridgesUri
          replicatedTopicsUri: replicatedTopicsUri
          topicEndpointTemplatesUri: topicEndpointTemplatesUri
          aclProfilesUri: aclProfilesUri
          sequencedTopicsUri: sequencedTopicsUri
          uri: uri
          jndiTopicsUri: jndiTopicsUri
          dmrBridgesUri: dmrBridgesUri
          replayLogsUri: replayLogsUri
          queueTemplatesUri: queueTemplatesUri
          queuesUri: queuesUri
          restDeliveryPointsUri: restDeliveryPointsUri
          distributedCachesUri: distributedCachesUri
          mqttSessionsUri: mqttSessionsUri
          authorizationGroupsUri: authorizationGroupsUri
          jndiQueuesUri: jndiQueuesUri
    SempError:
      required:
      - code
      - description
      - status
      type: object
      properties:
        code:
          type: integer
          description: The error code which uniquely identifies the error that has
            occurred.
          format: int32
        description:
          type: string
          description: The verbose description of the problem.
        status:
          type: string
          description: The terse status string associated with `code`.
      example:
        code: 3
        description: description
        status: status
    SempMeta:
      required:
      - request
      - responseCode
      type: object
      properties:
        count:
          type: integer
          description: "The total number of objects requested, irrespective of page\
            \ size. This may be a count of all objects in a collection or a filtered\
            \ subset. It represents a snapshot in time and may change when paging\
            \ through results."
          format: int64
        error:
          $ref: '#/components/schemas/SempError'
        paging:
          $ref: '#/components/schemas/SempPaging'
        request:
          $ref: '#/components/schemas/SempRequest'
        responseCode:
          type: integer
          description: "The HTTP response code, one of 200 (success), 4xx (client\
            \ error), or 5xx (server error)."
          format: int32
      example:
        request:
          method: method
          uri: uri
        count: 6
        paging:
          nextPageUri: nextPageUri
          cursorQuery: cursorQuery
        error:
          code: 3
          description: description
          status: status
        responseCode: 6
    SempMetaOnlyResponse:
      required:
      - meta
      type: object
      properties:
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
    SempPaging:
      required:
      - cursorQuery
      - nextPageUri
      type: object
      properties:
        cursorQuery:
          type: string
          description: "The cursor, or position, for the next page of objects. Use\
            \ this as the `cursor` query parameter of the next request."
        nextPageUri:
          type: string
          description: The URI of the next page of objects. `cursorQuery` is already
            embedded within this URI.
      example:
        nextPageUri: nextPageUri
        cursorQuery: cursorQuery
    SempRequest:
      required:
      - method
      - uri
      type: object
      properties:
        method:
          type: string
          description: The HTTP method of the request which resulted in this response.
        uri:
          type: string
          description: The URI of the request which resulted in this response.
      example:
        method: method
        uri: uri
    SystemInformation:
      type: object
      properties:
        platform:
          type: string
          description: The platform running the SEMP API. Deprecated since 2.2. /systemInformation
            was replaced by /about/api.
        sempVersion:
          type: string
          description: The version of the SEMP API. Deprecated since 2.2. /systemInformation
            was replaced by /about/api.
      example:
        sempVersion: sempVersion
        platform: platform
    SystemInformationLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this System Information object.
      example:
        uri: uri
    SystemInformationResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/SystemInformation'
        links:
          $ref: '#/components/schemas/SystemInformationLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          sempVersion: sempVersion
          platform: platform
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    VirtualHostname:
      type: object
      properties:
        enabled:
          type: boolean
          description: Enable or disable Virtual Hostname to Message VPN mapping.
            The default value is `false`.
        msgVpnName:
          type: string
          description: The message VPN to which this virtual hostname is mapped. The
            default value is `""`.
        virtualHostname:
          type: string
          description: The virtual hostname.
      example:
        virtualHostname: virtualHostname
        msgVpnName: msgVpnName
        enabled: true
    VirtualHostnameLinks:
      type: object
      properties:
        uri:
          type: string
          description: The URI of this Virtual Hostname object.
      example:
        uri: uri
    VirtualHostnameResponse:
      required:
      - meta
      type: object
      properties:
        data:
          $ref: '#/components/schemas/VirtualHostname'
        links:
          $ref: '#/components/schemas/VirtualHostnameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
          virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
          uri: uri
    VirtualHostnamesResponse:
      required:
      - meta
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHostname'
        links:
          type: array
          items:
            $ref: '#/components/schemas/VirtualHostnameLinks'
        meta:
          $ref: '#/components/schemas/SempMeta'
      example:
        data:
        - virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        - virtualHostname: virtualHostname
          msgVpnName: msgVpnName
          enabled: true
        meta:
          request:
            method: method
            uri: uri
          count: 6
          paging:
            nextPageUri: nextPageUri
            cursorQuery: cursorQuery
          error:
            code: 3
            description: description
            status: status
          responseCode: 6
        links:
        - uri: uri
        - uri: uri
  parameters:
    countQuery:
      name: count
      in: query
      description: Limit the count of objects in the response. See the documentation
        for the `count` parameter.
      required: false
      style: form
      explode: true
      schema:
        minimum: 1
        type: integer
        default: 10
    cursorQuery:
      name: cursor
      in: query
      description: "The cursor, or position, for the next page of objects. See the\
        \ documentation for the `cursor` parameter."
      required: false
      style: form
      explode: true
      schema:
        type: string
    opaquePasswordQuery:
      name: opaquePassword
      in: query
      description: "Accept opaque attributes in the request or return opaque attributes\
        \ in the response, encrypted with the specified password. See that documentation\
        \ for the `opaquePassword` parameter."
      required: false
      style: form
      explode: true
      schema:
        type: string
    selectQuery:
      name: select
      in: query
      description: "Include in the response only selected attributes of the object,\
        \ or exclude from the response selected attributes of the object. See the\
        \ documentation for the `select` parameter."
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
    whereQuery:
      name: where
      in: query
      description: Include in the response only objects where certain conditions are
        true. See the the documentation for the `where` parameter.
      required: false
      style: form
      explode: false
      schema:
        type: array
        items:
          type: string
  securitySchemes:
    basicAuth:
      type: http
      description: basic authentication
      scheme: basic
x-original-swagger-version: "2.0"
